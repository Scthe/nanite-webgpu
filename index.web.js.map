{
  "version": 3,
  "sources": ["../../../../.yarn/berry/cache/webgl-obj-loader-npm-2.0.8-707f9c4d06-10c0.zip/node_modules/webgl-obj-loader/dist/webgl-obj-loader.min.js", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/utils.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/vec2.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/vec3.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/vec2-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/mat3-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/vec3-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/mat4-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/quat.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/quat-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/vec4.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/vec4-impl.ts", "../../../../.yarn/berry/cache/wgpu-matrix-npm-2.9.1-57ffb78627-10c0.zip/node_modules/src/wgpu-matrix.ts", "../src/sys_web/loadersWeb.ts", "../src/constants.ts", "../src/utils/index.ts", "../src/utils/webgpu.ts", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/toString.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/utils/common.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/interpret.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/math.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/color/Color.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/Controller.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/dom/dom.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/BooleanController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/OptionController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/StringController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/NumberController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/NumberControllerBox.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/NumberControllerSlider.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/FunctionController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/ColorController.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/utils/css.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/gui/saveDialogue.html.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/controllers/ControllerFactory.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/utils/requestAnimationFrame.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/dom/CenteredDiv.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/gui/GUI.js", "../../../../.yarn/berry/cache/dat.gui-npm-0.7.9-8b75a80db8-10c0.zip/node_modules/dat.gui/src/dat/index.js", "../src/scene/scene.ts", "../src/gpuProfiler.ts", "../src/sys_web/stats.ts", "../src/passes/_shared.ts", "../src/sys_web/gui.ts", "../src/sys_web/input.ts", "../src/passes/naniteCpu/calcNaniteMeshletsVisibility.ts", "../src/passes/renderUniformsBuffer.ts", "../src/scene/naniteBuffers/instancesBuffer.ts", "../src/passes/_shaderSnippets/pbr.wgsl.ts", "../src/passes/_shaderSnippets/nagaFixes.ts", "../src/passes/_shaderSnippets/shaderSnippets.wgls.ts", "../src/passes/_shaderSnippets/shading.wgsl.ts", "../src/passes/naniteCpu/drawNanitesPass.wgsl.ts", "../src/scene/GPUOriginalMesh.ts", "../src/passes/naniteCpu/drawNanitesPass.ts", "../src/camera.ts", "../src/passes/debug/dbgMeshoptimizerPass.wgsl.ts", "../src/passes/debug/dbgMeshoptimizerPass.ts", "../src/passes/debug/dbgMeshoptimizerMeshletsPass.wgsl.ts", "../src/passes/debug/dbgMeshoptimizerMeshletsPass.ts", "../src/scene/naniteBuffers/meshletsDataBuffer.ts", "../src/passes/naniteCpu/types.ts", "../src/scene/naniteObject.ts", "../src/scene/naniteBuffers/drawnMeshletsBuffer.ts", "../src/utils/calcBounds.ts", "../src/scene/naniteBuffers/vertexPositionsQuantBuffer.ts", "../src/scene/naniteBuffers/vertexPositionsBuffer.ts", "../src/scene/naniteBuffers/vertexNormalsBuffer.ts", "../src/scene/naniteBuffers/vertexUVsBuffer.ts", "../src/scene/naniteBuffers/drawnImpostorsBuffer.ts", "../src/scene/naniteBuffers/drawnInstancesBuffer.ts", "../src/scene/naniteBuffers/index.ts", "../src/passes/rasterizeHw/rasterizeHwPass.wgsl.ts", "../src/passes/rasterizeHw/rasterizeHwPass.ts", "../src/passes/_shaderSnippets/linearDepth.wgsl.ts", "../src/passes/_shaderSnippets/cullOcclusion.wgsl.ts", "../src/passes/_shaderSnippets/cullFrustum.wgsl.ts", "../src/passes/_shaderSnippets/nanite.wgsl.ts", "../src/passes/rasterizeSw/rasterizeSwPass.wgsl.ts", "../src/passes/cullMeshlets/cullMeshletsPass.wgsl.ts", "../src/passes/cullMeshlets/cullMeshletsPass.ts", "../src/utils/frustum.ts", "../src/passes/depthPyramid/depthPyramidPass.wgsl.ts", "../src/passes/depthPyramid/depthPyramidPass.ts", "../src/passes/_shaderSnippets/fullscreenTriangle.wgsl.ts", "../src/passes/depthPyramid/depthPyramidDebugDrawPass.ts", "../src/passes/cullInstances/cullInstancesPass.wgsl.ts", "../src/passes/cullInstances/cullInstancesPass.ts", "../src/passes/_shaderSnippets/dither.wgsl.ts", "../src/passes/_shaderSnippets/pack.wgsl.ts", "../src/passes/naniteBillboard/naniteBillboard.wgsl.ts", "../src/passes/naniteBillboard/naniteBillboardPass.ts", "../src/passes/_shaderSnippets/aces.wgsl.ts", "../src/passes/presentPass/presentPass.wgsl.ts", "../src/passes/presentPass/presentPass.ts", "../src/passes/rasterizeSw/rasterizeSwPass.ts", "../src/passes/rasterizeCombine/rasterizeCombine.wgsl.ts", "../src/passes/rasterizeCombine/rasterizeCombine.ts", "../src/passes/drawGroundPass.ts", "../src/renderer.ts", "../src/sys_web/cavasResize.ts", "../src/utils/errors.ts", "../src/utils/wasm.ts", "../src/lib/meshoptimizer.js", "../src/meshPreprocessing/meshoptimizerUtils.ts", "../src/meshPreprocessing/createMeshlets.types.ts", "../src/meshPreprocessing/createMeshlets.ts", "../src/meshPreprocessing/simplifyMesh.ts", "../src/scene/load/createDebugMeshes.ts", "../src/scene/instancesData.ts", "../src/scene/sceneFiles.ts", "../src/scene/renderImpostors/renderImpostors.wgsl.ts", "../src/utils/textures.ts", "../src/scene/renderImpostors/renderImpostors.ts", "../src/meshPreprocessing/edgesUtils.ts", "../src/lib/metis3-1.js", "../src/meshPreprocessing/partitionGraph.ts", "../src/meshPreprocessing/index.ts", "../src/scene/utils/assertValidNaniteObject.ts", "../src/scene/load/createNaniteObject.ts", "../src/scene/objLoader.ts", "../src/meshPreprocessing/optimizeMeshBuffers.ts", "../src/scene/load/createOriginalMesh.ts", "../src/scene/import-export/types.ts", "../src/scene/import-export/import-export.ts", "../src/scene/load/loadObject.ts", "../src/scene/load/loadScene.ts", "../src/sys_web/searchParams.ts", "../src/index.web.ts"],
  "sourcesContent": ["!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var n=t();for(var a in n)(\"object\"==typeof exports?exports:e)[a]=n[a]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/\",n(n.s=0)}({\"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! exports provided: OBJ, Attribute, DuplicateAttributeException, Layout, Material, MaterialLibrary, Mesh, TYPES, downloadModels, downloadMeshes, initMeshBuffers, deleteMeshBuffers, version */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OBJ\", function() { return OBJ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mesh */ \"./src/mesh.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Mesh\", function() { return _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\\n\\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./material */ \"./src/material.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Material\", function() { return _material__WEBPACK_IMPORTED_MODULE_1__[\"Material\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MaterialLibrary\", function() { return _material__WEBPACK_IMPORTED_MODULE_1__[\"MaterialLibrary\"]; });\\n\\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layout */ \"./src/layout.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Attribute\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"Attribute\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DuplicateAttributeException\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"DuplicateAttributeException\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Layout\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"Layout\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TYPES\", function() { return _layout__WEBPACK_IMPORTED_MODULE_2__[\"TYPES\"]; });\\n\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"downloadModels\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadModels\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"downloadMeshes\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadMeshes\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"initMeshBuffers\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"initMeshBuffers\"]; });\\n\\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"deleteMeshBuffers\", function() { return _utils__WEBPACK_IMPORTED_MODULE_3__[\"deleteMeshBuffers\"]; });\\n\\n\\n\\n\\n\\nconst version = \"2.0.3\";\\nconst OBJ = {\\n    Attribute: _layout__WEBPACK_IMPORTED_MODULE_2__[\"Attribute\"],\\n    DuplicateAttributeException: _layout__WEBPACK_IMPORTED_MODULE_2__[\"DuplicateAttributeException\"],\\n    Layout: _layout__WEBPACK_IMPORTED_MODULE_2__[\"Layout\"],\\n    Material: _material__WEBPACK_IMPORTED_MODULE_1__[\"Material\"],\\n    MaterialLibrary: _material__WEBPACK_IMPORTED_MODULE_1__[\"MaterialLibrary\"],\\n    Mesh: _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\\n    TYPES: _layout__WEBPACK_IMPORTED_MODULE_2__[\"TYPES\"],\\n    downloadModels: _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadModels\"],\\n    downloadMeshes: _utils__WEBPACK_IMPORTED_MODULE_3__[\"downloadMeshes\"],\\n    initMeshBuffers: _utils__WEBPACK_IMPORTED_MODULE_3__[\"initMeshBuffers\"],\\n    deleteMeshBuffers: _utils__WEBPACK_IMPORTED_MODULE_3__[\"deleteMeshBuffers\"],\\n    version,\\n};\\n/**\\n * @namespace\\n */\\n\\n\\n\\n//# sourceURL=webpack:///./src/index.ts?')},\"./src/layout.ts\":\n/*!***********************!*\\\n  !*** ./src/layout.ts ***!\n  \\***********************/\n/*! exports provided: TYPES, DuplicateAttributeException, Attribute, Layout */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TYPES\", function() { return TYPES; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DuplicateAttributeException\", function() { return DuplicateAttributeException; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Attribute\", function() { return Attribute; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Layout\", function() { return Layout; });\\nvar TYPES;\\n(function (TYPES) {\\n    TYPES[\"BYTE\"] = \"BYTE\";\\n    TYPES[\"UNSIGNED_BYTE\"] = \"UNSIGNED_BYTE\";\\n    TYPES[\"SHORT\"] = \"SHORT\";\\n    TYPES[\"UNSIGNED_SHORT\"] = \"UNSIGNED_SHORT\";\\n    TYPES[\"FLOAT\"] = \"FLOAT\";\\n})(TYPES || (TYPES = {}));\\n/**\\n * An exception for when two or more of the same attributes are found in the\\n * same layout.\\n * @private\\n */\\nclass DuplicateAttributeException extends Error {\\n    /**\\n     * Create a DuplicateAttributeException\\n     * @param {Attribute} attribute - The attribute that was found more than\\n     *        once in the {@link Layout}\\n     */\\n    constructor(attribute) {\\n        super(`found duplicate attribute: ${attribute.key}`);\\n    }\\n}\\n/**\\n * Represents how a vertex attribute should be packed into an buffer.\\n * @private\\n */\\nclass Attribute {\\n    /**\\n     * Create an attribute. Do not call this directly, use the predefined\\n     * constants.\\n     * @param {string} key - The name of this attribute as if it were a key in\\n     *        an Object. Use the camel case version of the upper snake case\\n     *        const name.\\n     * @param {number} size - The number of components per vertex attribute.\\n     *        Must be 1, 2, 3, or 4.\\n     * @param {string} type - The data type of each component for this\\n     *        attribute. Possible values:<br/>\\n     *        \"BYTE\": signed 8-bit integer, with values in [-128, 127]<br/>\\n     *        \"SHORT\": signed 16-bit integer, with values in\\n     *            [-32768, 32767]<br/>\\n     *        \"UNSIGNED_BYTE\": unsigned 8-bit integer, with values in\\n     *            [0, 255]<br/>\\n     *        \"UNSIGNED_SHORT\": unsigned 16-bit integer, with values in\\n     *            [0, 65535]<br/>\\n     *        \"FLOAT\": 32-bit floating point number\\n     * @param {boolean} normalized - Whether integer data values should be\\n     *        normalized when being casted to a float.<br/>\\n     *        If true, signed integers are normalized to [-1, 1].<br/>\\n     *        If true, unsigned integers are normalized to [0, 1].<br/>\\n     *        For type \"FLOAT\", this parameter has no effect.\\n     */\\n    constructor(key, size, type, normalized = false) {\\n        this.key = key;\\n        this.size = size;\\n        this.type = type;\\n        this.normalized = normalized;\\n        switch (type) {\\n            case \"BYTE\":\\n            case \"UNSIGNED_BYTE\":\\n                this.sizeOfType = 1;\\n                break;\\n            case \"SHORT\":\\n            case \"UNSIGNED_SHORT\":\\n                this.sizeOfType = 2;\\n                break;\\n            case \"FLOAT\":\\n                this.sizeOfType = 4;\\n                break;\\n            default:\\n                throw new Error(`Unknown gl type: ${type}`);\\n        }\\n        this.sizeInBytes = this.sizeOfType * size;\\n    }\\n}\\n/**\\n * A class to represent the memory layout for a vertex attribute array. Used by\\n * {@link Mesh}\\'s TBD(...) method to generate a packed array from mesh data.\\n * <p>\\n * Layout can sort of be thought of as a C-style struct declaration.\\n * {@link Mesh}\\'s TBD(...) method will use the {@link Layout} instance to\\n * pack an array in the given attribute order.\\n * <p>\\n * Layout also is very helpful when calling a WebGL context\\'s\\n * <code>vertexAttribPointer</code> method. If you\\'ve created a buffer using\\n * a Layout instance, then the same Layout instance can be used to determine\\n * the size, type, normalized, stride, and offset parameters for\\n * <code>vertexAttribPointer</code>.\\n * <p>\\n * For example:\\n * <pre><code>\\n *\\n * const index = glctx.getAttribLocation(shaderProgram, \"pos\");\\n * glctx.vertexAttribPointer(\\n *   layout.position.size,\\n *   glctx[layout.position.type],\\n *   layout.position.normalized,\\n *   layout.position.stride,\\n *   layout.position.offset);\\n * </code></pre>\\n * @see {@link Mesh}\\n */\\nclass Layout {\\n    /**\\n     * Create a Layout object. This constructor will throw if any duplicate\\n     * attributes are given.\\n     * @param {Array} ...attributes - An ordered list of attributes that\\n     *        describe the desired memory layout for each vertex attribute.\\n     *        <p>\\n     *\\n     * @see {@link Mesh}\\n     */\\n    constructor(...attributes) {\\n        this.attributes = attributes;\\n        this.attributeMap = {};\\n        let offset = 0;\\n        let maxStrideMultiple = 0;\\n        for (const attribute of attributes) {\\n            if (this.attributeMap[attribute.key]) {\\n                throw new DuplicateAttributeException(attribute);\\n            }\\n            // Add padding to satisfy WebGL\\'s requirement that all\\n            // vertexAttribPointer calls have an offset that is a multiple of\\n            // the type size.\\n            if (offset % attribute.sizeOfType !== 0) {\\n                offset += attribute.sizeOfType - (offset % attribute.sizeOfType);\\n                console.warn(\"Layout requires padding before \" + attribute.key + \" attribute\");\\n            }\\n            this.attributeMap[attribute.key] = {\\n                attribute: attribute,\\n                size: attribute.size,\\n                type: attribute.type,\\n                normalized: attribute.normalized,\\n                offset: offset,\\n            };\\n            offset += attribute.sizeInBytes;\\n            maxStrideMultiple = Math.max(maxStrideMultiple, attribute.sizeOfType);\\n        }\\n        // Add padding to the end to satisfy WebGL\\'s requirement that all\\n        // vertexAttribPointer calls have a stride that is a multiple of the\\n        // type size. Because we\\'re putting differently sized attributes into\\n        // the same buffer, it must be padded to a multiple of the largest\\n        // type size.\\n        if (offset % maxStrideMultiple !== 0) {\\n            offset += maxStrideMultiple - (offset % maxStrideMultiple);\\n            console.warn(\"Layout requires padding at the back\");\\n        }\\n        this.stride = offset;\\n        for (const attribute of attributes) {\\n            this.attributeMap[attribute.key].stride = this.stride;\\n        }\\n    }\\n}\\n// Geometry attributes\\n/**\\n * Attribute layout to pack a vertex\\'s x, y, & z as floats\\n *\\n * @see {@link Layout}\\n */\\nLayout.POSITION = new Attribute(\"position\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s normal\\'s x, y, & z as floats\\n *\\n * @see {@link Layout}\\n */\\nLayout.NORMAL = new Attribute(\"normal\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s normal\\'s x, y, & z as floats.\\n * <p>\\n * This value will be computed on-the-fly based on the texture coordinates.\\n * If no texture coordinates are available, the generated value will default to\\n * 0, 0, 0.\\n *\\n * @see {@link Layout}\\n */\\nLayout.TANGENT = new Attribute(\"tangent\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s normal\\'s bitangent x, y, & z as floats.\\n * <p>\\n * This value will be computed on-the-fly based on the texture coordinates.\\n * If no texture coordinates are available, the generated value will default to\\n * 0, 0, 0.\\n * @see {@link Layout}\\n */\\nLayout.BITANGENT = new Attribute(\"bitangent\", 3, TYPES.FLOAT);\\n/**\\n * Attribute layout to pack a vertex\\'s texture coordinates\\' u & v as floats\\n *\\n * @see {@link Layout}\\n */\\nLayout.UV = new Attribute(\"uv\", 2, TYPES.FLOAT);\\n// Material attributes\\n/**\\n * Attribute layout to pack an unsigned short to be interpreted as a the index\\n * into a {@link Mesh}\\'s materials list.\\n * <p>\\n * The intention of this value is to send all of the {@link Mesh}\\'s materials\\n * into multiple shader uniforms and then reference the current one by this\\n * vertex attribute.\\n * <p>\\n * example glsl code:\\n *\\n * <pre><code>\\n *  // this is bound using MATERIAL_INDEX\\n *  attribute int materialIndex;\\n *\\n *  struct Material {\\n *    vec3 diffuse;\\n *    vec3 specular;\\n *    vec3 specularExponent;\\n *  };\\n *\\n *  uniform Material materials[MAX_MATERIALS];\\n *\\n *  // ...\\n *\\n *  vec3 diffuse = materials[materialIndex];\\n *\\n * </code></pre>\\n * TODO: More description & test to make sure subscripting by attributes even\\n * works for webgl\\n *\\n * @see {@link Layout}\\n */\\nLayout.MATERIAL_INDEX = new Attribute(\"materialIndex\", 1, TYPES.SHORT);\\nLayout.MATERIAL_ENABLED = new Attribute(\"materialEnabled\", 1, TYPES.UNSIGNED_SHORT);\\nLayout.AMBIENT = new Attribute(\"ambient\", 3, TYPES.FLOAT);\\nLayout.DIFFUSE = new Attribute(\"diffuse\", 3, TYPES.FLOAT);\\nLayout.SPECULAR = new Attribute(\"specular\", 3, TYPES.FLOAT);\\nLayout.SPECULAR_EXPONENT = new Attribute(\"specularExponent\", 3, TYPES.FLOAT);\\nLayout.EMISSIVE = new Attribute(\"emissive\", 3, TYPES.FLOAT);\\nLayout.TRANSMISSION_FILTER = new Attribute(\"transmissionFilter\", 3, TYPES.FLOAT);\\nLayout.DISSOLVE = new Attribute(\"dissolve\", 1, TYPES.FLOAT);\\nLayout.ILLUMINATION = new Attribute(\"illumination\", 1, TYPES.UNSIGNED_SHORT);\\nLayout.REFRACTION_INDEX = new Attribute(\"refractionIndex\", 1, TYPES.FLOAT);\\nLayout.SHARPNESS = new Attribute(\"sharpness\", 1, TYPES.FLOAT);\\nLayout.MAP_DIFFUSE = new Attribute(\"mapDiffuse\", 1, TYPES.SHORT);\\nLayout.MAP_AMBIENT = new Attribute(\"mapAmbient\", 1, TYPES.SHORT);\\nLayout.MAP_SPECULAR = new Attribute(\"mapSpecular\", 1, TYPES.SHORT);\\nLayout.MAP_SPECULAR_EXPONENT = new Attribute(\"mapSpecularExponent\", 1, TYPES.SHORT);\\nLayout.MAP_DISSOLVE = new Attribute(\"mapDissolve\", 1, TYPES.SHORT);\\nLayout.ANTI_ALIASING = new Attribute(\"antiAliasing\", 1, TYPES.UNSIGNED_SHORT);\\nLayout.MAP_BUMP = new Attribute(\"mapBump\", 1, TYPES.SHORT);\\nLayout.MAP_DISPLACEMENT = new Attribute(\"mapDisplacement\", 1, TYPES.SHORT);\\nLayout.MAP_DECAL = new Attribute(\"mapDecal\", 1, TYPES.SHORT);\\nLayout.MAP_EMISSIVE = new Attribute(\"mapEmissive\", 1, TYPES.SHORT);\\n\\n\\n//# sourceURL=webpack:///./src/layout.ts?')},\"./src/material.ts\":\n/*!*************************!*\\\n  !*** ./src/material.ts ***!\n  \\*************************/\n/*! exports provided: Material, MaterialLibrary */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Material\", function() { return Material; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaterialLibrary\", function() { return MaterialLibrary; });\\n/**\\n * The Material class.\\n */\\nclass Material {\\n    constructor(name) {\\n        this.name = name;\\n        /**\\n         * Constructor\\n         * @param {String} name the unique name of the material\\n         */\\n        // The values for the following attibutes\\n        // are an array of R, G, B normalized values.\\n        // Ka - Ambient Reflectivity\\n        this.ambient = [0, 0, 0];\\n        // Kd - Defuse Reflectivity\\n        this.diffuse = [0, 0, 0];\\n        // Ks\\n        this.specular = [0, 0, 0];\\n        // Ke\\n        this.emissive = [0, 0, 0];\\n        // Tf\\n        this.transmissionFilter = [0, 0, 0];\\n        // d\\n        this.dissolve = 0;\\n        // valid range is between 0 and 1000\\n        this.specularExponent = 0;\\n        // either d or Tr; valid values are normalized\\n        this.transparency = 0;\\n        // illum - the enum of the illumination model to use\\n        this.illumination = 0;\\n        // Ni - Set to \"normal\" (air).\\n        this.refractionIndex = 1;\\n        // sharpness\\n        this.sharpness = 0;\\n        // map_Kd\\n        this.mapDiffuse = emptyTextureOptions();\\n        // map_Ka\\n        this.mapAmbient = emptyTextureOptions();\\n        // map_Ks\\n        this.mapSpecular = emptyTextureOptions();\\n        // map_Ns\\n        this.mapSpecularExponent = emptyTextureOptions();\\n        // map_d\\n        this.mapDissolve = emptyTextureOptions();\\n        // map_aat\\n        this.antiAliasing = false;\\n        // map_bump or bump\\n        this.mapBump = emptyTextureOptions();\\n        // disp\\n        this.mapDisplacement = emptyTextureOptions();\\n        // decal\\n        this.mapDecal = emptyTextureOptions();\\n        // map_Ke\\n        this.mapEmissive = emptyTextureOptions();\\n        // refl - when the reflection type is a cube, there will be multiple refl\\n        //        statements for each side of the cube. If it\\'s a spherical\\n        //        reflection, there should only ever be one.\\n        this.mapReflections = [];\\n    }\\n}\\nconst SENTINEL_MATERIAL = new Material(\"sentinel\");\\n/**\\n * https://en.wikipedia.org/wiki/Wavefront_.obj_file\\n * http://paulbourke.net/dataformats/mtl/\\n */\\nclass MaterialLibrary {\\n    constructor(data) {\\n        this.data = data;\\n        /**\\n         * Constructs the Material Parser\\n         * @param mtlData the MTL file contents\\n         */\\n        this.currentMaterial = SENTINEL_MATERIAL;\\n        this.materials = {};\\n        this.parse();\\n    }\\n    /* eslint-disable camelcase */\\n    /* the function names here disobey camelCase conventions\\n     to make parsing/routing easier. see the parse function\\n     documentation for more information. */\\n    /**\\n     * Creates a new Material object and adds to the registry.\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_newmtl(tokens) {\\n        const name = tokens[0];\\n        // console.info(\\'Parsing new Material:\\', name);\\n        this.currentMaterial = new Material(name);\\n        this.materials[name] = this.currentMaterial;\\n    }\\n    /**\\n     * See the documenation for parse_Ka below for a better understanding.\\n     *\\n     * Given a list of possible color tokens, returns an array of R, G, and B\\n     * color values.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     * @return {*} a 3 element array containing the R, G, and B values\\n     * of the color.\\n     */\\n    parseColor(tokens) {\\n        if (tokens[0] == \"spectral\") {\\n            throw new Error(\"The MTL parser does not support spectral curve files. You will \" +\\n                \"need to convert the MTL colors to either RGB or CIEXYZ.\");\\n        }\\n        if (tokens[0] == \"xyz\") {\\n            throw new Error(\"The MTL parser does not currently support XYZ colors. Either convert the \" +\\n                \"XYZ values to RGB or create an issue to add support for XYZ\");\\n        }\\n        // from my understanding of the spec, RGB values at this point\\n        // will either be 3 floats or exactly 1 float, so that\\'s the check\\n        // that i\\'m going to perform here\\n        if (tokens.length == 3) {\\n            const [x, y, z] = tokens;\\n            return [parseFloat(x), parseFloat(y), parseFloat(z)];\\n        }\\n        // Since tokens at this point has a length of 3, we\\'re going to assume\\n        // it\\'s exactly 1, skipping the check for 2.\\n        const value = parseFloat(tokens[0]);\\n        // in this case, all values are equivalent\\n        return [value, value, value];\\n    }\\n    /**\\n     * Parse the ambient reflectivity\\n     *\\n     * A Ka directive can take one of three forms:\\n     *   - Ka r g b\\n     *   - Ka spectral file.rfl\\n     *   - Ka xyz x y z\\n     * These three forms are mutually exclusive in that only one\\n     * declaration can exist per material. It is considered a syntax\\n     * error otherwise.\\n     *\\n     * The \"Ka\" form specifies the ambient reflectivity using RGB values.\\n     * The \"g\" and \"b\" values are optional. If only the \"r\" value is\\n     * specified, then the \"g\" and \"b\" values are assigned the value of\\n     * \"r\". Values are normally in the range 0.0 to 1.0. Values outside\\n     * of this range increase or decrease the reflectivity accordingly.\\n     *\\n     * The \"Ka spectral\" form specifies the ambient reflectivity using a\\n     * spectral curve. \"file.rfl\" is the name of the \".rfl\" file containing\\n     * the curve data. \"factor\" is an optional argument which is a multiplier\\n     * for the values in the .rfl file and defaults to 1.0 if not specified.\\n     *\\n     * The \"Ka xyz\" form specifies the ambient reflectivity using CIEXYZ values.\\n     * \"x y z\" are the values of the CIEXYZ color space. The \"y\" and \"z\" arguments\\n     * are optional and take on the value of the \"x\" component if only \"x\" is\\n     * specified. The \"x y z\" values are normally in the range of 0.0 to 1.0 and\\n     * increase or decrease ambient reflectivity accordingly outside of that\\n     * range.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ka(tokens) {\\n        this.currentMaterial.ambient = this.parseColor(tokens);\\n    }\\n    /**\\n     * Diffuse Reflectivity\\n     *\\n     * Similar to the Ka directive. Simply replace \"Ka\" with \"Kd\" and the rules\\n     * are the same\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Kd(tokens) {\\n        this.currentMaterial.diffuse = this.parseColor(tokens);\\n    }\\n    /**\\n     * Spectral Reflectivity\\n     *\\n     * Similar to the Ka directive. Simply replace \"Ks\" with \"Kd\" and the rules\\n     * are the same\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ks(tokens) {\\n        this.currentMaterial.specular = this.parseColor(tokens);\\n    }\\n    /**\\n     * Emissive\\n     *\\n     * The amount and color of light emitted by the object.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ke(tokens) {\\n        this.currentMaterial.emissive = this.parseColor(tokens);\\n    }\\n    /**\\n     * Transmission Filter\\n     *\\n     * Any light passing through the object is filtered by the transmission\\n     * filter, which only allows specific colors to pass through. For example, Tf\\n     * 0 1 0 allows all of the green to pass through and filters out all of the\\n     * red and blue.\\n     *\\n     * Similar to the Ka directive. Simply replace \"Ks\" with \"Tf\" and the rules\\n     * are the same\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Tf(tokens) {\\n        this.currentMaterial.transmissionFilter = this.parseColor(tokens);\\n    }\\n    /**\\n     * Specifies the dissolve for the current material.\\n     *\\n     * Statement: d [-halo] `factor`\\n     *\\n     * Example: \"d 0.5\"\\n     *\\n     * The factor is the amount this material dissolves into the background. A\\n     * factor of 1.0 is fully opaque. This is the default when a new material is\\n     * created. A factor of 0.0 is fully dissolved (completely transparent).\\n     *\\n     * Unlike a real transparent material, the dissolve does not depend upon\\n     * material thickness nor does it have any spectral character. Dissolve works\\n     * on all illumination models.\\n     *\\n     * The dissolve statement allows for an optional \"-halo\" flag which indicates\\n     * that a dissolve is dependent on the surface orientation relative to the\\n     * viewer. For example, a sphere with the following dissolve, \"d -halo 0.0\",\\n     * will be fully dissolved at its center and will appear gradually more opaque\\n     * toward its edge.\\n     *\\n     * \"factor\" is the minimum amount of dissolve applied to the material. The\\n     * amount of dissolve will vary between 1.0 (fully opaque) and the specified\\n     * \"factor\". The formula is:\\n     *\\n     *    dissolve = 1.0 - (N*v)(1.0-factor)\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_d(tokens) {\\n        // this ignores the -halo option as I can\\'t find any documentation on what\\n        // it\\'s supposed to be.\\n        this.currentMaterial.dissolve = parseFloat(tokens.pop() || \"0\");\\n    }\\n    /**\\n     * The \"illum\" statement specifies the illumination model to use in the\\n     * material. Illumination models are mathematical equations that represent\\n     * various material lighting and shading effects.\\n     *\\n     * The illumination number can be a number from 0 to 10. The following are\\n     * the list of illumination enumerations and their summaries:\\n     * 0. Color on and Ambient off\\n     * 1. Color on and Ambient on\\n     * 2. Highlight on\\n     * 3. Reflection on and Ray trace on\\n     * 4. Transparency: Glass on, Reflection: Ray trace on\\n     * 5. Reflection: Fresnel on and Ray trace on\\n     * 6. Transparency: Refraction on, Reflection: Fresnel off and Ray trace on\\n     * 7. Transparency: Refraction on, Reflection: Fresnel on and Ray trace on\\n     * 8. Reflection on and Ray trace off\\n     * 9. Transparency: Glass on, Reflection: Ray trace off\\n     * 10. Casts shadows onto invisible surfaces\\n     *\\n     * Example: \"illum 2\" to specify the \"Highlight on\" model\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_illum(tokens) {\\n        this.currentMaterial.illumination = parseInt(tokens[0]);\\n    }\\n    /**\\n     * Optical Density (AKA Index of Refraction)\\n     *\\n     * Statement: Ni `index`\\n     *\\n     * Example: Ni 1.0\\n     *\\n     * Specifies the optical density for the surface. `index` is the value\\n     * for the optical density. The values can range from 0.001 to 10.  A value of\\n     * 1.0 means that light does not bend as it passes through an object.\\n     * Increasing the optical_density increases the amount of bending. Glass has\\n     * an index of refraction of about 1.5. Values of less than 1.0 produce\\n     * bizarre results and are not recommended\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ni(tokens) {\\n        this.currentMaterial.refractionIndex = parseFloat(tokens[0]);\\n    }\\n    /**\\n     * Specifies the specular exponent for the current material. This defines the\\n     * focus of the specular highlight.\\n     *\\n     * Statement: Ns `exponent`\\n     *\\n     * Example: \"Ns 250\"\\n     *\\n     * `exponent` is the value for the specular exponent. A high exponent results\\n     * in a tight, concentrated highlight. Ns Values normally range from 0 to\\n     * 1000.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_Ns(tokens) {\\n        this.currentMaterial.specularExponent = parseInt(tokens[0]);\\n    }\\n    /**\\n     * Specifies the sharpness of the reflections from the local reflection map.\\n     *\\n     * Statement: sharpness `value`\\n     *\\n     * Example: \"sharpness 100\"\\n     *\\n     * If a material does not have a local reflection map defined in its material\\n     * defintions, sharpness will apply to the global reflection map defined in\\n     * PreView.\\n     *\\n     * `value` can be a number from 0 to 1000. The default is 60. A high value\\n     * results in a clear reflection of objects in the reflection map.\\n     *\\n     * Tip: sharpness values greater than 100 introduce aliasing effects in\\n     * flat surfaces that are viewed at a sharp angle.\\n     *\\n     * @param tokens the tokens associated with the directive\\n     */\\n    parse_sharpness(tokens) {\\n        this.currentMaterial.sharpness = parseInt(tokens[0]);\\n    }\\n    /**\\n     * Parses the -cc flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -cc flag\\n     * @param options the Object of all image options\\n     */\\n    parse_cc(values, options) {\\n        options.colorCorrection = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -blendu flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -blendu flag\\n     * @param options the Object of all image options\\n     */\\n    parse_blendu(values, options) {\\n        options.horizontalBlending = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -blendv flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -blendv flag\\n     * @param options the Object of all image options\\n     */\\n    parse_blendv(values, options) {\\n        options.verticalBlending = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -boost flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -boost flag\\n     * @param options the Object of all image options\\n     */\\n    parse_boost(values, options) {\\n        options.boostMipMapSharpness = parseFloat(values[0]);\\n    }\\n    /**\\n     * Parses the -mm flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -mm flag\\n     * @param options the Object of all image options\\n     */\\n    parse_mm(values, options) {\\n        options.modifyTextureMap.brightness = parseFloat(values[0]);\\n        options.modifyTextureMap.contrast = parseFloat(values[1]);\\n    }\\n    /**\\n     * Parses and sets the -o, -s, and -t  u, v, and w values\\n     *\\n     * @param values the values passed to the -o, -s, -t flag\\n     * @param {Object} option the Object of either the -o, -s, -t option\\n     * @param {Integer} defaultValue the Object of all image options\\n     */\\n    parse_ost(values, option, defaultValue) {\\n        while (values.length < 3) {\\n            values.push(defaultValue.toString());\\n        }\\n        option.u = parseFloat(values[0]);\\n        option.v = parseFloat(values[1]);\\n        option.w = parseFloat(values[2]);\\n    }\\n    /**\\n     * Parses the -o flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -o flag\\n     * @param options the Object of all image options\\n     */\\n    parse_o(values, options) {\\n        this.parse_ost(values, options.offset, 0);\\n    }\\n    /**\\n     * Parses the -s flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -s flag\\n     * @param options the Object of all image options\\n     */\\n    parse_s(values, options) {\\n        this.parse_ost(values, options.scale, 1);\\n    }\\n    /**\\n     * Parses the -t flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -t flag\\n     * @param options the Object of all image options\\n     */\\n    parse_t(values, options) {\\n        this.parse_ost(values, options.turbulence, 0);\\n    }\\n    /**\\n     * Parses the -texres flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -texres flag\\n     * @param options the Object of all image options\\n     */\\n    parse_texres(values, options) {\\n        options.textureResolution = parseFloat(values[0]);\\n    }\\n    /**\\n     * Parses the -clamp flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -clamp flag\\n     * @param options the Object of all image options\\n     */\\n    parse_clamp(values, options) {\\n        options.clamp = values[0] == \"on\";\\n    }\\n    /**\\n     * Parses the -bm flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -bm flag\\n     * @param options the Object of all image options\\n     */\\n    parse_bm(values, options) {\\n        options.bumpMultiplier = parseFloat(values[0]);\\n    }\\n    /**\\n     * Parses the -imfchan flag and updates the options object with the values.\\n     *\\n     * @param values the values passed to the -imfchan flag\\n     * @param options the Object of all image options\\n     */\\n    parse_imfchan(values, options) {\\n        options.imfChan = values[0];\\n    }\\n    /**\\n     * This only exists for relection maps and denotes the type of reflection.\\n     *\\n     * @param values the values passed to the -type flag\\n     * @param options the Object of all image options\\n     */\\n    parse_type(values, options) {\\n        options.reflectionType = values[0];\\n    }\\n    /**\\n     * Parses the texture\\'s options and returns an options object with the info\\n     *\\n     * @param tokens all of the option tokens to pass to the texture\\n     * @return {Object} a complete object of objects to apply to the texture\\n     */\\n    parseOptions(tokens) {\\n        const options = emptyTextureOptions();\\n        let option;\\n        let values;\\n        const optionsToValues = {};\\n        tokens.reverse();\\n        while (tokens.length) {\\n            // token is guaranteed to exists here, hence the explicit \"as\"\\n            const token = tokens.pop();\\n            if (token.startsWith(\"-\")) {\\n                option = token.substr(1);\\n                optionsToValues[option] = [];\\n            }\\n            else if (option) {\\n                optionsToValues[option].push(token);\\n            }\\n        }\\n        for (option in optionsToValues) {\\n            if (!optionsToValues.hasOwnProperty(option)) {\\n                continue;\\n            }\\n            values = optionsToValues[option];\\n            const optionMethod = this[`parse_${option}`];\\n            if (optionMethod) {\\n                optionMethod.bind(this)(values, options);\\n            }\\n        }\\n        return options;\\n    }\\n    /**\\n     * Parses the given texture map line.\\n     *\\n     * @param tokens all of the tokens representing the texture\\n     * @return a complete object of objects to apply to the texture\\n     */\\n    parseMap(tokens) {\\n        // according to wikipedia:\\n        // (https://en.wikipedia.org/wiki/Wavefront_.obj_file#Vendor_specific_alterations)\\n        // there is at least one vendor that places the filename before the options\\n        // rather than after (which is to spec). All options start with a \\'-\\'\\n        // so if the first token doesn\\'t start with a \\'-\\', we\\'re going to assume\\n        // it\\'s the name of the map file.\\n        let optionsString;\\n        let filename = \"\";\\n        if (!tokens[0].startsWith(\"-\")) {\\n            [filename, ...optionsString] = tokens;\\n        }\\n        else {\\n            filename = tokens.pop();\\n            optionsString = tokens;\\n        }\\n        const options = this.parseOptions(optionsString);\\n        options.filename = filename.replace(/\\\\\\\\/g, \"/\");\\n        return options;\\n    }\\n    /**\\n     * Parses the ambient map.\\n     *\\n     * @param tokens list of tokens for the map_Ka direcive\\n     */\\n    parse_map_Ka(tokens) {\\n        this.currentMaterial.mapAmbient = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the diffuse map.\\n     *\\n     * @param tokens list of tokens for the map_Kd direcive\\n     */\\n    parse_map_Kd(tokens) {\\n        this.currentMaterial.mapDiffuse = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the specular map.\\n     *\\n     * @param tokens list of tokens for the map_Ks direcive\\n     */\\n    parse_map_Ks(tokens) {\\n        this.currentMaterial.mapSpecular = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the emissive map.\\n     *\\n     * @param tokens list of tokens for the map_Ke direcive\\n     */\\n    parse_map_Ke(tokens) {\\n        this.currentMaterial.mapEmissive = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the specular exponent map.\\n     *\\n     * @param tokens list of tokens for the map_Ns direcive\\n     */\\n    parse_map_Ns(tokens) {\\n        this.currentMaterial.mapSpecularExponent = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the dissolve map.\\n     *\\n     * @param tokens list of tokens for the map_d direcive\\n     */\\n    parse_map_d(tokens) {\\n        this.currentMaterial.mapDissolve = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the anti-aliasing option.\\n     *\\n     * @param tokens list of tokens for the map_aat direcive\\n     */\\n    parse_map_aat(tokens) {\\n        this.currentMaterial.antiAliasing = tokens[0] == \"on\";\\n    }\\n    /**\\n     * Parses the bump map.\\n     *\\n     * @param tokens list of tokens for the map_bump direcive\\n     */\\n    parse_map_bump(tokens) {\\n        this.currentMaterial.mapBump = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the bump map.\\n     *\\n     * @param tokens list of tokens for the bump direcive\\n     */\\n    parse_bump(tokens) {\\n        this.parse_map_bump(tokens);\\n    }\\n    /**\\n     * Parses the disp map.\\n     *\\n     * @param tokens list of tokens for the disp direcive\\n     */\\n    parse_disp(tokens) {\\n        this.currentMaterial.mapDisplacement = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the decal map.\\n     *\\n     * @param tokens list of tokens for the map_decal direcive\\n     */\\n    parse_decal(tokens) {\\n        this.currentMaterial.mapDecal = this.parseMap(tokens);\\n    }\\n    /**\\n     * Parses the refl map.\\n     *\\n     * @param tokens list of tokens for the refl direcive\\n     */\\n    parse_refl(tokens) {\\n        this.currentMaterial.mapReflections.push(this.parseMap(tokens));\\n    }\\n    /**\\n     * Parses the MTL file.\\n     *\\n     * Iterates line by line parsing each MTL directive.\\n     *\\n     * This function expects the first token in the line\\n     * to be a valid MTL directive. That token is then used\\n     * to try and run a method on this class. parse_[directive]\\n     * E.g., the `newmtl` directive would try to call the method\\n     * parse_newmtl. Each parsing function takes in the remaining\\n     * list of tokens and updates the currentMaterial class with\\n     * the attributes provided.\\n     */\\n    parse() {\\n        const lines = this.data.split(/\\\\r?\\\\n/);\\n        for (let line of lines) {\\n            line = line.trim();\\n            if (!line || line.startsWith(\"#\")) {\\n                continue;\\n            }\\n            const [directive, ...tokens] = line.split(/\\\\s/);\\n            const parseMethod = this[`parse_${directive}`];\\n            if (!parseMethod) {\\n                console.warn(`Don\\'t know how to parse the directive: \"${directive}\"`);\\n                continue;\\n            }\\n            // console.log(`Parsing \"${directive}\" with tokens: ${tokens}`);\\n            parseMethod.bind(this)(tokens);\\n        }\\n        // some cleanup. These don\\'t need to be exposed as public data.\\n        delete this.data;\\n        this.currentMaterial = SENTINEL_MATERIAL;\\n    }\\n}\\nfunction emptyTextureOptions() {\\n    return {\\n        colorCorrection: false,\\n        horizontalBlending: true,\\n        verticalBlending: true,\\n        boostMipMapSharpness: 0,\\n        modifyTextureMap: {\\n            brightness: 0,\\n            contrast: 1,\\n        },\\n        offset: { u: 0, v: 0, w: 0 },\\n        scale: { u: 1, v: 1, w: 1 },\\n        turbulence: { u: 0, v: 0, w: 0 },\\n        clamp: false,\\n        textureResolution: null,\\n        bumpMultiplier: 1,\\n        imfChan: null,\\n        filename: \"\",\\n    };\\n}\\n\\n\\n//# sourceURL=webpack:///./src/material.ts?')},\"./src/mesh.ts\":\n/*!*********************!*\\\n  !*** ./src/mesh.ts ***!\n  \\*********************/\n/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Mesh; });\\n/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ \"./src/layout.ts\");\\n\\n/**\\n * The main Mesh class. The constructor will parse through the OBJ file data\\n * and collect the vertex, vertex normal, texture, and face information. This\\n * information can then be used later on when creating your VBOs. See\\n * OBJ.initMeshBuffers for an example of how to use the newly created Mesh\\n */\\nclass Mesh {\\n    /**\\n     * Create a Mesh\\n     * @param {String} objectData - a string representation of an OBJ file with\\n     *     newlines preserved.\\n     * @param {Object} options - a JS object containing valid options. See class\\n     *     documentation for options.\\n     * @param {bool} options.enableWTextureCoord - Texture coordinates can have\\n     *     an optional \"w\" coordinate after the u and v coordinates. This extra\\n     *     value can be used in order to perform fancy transformations on the\\n     *     textures themselves. Default is to truncate to only the u an v\\n     *     coordinates. Passing true will provide a default value of 0 in the\\n     *     event that any or all texture coordinates don\\'t provide a w value.\\n     *     Always use the textureStride attribute in order to determine the\\n     *     stride length of the texture coordinates when rendering the element\\n     *     array.\\n     * @param {bool} options.calcTangentsAndBitangents - Calculate the tangents\\n     *     and bitangents when loading of the OBJ is completed. This adds two new\\n     *     attributes to the Mesh instance: `tangents` and `bitangents`.\\n     */\\n    constructor(objectData, options) {\\n        this.name = \"\";\\n        this.indicesPerMaterial = [];\\n        this.materialsByIndex = {};\\n        this.tangents = [];\\n        this.bitangents = [];\\n        options = options || {};\\n        options.materials = options.materials || {};\\n        options.enableWTextureCoord = !!options.enableWTextureCoord;\\n        // the list of unique vertex, normal, texture, attributes\\n        this.vertexNormals = [];\\n        this.textures = [];\\n        // the indicies to draw the faces\\n        this.indices = [];\\n        this.textureStride = options.enableWTextureCoord ? 3 : 2;\\n        /*\\n        The OBJ file format does a sort of compression when saving a model in a\\n        program like Blender. There are at least 3 sections (4 including textures)\\n        within the file. Each line in a section begins with the same string:\\n          * \\'v\\': indicates vertex section\\n          * \\'vn\\': indicates vertex normal section\\n          * \\'f\\': indicates the faces section\\n          * \\'vt\\': indicates vertex texture section (if textures were used on the model)\\n        Each of the above sections (except for the faces section) is a list/set of\\n        unique vertices.\\n\\n        Each line of the faces section contains a list of\\n        (vertex, [texture], normal) groups.\\n\\n        **Note:** The following documentation will use a capital \"V\" Vertex to\\n        denote the above (vertex, [texture], normal) groups whereas a lowercase\\n        \"v\" vertex is used to denote an X, Y, Z coordinate.\\n\\n        Some examples:\\n            // the texture index is optional, both formats are possible for models\\n            // without a texture applied\\n            f 1/25 18/46 12/31\\n            f 1//25 18//46 12//31\\n\\n            // A 3 vertex face with texture indices\\n            f 16/92/11 14/101/22 1/69/1\\n\\n            // A 4 vertex face\\n            f 16/92/11 40/109/40 38/114/38 14/101/22\\n\\n        The first two lines are examples of a 3 vertex face without a texture applied.\\n        The second is an example of a 3 vertex face with a texture applied.\\n        The third is an example of a 4 vertex face. Note: a face can contain N\\n        number of vertices.\\n\\n        Each number that appears in one of the groups is a 1-based index\\n        corresponding to an item from the other sections (meaning that indexing\\n        starts at one and *not* zero).\\n\\n        For example:\\n            `f 16/92/11` is saying to\\n              - take the 16th element from the [v] vertex array\\n              - take the 92nd element from the [vt] texture array\\n              - take the 11th element from the [vn] normal array\\n            and together they make a unique vertex.\\n        Using all 3+ unique Vertices from the face line will produce a polygon.\\n\\n        Now, you could just go through the OBJ file and create a new vertex for\\n        each face line and WebGL will draw what appears to be the same model.\\n        However, vertices will be overlapped and duplicated all over the place.\\n\\n        Consider a cube in 3D space centered about the origin and each side is\\n        2 units long. The front face (with the positive Z-axis pointing towards\\n        you) would have a Top Right vertex (looking orthogonal to its normal)\\n        mapped at (1,1,1) The right face would have a Top Left vertex (looking\\n        orthogonal to its normal) at (1,1,1) and the top face would have a Bottom\\n        Right vertex (looking orthogonal to its normal) at (1,1,1). Each face\\n        has a vertex at the same coordinates, however, three distinct vertices\\n        will be drawn at the same spot.\\n\\n        To solve the issue of duplicate Vertices (the `(vertex, [texture], normal)`\\n        groups), while iterating through the face lines, when a group is encountered\\n        the whole group string (\\'16/92/11\\') is checked to see if it exists in the\\n        packed.hashindices object, and if it doesn\\'t, the indices it specifies\\n        are used to look up each attribute in the corresponding attribute arrays\\n        already created. The values are then copied to the corresponding unpacked\\n        array (flattened to play nice with WebGL\\'s ELEMENT_ARRAY_BUFFER indexing),\\n        the group string is added to the hashindices set and the current unpacked\\n        index is used as this hashindices value so that the group of elements can\\n        be reused. The unpacked index is incremented. If the group string already\\n        exists in the hashindices object, its corresponding value is the index of\\n        that group and is appended to the unpacked indices array.\\n       */\\n        const verts = [];\\n        const vertNormals = [];\\n        const textures = [];\\n        const materialNamesByIndex = [];\\n        const materialIndicesByName = {};\\n        // keep track of what material we\\'ve seen last\\n        let currentMaterialIndex = -1;\\n        let currentObjectByMaterialIndex = 0;\\n        // unpacking stuff\\n        const unpacked = {\\n            verts: [],\\n            norms: [],\\n            textures: [],\\n            hashindices: {},\\n            indices: [[]],\\n            materialIndices: [],\\n            index: 0,\\n        };\\n        const VERTEX_RE = /^v\\\\s/;\\n        const NORMAL_RE = /^vn\\\\s/;\\n        const TEXTURE_RE = /^vt\\\\s/;\\n        const FACE_RE = /^f\\\\s/;\\n        const WHITESPACE_RE = /\\\\s+/;\\n        const USE_MATERIAL_RE = /^usemtl/;\\n        // array of lines separated by the newline\\n        const lines = objectData.split(\"\\\\n\");\\n        for (let line of lines) {\\n            line = line.trim();\\n            if (!line || line.startsWith(\"#\")) {\\n                continue;\\n            }\\n            const elements = line.split(WHITESPACE_RE);\\n            elements.shift();\\n            if (VERTEX_RE.test(line)) {\\n                // if this is a vertex\\n                verts.push(...elements);\\n            }\\n            else if (NORMAL_RE.test(line)) {\\n                // if this is a vertex normal\\n                vertNormals.push(...elements);\\n            }\\n            else if (TEXTURE_RE.test(line)) {\\n                let coords = elements;\\n                // by default, the loader will only look at the U and V\\n                // coordinates of the vt declaration. So, this truncates the\\n                // elements to only those 2 values. If W texture coordinate\\n                // support is enabled, then the texture coordinate is\\n                // expected to have three values in it.\\n                if (elements.length > 2 && !options.enableWTextureCoord) {\\n                    coords = elements.slice(0, 2);\\n                }\\n                else if (elements.length === 2 && options.enableWTextureCoord) {\\n                    // If for some reason W texture coordinate support is enabled\\n                    // and only the U and V coordinates are given, then we supply\\n                    // the default value of 0 so that the stride length is correct\\n                    // when the textures are unpacked below.\\n                    coords.push(\"0\");\\n                }\\n                textures.push(...coords);\\n            }\\n            else if (USE_MATERIAL_RE.test(line)) {\\n                const materialName = elements[0];\\n                // check to see if we\\'ve ever seen it before\\n                if (!(materialName in materialIndicesByName)) {\\n                    // new material we\\'ve never seen\\n                    materialNamesByIndex.push(materialName);\\n                    materialIndicesByName[materialName] = materialNamesByIndex.length - 1;\\n                    // push new array into indices\\n                    // already contains an array at index zero, don\\'t add\\n                    if (materialIndicesByName[materialName] > 0) {\\n                        unpacked.indices.push([]);\\n                    }\\n                }\\n                // keep track of the current material index\\n                currentMaterialIndex = materialIndicesByName[materialName];\\n                // update current index array\\n                currentObjectByMaterialIndex = currentMaterialIndex;\\n            }\\n            else if (FACE_RE.test(line)) {\\n                // if this is a face\\n                /*\\n                split this face into an array of Vertex groups\\n                for example:\\n                   f 16/92/11 14/101/22 1/69/1\\n                becomes:\\n                  [\\'16/92/11\\', \\'14/101/22\\', \\'1/69/1\\'];\\n                */\\n                const triangles = triangulate(elements);\\n                for (const triangle of triangles) {\\n                    for (let j = 0, eleLen = triangle.length; j < eleLen; j++) {\\n                        const hash = triangle[j] + \",\" + currentMaterialIndex;\\n                        if (hash in unpacked.hashindices) {\\n                            unpacked.indices[currentObjectByMaterialIndex].push(unpacked.hashindices[hash]);\\n                        }\\n                        else {\\n                            /*\\n                        Each element of the face line array is a Vertex which has its\\n                        attributes delimited by a forward slash. This will separate\\n                        each attribute into another array:\\n                            \\'19/92/11\\'\\n                        becomes:\\n                            Vertex = [\\'19\\', \\'92\\', \\'11\\'];\\n                        where\\n                            Vertex[0] is the vertex index\\n                            Vertex[1] is the texture index\\n                            Vertex[2] is the normal index\\n                         Think of faces having Vertices which are comprised of the\\n                         attributes location (v), texture (vt), and normal (vn).\\n                         */\\n                            const vertex = triangle[j].split(\"/\");\\n                            // it\\'s possible for faces to only specify the vertex\\n                            // and the normal. In this case, vertex will only have\\n                            // a length of 2 and not 3 and the normal will be the\\n                            // second item in the list with an index of 1.\\n                            const normalIndex = vertex.length - 1;\\n                            /*\\n                         The verts, textures, and vertNormals arrays each contain a\\n                         flattend array of coordinates.\\n\\n                         Because it gets confusing by referring to Vertex and then\\n                         vertex (both are different in my descriptions) I will explain\\n                         what\\'s going on using the vertexNormals array:\\n\\n                         vertex[2] will contain the one-based index of the vertexNormals\\n                         section (vn). One is subtracted from this index number to play\\n                         nice with javascript\\'s zero-based array indexing.\\n\\n                         Because vertexNormal is a flattened array of x, y, z values,\\n                         simple pointer arithmetic is used to skip to the start of the\\n                         vertexNormal, then the offset is added to get the correct\\n                         component: +0 is x, +1 is y, +2 is z.\\n\\n                         This same process is repeated for verts and textures.\\n                         */\\n                            // Vertex position\\n                            unpacked.verts.push(+verts[(+vertex[0] - 1) * 3 + 0]);\\n                            unpacked.verts.push(+verts[(+vertex[0] - 1) * 3 + 1]);\\n                            unpacked.verts.push(+verts[(+vertex[0] - 1) * 3 + 2]);\\n                            // Vertex textures\\n                            if (textures.length) {\\n                                const stride = options.enableWTextureCoord ? 3 : 2;\\n                                unpacked.textures.push(+textures[(+vertex[1] - 1) * stride + 0]);\\n                                unpacked.textures.push(+textures[(+vertex[1] - 1) * stride + 1]);\\n                                if (options.enableWTextureCoord) {\\n                                    unpacked.textures.push(+textures[(+vertex[1] - 1) * stride + 2]);\\n                                }\\n                            }\\n                            // Vertex normals\\n                            unpacked.norms.push(+vertNormals[(+vertex[normalIndex] - 1) * 3 + 0]);\\n                            unpacked.norms.push(+vertNormals[(+vertex[normalIndex] - 1) * 3 + 1]);\\n                            unpacked.norms.push(+vertNormals[(+vertex[normalIndex] - 1) * 3 + 2]);\\n                            // Vertex material indices\\n                            unpacked.materialIndices.push(currentMaterialIndex);\\n                            // add the newly created Vertex to the list of indices\\n                            unpacked.hashindices[hash] = unpacked.index;\\n                            unpacked.indices[currentObjectByMaterialIndex].push(unpacked.hashindices[hash]);\\n                            // increment the counter\\n                            unpacked.index += 1;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n        this.vertices = unpacked.verts;\\n        this.vertexNormals = unpacked.norms;\\n        this.textures = unpacked.textures;\\n        this.vertexMaterialIndices = unpacked.materialIndices;\\n        this.indices = unpacked.indices[currentObjectByMaterialIndex];\\n        this.indicesPerMaterial = unpacked.indices;\\n        this.materialNames = materialNamesByIndex;\\n        this.materialIndices = materialIndicesByName;\\n        this.materialsByIndex = {};\\n        if (options.calcTangentsAndBitangents) {\\n            this.calculateTangentsAndBitangents();\\n        }\\n    }\\n    /**\\n     * Calculates the tangents and bitangents of the mesh that forms an orthogonal basis together with the\\n     * normal in the direction of the texture coordinates. These are useful for setting up the TBN matrix\\n     * when distorting the normals through normal maps.\\n     * Method derived from: http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/\\n     *\\n     * This method requires the normals and texture coordinates to be parsed and set up correctly.\\n     * Adds the tangents and bitangents as members of the class instance.\\n     */\\n    calculateTangentsAndBitangents() {\\n        console.assert(!!(this.vertices &&\\n            this.vertices.length &&\\n            this.vertexNormals &&\\n            this.vertexNormals.length &&\\n            this.textures &&\\n            this.textures.length), \"Missing attributes for calculating tangents and bitangents\");\\n        const unpacked = {\\n            tangents: [...new Array(this.vertices.length)].map(_ => 0),\\n            bitangents: [...new Array(this.vertices.length)].map(_ => 0),\\n        };\\n        // Loop through all faces in the whole mesh\\n        const indices = this.indices;\\n        const vertices = this.vertices;\\n        const normals = this.vertexNormals;\\n        const uvs = this.textures;\\n        for (let i = 0; i < indices.length; i += 3) {\\n            const i0 = indices[i + 0];\\n            const i1 = indices[i + 1];\\n            const i2 = indices[i + 2];\\n            const x_v0 = vertices[i0 * 3 + 0];\\n            const y_v0 = vertices[i0 * 3 + 1];\\n            const z_v0 = vertices[i0 * 3 + 2];\\n            const x_uv0 = uvs[i0 * 2 + 0];\\n            const y_uv0 = uvs[i0 * 2 + 1];\\n            const x_v1 = vertices[i1 * 3 + 0];\\n            const y_v1 = vertices[i1 * 3 + 1];\\n            const z_v1 = vertices[i1 * 3 + 2];\\n            const x_uv1 = uvs[i1 * 2 + 0];\\n            const y_uv1 = uvs[i1 * 2 + 1];\\n            const x_v2 = vertices[i2 * 3 + 0];\\n            const y_v2 = vertices[i2 * 3 + 1];\\n            const z_v2 = vertices[i2 * 3 + 2];\\n            const x_uv2 = uvs[i2 * 2 + 0];\\n            const y_uv2 = uvs[i2 * 2 + 1];\\n            const x_deltaPos1 = x_v1 - x_v0;\\n            const y_deltaPos1 = y_v1 - y_v0;\\n            const z_deltaPos1 = z_v1 - z_v0;\\n            const x_deltaPos2 = x_v2 - x_v0;\\n            const y_deltaPos2 = y_v2 - y_v0;\\n            const z_deltaPos2 = z_v2 - z_v0;\\n            const x_uvDeltaPos1 = x_uv1 - x_uv0;\\n            const y_uvDeltaPos1 = y_uv1 - y_uv0;\\n            const x_uvDeltaPos2 = x_uv2 - x_uv0;\\n            const y_uvDeltaPos2 = y_uv2 - y_uv0;\\n            const rInv = x_uvDeltaPos1 * y_uvDeltaPos2 - y_uvDeltaPos1 * x_uvDeltaPos2;\\n            const r = 1.0 / Math.abs(rInv < 0.0001 ? 1.0 : rInv);\\n            // Tangent\\n            const x_tangent = (x_deltaPos1 * y_uvDeltaPos2 - x_deltaPos2 * y_uvDeltaPos1) * r;\\n            const y_tangent = (y_deltaPos1 * y_uvDeltaPos2 - y_deltaPos2 * y_uvDeltaPos1) * r;\\n            const z_tangent = (z_deltaPos1 * y_uvDeltaPos2 - z_deltaPos2 * y_uvDeltaPos1) * r;\\n            // Bitangent\\n            const x_bitangent = (x_deltaPos2 * x_uvDeltaPos1 - x_deltaPos1 * x_uvDeltaPos2) * r;\\n            const y_bitangent = (y_deltaPos2 * x_uvDeltaPos1 - y_deltaPos1 * x_uvDeltaPos2) * r;\\n            const z_bitangent = (z_deltaPos2 * x_uvDeltaPos1 - z_deltaPos1 * x_uvDeltaPos2) * r;\\n            // Gram-Schmidt orthogonalize\\n            //t = glm::normalize(t - n * glm:: dot(n, t));\\n            const x_n0 = normals[i0 * 3 + 0];\\n            const y_n0 = normals[i0 * 3 + 1];\\n            const z_n0 = normals[i0 * 3 + 2];\\n            const x_n1 = normals[i1 * 3 + 0];\\n            const y_n1 = normals[i1 * 3 + 1];\\n            const z_n1 = normals[i1 * 3 + 2];\\n            const x_n2 = normals[i2 * 3 + 0];\\n            const y_n2 = normals[i2 * 3 + 1];\\n            const z_n2 = normals[i2 * 3 + 2];\\n            // Tangent\\n            const n0_dot_t = x_tangent * x_n0 + y_tangent * y_n0 + z_tangent * z_n0;\\n            const n1_dot_t = x_tangent * x_n1 + y_tangent * y_n1 + z_tangent * z_n1;\\n            const n2_dot_t = x_tangent * x_n2 + y_tangent * y_n2 + z_tangent * z_n2;\\n            const x_resTangent0 = x_tangent - x_n0 * n0_dot_t;\\n            const y_resTangent0 = y_tangent - y_n0 * n0_dot_t;\\n            const z_resTangent0 = z_tangent - z_n0 * n0_dot_t;\\n            const x_resTangent1 = x_tangent - x_n1 * n1_dot_t;\\n            const y_resTangent1 = y_tangent - y_n1 * n1_dot_t;\\n            const z_resTangent1 = z_tangent - z_n1 * n1_dot_t;\\n            const x_resTangent2 = x_tangent - x_n2 * n2_dot_t;\\n            const y_resTangent2 = y_tangent - y_n2 * n2_dot_t;\\n            const z_resTangent2 = z_tangent - z_n2 * n2_dot_t;\\n            const magTangent0 = Math.sqrt(x_resTangent0 * x_resTangent0 + y_resTangent0 * y_resTangent0 + z_resTangent0 * z_resTangent0);\\n            const magTangent1 = Math.sqrt(x_resTangent1 * x_resTangent1 + y_resTangent1 * y_resTangent1 + z_resTangent1 * z_resTangent1);\\n            const magTangent2 = Math.sqrt(x_resTangent2 * x_resTangent2 + y_resTangent2 * y_resTangent2 + z_resTangent2 * z_resTangent2);\\n            // Bitangent\\n            const n0_dot_bt = x_bitangent * x_n0 + y_bitangent * y_n0 + z_bitangent * z_n0;\\n            const n1_dot_bt = x_bitangent * x_n1 + y_bitangent * y_n1 + z_bitangent * z_n1;\\n            const n2_dot_bt = x_bitangent * x_n2 + y_bitangent * y_n2 + z_bitangent * z_n2;\\n            const x_resBitangent0 = x_bitangent - x_n0 * n0_dot_bt;\\n            const y_resBitangent0 = y_bitangent - y_n0 * n0_dot_bt;\\n            const z_resBitangent0 = z_bitangent - z_n0 * n0_dot_bt;\\n            const x_resBitangent1 = x_bitangent - x_n1 * n1_dot_bt;\\n            const y_resBitangent1 = y_bitangent - y_n1 * n1_dot_bt;\\n            const z_resBitangent1 = z_bitangent - z_n1 * n1_dot_bt;\\n            const x_resBitangent2 = x_bitangent - x_n2 * n2_dot_bt;\\n            const y_resBitangent2 = y_bitangent - y_n2 * n2_dot_bt;\\n            const z_resBitangent2 = z_bitangent - z_n2 * n2_dot_bt;\\n            const magBitangent0 = Math.sqrt(x_resBitangent0 * x_resBitangent0 +\\n                y_resBitangent0 * y_resBitangent0 +\\n                z_resBitangent0 * z_resBitangent0);\\n            const magBitangent1 = Math.sqrt(x_resBitangent1 * x_resBitangent1 +\\n                y_resBitangent1 * y_resBitangent1 +\\n                z_resBitangent1 * z_resBitangent1);\\n            const magBitangent2 = Math.sqrt(x_resBitangent2 * x_resBitangent2 +\\n                y_resBitangent2 * y_resBitangent2 +\\n                z_resBitangent2 * z_resBitangent2);\\n            unpacked.tangents[i0 * 3 + 0] += x_resTangent0 / magTangent0;\\n            unpacked.tangents[i0 * 3 + 1] += y_resTangent0 / magTangent0;\\n            unpacked.tangents[i0 * 3 + 2] += z_resTangent0 / magTangent0;\\n            unpacked.tangents[i1 * 3 + 0] += x_resTangent1 / magTangent1;\\n            unpacked.tangents[i1 * 3 + 1] += y_resTangent1 / magTangent1;\\n            unpacked.tangents[i1 * 3 + 2] += z_resTangent1 / magTangent1;\\n            unpacked.tangents[i2 * 3 + 0] += x_resTangent2 / magTangent2;\\n            unpacked.tangents[i2 * 3 + 1] += y_resTangent2 / magTangent2;\\n            unpacked.tangents[i2 * 3 + 2] += z_resTangent2 / magTangent2;\\n            unpacked.bitangents[i0 * 3 + 0] += x_resBitangent0 / magBitangent0;\\n            unpacked.bitangents[i0 * 3 + 1] += y_resBitangent0 / magBitangent0;\\n            unpacked.bitangents[i0 * 3 + 2] += z_resBitangent0 / magBitangent0;\\n            unpacked.bitangents[i1 * 3 + 0] += x_resBitangent1 / magBitangent1;\\n            unpacked.bitangents[i1 * 3 + 1] += y_resBitangent1 / magBitangent1;\\n            unpacked.bitangents[i1 * 3 + 2] += z_resBitangent1 / magBitangent1;\\n            unpacked.bitangents[i2 * 3 + 0] += x_resBitangent2 / magBitangent2;\\n            unpacked.bitangents[i2 * 3 + 1] += y_resBitangent2 / magBitangent2;\\n            unpacked.bitangents[i2 * 3 + 2] += z_resBitangent2 / magBitangent2;\\n            // TODO: check handedness\\n        }\\n        this.tangents = unpacked.tangents;\\n        this.bitangents = unpacked.bitangents;\\n    }\\n    /**\\n     * @param layout - A {@link Layout} object that describes the\\n     * desired memory layout of the generated buffer\\n     * @return The packed array in the ... TODO\\n     */\\n    makeBufferData(layout) {\\n        const numItems = this.vertices.length / 3;\\n        const buffer = new ArrayBuffer(layout.stride * numItems);\\n        buffer.numItems = numItems;\\n        const dataView = new DataView(buffer);\\n        for (let i = 0, vertexOffset = 0; i < numItems; i++) {\\n            vertexOffset = i * layout.stride;\\n            // copy in the vertex data in the order and format given by the\\n            // layout param\\n            for (const attribute of layout.attributes) {\\n                const offset = vertexOffset + layout.attributeMap[attribute.key].offset;\\n                switch (attribute.key) {\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].POSITION.key:\\n                        dataView.setFloat32(offset, this.vertices[i * 3], true);\\n                        dataView.setFloat32(offset + 4, this.vertices[i * 3 + 1], true);\\n                        dataView.setFloat32(offset + 8, this.vertices[i * 3 + 2], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].UV.key:\\n                        dataView.setFloat32(offset, this.textures[i * 2], true);\\n                        dataView.setFloat32(offset + 4, this.textures[i * 2 + 1], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].NORMAL.key:\\n                        dataView.setFloat32(offset, this.vertexNormals[i * 3], true);\\n                        dataView.setFloat32(offset + 4, this.vertexNormals[i * 3 + 1], true);\\n                        dataView.setFloat32(offset + 8, this.vertexNormals[i * 3 + 2], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].MATERIAL_INDEX.key:\\n                        dataView.setInt16(offset, this.vertexMaterialIndices[i], true);\\n                        break;\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].AMBIENT.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.ambient[0], true);\\n                        dataView.setFloat32(offset + 4, material.ambient[1], true);\\n                        dataView.setFloat32(offset + 8, material.ambient[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].DIFFUSE.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.diffuse[0], true);\\n                        dataView.setFloat32(offset + 4, material.diffuse[1], true);\\n                        dataView.setFloat32(offset + 8, material.diffuse[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].SPECULAR.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.specular[0], true);\\n                        dataView.setFloat32(offset + 4, material.specular[1], true);\\n                        dataView.setFloat32(offset + 8, material.specular[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].SPECULAR_EXPONENT.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.specularExponent, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].EMISSIVE.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.emissive[0], true);\\n                        dataView.setFloat32(offset + 4, material.emissive[1], true);\\n                        dataView.setFloat32(offset + 8, material.emissive[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].TRANSMISSION_FILTER.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.transmissionFilter[0], true);\\n                        dataView.setFloat32(offset + 4, material.transmissionFilter[1], true);\\n                        dataView.setFloat32(offset + 8, material.transmissionFilter[2], true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].DISSOLVE.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.dissolve, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].ILLUMINATION.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setInt16(offset, material.illumination, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].REFRACTION_INDEX.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.refractionIndex, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].SHARPNESS.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setFloat32(offset, material.sharpness, true);\\n                        break;\\n                    }\\n                    case _layout__WEBPACK_IMPORTED_MODULE_0__[\"Layout\"].ANTI_ALIASING.key: {\\n                        const materialIndex = this.vertexMaterialIndices[i];\\n                        const material = this.materialsByIndex[materialIndex];\\n                        if (!material) {\\n                            console.warn(\\'Material \"\\' +\\n                                this.materialNames[materialIndex] +\\n                                \\'\" not found in mesh. Did you forget to call addMaterialLibrary(...)?\"\\');\\n                            break;\\n                        }\\n                        dataView.setInt16(offset, material.antiAliasing ? 1 : 0, true);\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n        return buffer;\\n    }\\n    makeIndexBufferData() {\\n        const buffer = new Uint16Array(this.indices);\\n        buffer.numItems = this.indices.length;\\n        return buffer;\\n    }\\n    makeIndexBufferDataForMaterials(...materialIndices) {\\n        const indices = new Array().concat(...materialIndices.map(mtlIdx => this.indicesPerMaterial[mtlIdx]));\\n        const buffer = new Uint16Array(indices);\\n        buffer.numItems = indices.length;\\n        return buffer;\\n    }\\n    addMaterialLibrary(mtl) {\\n        for (const name in mtl.materials) {\\n            if (!(name in this.materialIndices)) {\\n                // This material is not referenced by the mesh\\n                continue;\\n            }\\n            const material = mtl.materials[name];\\n            // Find the material index for this material\\n            const materialIndex = this.materialIndices[material.name];\\n            // Put the material into the materialsByIndex object at the right\\n            // spot as determined when the obj file was parsed\\n            this.materialsByIndex[materialIndex] = material;\\n        }\\n    }\\n}\\nfunction* triangulate(elements) {\\n    if (elements.length <= 3) {\\n        yield elements;\\n    }\\n    else if (elements.length === 4) {\\n        yield [elements[0], elements[1], elements[2]];\\n        yield [elements[2], elements[3], elements[0]];\\n    }\\n    else {\\n        for (let i = 1; i < elements.length - 1; i++) {\\n            yield [elements[0], elements[i], elements[i + 1]];\\n        }\\n    }\\n}\\n\\n\\n//# sourceURL=webpack:///./src/mesh.ts?')},\"./src/utils.ts\":\n/*!**********************!*\\\n  !*** ./src/utils.ts ***!\n  \\**********************/\n/*! exports provided: downloadModels, downloadMeshes, initMeshBuffers, deleteMeshBuffers */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadModels\", function() { return downloadModels; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadMeshes\", function() { return downloadMeshes; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initMeshBuffers\", function() { return initMeshBuffers; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteMeshBuffers\", function() { return deleteMeshBuffers; });\\n/* harmony import */ var _mesh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mesh */ \"./src/mesh.ts\");\\n/* harmony import */ var _material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./material */ \"./src/material.ts\");\\n\\n\\nfunction downloadMtlTextures(mtl, root) {\\n    const mapAttributes = [\\n        \"mapDiffuse\",\\n        \"mapAmbient\",\\n        \"mapSpecular\",\\n        \"mapDissolve\",\\n        \"mapBump\",\\n        \"mapDisplacement\",\\n        \"mapDecal\",\\n        \"mapEmissive\",\\n    ];\\n    if (!root.endsWith(\"/\")) {\\n        root += \"/\";\\n    }\\n    const textures = [];\\n    for (const materialName in mtl.materials) {\\n        if (!mtl.materials.hasOwnProperty(materialName)) {\\n            continue;\\n        }\\n        const material = mtl.materials[materialName];\\n        for (const attr of mapAttributes) {\\n            const mapData = material[attr];\\n            if (!mapData || !mapData.filename) {\\n                continue;\\n            }\\n            const url = root + mapData.filename;\\n            textures.push(fetch(url)\\n                .then(response => {\\n                if (!response.ok) {\\n                    throw new Error();\\n                }\\n                return response.blob();\\n            })\\n                .then(function (data) {\\n                const image = new Image();\\n                image.src = URL.createObjectURL(data);\\n                mapData.texture = image;\\n                return new Promise(resolve => (image.onload = resolve));\\n            })\\n                .catch(() => {\\n                console.error(`Unable to download texture: ${url}`);\\n            }));\\n        }\\n    }\\n    return Promise.all(textures);\\n}\\nfunction getMtl(modelOptions) {\\n    if (!(typeof modelOptions.mtl === \"string\")) {\\n        return modelOptions.obj.replace(/\\\\.obj$/, \".mtl\");\\n    }\\n    return modelOptions.mtl;\\n}\\n/**\\n * Accepts a list of model request objects and returns a Promise that\\n * resolves when all models have been downloaded and parsed.\\n *\\n * The list of model objects follow this interface:\\n * {\\n *  obj: \\'path/to/model.obj\\',\\n *  mtl: true | \\'path/to/model.mtl\\',\\n *  downloadMtlTextures: true | false\\n *  mtlTextureRoot: \\'/models/suzanne/maps\\'\\n *  name: \\'suzanne\\'\\n * }\\n *\\n * The `obj` attribute is required and should be the path to the\\n * model\\'s .obj file relative to the current repo (absolute URLs are\\n * suggested).\\n *\\n * The `mtl` attribute is optional and can either be a boolean or\\n * a path to the model\\'s .mtl file relative to the current URL. If\\n * the value is `true`, then the path and basename given for the `obj`\\n * attribute is used replacing the .obj suffix for .mtl\\n * E.g.: {obj: \\'models/foo.obj\\', mtl: true} would search for \\'models/foo.mtl\\'\\n *\\n * The `name` attribute is optional and is a human friendly name to be\\n * included with the parsed OBJ and MTL files. If not given, the base .obj\\n * filename will be used.\\n *\\n * The `downloadMtlTextures` attribute is a flag for automatically downloading\\n * any images found in the MTL file and attaching them to each Material\\n * created from that file. For example, if material.mapDiffuse is set (there\\n * was data in the MTL file), then material.mapDiffuse.texture will contain\\n * the downloaded image. This option defaults to `true`. By default, the MTL\\'s\\n * URL will be used to determine the location of the images.\\n *\\n * The `mtlTextureRoot` attribute is optional and should point to the location\\n * on the server that this MTL\\'s texture files are located. The default is to\\n * use the MTL file\\'s location.\\n *\\n * @returns {Promise} the result of downloading the given list of models. The\\n * promise will resolve with an object whose keys are the names of the models\\n * and the value is its Mesh object. Each Mesh object will automatically\\n * have its addMaterialLibrary() method called to set the given MTL data (if given).\\n */\\nfunction downloadModels(models) {\\n    const finished = [];\\n    for (const model of models) {\\n        if (!model.obj) {\\n            throw new Error(\\'\"obj\" attribute of model object not set. The .obj file is required to be set \\' +\\n                \"in order to use downloadModels()\");\\n        }\\n        const options = {\\n            indicesPerMaterial: !!model.indicesPerMaterial,\\n            calcTangentsAndBitangents: !!model.calcTangentsAndBitangents,\\n        };\\n        // if the name is not provided, dervive it from the given OBJ\\n        let name = model.name;\\n        if (!name) {\\n            const parts = model.obj.split(\"/\");\\n            name = parts[parts.length - 1].replace(\".obj\", \"\");\\n        }\\n        const namePromise = Promise.resolve(name);\\n        const meshPromise = fetch(model.obj)\\n            .then(response => response.text())\\n            .then(data => {\\n            return new _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data, options);\\n        });\\n        let mtlPromise;\\n        // Download MaterialLibrary file?\\n        if (model.mtl) {\\n            const mtl = getMtl(model);\\n            mtlPromise = fetch(mtl)\\n                .then(response => response.text())\\n                .then((data) => {\\n                const material = new _material__WEBPACK_IMPORTED_MODULE_1__[\"MaterialLibrary\"](data);\\n                if (model.downloadMtlTextures !== false) {\\n                    let root = model.mtlTextureRoot;\\n                    if (!root) {\\n                        // get the directory of the MTL file as default\\n                        root = mtl.substr(0, mtl.lastIndexOf(\"/\"));\\n                    }\\n                    // downloadMtlTextures returns a Promise that\\n                    // is resolved once all of the images it\\n                    // contains are downloaded. These are then\\n                    // attached to the map data objects\\n                    return Promise.all([Promise.resolve(material), downloadMtlTextures(material, root)]);\\n                }\\n                return Promise.all([Promise.resolve(material), undefined]);\\n            })\\n                .then((value) => {\\n                return value[0];\\n            });\\n        }\\n        const parsed = [namePromise, meshPromise, mtlPromise];\\n        finished.push(Promise.all(parsed));\\n    }\\n    return Promise.all(finished).then(ms => {\\n        // the \"finished\" promise is a list of name, Mesh instance,\\n        // and MaterialLibary instance. This unpacks and returns an\\n        // object mapping name to Mesh (Mesh points to MTL).\\n        const models = {};\\n        for (const model of ms) {\\n            const [name, mesh, mtl] = model;\\n            mesh.name = name;\\n            if (mtl) {\\n                mesh.addMaterialLibrary(mtl);\\n            }\\n            models[name] = mesh;\\n        }\\n        return models;\\n    });\\n}\\n/**\\n * Takes in an object of `mesh_name`, `\\'/url/to/OBJ/file\\'` pairs and a callback\\n * function. Each OBJ file will be ajaxed in and automatically converted to\\n * an OBJ.Mesh. When all files have successfully downloaded the callback\\n * function provided will be called and passed in an object containing\\n * the newly created meshes.\\n *\\n * **Note:** In order to use this function as a way to download meshes, a\\n * webserver of some sort must be used.\\n *\\n * @param {Object} nameAndAttrs an object where the key is the name of the mesh and the value is the url to that mesh\\'s OBJ file\\n *\\n * @param {Function} completionCallback should contain a function that will take one parameter: an object array where the keys will be the unique object name and the value will be a Mesh object\\n *\\n * @param {Object} meshes In case other meshes are loaded separately or if a previously declared variable is desired to be used, pass in a (possibly empty) json object of the pattern: { \\'<mesh_name>\\': OBJ.Mesh }\\n *\\n */\\nfunction downloadMeshes(nameAndURLs, completionCallback, meshes) {\\n    if (meshes === undefined) {\\n        meshes = {};\\n    }\\n    const completed = [];\\n    for (const mesh_name in nameAndURLs) {\\n        if (!nameAndURLs.hasOwnProperty(mesh_name)) {\\n            continue;\\n        }\\n        const url = nameAndURLs[mesh_name];\\n        completed.push(fetch(url)\\n            .then(response => response.text())\\n            .then(data => {\\n            return [mesh_name, new _mesh__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data)];\\n        }));\\n    }\\n    Promise.all(completed).then(ms => {\\n        for (const [name, mesh] of ms) {\\n            meshes[name] = mesh;\\n        }\\n        return completionCallback(meshes);\\n    });\\n}\\nfunction _buildBuffer(gl, type, data, itemSize) {\\n    const buffer = gl.createBuffer();\\n    const arrayView = type === gl.ARRAY_BUFFER ? Float32Array : Uint16Array;\\n    gl.bindBuffer(type, buffer);\\n    gl.bufferData(type, new arrayView(data), gl.STATIC_DRAW);\\n    buffer.itemSize = itemSize;\\n    buffer.numItems = data.length / itemSize;\\n    return buffer;\\n}\\n/**\\n * Takes in the WebGL context and a Mesh, then creates and appends the buffers\\n * to the mesh object as attributes.\\n *\\n * @param {WebGLRenderingContext} gl the `canvas.getContext(\\'webgl\\')` context instance\\n * @param {Mesh} mesh a single `OBJ.Mesh` instance\\n *\\n * The newly created mesh attributes are:\\n *\\n * Attrbute | Description\\n * :--- | ---\\n * **normalBuffer**       |contains the model&#39;s Vertex Normals\\n * normalBuffer.itemSize  |set to 3 items\\n * normalBuffer.numItems  |the total number of vertex normals\\n * |\\n * **textureBuffer**      |contains the model&#39;s Texture Coordinates\\n * textureBuffer.itemSize |set to 2 items\\n * textureBuffer.numItems |the number of texture coordinates\\n * |\\n * **vertexBuffer**       |contains the model&#39;s Vertex Position Coordinates (does not include w)\\n * vertexBuffer.itemSize  |set to 3 items\\n * vertexBuffer.numItems  |the total number of vertices\\n * |\\n * **indexBuffer**        |contains the indices of the faces\\n * indexBuffer.itemSize   |is set to 1\\n * indexBuffer.numItems   |the total number of indices\\n *\\n * A simple example (a lot of steps are missing, so don\\'t copy and paste):\\n *\\n *     const gl   = canvas.getContext(\\'webgl\\'),\\n *         mesh = OBJ.Mesh(obj_file_data);\\n *     // compile the shaders and create a shader program\\n *     const shaderProgram = gl.createProgram();\\n *     // compilation stuff here\\n *     ...\\n *     // make sure you have vertex, vertex normal, and texture coordinate\\n *     // attributes located in your shaders and attach them to the shader program\\n *     shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\\n *     gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\\n *\\n *     shaderProgram.vertexNormalAttribute = gl.getAttribLocation(shaderProgram, \"aVertexNormal\");\\n *     gl.enableVertexAttribArray(shaderProgram.vertexNormalAttribute);\\n *\\n *     shaderProgram.textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\\n *     gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\\n *\\n *     // create and initialize the vertex, vertex normal, and texture coordinate buffers\\n *     // and save on to the mesh object\\n *     OBJ.initMeshBuffers(gl, mesh);\\n *\\n *     // now to render the mesh\\n *     gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vertexBuffer);\\n *     gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, mesh.vertexBuffer.itemSize, gl.FLOAT, false, 0, 0);\\n *     // it\\'s possible that the mesh doesn\\'t contain\\n *     // any texture coordinates (e.g. suzanne.obj in the development branch).\\n *     // in this case, the texture vertexAttribArray will need to be disabled\\n *     // before the call to drawElements\\n *     if(!mesh.textures.length){\\n *       gl.disableVertexAttribArray(shaderProgram.textureCoordAttribute);\\n *     }\\n *     else{\\n *       // if the texture vertexAttribArray has been previously\\n *       // disabled, then it needs to be re-enabled\\n *       gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\\n *       gl.bindBuffer(gl.ARRAY_BUFFER, mesh.textureBuffer);\\n *       gl.vertexAttribPointer(shaderProgram.textureCoordAttribute, mesh.textureBuffer.itemSize, gl.FLOAT, false, 0, 0);\\n *     }\\n *\\n *     gl.bindBuffer(gl.ARRAY_BUFFER, mesh.normalBuffer);\\n *     gl.vertexAttribPointer(shaderProgram.vertexNormalAttribute, mesh.normalBuffer.itemSize, gl.FLOAT, false, 0, 0);\\n *\\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, model.mesh.indexBuffer);\\n *     gl.drawElements(gl.TRIANGLES, model.mesh.indexBuffer.numItems, gl.UNSIGNED_SHORT, 0);\\n */\\nfunction initMeshBuffers(gl, mesh) {\\n    mesh.normalBuffer = _buildBuffer(gl, gl.ARRAY_BUFFER, mesh.vertexNormals, 3);\\n    mesh.textureBuffer = _buildBuffer(gl, gl.ARRAY_BUFFER, mesh.textures, mesh.textureStride);\\n    mesh.vertexBuffer = _buildBuffer(gl, gl.ARRAY_BUFFER, mesh.vertices, 3);\\n    mesh.indexBuffer = _buildBuffer(gl, gl.ELEMENT_ARRAY_BUFFER, mesh.indices, 1);\\n    return mesh;\\n}\\nfunction deleteMeshBuffers(gl, mesh) {\\n    gl.deleteBuffer(mesh.normalBuffer);\\n    gl.deleteBuffer(mesh.textureBuffer);\\n    gl.deleteBuffer(mesh.vertexBuffer);\\n    gl.deleteBuffer(mesh.indexBuffer);\\n}\\n\\n\\n//# sourceURL=webpack:///./src/utils.ts?')},0:\n/*!****************************!*\\\n  !*** multi ./src/index.ts ***!\n  \\****************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! /home/aaron/google_drive/projects/webgl-obj-loader/src/index.ts */\"./src/index.ts\");\\n\\n\\n//# sourceURL=webpack:///multi_./src/index.ts?')}})}));", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nexport let EPSILON = 0.000001;\n\n/**\n * Set the value for EPSILON for various checks\n * @param v - Value to use for EPSILON.\n * @returns previous value of EPSILON;\n */\nexport function setEpsilon(v: number): number {\n  const old = EPSILON;\n  EPSILON = v;\n  return old;\n}\n\n/**\n * Convert degrees to radians\n * @param degrees - Angle in degrees\n * @returns angle converted to radians\n */\nexport function degToRad(degrees: number): number {\n  return degrees * Math.PI / 180;\n}\n\n/**\n * Convert radians to degrees\n * @param radians - Angle in radians\n * @returns angle converted to degrees\n */\nexport function radToDeg(radians: number): number {\n  return radians * 180 / Math.PI;\n}\n\n/**\n * Lerps between a and b via t\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @returns a + (b - a) * t\n */\nexport function lerp(a: number, b: number, t: number): number {\n  return a + (b - a) * t;\n}\n\n/**\n * Compute the opposite of lerp. Given a and b and a value between\n * a and b returns a value between 0 and 1. 0 if a, 1 if b.\n * Note: no clamping is done.\n * @param a - start value\n * @param b - end value\n * @param v - value between a and b\n * @returns (v - a) / (b - a)\n */\nexport function inverseLerp(a: number, b: number, v: number): number {\n  const d = b - a;\n  return (Math.abs(b - a) < EPSILON)\n     ? a\n     : (v - a) / d;\n}\n\n/**\n * Compute the euclidean modulo\n *\n * ```\n * // table for n / 3\n * -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5   <- n\n * ------------------------------------\n * -2  -1  -0  -2  -1   0,  1,  2,  0,  1,  2   <- n % 3\n *  1   2   0   1   2   0,  1,  2,  0,  1,  2   <- euclideanModule(n, 3)\n * ```\n *\n * @param n - dividend\n * @param m - divisor\n * @returns the euclidean modulo of n / m\n */\nexport function euclideanModulo(n: number, m: number) {\n  return ((n % m) + m) % m;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 2 values, Float32Array with 2 values, or a Float64Array with 2 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link vec2.setDefaultType}.\n */\nexport type Vec2 = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Vec2 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec2. In other words you can do this\n *\n *     const v = vec2.cross(v1, v2);  // Creates a new Vec2 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec2.create();\n *     vec2.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec2.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let VecType: new (n: number) => Vec2 = Float32Array;\n\n/**\n * Sets the type this library creates for a Vec2\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec2\n */\nexport function setDefaultType(ctor: new (n: number) => Vec2) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values.\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Vec2's specified type\n * it would be faster to use\n *\n * ```\n * const v = vec2.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Vec2Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `vec2.create` is usually used\n * to create a Vec2 to be filled out as in\n *\n * ```\n * const sum = vec2.create();\n * vec2.add(v1, v2, sum);\n * ```\n *\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nexport function create(x = 0, y = 0): Vec2 {\n  const dst = new VecType(2);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n    }\n  }\n  return dst;\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 3 values, Float32Array with 3 values, or a Float64Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link vec3.setDefaultType}.\n */\nexport type Vec3 = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Vec3 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec3`. In other words you can do this\n *\n *     const v = vec3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec3.create();\n *     vec3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let VecType: new (n: number) => Vec3 = Float32Array;\n\n/**\n * Sets the type this library creates for a Vec3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec3\n */\nexport function setDefaultType(ctor: new (n: number) => Vec3) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nexport function create(x?: number, y?: number, z?: number): Vec3 {\n  const dst = new VecType(3);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n      if (z !== undefined) {\n        dst[2] = z;\n      }\n    }\n  }\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport { Vec2, create, setDefaultType, VecType } from './vec2';\nimport { Vec3, VecType as Vec3Type } from './vec3';\n\nexport default Vec2;\nexport { create, setDefaultType };\n\n/**\n * Creates a Vec2; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Vec2\n * Also see {@link vec2.create} and {@link vec2.copy}\n *\n * @param x first value\n * @param y second value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  dst[0] = x;\n  dst[1] = y;\n\n  return dst;\n}\n\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nexport function ceil(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.ceil(v[0]);\n  dst[1] = Math.ceil(v[1]);\n\n  return dst;\n}\n\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nexport function floor(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.floor(v[0]);\n  dst[1] = Math.floor(v[1]);\n\n  return dst;\n}\n\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nexport function round(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.round(v[0]);\n  dst[1] = Math.round(v[1]);\n\n  return dst;\n}\n\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nexport function clamp(v: Vec2, min = 0, max = 1, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.min(max, Math.max(min, v[0]));\n  dst[1] = Math.min(max, Math.max(min, v[1]));\n\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nexport function add(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n\n  return dst;\n}\n\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nexport function addScaled(a: Vec2, b: Vec2, scale: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + b[0] * scale;\n  dst[1] = a[1] + b[1] * scale;\n\n  return dst;\n}\n\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nexport function angle(a: Vec2, b: Vec2): number {\n  const ax = a[0];\n  const ay = a[1];\n  const bx = b[0];\n  const by = b[1];\n  const mag1 = Math.sqrt(ax * ax + ay * ay);\n  const mag2 = Math.sqrt(bx * bx + by * by);\n  const mag = mag1 * mag2;\n  const cosine = mag && dot(a, b) / mag;\n  return Math.acos(cosine);\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport function subtract(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nexport function equalsApproximately(a: Vec2, b: Vec2): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nexport function equals(a: Vec2, b: Vec2): boolean {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Vec2, b: Vec2, t: number, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nexport function lerpV(a: Vec2, b: Vec2, t: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nexport function max(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nexport function min(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function mulScalar(v: Vec2, k: number, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function divScalar(v: Vec2, k: number, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n\n  return dst;\n}\n\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport function inverse(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = 1 / v[0];\n  dst[1] = 1 / v[1];\n\n  return dst;\n}\n\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport const invert = inverse;\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nexport function cross(a: Vec2, b: Vec2, dst?: Vec3): Vec3 {\n  dst = dst || new Vec3Type(3);\n  const z = a[0] * b[1] - a[1] * b[0];\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = z;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nexport function dot(a: Vec2, b: Vec2): number {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nexport function length(v: Vec2): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  return Math.sqrt(v0 * v0 + v1 * v1);\n}\n\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport function lengthSq(v: Vec2): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  return v0 * v0 + v1 * v1;\n}\n\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport function distance(a: Vec2, b: Vec2): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport const dist = distance;\n\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport function distanceSq(a: Vec2, b: Vec2): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport const distSq = distanceSq;\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nexport function normalize(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const len = Math.sqrt(v0 * v0 + v1 * v1);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nexport function negate(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n\n  return dst;\n}\n\n/**\n * Copies a vector. (same as {@link vec2.clone})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport function copy(v: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n\n  return dst;\n}\n\n/**\n * Clones a vector. (same as {@link vec2.copy})\n * Also see {@link vec2.create} and {@link vec2.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport const clone = copy;\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport function multiply(a: Vec2, b: Vec2, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport function divide(a: Vec2, b: Vec2, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport const div = divide;\n\n/**\n * Creates a random unit vector * scale\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nexport function random(scale = 1, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const angle = Math.random() * 2 * Math.PI;\n  dst[0] = Math.cos(angle) * scale;\n  dst[1] = Math.sin(angle) * scale;\n\n  return dst;\n}\n\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nexport function zero(dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  dst[0] = 0;\n  dst[1] = 0;\n\n  return dst;\n}\n\n\n/**\n * transform Vec2 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat4(v: Vec2, m: Mat4, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const x = v[0];\n  const y = v[1];\n\n  dst[0] = x * m[0] + y * m[4] + m[12];\n  dst[1] = x * m[1] + y * m[5] + m[13];\n\n  return dst;\n}\n\n/**\n * Transforms vec4 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional Vec2 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat3(v: Vec2, m: Mat3, dst?: Vec2): Vec2 {\n  dst = dst || new VecType(2);\n\n  const x = v[0];\n  const y = v[1];\n\n  dst[0] = m[0] * x + m[4] * y + m[8];\n  dst[1] = m[1] * x + m[5] * y + m[9];\n\n  return dst;\n}\n\n/**\n * Rotate a 2D vector\n *\n * @param a The vec2 point to rotate\n * @param b The origin of the rotation\n * @param rad The angle of rotation in radians\n * @returns the rotated vector\n */\nexport function rotate(a: Vec2, b: Vec2, rad: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  // Translate point to the origin\n  const p0 = a[0] - b[0];\n  const p1 = a[1] - b[1];\n  const sinC = Math.sin(rad);\n  const cosC = Math.cos(rad);\n\n  //perform rotation and translate to correct position\n  dst[0] = p0 * cosC - p1 * sinC + b[0];\n  dst[1] = p0 * sinC + p1 * cosC + b[1];\n\n  return dst;\n}\n\n/**\n * Treat a 2D vector as a direction and set it's length\n *\n * @param a The vec2 to lengthen\n * @param len The length of the resulting vector\n * @returns The lengthened vector\n */\nexport function setLength(a: Vec2, len: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n  normalize(a, dst);\n  return mulScalar(dst, len, dst);\n}\n\n/**\n * Ensure a vector is not longer than a max length\n *\n * @param a The vec2 to limit\n * @param maxLen The longest length of the resulting vector\n * @returns The vector, shortened to maxLen if it's too long\n */\nexport function truncate(a: Vec2, maxLen: number, dst?: Vec2) {\n  dst = dst || new VecType(2);\n\n  if (length(a) > maxLen) {\n    return setLength(a, maxLen, dst);\n  }\n\n  return copy(a, dst);\n}\n\n/**\n * Return the vector exactly between 2 endpoint vectors\n *\n * @param a Endpoint 1\n * @param b Endpoint 2\n * @returns The vector exactly residing between endpoints 1 and 2\n */\nexport function midpoint(a: Vec2, b: Vec2, dst?: Vec2) {\n  dst = dst || new VecType(2);\n  return lerp(a, b, 0.5, dst);\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as utils from './utils.js';\nimport { Quat } from './quat';\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport Vec2, * as vec2 from './vec2-impl';\n\nexport default Mat3;\n\nexport type Mat3LikeCtor = new (n: number) => Mat3;\n\n/**\n * 3x3 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat3.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat3.create();\n *     mat3.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat3.identity();\n *     const trans = mat3.translation([1, 2, 3]);\n *     mat3.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType: Mat3LikeCtor = Float32Array;\n\n// This mess is because with Mat3 we have 3 unused elements.\n// For Float32Array and Float64Array that's not an issue\n// but for Array it's troublesome\nconst ctorMap = new Map<Mat3LikeCtor,() => Mat3>([\n  [Float32Array, () => new Float32Array(12)],\n  [Float64Array, () => new Float64Array(12)],\n  [Array, () => new Array(12).fill(0)],\n]);\nlet newMat3: () => Mat3 = ctorMap.get(Float32Array)!;\n\n/**\n * Sets the type this library creates for a Mat3\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat3\n */\nexport function setDefaultType(ctor: new (n: number) => Mat3) {\n  const oldType = MatType;\n  MatType = ctor;\n  newMat3 = ctorMap.get(ctor)!;\n  return oldType;\n}\n\n/**\n * Create a Mat3 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat3's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat3.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat3Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat3.create` is usually used\n * to create a Mat3 to be filled out as in\n *\n * ```\n * const m = mat3.create();\n * mat3.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @returns matrix created from values.\n */\nexport function create(\n    v0?: number, v1?: number, v2?: number,\n    v3?: number, v4?: number, v5?: number,\n    v6?: number, v7?: number, v8?: number): Mat3 {\n  const dst = newMat3();\n  // to make the array homogenous\n  dst[3] = 0;\n  dst[7] = 0;\n  dst[11] = 0;\n\n  if (v0 !== undefined) {\n    dst[0] = v0;\n    if (v1 !== undefined) {\n      dst[1] = v1;\n      if (v2 !== undefined) {\n        dst[2] = v2;\n        if (v3 !== undefined) {\n          dst[4] = v3;\n          if (v4 !== undefined) {\n            dst[5] = v4;\n            if (v5 !== undefined) {\n              dst[6] = v5;\n              if (v6 !== undefined) {\n                dst[8] = v6;\n                if (v7 !== undefined) {\n                  dst[9] = v7;\n                  if (v8 !== undefined) {\n                    dst[10] = v8;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Sets the values of a Mat3\n * Also see {@link mat3.create} and {@link mat3.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 set from values.\n */\nexport function set(\n    v0: number, v1: number, v2: number,\n    v3: number, v4: number, v5: number,\n    v6: number, v7: number, v8: number, dst?: Mat3) {\n  dst = dst || newMat3();\n\n  dst[0] = v0;  dst[1] = v1;  dst[ 2] = v2;  dst[ 3] = 0;\n  dst[4] = v3;  dst[5] = v4;  dst[ 6] = v5;  dst[ 7] = 0;\n  dst[8] = v6;  dst[9] = v7;  dst[10] = v8;  dst[11] = 0;\n\n  return dst;\n}\n\n/**\n * Creates a Mat3 from the upper left 3x3 part of a Mat4\n * @param m4 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from m4\n */\nexport function fromMat4(m4: Mat4, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n  dst[0] = m4[0];  dst[1] = m4[1];  dst[ 2] = m4[ 2];  dst[ 3] = 0;\n  dst[4] = m4[4];  dst[5] = m4[5];  dst[ 6] = m4[ 6];  dst[ 7] = 0;\n  dst[8] = m4[8];  dst[9] = m4[9];  dst[10] = m4[10];  dst[11] = 0;\n  return dst;\n}\n\n/**\n * Creates a Mat3 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat3 made from q\n */\nexport function fromQuat(q: Quat, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const x = q[0]; const y = q[1]; const z = q[2]; const w = q[3];\n  const x2 = x + x; const y2 = y + y; const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  dst[ 0] = 1 - yy - zz;  dst[ 1] = yx + wz;      dst[ 2] = zx - wy;      dst[ 3] = 0;\n  dst[ 4] = yx - wz;      dst[ 5] = 1 - xx - zz;  dst[ 6] = zy + wx;      dst[ 7] = 0;\n  dst[ 8] = zx + wy;      dst[ 9] = zy - wx;      dst[10] = 1 - xx - yy;  dst[11] = 0;\n\n  return dst;\n}\n\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nexport function negate(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = -m[ 0];  dst[ 1] = -m[ 1];  dst[ 2] = -m[ 2];\n  dst[ 4] = -m[ 4];  dst[ 5] = -m[ 5];  dst[ 6] = -m[ 6];\n  dst[ 8] = -m[ 8];  dst[ 9] = -m[ 9];  dst[10] = -m[10];\n\n  return dst;\n}\n\n/**\n * Copies a matrix. (same as {@link mat3.clone})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport function copy(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = m[ 0];  dst[ 1] = m[ 1];  dst[ 2] = m[ 2];\n  dst[ 4] = m[ 4];  dst[ 5] = m[ 5];  dst[ 6] = m[ 6];\n  dst[ 8] = m[ 8];  dst[ 9] = m[ 9];  dst[10] = m[10];\n\n  return dst;\n}\n\n/**\n * Copies a matrix (same as {@link mat3.copy})\n * Also see {@link mat3.create} and {@link mat3.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport const clone = copy;\n\n/**\n * Check if 2 matrices are approximately equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are approximately equal\n */\nexport function equalsApproximately(a: Mat3, b: Mat3): boolean {\n  return Math.abs(a[ 0] - b[ 0]) < utils.EPSILON &&\n         Math.abs(a[ 1] - b[ 1]) < utils.EPSILON &&\n         Math.abs(a[ 2] - b[ 2]) < utils.EPSILON &&\n         Math.abs(a[ 4] - b[ 4]) < utils.EPSILON &&\n         Math.abs(a[ 5] - b[ 5]) < utils.EPSILON &&\n         Math.abs(a[ 6] - b[ 6]) < utils.EPSILON &&\n         Math.abs(a[ 8] - b[ 8]) < utils.EPSILON &&\n         Math.abs(a[ 9] - b[ 9]) < utils.EPSILON &&\n         Math.abs(a[10] - b[10]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 matrices are exactly equal\n * @param a Operand matrix.\n * @param b Operand matrix.\n * @returns true if matrices are exactly equal\n */\nexport function equals(a: Mat3, b: Mat3): boolean {\n  return a[ 0] === b[ 0] &&\n         a[ 1] === b[ 1] &&\n         a[ 2] === b[ 2] &&\n         a[ 4] === b[ 4] &&\n         a[ 5] === b[ 5] &&\n         a[ 6] === b[ 6] &&\n         a[ 8] === b[ 8] &&\n         a[ 9] === b[ 9] &&\n         a[10] === b[10];\n}\n\n/**\n * Creates a 3-by-3 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 3-by-3 identity matrix.\n */\nexport function identity(dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = 1;  dst[ 1] = 0;  dst[ 2] = 0;\n  dst[ 4] = 0;  dst[ 5] = 1;  dst[ 6] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nexport function transpose(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n  if (dst === m) {\n    let t: number;\n\n    // 0 1 2\n    // 4 5 6\n    // 8 9 10\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  dst[ 0] = m00;  dst[ 1] = m10;  dst[ 2] = m20;\n  dst[ 4] = m01;  dst[ 5] = m11;  dst[ 6] = m21;\n  dst[ 8] = m02;  dst[ 9] = m12;  dst[10] = m22;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 3-by-3 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport function inverse(m: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  const b01 =  m22 * m11 - m12 * m21;\n  const b11 = -m22 * m10 + m12 * m20;\n  const b21 =  m21 * m10 - m11 * m20;\n\n  const invDet = 1 / (m00 * b01 + m01 * b11 + m02 * b21);\n\n  dst[ 0] = b01 * invDet;\n  dst[ 1] = (-m22 * m01 + m02 * m21) * invDet;\n  dst[ 2] = ( m12 * m01 - m02 * m11) * invDet;\n  dst[ 4] = b11 * invDet;\n  dst[ 5] = ( m22 * m00 - m02 * m20) * invDet;\n  dst[ 6] = (-m12 * m00 + m02 * m10) * invDet;\n  dst[ 8] = b21 * invDet;\n  dst[ 9] = (-m21 * m00 + m01 * m20) * invDet;\n  dst[10] = ( m11 * m00 - m01 * m10) * invDet;\n\n  return dst;\n}\n\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nexport function determinant(m: Mat3): number {\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  return m00 * (m11 * m22 - m21 * m12) -\n         m10 * (m01 * m22 - m21 * m02) +\n         m20 * (m01 * m12 - m11 * m02);\n}\n\n/**\n * Computes the inverse of a 3-by-3 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport const invert = inverse;\n\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport function multiply(a: Mat3, b: Mat3, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\n  return dst;\n}\n\n/**\n * Multiplies two 3-by-3 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Sets the translation component of a 3-by-3 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nexport function setTranslation(a: Mat3, v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n  }\n  dst[ 8] = v[0];\n  dst[ 9] = v[1];\n  dst[10] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 3-by-3 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nexport function getTranslation(m: Mat3, dst?: Vec2): Vec2 {\n  dst = dst || vec2.create();\n  dst[0] = m[8];\n  dst[1] = m[9];\n  return dst;\n}\n\n/**\n * Returns an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y,\n * @returns The axis component of m.\n */\nexport function getAxis(m: Mat3, axis: number, dst?: Vec2): Vec2 {\n  dst = dst || vec2.create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  return dst;\n}\n\n/**\n * Sets an axis of a 3x3 matrix as a vector with 2 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nexport function setAxis(m: Mat3, v: Vec2, axis: number, dst?: Mat3): Mat3 {\n  if (dst !== m) {\n    dst = copy(m, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  return dst;\n}\n\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nexport function getScaling(m: Mat3, dst?: Vec2): Vec2 {\n  dst = dst || vec2.create();\n\n  const xx = m[0];\n  const xy = m[1];\n  const yx = m[4];\n  const yy = m[5];\n\n  dst[0] = Math.sqrt(xx * xx + xy * xy);\n  dst[1] = Math.sqrt(yx * yx + yy * yy);\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which translates by the given vector v.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nexport function translation(v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = 1;     dst[ 1] = 0;     dst[ 2] = 0;\n  dst[ 4] = 0;     dst[ 5] = 1;     dst[ 6] = 0;\n  dst[ 8] = v[0];  dst[ 9] = v[1];  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Translates the given 3-by-3 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nexport function translate(m: Mat3, v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const v0 = v[0];\n  const v1 = v[1];\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n  }\n\n  dst[ 8] = m00 * v0 + m10 * v1 + m20;\n  dst[ 9] = m01 * v0 + m11 * v1 + m21;\n  dst[10] = m02 * v0 + m12 * v1 + m22;\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which rotates  by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotation(angleInRadians: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] =  c;  dst[ 1] = s;  dst[ 2] = 0;\n  dst[ 4] = -s;  dst[ 5] = c;  dst[ 6] = 0;\n  dst[ 8] =  0;  dst[ 9] = 0;  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 3-by-3 matrix  by the given angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotate(m: Mat3, angleInRadians: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     2 entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function scaling(v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = v[0];  dst[ 1] = 0;     dst[ 2] = 0;\n  dst[ 4] = 0;     dst[ 5] = v[1];  dst[ 6] = 0;\n  dst[ 8] = 0;     dst[ 9] = 0;     dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of 2 entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function scale(m: Mat3, v: Vec2, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  const v0 = v[0];\n  const v1 = v[1];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 3-by-3 matrix which scales uniformly in each dimension\n * @param s - Amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function uniformScaling(s: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = s;  dst[ 1] = 0;  dst[ 2] = 0;\n  dst[ 4] = 0;  dst[ 5] = s;  dst[ 6] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 3-by-3 matrix in each dimension by an amount\n * given.\n * @param m - The matrix to be modified.\n * @param s - Amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function uniformScale(m: Mat3, s: number, dst?: Mat3): Mat3 {\n  dst = dst || newMat3();\n\n  dst[ 0] = s * m[0 * 4 + 0];\n  dst[ 1] = s * m[0 * 4 + 1];\n  dst[ 2] = s * m[0 * 4 + 2];\n\n  dst[ 4] = s * m[1 * 4 + 0];\n  dst[ 5] = s * m[1 * 4 + 1];\n  dst[ 6] = s * m[1 * 4 + 2];\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n  }\n\n  return dst;\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Vec3, create, setDefaultType, VecType } from './vec3';\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport { Quat } from './quat';\n\nexport default Vec3;\nexport { create, setDefaultType };\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Vec3\n * Also see {@link vec3.create} and {@link vec3.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, z: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  dst[0] = x;\n  dst[1] = y;\n  dst[2] = z;\n\n  return dst;\n}\n\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nexport function ceil(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.ceil(v[0]);\n  dst[1] = Math.ceil(v[1]);\n  dst[2] = Math.ceil(v[2]);\n\n  return dst;\n}\n\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nexport function floor(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.floor(v[0]);\n  dst[1] = Math.floor(v[1]);\n  dst[2] = Math.floor(v[2]);\n\n  return dst;\n}\n\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nexport function round(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.round(v[0]);\n  dst[1] = Math.round(v[1]);\n  dst[2] = Math.round(v[2]);\n\n  return dst;\n}\n\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nexport function clamp(v: Vec3, min = 0, max = 1, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(max, Math.max(min, v[0]));\n  dst[1] = Math.min(max, Math.max(min, v[1]));\n  dst[2] = Math.min(max, Math.max(min, v[2]));\n\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nexport function add(a: Vec3, b: Vec3, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nexport function addScaled(a: Vec3, b: Vec3, scale: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0] * scale;\n  dst[1] = a[1] + b[1] * scale;\n  dst[2] = a[2] + b[2] * scale;\n\n  return dst;\n}\n\n/**\n * Returns the angle in radians between two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns The angle in radians between the 2 vectors.\n */\nexport function angle(a: Vec3, b: Vec3): number {\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n  const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);\n  const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);\n  const mag = mag1 * mag2;\n  const cosine = mag && dot(a, b) / mag;\n  return Math.acos(cosine);\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport function subtract(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nexport function equalsApproximately(a: Vec3, b: Vec3): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON &&\n         Math.abs(a[2] - b[2]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nexport function equals(a: Vec3, b: Vec3): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Vec3, b: Vec3, t: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nexport function lerpV(a: Vec3, b: Vec3, t: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nexport function max(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nexport function min(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function mulScalar(v: Vec3, k: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function divScalar(v: Vec3, k: number, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport function inverse(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = 1 / v[0];\n  dst[1] = 1 / v[1];\n  dst[2] = 1 / v[2];\n\n  return dst;\n}\n\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport const invert = inverse;\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of a cross b.\n */\nexport function cross(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nexport function dot(a: Vec3, b: Vec3): number {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nexport function length(v: Vec3): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n}\n\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport function lengthSq(v: Vec3): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  return v0 * v0 + v1 * v1 + v2 * v2;\n}\n\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport function distance(a: Vec3, b: Vec3): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport const dist = distance;\n\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport function distanceSq(a: Vec3, b: Vec3): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport const distSq = distanceSq;\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nexport function normalize(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n    dst[2] = v2 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nexport function negate(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector. (same as {@link vec3.clone})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport function copy(v: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Clones a vector. (same as {@link vec3.copy})\n * Also see {@link vec3.create} and {@link vec3.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport const clone = copy;\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport function multiply(a: Vec3, b: Vec3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport function divide(a: Vec3, b: Vec3, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport const div = divide;\n\n/**\n * Creates a random vector\n * @param scale - Default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The random vector.\n */\nexport function random(scale = 1, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const angle = Math.random() * 2 * Math.PI;\n  const z = Math.random() * 2 - 1;\n  const zScale = Math.sqrt(1 - z * z) * scale;\n  dst[0] = Math.cos(angle) * zScale;\n  dst[1] = Math.sin(angle) * zScale;\n  dst[2] = z * scale;\n\n  return dst;\n}\n\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nexport function zero(dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = 0;\n\n  return dst;\n}\n\n\n/**\n * transform vec3 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat4(v: Vec3, m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n  const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1;\n\n  dst[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  dst[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  dst[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\n  return dst;\n}\n\n/**\n * Transform vec4 by upper 3x3 matrix inside 4x4 matrix.\n * @param v - The direction.\n * @param m - The matrix.\n * @param dst - optional Vec3 to store result. If not passed a new one is created.\n * @returns The transformed vector.\n */\nexport function transformMat4Upper3x3(v: Vec3, m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Transforms vec3 by 3x3 matrix\n *\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat3(v: Vec3, m: Mat3, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n\n  dst[0] = x * m[0] + y * m[4] + z * m[8];\n  dst[1] = x * m[1] + y * m[5] + z * m[9];\n  dst[2] = x * m[2] + y * m[6] + z * m[10];\n\n  return dst;\n}\n\n/**\n * Transforms vec3 by Quaternion\n * @param v - the vector to transform\n * @param q - the quaternion to transform by\n * @param dst - optional vec3 to store result. If not passed a new one is created.\n * @returns the transformed\n */\nexport function transformQuat(v: Vec3, q: Quat, dst?: Vec3): Vec3 {\n  dst = dst || new VecType(3);\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const w2 = q[3] * 2;\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n\n  const uvX = qy * z - qz * y;\n  const uvY = qz * x - qx * z;\n  const uvZ = qx * y - qy * x;\n\n  dst[0] = x + uvX * w2 + (qy * uvZ - qz * uvY) * 2;\n  dst[1] = y + uvY * w2 + (qz * uvX - qx * uvZ) * 2;\n  dst[2] = z + uvZ * w2 + (qx * uvY - qy * uvX) * 2;\n\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nexport function getTranslation(m: Mat3, dst?: Vec3) {\n    dst = dst || new VecType(3);\n    dst[0] = m[12];\n    dst[1] = m[13];\n    dst[2] = m[14];\n    return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nexport function getAxis(m: Mat4, axis: number, dst?: Vec3) {\n    dst = dst || new VecType(3);\n    const off = axis * 4;\n    dst[0] = m[off + 0];\n    dst[1] = m[off + 1];\n    dst[2] = m[off + 2];\n    return dst;\n}\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nexport function getScaling(m: Mat4, dst: Vec3) {\n    dst = dst || new VecType(3);\n    const xx = m[0];\n    const xy = m[1];\n    const xz = m[2];\n    const yx = m[4];\n    const yy = m[5];\n    const yz = m[6];\n    const zx = m[8];\n    const zy = m[9];\n    const zz = m[10];\n    dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n    dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n    dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n    return dst;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n *\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @param dst - The vector to set. If not passed a new one is created.\n * @returns the rotated vector\n */\nexport function rotateX(a: Vec3, b: Vec3, rad: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  const p = [];\n  const r = [];\n\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad);\n\n  //translate to correct position\n  dst[0] = r[0] + b[0];\n  dst[1] = r[1] + b[1];\n  dst[2] = r[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n *\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @param dst - The vector to set. If not passed a new one is created.\n * @returns the rotated vector\n */\nexport function rotateY(a: Vec3, b: Vec3, rad: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  const p = [];\n  const r = [];\n\n  // translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad);\n\n  // translate to correct position\n  dst[0] = r[0] + b[0];\n  dst[1] = r[1] + b[1];\n  dst[2] = r[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n *\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @param dst - The vector to set. If not passed a new one is created.\n * @returns {vec3} out\n */\nexport function rotateZ(a: Vec3, b: Vec3, rad: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  const p = [];\n  const r = [];\n\n  // translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  // perform rotation\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2];\n\n  // translate to correct position\n  dst[0] = r[0] + b[0];\n  dst[1] = r[1] + b[1];\n  dst[2] = r[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Treat a 3D vector as a direction and set it's length\n *\n * @param a The vec3 to lengthen\n * @param len The length of the resulting vector\n * @returns The lengthened vector\n */\nexport function setLength(a: Vec3, len: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  normalize(a, dst);\n  return mulScalar(dst, len, dst);\n}\n\n/**\n * Ensure a vector is not longer than a max length\n *\n * @param a The vec3 to limit\n * @param maxLen The longest length of the resulting vector\n * @returns The vector, shortened to maxLen if it's too long\n */\nexport function truncate(a: Vec3, maxLen: number, dst?: Vec3) {\n  dst = dst || new VecType(3);\n\n  if (length(a) > maxLen) {\n    return setLength(a, maxLen, dst);\n  }\n\n  return copy(a, dst);\n}\n\n/**\n * Return the vector exactly between 2 endpoint vectors\n *\n * @param a Endpoint 1\n * @param b Endpoint 2\n * @returns The vector exactly residing between endpoints 1 and 2\n */\nexport function midpoint(a: Vec3, b: Vec3, dst?: Vec3) {\n  dst = dst || new VecType(3);\n  return lerp(a, b, 0.5, dst);\n}\n", "\nimport { Mat3 } from './mat3';\nimport { Mat4 } from './mat4';\nimport { Quat } from './quat';\nimport Vec3, * as vec3 from './vec3-impl';\nimport * as utils from './utils';\n\nexport default Mat4;\n\nexport type Mat4LikeCtor = new (n: number) => Mat4;\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = mat4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = mat4.create();\n *     mat4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = mat4.identity();\n *     const trans = mat4.translation([1, 2, 3]);\n *     mat4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n */\nlet MatType: Mat4LikeCtor = Float32Array;\n\n/**\n * Sets the type this library creates for a Mat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Mat4\n */\nexport function setDefaultType(ctor: new (n: number) => Mat4) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Create a Mat4 from values\n *\n * Note: Since passing in a raw JavaScript array\n * is valid in all circumstances, if you want to\n * force a JavaScript array into a Mat4's specified type\n * it would be faster to use\n *\n * ```\n * const m = mat4.clone(someJSArray);\n * ```\n *\n * Note: a consequence of the implementation is if your Mat4Type = `Array`\n * instead of `Float32Array` or `Float64Array` then any values you\n * don't pass in will be undefined. Usually this is not an issue since\n * (a) using `Array` is rare and (b) using `mat4.create` is usually used\n * to create a Mat4 to be filled out as in\n *\n * ```\n * const m = mat4.create();\n * mat4.perspective(fov, aspect, near, far, m);\n * ```\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @returns created from values.\n */\nexport function create(\n    v0?: number, v1?: number, v2?: number, v3?: number,\n    v4?: number, v5?: number, v6?: number, v7?: number,\n    v8?: number, v9?: number, v10?: number, v11?: number,\n    v12?: number, v13?: number, v14?: number, v15?: number): Mat4 {\n  const dst = new MatType(16);\n  if (v0 !== undefined) {\n    dst[0] = v0;\n    if (v1 !== undefined) {\n      dst[1] = v1;\n      if (v2 !== undefined) {\n        dst[2] = v2;\n        if (v3 !== undefined) {\n          dst[3] = v3;\n          if (v4 !== undefined) {\n            dst[4] = v4;\n            if (v5 !== undefined) {\n              dst[5] = v5;\n              if (v6 !== undefined) {\n                dst[6] = v6;\n                if (v7 !== undefined) {\n                  dst[7] = v7;\n                  if (v8 !== undefined) {\n                    dst[8] = v8;\n                    if (v9 !== undefined) {\n                      dst[9] = v9;\n                      if (v10 !== undefined) {\n                        dst[10] = v10;\n                        if (v11 !== undefined) {\n                          dst[11] = v11;\n                          if (v12 !== undefined) {\n                            dst[12] = v12;\n                            if (v13 !== undefined) {\n                              dst[13] = v13;\n                              if (v14 !== undefined) {\n                                dst[14] = v14;\n                                if (v15 !== undefined) {\n                                  dst[15] = v15;\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return dst;\n}\n\n/**\n * Sets the values of a Mat4\n * Also see {@link mat4.create} and {@link mat4.copy}\n *\n * @param v0 - value for element 0\n * @param v1 - value for element 1\n * @param v2 - value for element 2\n * @param v3 - value for element 3\n * @param v4 - value for element 4\n * @param v5 - value for element 5\n * @param v6 - value for element 6\n * @param v7 - value for element 7\n * @param v8 - value for element 8\n * @param v9 - value for element 9\n * @param v10 - value for element 10\n * @param v11 - value for element 11\n * @param v12 - value for element 12\n * @param v13 - value for element 13\n * @param v14 - value for element 14\n * @param v15 - value for element 15\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 created from values.\n */\nexport function set(\n    v0: number, v1: number, v2: number, v3: number,\n    v4: number, v5: number, v6: number, v7: number,\n    v8: number, v9: number, v10: number, v11: number,\n    v12: number, v13: number, v14: number, v15: number,\n    dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v0;   dst[ 1] = v1;   dst[ 2] = v2;   dst[ 3] = v3;\n  dst[ 4] = v4;   dst[ 5] = v5;   dst[ 6] = v6;   dst[ 7] = v7;\n  dst[ 8] = v8;   dst[ 9] = v9;   dst[10] = v10;  dst[11] = v11;\n  dst[12] = v12;  dst[13] = v13;  dst[14] = v14;  dst[15] = v15;\n\n  return dst;\n}\n\n/**\n * Creates a Mat4 from a Mat3\n * @param m3 - source matrix\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from m3\n */\nexport function fromMat3(m3: Mat3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m3[0];  dst[ 1] = m3[1];  dst[ 2] = m3[ 2];  dst[ 3] = 0;\n  dst[ 4] = m3[4];  dst[ 5] = m3[5];  dst[ 6] = m3[ 6];  dst[ 7] = 0;\n  dst[ 8] = m3[8];  dst[ 9] = m3[9];  dst[10] = m3[10];  dst[11] = 0;\n  dst[12] = 0;      dst[13] = 0;      dst[14] = 0;       dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a Mat4 rotation matrix from a quaternion\n * @param q - quaternion to create matrix from\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns Mat4 made from q\n */\nexport function fromQuat(q: Quat, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const x = q[0]; const y = q[1]; const z = q[2]; const w = q[3];\n  const x2 = x + x; const y2 = y + y; const z2 = z + z;\n\n  const xx = x * x2;\n  const yx = y * x2;\n  const yy = y * y2;\n  const zx = z * x2;\n  const zy = z * y2;\n  const zz = z * z2;\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  dst[ 0] = 1 - yy - zz;  dst[ 1] = yx + wz;      dst[ 2] = zx - wy;      dst[ 3] = 0;\n  dst[ 4] = yx - wz;      dst[ 5] = 1 - xx - zz;  dst[ 6] = zy + wx;      dst[ 7] = 0;\n  dst[ 8] = zx + wy;      dst[ 9] = zy - wx;      dst[10] = 1 - xx - yy;  dst[11] = 0;\n  dst[12] = 0;            dst[13] = 0;            dst[14] = 0;            dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Negates a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns -m.\n */\nexport function negate(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];  dst[ 1] = -m[ 1];  dst[ 2] = -m[ 2];  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];  dst[ 5] = -m[ 5];  dst[ 6] = -m[ 6];  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];  dst[ 9] = -m[ 9];  dst[10] = -m[10];  dst[11] = -m[11];\n  dst[12] = -m[12];  dst[13] = -m[13];  dst[14] = -m[14];  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix. (same as {@link mat4.clone})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport function copy(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];  dst[ 1] = m[ 1];  dst[ 2] = m[ 2];  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];  dst[ 5] = m[ 5];  dst[ 6] = m[ 6];  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];  dst[ 9] = m[ 9];  dst[10] = m[10];  dst[11] = m[11];\n  dst[12] = m[12];  dst[13] = m[13];  dst[14] = m[14];  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Copies a matrix (same as {@link mat4.copy})\n * Also see {@link mat4.create} and {@link mat4.set}\n * @param m - The matrix.\n * @param dst - The matrix. If not passed a new one is created.\n * @returns A copy of m.\n */\nexport const clone = copy;\n\n/**\n * Check if 2 matrices are approximately equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are approximately equal\n */\nexport function equalsApproximately(a: Mat4, b: Mat4): boolean {\n  return Math.abs(a[ 0] - b[ 0]) < utils.EPSILON &&\n         Math.abs(a[ 1] - b[ 1]) < utils.EPSILON &&\n         Math.abs(a[ 2] - b[ 2]) < utils.EPSILON &&\n         Math.abs(a[ 3] - b[ 3]) < utils.EPSILON &&\n         Math.abs(a[ 4] - b[ 4]) < utils.EPSILON &&\n         Math.abs(a[ 5] - b[ 5]) < utils.EPSILON &&\n         Math.abs(a[ 6] - b[ 6]) < utils.EPSILON &&\n         Math.abs(a[ 7] - b[ 7]) < utils.EPSILON &&\n         Math.abs(a[ 8] - b[ 8]) < utils.EPSILON &&\n         Math.abs(a[ 9] - b[ 9]) < utils.EPSILON &&\n         Math.abs(a[10] - b[10]) < utils.EPSILON &&\n         Math.abs(a[11] - b[11]) < utils.EPSILON &&\n         Math.abs(a[12] - b[12]) < utils.EPSILON &&\n         Math.abs(a[13] - b[13]) < utils.EPSILON &&\n         Math.abs(a[14] - b[14]) < utils.EPSILON &&\n         Math.abs(a[15] - b[15]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 matrices are exactly equal\n * @param a - Operand matrix.\n * @param b - Operand matrix.\n * @returns true if matrices are exactly equal\n */\nexport function equals(a: Mat4, b: Mat4): boolean {\n  return a[ 0] === b[ 0] &&\n         a[ 1] === b[ 1] &&\n         a[ 2] === b[ 2] &&\n         a[ 3] === b[ 3] &&\n         a[ 4] === b[ 4] &&\n         a[ 5] === b[ 5] &&\n         a[ 6] === b[ 6] &&\n         a[ 7] === b[ 7] &&\n         a[ 8] === b[ 8] &&\n         a[ 9] === b[ 9] &&\n         a[10] === b[10] &&\n         a[11] === b[11] &&\n         a[12] === b[12] &&\n         a[13] === b[13] &&\n         a[14] === b[14] &&\n         a[15] === b[15];\n}\n\n/**\n * Creates a 4-by-4 identity matrix.\n *\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A 4-by-4 identity matrix.\n */\nexport function identity(dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;  dst[ 1] = 0;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] = 1;  dst[ 6] = 0;  dst[ 7] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = 1;  dst[11] = 0;\n  dst[12] = 0;  dst[13] = 0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The transpose of m.\n */\nexport function transpose(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;  dst[ 1] = m10;  dst[ 2] = m20;  dst[ 3] = m30;\n  dst[ 4] = m01;  dst[ 5] = m11;  dst[ 6] = m21;  dst[ 7] = m31;\n  dst[ 8] = m02;  dst[ 9] = m12;  dst[10] = m22;  dst[11] = m32;\n  dst[12] = m03;  dst[13] = m13;  dst[14] = m23;  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport function inverse(m: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp0  = m22 * m33;\n  const tmp1  = m32 * m23;\n  const tmp2  = m12 * m33;\n  const tmp3  = m32 * m13;\n  const tmp4  = m12 * m23;\n  const tmp5  = m22 * m13;\n  const tmp6  = m02 * m33;\n  const tmp7  = m32 * m03;\n  const tmp8  = m02 * m23;\n  const tmp9  = m22 * m03;\n  const tmp10 = m02 * m13;\n  const tmp11 = m12 * m03;\n  const tmp12 = m20 * m31;\n  const tmp13 = m30 * m21;\n  const tmp14 = m10 * m31;\n  const tmp15 = m30 * m11;\n  const tmp16 = m10 * m21;\n  const tmp17 = m20 * m11;\n  const tmp18 = m00 * m31;\n  const tmp19 = m30 * m01;\n  const tmp20 = m00 * m21;\n  const tmp21 = m20 * m01;\n  const tmp22 = m00 * m11;\n  const tmp23 = m10 * m01;\n\n  const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n      (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n  const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n      (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n  const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n      (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n  const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n      (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n\n  const d = 1 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp1 * m10 + tmp2 * m20 + tmp5 * m30) -\n          (tmp0 * m10 + tmp3 * m20 + tmp4 * m30));\n  dst[ 5] = d * ((tmp0 * m00 + tmp7 * m20 + tmp8 * m30) -\n          (tmp1 * m00 + tmp6 * m20 + tmp9 * m30));\n  dst[ 6] = d * ((tmp3 * m00 + tmp6 * m10 + tmp11 * m30) -\n          (tmp2 * m00 + tmp7 * m10 + tmp10 * m30));\n  dst[ 7] = d * ((tmp4 * m00 + tmp9 * m10 + tmp10 * m20) -\n          (tmp5 * m00 + tmp8 * m10 + tmp11 * m20));\n  dst[ 8] = d * ((tmp12 * m13 + tmp15 * m23 + tmp16 * m33) -\n          (tmp13 * m13 + tmp14 * m23 + tmp17 * m33));\n  dst[ 9] = d * ((tmp13 * m03 + tmp18 * m23 + tmp21 * m33) -\n          (tmp12 * m03 + tmp19 * m23 + tmp20 * m33));\n  dst[10] = d * ((tmp14 * m03 + tmp19 * m13 + tmp22 * m33) -\n          (tmp15 * m03 + tmp18 * m13 + tmp23 * m33));\n  dst[11] = d * ((tmp17 * m03 + tmp20 * m13 + tmp23 * m23) -\n          (tmp16 * m03 + tmp21 * m13 + tmp22 * m23));\n  dst[12] = d * ((tmp14 * m22 + tmp17 * m32 + tmp13 * m12) -\n          (tmp16 * m32 + tmp12 * m12 + tmp15 * m22));\n  dst[13] = d * ((tmp20 * m32 + tmp12 * m02 + tmp19 * m22) -\n          (tmp18 * m22 + tmp21 * m32 + tmp13 * m02));\n  dst[14] = d * ((tmp18 * m12 + tmp23 * m32 + tmp15 * m02) -\n          (tmp22 * m32 + tmp14 * m02 + tmp19 * m12));\n  dst[15] = d * ((tmp22 * m22 + tmp16 * m02 + tmp21 * m12) -\n          (tmp20 * m12 + tmp23 * m22 + tmp17 * m02));\n\n  return dst;\n}\n\n/**\n * Compute the determinant of a matrix\n * @param m - the matrix\n * @returns the determinant\n */\nexport function determinant(m: Mat4): number {\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  const tmp0  = m22 * m33;\n  const tmp1  = m32 * m23;\n  const tmp2  = m12 * m33;\n  const tmp3  = m32 * m13;\n  const tmp4  = m12 * m23;\n  const tmp5  = m22 * m13;\n  const tmp6  = m02 * m33;\n  const tmp7  = m32 * m03;\n  const tmp8  = m02 * m23;\n  const tmp9  = m22 * m03;\n  const tmp10 = m02 * m13;\n  const tmp11 = m12 * m03;\n\n  const t0 = (tmp0 * m11 + tmp3 * m21 + tmp4 * m31) -\n             (tmp1 * m11 + tmp2 * m21 + tmp5 * m31);\n  const t1 = (tmp1 * m01 + tmp6 * m21 + tmp9 * m31) -\n             (tmp0 * m01 + tmp7 * m21 + tmp8 * m31);\n  const t2 = (tmp2 * m01 + tmp7 * m11 + tmp10 * m31) -\n             (tmp3 * m01 + tmp6 * m11 + tmp11 * m31);\n  const t3 = (tmp5 * m01 + tmp8 * m11 + tmp11 * m21) -\n             (tmp4 * m01 + tmp9 * m11 + tmp10 * m21);\n\n  return m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix. (same as inverse)\n * @param m - The matrix.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The inverse of m.\n */\nexport const invert = inverse;\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport function multiply(a: Mat4, b: Mat4, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right (same as multiply)\n * @param a - The matrix on the left.\n * @param b - The matrix on the right.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix product of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param a - The matrix.\n * @param v - The vector.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The matrix with translation set.\n */\nexport function setTranslation(a: Mat4, v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param m - The matrix.\n * @param dst - vector to hold result. If not passed a new one is created.\n * @returns The translation component of m.\n */\nexport function getTranslation(m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || vec3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param axis - The axis 0 = x, 1 = y, 2 = z;\n * @returns The axis component of m.\n */\nexport function getAxis(m: Mat4, axis: number, dst?: Vec3): Vec3 {\n  dst = dst || vec3.create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param m - The matrix.\n * @param v - the axis vector\n * @param axis - The axis  0 = x, 1 = y, 2 = z;\n * @param dst - The matrix to set. If not passed a new one is created.\n * @returns The matrix with axis set.\n */\nexport function setAxis(m: Mat4, v: Vec3, axis: number, dst: Mat4): Mat4 {\n  if (dst !== m) {\n    dst = copy(m, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Returns the scaling component of the matrix\n * @param m - The Matrix\n * @param dst - The vector to set. If not passed a new one is created.\n */\nexport function getScaling(m: Mat4, dst?: Vec3): Vec3 {\n  dst = dst || vec3.create();\n\n  const xx = m[0];\n  const xy = m[1];\n  const xz = m[2];\n  const yx = m[4];\n  const yy = m[5];\n  const yz = m[6];\n  const zx = m[8];\n  const zy = m[9];\n  const zz = m[10];\n\n  dst[0] = Math.sqrt(xx * xx + xy * xy + xz * xz);\n  dst[1] = Math.sqrt(yx * yx + yy * yy + yz * yz);\n  dst[2] = Math.sqrt(zx * zx + zy * zy + zz * zz);\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n *\n * Note: If you pass `Infinity` for zFar then it will produce a projection matrix\n * returns -Infinity for Z when transforming coordinates with Z <= 0 and +Infinity for Z\n * otherwise.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */\nexport function perspective(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[15] = 0;\n\n  if (Number.isFinite(zFar)) {\n    const rangeInv = 1 / (zNear - zFar);\n    dst[10] = zFar * rangeInv;\n    dst[14] = zFar * zNear * rangeInv;\n  } else {\n    dst[10] = -1;\n    dst[14] = -zNear;\n  }\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 reverse-z perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 1 (at -zNear) to 0 (at -zFar) in the z dimension.\n *\n * @param fieldOfViewYInRadians - The camera angle from top to bottom (in radians).\n * @param aspect - The aspect ratio width / height.\n * @param zNear - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param zFar - The depth (negative z coordinate)\n *     of the far clipping plane. (default = Infinity)\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The perspective matrix.\n */export function perspectiveReverseZ(fieldOfViewYInRadians: number, aspect: number, zNear: number, zFar = Infinity, dst?: Mat4) {\n  dst = dst || new MatType(16);\n\n  const f = 1 / Math.tan(fieldOfViewYInRadians * 0.5);\n\n  dst[ 0] = f / aspect;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n\n  dst[ 4] = 0;\n  dst[ 5] = f;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[15] = 0;\n\n  if (zFar === Infinity) {\n    dst[10] = 0;\n    dst[14] = zNear;\n  } else {\n    const rangeInv = 1 / (zFar - zNear);\n    dst[10] = zNear * rangeInv;\n    dst[14] = zFar * zNear * rangeInv;\n  }\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix that transforms from\n * the given the left, right, bottom, and top dimensions to -1 +1 in x, and y\n * and 0 to +1 in z.\n * @param left - Left side of the near clipping plane viewport.\n * @param right - Right side of the near clipping plane viewport.\n * @param bottom - Bottom of the near clipping plane viewport.\n * @param top - Top of the near clipping plane viewport.\n * @param near - The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param far - The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The orthographic projection matrix.\n */\nexport function ortho(left: number, right: number, bottom: number, top: number, near: number, far: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 1 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = near / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nexport function frustum(left: number, right: number, bottom: number, top: number, near: number, far: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 reverse-z perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 1 (-near) to 0 (-far) in the z\n * dimension.\n * @param left - The x coordinate of the left plane of the box.\n * @param right - The x coordinate of the right plane of the box.\n * @param bottom - The y coordinate of the bottom plane of the box.\n * @param top - The y coordinate of the right plane of the box.\n * @param near - The negative z coordinate of the near plane of the box.\n * @param far - The negative z coordinate of the far plane of the box.\n * @param dst - Output matrix. If not passed a new one is created.\n * @returns The perspective projection matrix.\n */\nexport function frustumReverseZ(left: number, right: number, bottom: number, top: number, near: number, far = Infinity, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[15] = 0;\n\n  if (far === Infinity) {\n    dst[10] = 0;\n    dst[14] = near;\n  } else {\n    const rangeInv = 1 / (far - near);\n    dst[10] = near * rangeInv;\n    dst[14] = far * near * rangeInv;\n  }\n\n  return dst;\n}\n\nlet xAxis: Vec3;\nlet yAxis: Vec3;\nlet zAxis: Vec3;\n\n/**\n * Computes a 4-by-4 aim transformation.\n *\n * This is a matrix which positions an object aiming down positive Z.\n * toward the target.\n *\n * Note: this is **NOT** the inverse of lookAt as lookAt looks at negative Z.\n *\n * @param position - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nexport function aim(position: Vec3, target: Vec3, up: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || vec3.create();\n  yAxis = yAxis || vec3.create();\n  zAxis = zAxis || vec3.create();\n\n  vec3.normalize(vec3.subtract(target, position, zAxis), zAxis);\n  vec3.normalize(vec3.cross(up, zAxis, xAxis), xAxis);\n  vec3.normalize(vec3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];     dst[ 1] = xAxis[1];     dst[ 2] = xAxis[2];     dst[ 3] = 0;\n  dst[ 4] = yAxis[0];     dst[ 5] = yAxis[1];     dst[ 6] = yAxis[2];     dst[ 7] = 0;\n  dst[ 8] = zAxis[0];     dst[ 9] = zAxis[1];     dst[10] = zAxis[2];     dst[11] = 0;\n  dst[12] = position[0];  dst[13] = position[1];  dst[14] = position[2];  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 camera aim transformation.\n *\n * This is a matrix which positions an object aiming down negative Z.\n * toward the target.\n *\n * Note: this is the inverse of `lookAt`\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The aim matrix.\n */\nexport function cameraAim(eye: Vec3, target: Vec3, up: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || vec3.create();\n  yAxis = yAxis || vec3.create();\n  zAxis = zAxis || vec3.create();\n\n  vec3.normalize(vec3.subtract(eye, target, zAxis), zAxis);\n  vec3.normalize(vec3.cross(up, zAxis, xAxis), xAxis);\n  vec3.normalize(vec3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];     dst[ 1] = xAxis[1];     dst[ 2] = xAxis[2];     dst[ 3] = 0;\n  dst[ 4] = yAxis[0];     dst[ 5] = yAxis[1];     dst[ 6] = yAxis[2];     dst[ 7] = 0;\n  dst[ 8] = zAxis[0];     dst[ 9] = zAxis[1];     dst[10] = zAxis[2];     dst[11] = 0;\n  dst[12] = eye[0];  dst[13] = eye[1];  dst[14] = eye[2];  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 view transformation.\n *\n * This is a view matrix which transforms all other objects\n * to be in the space of the view defined by the parameters.\n *\n * @param eye - The position of the object.\n * @param target - The position meant to be aimed at.\n * @param up - A vector pointing up.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The look-at matrix.\n */\nexport function lookAt(eye: Vec3, target: Vec3, up: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || vec3.create();\n  yAxis = yAxis || vec3.create();\n  zAxis = zAxis || vec3.create();\n\n  vec3.normalize(vec3.subtract(eye, target, zAxis), zAxis);\n  vec3.normalize(vec3.cross(up, zAxis, xAxis), xAxis);\n  vec3.normalize(vec3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];  dst[ 1] = yAxis[0];  dst[ 2] = zAxis[0];  dst[ 3] = 0;\n  dst[ 4] = xAxis[1];  dst[ 5] = yAxis[1];  dst[ 6] = zAxis[1];  dst[ 7] = 0;\n  dst[ 8] = xAxis[2];  dst[ 9] = yAxis[2];  dst[10] = zAxis[2];  dst[11] = 0;\n\n  dst[12] = -(xAxis[0] * eye[0] + xAxis[1] * eye[1] + xAxis[2] * eye[2]);\n  dst[13] = -(yAxis[0] * eye[0] + yAxis[1] * eye[1] + yAxis[2] * eye[2]);\n  dst[14] = -(zAxis[0] * eye[0] + zAxis[1] * eye[1] + zAxis[2] * eye[2]);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translation matrix.\n */\nexport function translation(v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;     dst[ 1] = 0;     dst[ 2] = 0;     dst[ 3] = 0;\n  dst[ 4] = 0;     dst[ 5] = 1;     dst[ 6] = 0;     dst[ 7] = 0;\n  dst[ 8] = 0;     dst[ 9] = 0;     dst[10] = 1;     dst[11] = 0;\n  dst[12] = v[0];  dst[13] = v[1];  dst[14] = v[2];  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param m - The matrix.\n * @param v - The vector by\n *     which to translate.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The translated matrix.\n */\nexport function translate(m: Mat4, v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotationX(angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;  dst[ 1] =  0;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] =  c;  dst[ 6] = s;  dst[ 7] = 0;\n  dst[ 8] = 0;  dst[ 9] = -s;  dst[10] = c;  dst[11] = 0;\n  dst[12] = 0;  dst[13] =  0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotateX(m: Mat4, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotationY(angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;  dst[ 1] = 0;  dst[ 2] = -s;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] = 1;  dst[ 6] =  0;  dst[ 7] = 0;\n  dst[ 8] = s;  dst[ 9] = 0;  dst[10] =  c;  dst[11] = 0;\n  dst[12] = 0;  dst[13] = 0;  dst[14] =  0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotateY(m: Mat4, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotation matrix.\n */\nexport function rotationZ(angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] =  c;  dst[ 1] = s;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = -s;  dst[ 5] = c;  dst[ 6] = 0;  dst[ 7] = 0;\n  dst[ 8] =  0;  dst[ 9] = 0;  dst[10] = 1;  dst[11] = 0;\n  dst[12] =  0;  dst[13] = 0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param m - The matrix.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function rotateZ(m: Mat4, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nexport function axisRotation(axis: Vec3, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle. (same as axisRotation)\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns A matrix which rotates angle radians\n *     around the axis.\n */\nexport const rotation = axisRotation;\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport function axisRotate(m: Mat4, axis: Vec3, angleInRadians: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle. (same as rotate)\n * @param m - The matrix.\n * @param axis - The axis\n *     about which to rotate.\n * @param angleInRadians - The angle by which to rotate (in radians).\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The rotated matrix.\n */\nexport const rotate = axisRotate;\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param v - A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function scaling(v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];  dst[ 1] = 0;     dst[ 2] = 0;     dst[ 3] = 0;\n  dst[ 4] = 0;     dst[ 5] = v[1];  dst[ 6] = 0;     dst[ 7] = 0;\n  dst[ 8] = 0;     dst[ 9] = 0;     dst[10] = v[2];  dst[11] = 0;\n  dst[12] = 0;     dst[13] = 0;     dst[14] = 0;     dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param m - The matrix to be modified.\n * @param v - A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function scale(m: Mat4, v: Vec3, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales a uniform amount in each dimension.\n * @param s - the amount to scale\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaling matrix.\n */\nexport function uniformScaling(s: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = s;  dst[ 1] = 0;  dst[ 2] = 0;  dst[ 3] = 0;\n  dst[ 4] = 0;  dst[ 5] = s;  dst[ 6] = 0;  dst[ 7] = 0;\n  dst[ 8] = 0;  dst[ 9] = 0;  dst[10] = s;  dst[11] = 0;\n  dst[12] = 0;  dst[13] = 0;  dst[14] = 0;  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by a uniform scale.\n * @param m - The matrix to be modified.\n * @param s - The amount to scale.\n * @param dst - matrix to hold result. If not passed a new one is created.\n * @returns The scaled matrix.\n */\nexport function uniformScale(m: Mat4, s: number, dst?: Mat4): Mat4 {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = s * m[0 * 4 + 0];\n  dst[ 1] = s * m[0 * 4 + 1];\n  dst[ 2] = s * m[0 * 4 + 2];\n  dst[ 3] = s * m[0 * 4 + 3];\n  dst[ 4] = s * m[1 * 4 + 0];\n  dst[ 5] = s * m[1 * 4 + 1];\n  dst[ 6] = s * m[1 * 4 + 2];\n  dst[ 7] = s * m[1 * 4 + 3];\n  dst[ 8] = s * m[2 * 4 + 0];\n  dst[ 9] = s * m[2 * 4 + 1];\n  dst[10] = s * m[2 * 4 + 2];\n  dst[11] = s * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 4 values, Float32Array with 4 values, or a Float64Array with 4 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link quat.setDefaultType}.\n */\nexport type Quat = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Quat4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Quat4`. In other words you can do this\n *\n *     const v = quat4.cross(v1, v2);  // Creates a new Quat4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = quat4.create();\n *     quat4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     quat4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let QuatType: new (n: number) => Quat = Float32Array;\n\n/**\n * Sets the type this library creates for a Quat4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Quat4\n */\nexport function setDefaultType(ctor: new (n: number) => Quat) {\n  const oldType = QuatType;\n  QuatType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a quat4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nexport function create(x?: number, y?: number, z?: number, w?: number): Quat {\n  const dst = new QuatType(4);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n      if (z !== undefined) {\n        dst[2] = z;\n        if (w !== undefined) {\n          dst[3] = w;\n        }\n      }\n    }\n  }\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Quat, create, setDefaultType, QuatType } from './quat';\nimport { Mat3 } from './mat3.js';\nimport { Mat4 } from './mat4.js';\nimport { Vec3 } from './vec3.js';\nimport * as vec3 from './vec3-impl.js';\n\nexport type RotationOrder =  'xyz' |  'xzy' |  'yxz' |  'yzx' |  'zxy' |  'zyx';\n\nexport default Quat;\nexport { create, setDefaultType };\n\n/**\n * Creates a Quat; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Quat\n * Also see {@link quat.create} and {@link quat.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, z: number, w: number, dst?: Quat) {\n  dst = dst || new QuatType(4);\n\n  dst[0] = x;\n  dst[1] = y;\n  dst[2] = z;\n  dst[3] = w;\n\n  return dst;\n}\n\n/**\n * Sets a quaternion from the given angle and  axis,\n * then returns it.\n *\n * @param axis - the axis to rotate around\n * @param angleInRadians - the angle\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The quaternion that represents the given axis and angle\n **/\nexport function fromAxisAngle(axis: Vec3, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n  const s = Math.sin(halfAngle);\n\n  dst[0] = s * axis[0];\n  dst[1] = s * axis[1];\n  dst[2] = s * axis[2];\n  dst[3] = Math.cos(halfAngle);\n\n  return dst;\n}\n\n/**\n * Gets the rotation axis and angle\n * @param q - quaternion to compute from\n * @param dst - Vec3 to hold result. If not passed in a new one is created.\n * @return angle and axis\n */\nexport function toAxisAngle(q: Quat, dst?: Vec3): { angle: number, axis: Vec3 } {\n  dst = dst || vec3.create(4);\n\n  const angle = Math.acos(q[3]) * 2;\n  const s = Math.sin(angle * 0.5);\n  if (s > utils.EPSILON) {\n    dst[0] = q[0] / s;\n    dst[1] = q[1] / s;\n    dst[2] = q[2] / s;\n  } else {\n    dst[0] = 1;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return { angle, axis: dst };\n}\n\n/**\n * Returns the angle in degrees between two rotations a and b.\n * @param a - quaternion a\n * @param b - quaternion b\n * @return angle in radians between the two quaternions\n */\nexport function angle(a: Quat, b: Quat) {\n  const d = dot(a, b);\n  return Math.acos(2 * d * d - 1);\n}\n\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function multiply(a: Quat, b: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n\n  const bx = b[0];\n  const by = b[1];\n  const bz = b[2];\n  const bw = b[3];\n\n  dst[0] = ax * bw + aw * bx + ay * bz - az * by;\n  dst[1] = ay * bw + aw * by + az * bx - ax * bz;\n  dst[2] = az * bw + aw * bz + ax * by - ay * bx;\n  dst[3] = aw * bw - ax * bx - ay * by - az * bz;\n\n  return dst;\n}\n\n/**\n * Multiplies two quaternions\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport const mul = multiply;\n\n/**\n * Rotates the given quaternion around the X axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function rotateX(q: Quat, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  const bx = Math.sin(halfAngle);\n  const bw = Math.cos(halfAngle);\n\n  dst[0] = qx * bw + qw * bx;\n  dst[1] = qy * bw + qz * bx;\n  dst[2] = qz * bw - qy * bx;\n  dst[3] = qw * bw - qx * bx;\n\n  return dst;\n}\n\n/**\n * Rotates the given quaternion around the Y axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function rotateY(q: Quat, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  const by = Math.sin(halfAngle);\n  const bw = Math.cos(halfAngle);\n\n  dst[0] = qx * bw - qz * by;\n  dst[1] = qy * bw + qw * by;\n  dst[2] = qz * bw + qx * by;\n  dst[3] = qw * bw - qy * by;\n\n  return dst;\n}\n\n/**\n * Rotates the given quaternion around the Z axis by the given angle.\n * @param q - quaternion to rotate\n * @param angleInRadians - The angle by which to rotate\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function rotateZ(q: Quat, angleInRadians: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const halfAngle = angleInRadians * 0.5;\n\n  const qx = q[0];\n  const qy = q[1];\n  const qz = q[2];\n  const qw = q[3];\n\n  const bz = Math.sin(halfAngle);\n  const bw = Math.cos(halfAngle);\n\n  dst[0] = qx * bw + qy * bz;\n  dst[1] = qy * bw - qx * bz;\n  dst[2] = qz * bw + qw * bz;\n  dst[3] = qw * bw - qz * bz;\n\n  return dst;\n}\n\n/**\n * Spherically linear interpolate between two quaternions\n *\n * @param a - starting value\n * @param b - ending value\n * @param t - value where 0 = a and 1 = b\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the result of a * b\n */\nexport function slerp(a: Quat, b: Quat, t: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const ax = a[0];\n  const ay = a[1];\n  const az = a[2];\n  const aw = a[3];\n\n  let bx = b[0];\n  let by = b[1];\n  let bz = b[2];\n  let bw = b[3];\n\n  let cosOmega = ax * bx + ay * by + az * bz + aw * bw;\n\n  if (cosOmega < 0) {\n    cosOmega = -cosOmega;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n\n  let scale0;\n  let scale1;\n\n  if (1.0 - cosOmega > utils.EPSILON) {\n    const omega = Math.acos(cosOmega);\n    const sinOmega = Math.sin(omega);\n    scale0 = Math.sin((1 - t) * omega) / sinOmega;\n    scale1 = Math.sin(t * omega) / sinOmega;\n  } else {\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n\n  dst[0] = scale0 * ax + scale1 * bx;\n  dst[1] = scale0 * ay + scale1 * by;\n  dst[2] = scale0 * az + scale1 * bz;\n  dst[3] = scale0 * aw + scale1 * bw;\n\n  return dst;\n}\n\n/**\n * Compute the inverse of a quaternion\n *\n * @param q - quaternion to compute the inverse of\n * @returns A quaternion that is the result of a * b\n */\nexport function inverse(q: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const a0 = q[0];\n  const a1 = q[1];\n  const a2 = q[2];\n  const a3 = q[3];\n\n  const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  const invDot = dot ? 1 / dot : 0;\n\n  dst[0] = -a0 * invDot;\n  dst[1] = -a1 * invDot;\n  dst[2] = -a2 * invDot;\n  dst[3] =  a3 * invDot;\n\n  return dst;\n}\n\n/**\n * Compute the conjugate of a quaternion\n * For quaternions with a magnitude of 1 (a unit quaternion)\n * this returns the same as the inverse but is faster to calculate.\n *\n * @param q - quaternion to compute the conjugate of.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The conjugate of q\n */\nexport function conjugate(q: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = -q[0];\n  dst[1] = -q[1];\n  dst[2] = -q[2];\n  dst[3] =  q[3];\n\n  return dst;\n}\n\n/**\n * Creates a quaternion from the given rotation matrix.\n *\n * The created quaternion is not normalized.\n *\n * @param m - rotation matrix\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nexport function fromMat(m: Mat3 | Mat4, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  /*\n  0 1 2\n  3 4 5\n  6 7 8\n\n  0 1 2\n  4 5 6\n  8 9 10\n   */\n\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  const trace = m[0] + m[5] + m[10];\n\n  if (trace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    const root = Math.sqrt(trace + 1); // 2w\n    dst[3] = 0.5 * root;\n    const invRoot = 0.5 / root; // 1/(4w)\n\n    dst[0] = (m[6] - m[9]) * invRoot;\n    dst[1] = (m[8] - m[2]) * invRoot;\n    dst[2] = (m[1] - m[4]) * invRoot;\n  } else {\n    // |w| <= 1/2\n    let i = 0;\n\n    if (m[5] > m[0]) {\n      i = 1;\n    }\n    if (m[10] > m[i * 4 + i]) {\n      i = 2;\n    }\n\n    const j = (i + 1) % 3;\n    const k = (i + 2) % 3;\n\n    const root = Math.sqrt(m[i * 4 + i] - m[j * 4 + j] - m[k * 4 + k] + 1.0);\n    dst[i] = 0.5 * root;\n\n    const invRoot = 0.5 / root;\n\n    dst[3] = (m[j * 4 + k] - m[k * 4 + j]) * invRoot;\n    dst[j] = (m[j * 4 + i] + m[i * 4 + j]) * invRoot;\n    dst[k] = (m[k * 4 + i] + m[i * 4 + k]) * invRoot;\n  }\n\n  return dst;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z using the provided intrinsic order for the conversion.\n *\n * @param xAngleInRadians - angle to rotate around X axis in radians.\n * @param yAngleInRadians - angle to rotate around Y axis in radians.\n * @param zAngleInRadians - angle to rotate around Z axis in radians.\n * @param order - order to apply euler angles\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion representing the same rotation as the euler angles applied in the given order\n */\nexport function fromEuler(\n    xAngleInRadians: number,\n    yAngleInRadians: number,\n    zAngleInRadians: number,\n    order: RotationOrder,\n    dst?: Quat) {\n  dst = dst || new QuatType(4);\n\n  const xHalfAngle = xAngleInRadians * 0.5;\n  const yHalfAngle = yAngleInRadians * 0.5;\n  const zHalfAngle = zAngleInRadians * 0.5;\n\n  const sx = Math.sin(xHalfAngle);\n  const cx = Math.cos(xHalfAngle);\n  const sy = Math.sin(yHalfAngle);\n  const cy = Math.cos(yHalfAngle);\n  const sz = Math.sin(zHalfAngle);\n  const cz = Math.cos(zHalfAngle);\n\n  switch (order) {\n    case 'xyz':\n      dst[0] = sx * cy * cz + cx * sy * sz;\n      dst[1] = cx * sy * cz - sx * cy * sz;\n      dst[2] = cx * cy * sz + sx * sy * cz;\n      dst[3] = cx * cy * cz - sx * sy * sz;\n      break;\n\n    case 'xzy':\n      dst[0] = sx * cy * cz - cx * sy * sz;\n      dst[1] = cx * sy * cz - sx * cy * sz;\n      dst[2] = cx * cy * sz + sx * sy * cz;\n      dst[3] = cx * cy * cz + sx * sy * sz;\n      break;\n\n    case 'yxz':\n      dst[0] = sx * cy * cz + cx * sy * sz;\n      dst[1] = cx * sy * cz - sx * cy * sz;\n      dst[2] = cx * cy * sz - sx * sy * cz;\n      dst[3] = cx * cy * cz + sx * sy * sz;\n      break;\n\n    case 'yzx':\n      dst[0] = sx * cy * cz + cx * sy * sz;\n      dst[1] = cx * sy * cz + sx * cy * sz;\n      dst[2] = cx * cy * sz - sx * sy * cz;\n      dst[3] = cx * cy * cz - sx * sy * sz;\n      break;\n\n    case 'zxy':\n      dst[0] = sx * cy * cz - cx * sy * sz;\n      dst[1] = cx * sy * cz + sx * cy * sz;\n      dst[2] = cx * cy * sz + sx * sy * cz;\n      dst[3] = cx * cy * cz - sx * sy * sz;\n      break;\n\n    case 'zyx':\n      dst[0] = sx * cy * cz - cx * sy * sz;\n      dst[1] = cx * sy * cz + sx * cy * sz;\n      dst[2] = cx * cy * sz - sx * sy * cz;\n      dst[3] = cx * cy * cz + sx * sy * sz;\n      break;\n\n    default:\n      throw new Error(`Unknown rotation order: ${order}`);\n  }\n\n  return dst;\n}\n\n/**\n * Copies a quaternion. (same as {@link quat.clone})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is a copy of q\n */\nexport function copy(q: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = q[0];\n  dst[1] = q[1];\n  dst[2] = q[2];\n  dst[3] = q[3];\n\n  return dst;\n}\n\n/**\n * Clones a quaternion. (same as {@link quat.copy})\n * Also see {@link quat.create} and {@link quat.set}\n * @param q - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A copy of q.\n */\nexport const clone = copy;\n\n/**\n * Adds two quaternions; assumes a and b have the same dimension.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the sum of a and b.\n */\nexport function add(a: Quat, b: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  dst[3] = a[3] + b[3];\n\n  return dst;\n}\n\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nexport function subtract(a: Quat, b: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  dst[3] = a[3] - b[3];\n\n  return dst;\n}\n\n/**\n * Subtracts two quaternions.\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns A quaternion that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Multiplies a quaternion by a scalar.\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nexport function mulScalar(v: Quat, k: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  dst[3] = v[3] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a quaternion by a scalar. (same as mulScalar)\n * @param v - The quaternion.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The scaled quaternion.\n */\nexport function divScalar(v: Quat, k: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  dst[3] = v[3] / k;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two quaternions\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns dot product\n */\nexport function dot(a: Quat, b: Quat): number {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n\n/**\n * Performs linear interpolation on two quaternions.\n * Given quaternions a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @param t - Interpolation coefficient.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Quat, b: Quat, t: number, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  dst[3] = a[3] + t * (b[3] - a[3]);\n\n  return dst;\n}\n\n/**\n * Computes the length of quaternion\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nexport function length(v: Quat): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n\n/**\n * Computes the length of quaternion (same as length)\n * @param v - quaternion.\n * @returns length of quaternion.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of quaternion\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nexport function lengthSq(v: Quat): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n\n/**\n * Computes the square of the length of quaternion (same as lengthSq)\n * @param v - quaternion.\n * @returns square of the length of quaternion.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Divides a quaternion by its Euclidean length and returns the quotient.\n * @param v - The quaternion.\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns The normalized quaternion.\n */\nexport function normalize(v: Quat, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n    dst[2] = v2 / len;\n    dst[3] = v3 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Check if 2 quaternions are approximately equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are approximately equal\n */\nexport function equalsApproximately(a: Quat, b: Quat): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON &&\n         Math.abs(a[2] - b[2]) < utils.EPSILON &&\n         Math.abs(a[3] - b[3]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 quaternions are exactly equal\n * @param a - Operand quaternion.\n * @param b - Operand quaternion.\n * @returns true if quaternions are exactly equal\n */\nexport function equals(a: Quat, b: Quat): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Creates an identity quaternion\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns an identity quaternion\n */\nexport function identity(dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 1;\n\n  return dst;\n}\n\nlet tempVec3: Vec3;\nlet xUnitVec3: Vec3;\nlet yUnitVec3: Vec3;\n\n/**\n * Computes a quaternion to represent the shortest rotation from one vector to another.\n *\n * @param aUnit - the start vector\n * @param bUnit - the end vector\n * @param dst - quaternion to hold result. If not passed in a new one is created.\n * @returns the result\n */\nexport function rotationTo(aUnit: Vec3, bUnit: Vec3, dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  tempVec3 = tempVec3 || vec3.create();\n  xUnitVec3 = xUnitVec3 || vec3.create(1, 0, 0);\n  yUnitVec3 = yUnitVec3 || vec3.create(0, 1, 0);\n\n  const dot = vec3.dot(aUnit, bUnit);\n  if (dot < -0.999999) {\n    vec3.cross(xUnitVec3, aUnit, tempVec3);\n    if (vec3.len(tempVec3) < 0.000001) {\n      vec3.cross(yUnitVec3, aUnit, tempVec3);\n    }\n\n    vec3.normalize(tempVec3, tempVec3);\n    fromAxisAngle(tempVec3, Math.PI, dst);\n\n    return dst;\n  } else if (dot > 0.999999) {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 1;\n\n    return dst;\n  } else {\n    vec3.cross(aUnit, bUnit, tempVec3);\n\n    dst[0] = tempVec3[0];\n    dst[1] = tempVec3[1];\n    dst[2] = tempVec3[2];\n    dst[3] = 1 + dot;\n\n    return normalize(dst, dst);\n  }\n}\n\nlet tempQuat1: Quat;\nlet tempQuat2: Quat;\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param a - the first quaternion\n * @param b - the second quaternion\n * @param c - the third quaternion\n * @param d - the fourth quaternion\n * @param t - Interpolation coefficient 0 to 1\n * @returns result\n */\nexport function sqlerp(\n    a: Quat,\n    b: Quat,\n    c: Quat,\n    d: Quat,\n    t: number,\n    dst?: Quat): Quat {\n  dst = dst || new QuatType(4);\n\n  tempQuat1 = tempQuat1 || new QuatType(4);\n  tempQuat2 = tempQuat2 || new QuatType(4);\n\n  slerp(a, d, t, tempQuat1);\n  slerp(b, c, t, tempQuat2);\n  slerp(tempQuat1, tempQuat2, 2 * t * (1 - t), dst);\n\n  return dst;\n}\n", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A JavaScript array with 4 values, Float32Array with 4 values, or a Float64Array with 4 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link vec4.setDefaultType}.\n */\nexport type Vec4 = number[] | Float32Array | Float64Array;\n\n/**\n *\n * Vec4 math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new `Vec4`. In other words you can do this\n *\n *     const v = vec4.cross(v1, v2);  // Creates a new Vec4 with the cross product of v1 x v2.\n *\n * or\n *\n *     const v = vec4.create();\n *     vec4.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always safe to pass any vector as the destination. So for example\n *\n *     vec4.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n */\n\nexport let VecType: new (n: number) => Vec4 = Float32Array;\n\n/**\n * Sets the type this library creates for a Vec4\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n * @returns previous constructor for Vec4\n */\nexport function setDefaultType(ctor: new (n: number) => Vec4) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec4; may be called with x, y, z to set initial values.\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param w - Initial w value.\n * @returns the created vector\n */\nexport function create(x?: number, y?: number, z?: number, w?: number): Vec4 {\n  const dst = new VecType(4);\n  if (x !== undefined) {\n    dst[0] = x;\n    if (y !== undefined) {\n      dst[1] = y;\n      if (z !== undefined) {\n        dst[2] = z;\n        if (w !== undefined) {\n          dst[3] = w;\n        }\n      }\n    }\n  }\n  return dst;\n}", "/*\n * Copyright 2022 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport * as utils from './utils.js';\nimport { Vec4, create, setDefaultType, VecType } from './vec4';\nimport { Mat4 } from './mat4';\n\nexport default Vec4;\nexport { create, setDefaultType };\n\n/**\n * Creates a vec4; may be called with x, y, z to set initial values. (same as create)\n * @param x - Initial x value.\n * @param y - Initial y value.\n * @param z - Initial z value.\n * @param z - Initial w value.\n * @returns the created vector\n */\nexport const fromValues = create;\n\n/**\n * Sets the values of a Vec4\n * Also see {@link vec4.create} and {@link vec4.copy}\n *\n * @param x first value\n * @param y second value\n * @param z third value\n * @param w fourth value\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector with its elements set.\n */\nexport function set(x: number, y: number, z: number, w: number, dst?: Vec4) {\n  dst = dst || new VecType(4);\n\n  dst[0] = x;\n  dst[1] = y;\n  dst[2] = z;\n  dst[3] = w;\n\n  return dst;\n}\n\n/**\n * Applies Math.ceil to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the ceil of each element of v.\n */\nexport function ceil(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.ceil(v[0]);\n  dst[1] = Math.ceil(v[1]);\n  dst[2] = Math.ceil(v[2]);\n  dst[3] = Math.ceil(v[3]);\n\n  return dst;\n}\n\n/**\n * Applies Math.floor to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the floor of each element of v.\n */\nexport function floor(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.floor(v[0]);\n  dst[1] = Math.floor(v[1]);\n  dst[2] = Math.floor(v[2]);\n  dst[3] = Math.floor(v[3]);\n\n  return dst;\n}\n\n/**\n * Applies Math.round to each element of vector\n * @param v - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the round of each element of v.\n */\nexport function round(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.round(v[0]);\n  dst[1] = Math.round(v[1]);\n  dst[2] = Math.round(v[2]);\n  dst[3] = Math.round(v[3]);\n\n  return dst;\n}\n\n/**\n * Clamp each element of vector between min and max\n * @param v - Operand vector.\n * @param max - Min value, default 0\n * @param min - Max value, default 1\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that the clamped value of each element of v.\n */\nexport function clamp(v: Vec4, min = 0, max = 1, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.min(max, Math.max(min, v[0]));\n  dst[1] = Math.min(max, Math.max(min, v[1]));\n  dst[2] = Math.min(max, Math.max(min, v[2]));\n  dst[3] = Math.min(max, Math.max(min, v[3]));\n\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a and b.\n */\nexport function add(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  dst[3] = a[3] + b[3];\n\n  return dst;\n}\n\n/**\n * Adds two vectors, scaling the 2nd; assumes a and b have the same dimension.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param scale - Amount to scale b\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the sum of a + b * scale.\n */\nexport function addScaled(a: Vec4, b: Vec4, scale: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + b[0] * scale;\n  dst[1] = a[1] + b[1] * scale;\n  dst[2] = a[2] + b[2] * scale;\n  dst[3] = a[3] + b[3] * scale;\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport function subtract(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  dst[3] = a[3] - b[3];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A vector that is the difference of a and b.\n */\nexport const sub = subtract;\n\n/**\n * Check if 2 vectors are approximately equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are approximately equal\n */\nexport function equalsApproximately(a: Vec4, b: Vec4): boolean {\n  return Math.abs(a[0] - b[0]) < utils.EPSILON &&\n         Math.abs(a[1] - b[1]) < utils.EPSILON &&\n         Math.abs(a[2] - b[2]) < utils.EPSILON &&\n         Math.abs(a[3] - b[3]) < utils.EPSILON;\n}\n\n/**\n * Check if 2 vectors are exactly equal\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns true if vectors are exactly equal\n */\nexport function equals(a: Vec4, b: Vec4): boolean {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficient.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The linear interpolated result.\n */\nexport function lerp(a: Vec4, b: Vec4, t: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  dst[3] = a[3] + t * (b[3] - a[3]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param t - Interpolation coefficients vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns the linear interpolated result.\n */\nexport function lerpV(a: Vec4, b: Vec4, t: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n  dst[3] = a[3] + t[3] * (b[3] - a[3]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The max components vector.\n */\nexport function max(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n  dst[3] = Math.max(a[3], b[3]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The min components vector.\n */\nexport function min(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n  dst[3] = Math.min(a[3], b[3]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function mulScalar(v: Vec4, k: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  dst[3] = v[3] * k;\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar. (same as mulScalar)\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport const scale = mulScalar;\n\n/**\n * Divides a vector by a scalar.\n * @param v - The vector.\n * @param k - The scalar.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The scaled vector.\n */\nexport function divScalar(v: Vec4, k: number, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  dst[3] = v[3] / k;\n\n  return dst;\n}\n\n/**\n * Inverse a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport function inverse(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = 1 / v[0];\n  dst[1] = 1 / v[1];\n  dst[2] = 1 / v[2];\n  dst[3] = 1 / v[3];\n\n  return dst;\n}\n\n/**\n * Invert a vector. (same as inverse)\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The inverted vector.\n */\nexport const invert = inverse;\n\n/**\n * Computes the dot product of two vectors\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @returns dot product\n */\nexport function dot(a: Vec4, b: Vec4): number {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]) + (a[3] * b[3]);\n}\n\n/**\n * Computes the length of vector\n * @param v - vector.\n * @returns length of vector.\n */\nexport function length(v: Vec4): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n}\n\n/**\n * Computes the length of vector (same as length)\n * @param v - vector.\n * @returns length of vector.\n */\nexport const len = length;\n\n/**\n * Computes the square of the length of vector\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport function lengthSq(v: Vec4): number {\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  return v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3;\n}\n\n/**\n * Computes the square of the length of vector (same as lengthSq)\n * @param v - vector.\n * @returns square of the length of vector.\n */\nexport const lenSq = lengthSq;\n\n/**\n * Computes the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport function distance(a: Vec4, b: Vec4): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  const dw = a[3] - b[3];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n}\n\n/**\n * Computes the distance between 2 points (same as distance)\n * @param a - vector.\n * @param b - vector.\n * @returns distance between a and b\n */\nexport const dist = distance;\n\n/**\n * Computes the square of the distance between 2 points\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport function distanceSq(a: Vec4, b: Vec4): number {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  const dw = a[3] - b[3];\n  return dx * dx + dy * dy + dz * dz + dw * dw;\n}\n\n/**\n * Computes the square of the distance between 2 points (same as distanceSq)\n * @param a - vector.\n * @param b - vector.\n * @returns square of the distance between a and b\n */\nexport const distSq = distanceSq;\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The normalized vector.\n */\nexport function normalize(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const v3 = v[3];\n  const len = Math.sqrt(v0 * v0 + v1 * v1 + v2 * v2 + v3 * v3);\n\n  if (len > 0.00001) {\n    dst[0] = v0 / len;\n    dst[1] = v1 / len;\n    dst[2] = v2 / len;\n    dst[3] = v3 / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n    dst[3] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns -v.\n */\nexport function negate(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  dst[3] = -v[3];\n\n  return dst;\n}\n\n/**\n * Copies a vector. (same as {@link vec4.clone})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport function copy(v: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  dst[3] = v[3];\n\n  return dst;\n}\n\n/**\n * Clones a vector. (same as {@link vec4.copy})\n * Also see {@link vec4.create} and {@link vec4.set}\n * @param v - The vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns A copy of v.\n */\nexport const clone = copy;\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport function multiply(a: Vec4, b: Vec4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  dst[3] = a[3] * b[3];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as mul)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of products of entries of a and b.\n */\nexport const mul = multiply;\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport function divide(a: Vec4, b: Vec4, dst?: Vec4) {\n  dst = dst || new VecType(4);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  dst[3] = a[3] / b[3];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length. (same as divide)\n * @param a - Operand vector.\n * @param b - Operand vector.\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The vector of quotients of entries of a and b.\n */\nexport const div = divide;\n\n/**\n * Zero's a vector\n * @param dst - vector to hold result. If not passed in a new one is created.\n * @returns The zeroed vector.\n */\nexport function zero(dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  dst[0] = 0;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n\n  return dst;\n}\n\n\n/**\n * transform vec4 by 4x4 matrix\n * @param v - the vector\n * @param m - The matrix.\n * @param dst - optional vec4 to store result. If not passed a new one is created.\n * @returns the transformed vector\n */\nexport function transformMat4(v: Vec4, m: Mat4, dst?: Vec4): Vec4 {\n  dst = dst || new VecType(4);\n\n  const x = v[0];\n  const y = v[1];\n  const z = v[2];\n  const w = v[3];\n\n  dst[0] = m[0] * x + m[4] * y + m[ 8] * z + m[12] * w;\n  dst[1] = m[1] * x + m[5] * y + m[ 9] * z + m[13] * w;\n  dst[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  dst[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\n  return dst;\n}\n\n\n/**\n * Treat a 4D vector as a direction and set it's length\n *\n * @param a The vec4 to lengthen\n * @param len The length of the resulting vector\n * @returns The lengthened vector\n */\nexport function setLength(a: Vec4, len: number, dst?: Vec4) {\n  dst = dst || new VecType(4);\n  normalize(a, dst);\n  return mulScalar(dst, len, dst);\n}\n\n/**\n * Ensure a vector is not longer than a max length\n *\n * @param a The vec4 to limit\n * @param maxLen The longest length of the resulting vector\n * @returns The vector, shortened to maxLen if it's too long\n */\nexport function truncate(a: Vec4, maxLen: number, dst?: Vec4) {\n  dst = dst || new VecType(4);\n\n  if (length(a) > maxLen) {\n    return setLength(a, maxLen, dst);\n  }\n\n  return copy(a, dst);\n}\n\n/**\n * Return the vector exactly between 2 endpoint vectors\n *\n * @param a Endpoint 1\n * @param b Endpoint 2\n * @returns The vector exactly residing between endpoints 1 and 2\n */\nexport function midpoint(a: Vec4, b: Vec4, dst?: Vec4) {\n  dst = dst || new VecType(4);\n  return lerp(a, b, 0.5, dst);\n}\n", "import Mat3, * as mat3 from './mat3-impl';\nimport Mat4, * as mat4 from './mat4-impl';\nimport Quat, * as quat from './quat-impl';\nimport Vec2, * as vec2 from './vec2-impl';\nimport Vec3, * as vec3 from './vec3-impl';\nimport Vec4, * as vec4 from './vec4-impl';\nimport * as utils from './utils';\n\n/**\n * Sets the type this library creates for all types\n *\n * example:\n *\n * ```\n * setDefaultType(Float64Array);\n * ```\n *\n * @param ctor - the constructor for the type. Either `Float32Array`, `Float64Array`, or `Array`\n */\nexport function setDefaultType(ctor: new (n: number) => Float32Array | Float64Array | number[]) {\n  mat3.setDefaultType(ctor);\n  mat4.setDefaultType(ctor);\n  quat.setDefaultType(ctor);\n  vec2.setDefaultType(ctor);\n  vec3.setDefaultType(ctor);\n  vec4.setDefaultType(ctor);\n}\n\nexport {\n  Mat3,\n  mat3,\n  Mat4,\n  mat4,\n  Quat,\n  quat,\n  utils,\n  Vec2,\n  vec2,\n  Vec3,\n  vec3,\n  Vec4,\n  vec4,\n};", "import {\n  TextFileReader,\n  TextureReader,\n  BinaryFileReader,\n} from '../scene/load/types.ts';\n\nexport const textFileReader_Web: TextFileReader = async (filename: string) => {\n  const objFileResp = await fetch(filename);\n  if (!objFileResp.ok) {\n    throw `Could not download mesh file '${filename}'`;\n  }\n  return objFileResp.text();\n};\n\nexport const binaryFileReader_Web: BinaryFileReader = async (\n  filename: string\n) => {\n  const response = await fetch(filename);\n  return response.arrayBuffer();\n};\n\n/** https://webgpu.github.io/webgpu-samples/?sample=texturedCube#main.ts */\nexport const createTextureFromFile_Web: TextureReader = async (\n  device: GPUDevice,\n  path: string,\n  format: GPUTextureFormat,\n  usage: GPUTextureUsageFlags\n) => {\n  const response = await fetch(path);\n  const imageBitmap = await createImageBitmap(await response.blob());\n\n  const texture = device.createTexture({\n    label: path,\n    dimension: '2d',\n    size: [imageBitmap.width, imageBitmap.height, 1],\n    format,\n    usage,\n  });\n  // deno-lint-ignore no-explicit-any\n  (device.queue as any).copyExternalImageToTexture(\n    { source: imageBitmap },\n    { texture: texture },\n    [imageBitmap.width, imageBitmap.height]\n  );\n\n  return texture;\n};\n", "import {\n  binaryFileReader_Web,\n  createTextureFromFile_Web,\n  textFileReader_Web,\n} from './sys_web/loadersWeb.ts';\n\nexport const CAMERA_CFG = {\n  // pos + rot\n  position: {\n    position: [1.5, 1.9, 2.3],\n    rotation: [-0.6, 0.3], // [pitch, yaw]\n    // position: [1.6, 1.9, 1.7],\n    // rotation: [-0.8, 0.2], // [pitch, yaw]\n  } satisfies CameraOpts,\n  // projection\n  fovDgr: 45,\n  near: 0.01,\n  far: 100.0,\n};\n\nexport type CameraOpts = {\n  position?: [number, number, number];\n  rotation?: [number, number];\n};\n\nexport const BYTES_U8 = 1;\nexport const BYTES_F32 = 4;\nexport const BYTES_U32 = 4;\nexport const BYTES_U64 = 8;\nexport const BYTES_VEC2 = BYTES_F32 * 2;\nexport const BYTES_VEC3 = BYTES_F32 * 3;\nexport const BYTES_VEC4 = BYTES_F32 * 4;\nexport const BYTES_UVEC2 = BYTES_U32 * 2;\nexport const BYTES_UVEC4 = BYTES_U32 * 4;\nexport const BYTES_U8_VEC4 = BYTES_U8 * 4;\nexport const BYTES_MAT4 = BYTES_F32 * 16;\n\nexport const NANO_TO_MILISECONDS = 0.000001;\nexport const MILISECONDS_TO_SECONDS = 0.001;\n\n// deno-lint-ignore no-window-prefix no-window\nexport const IS_DENO = window.Deno !== undefined;\nexport const IS_BROWSER = !IS_DENO;\nexport const IS_WGPU = IS_DENO;\n\nexport const MODELS_DIR = IS_DENO ? 'static/models' : 'models';\n\nexport const DEPTH_FORMAT: GPUTextureFormat = 'depth24plus';\nexport const HDR_RENDER_TEX_FORMAT: GPUTextureFormat = IS_DENO\n  ? 'rgba16float' // Cause: \"Color state [0] is invalid: Format Rgba32Float is not blendable\"\n  : 'rgba32float';\n\n/** 4 for Vec4, 3 for Vec3. ATM using Vec3  */\nexport const CO_PER_VERTEX: number = 3;\n/** Give a name to a random magic value '3'. Surely, number of points in a triangle can change someday!  */\nexport const VERTS_IN_TRIANGLE: number = 3;\n\nexport type DisplayMode =\n  | 'nanite'\n  | 'dbg-lod'\n  | 'dbg-lod-meshlets'\n  | 'dbg-nanite-meshlets'\n  | 'dbg-depth-pyramid';\nexport type NaniteDevice = 'cpu' | 'gpu';\n\nexport const SHADING_MODE_PBR = 0;\nexport const SHADING_MODE_TRIANGLE = 1;\nexport const SHADING_MODE_MESHLET = 2;\nexport const SHADING_MODE_LOD_LEVEL = 3;\nexport const SHADING_MODE_NORMALS = 4;\nexport const SHADING_MODE_HW_SW_IMPOSTOR = 5;\n\nexport const CONFIG = {\n  /** Test env may require GPUBuffers to have extra COPY_* flags to readback results. Or silence console spam. */\n  isTest: false,\n  /** If we are not rendering the scene but only exporting the LOD hierarchy */\n  isExporting: false,\n  githubRepoLink: 'https://github.com/Scthe/nanite-webgpu',\n  githubDemoLink: 'https://scthe.github.io/nanite-webgpu',\n  /** This runtime injection prevents loading Deno's libraries like fs, png, etc. */\n  loaders: {\n    textFileReader: textFileReader_Web,\n    binaryFileReader: binaryFileReader_Web,\n    createTextureFromFile: createTextureFromFile_Web,\n  },\n\n  ///////////////\n  /// GENERIC/SCENE STUFF\n  /** Changeable from GUI */\n  clearColor: [0.2, 0.2, 0.2, 0.0],\n  /** Special color: if you need to check for holes */\n  clearColorAlt: [0.03, 0.25, 0.4, 0.0],\n  /** if you need to check for holes */\n  useAlternativeClearColor: false,\n  // useAlternativeClearColor: true,\n  /** DO NOT CHANGE BEFORE DEFINING THE LIGHT VALUES IN SHADER. WILL CAUSE RNG VALUES OTHERWISE */\n  lightsCount: 2,\n  /** Feel free to switch on if you want */\n  useVertexQuantization: false,\n  drawGround: true,\n\n  ///////////////\n  /// CAMERA\n  /** Camera rotation sensitivity */\n  rotationSpeed: 1,\n  /** Camera movement sensitivity */\n  movementSpeed: 3,\n  /** Camera movement sensitivity when pressing SPEED BUTTON */\n  movementSpeedFaster: 20,\n\n  ///////////////\n  /// DEBUG DISPLAY MODES\n  /** Debug display mode to test meshoptimizer */\n  displayMode: 'nanite' as DisplayMode,\n  /** LOD in 'DBG: lod meshlets' mode */\n  dbgMeshoptimizerLodLevel: 0,\n  /** LOD in 'DBG: nanite meshlets' mode */\n  dbgNaniteLodLevel: 1,\n  /** Which depth pyramid level to show in respective debug mode */\n  dbgDepthPyramidLevel: 0,\n\n  ///////////////\n  /// PostFX-like effects (dither, tonemapping, exposure, gamma etc.)\n  colors: {\n    gamma: 2.2,\n    ditherStrength: 1.0,\n    exposure: 0.45,\n  },\n\n  ///////////////\n  /// CULLING - INSTANCES\n  cullingInstances: {\n    enabled: true,\n    frustumCulling: true,\n    occlusionCulling: true,\n  },\n\n  ///////////////\n  /// BILLBOARD IMPOSTORS\n  impostors: {\n    views: 12,\n    // TODO [RIGHT HERE RIGHT NOW] BRING BACK THE 512px BILLBOARDS CAUSE THEY ARE CUTE\n    textureSize: 64,\n    /** Every object that is smaller than this on screen becomes impostor billboard.\n     * Calculated as `screen space AABB width * height`.\n     * This an AABB for an ENTIRE object, not a meshlet!\n     */\n    billboardThreshold: 4000,\n    /** Do not render mesh, ONLY billboards regardless of everything */\n    forceOnlyBillboards: false,\n    ditherStrength: 0.4,\n  },\n\n  ///////////////\n  /// CULLING - MESHLETS\n  cullingMeshlets: {\n    frustumCulling: true,\n    occlusionCulling: true,\n\n    /** Software backface cull is not finished, as the gains seem limited. TODO:\n     * - handle instances. ATM only every instance assumes it has identity tfx matrix for purpose of culling\n     * - fix bugs. Some disappearing triangles at very oblique angles. Just a magic slider to scale condition by 1.1+?\n     * - use in GPU visiblity flow\n     * - test on dense meshes. Probably works better then\n     */\n    // useSoftwareBackfaceCull: false,\n  },\n\n  ///////////////\n  /// SOFTWARE RASTERIZER\n  softwareRasterizer: {\n    enabled: true,\n    /** Every meshlet that is less pixels than this will be software rendered. Calculated as `screen space AABB width * height`. */\n    threshold: 1360.0,\n  },\n\n  ///////////////\n  /// NANITE\n  nanite: {\n    preprocess: {\n      meshletMaxVertices: 64,\n      meshletMaxTriangles: 128,\n      meshletBackfaceCullingConeWeight: 1.0,\n      /** Reduce triangle count per each level. */\n      simplificationDecimateFactor: 2,\n      /**\n       * If you have 100 triangles you expect to simplify into 50. But if the simplification is not possible, you might end up with e.g. 90 triangles (simplification factor 0.9). At this point stop the process for this part of the mesh.\n       * > THIS CHECK IS ON PER-MERGED-MESHLETS BASIS.\n       *\n       * Setting this to >1.0 disables this check.\n       */\n      simplificationFactorRequirement: 1.1, // 0.97?\n      /**\n       * If you have 100 triangles you expect to simplify into 50. But if the simplification is not possible, you might end up with e.g. 90 triangles (simplification factor 0.9). At this point stop the ENTIRE process.\n       * > THIS CHECK IS DONE BEFORE STARTING NEXT LOD-HIERARCHY-LEVEL.\n       *\n       * Setting this to >1.0 disables this check.\n       */\n      simplificationFactorRequirementBetweenLevels: 0.97,\n      /** target_error for meshoptimizer */\n      simplificationTargetError: 0.05,\n      /** Multiplier for 'simplificationTargetError' the higher you go up the LOD tree */\n      simplificationTargetErrorMultiplier: 1.1,\n      /** We half triangle count each time. Each meshlet is 124 triangles.\n       * $2^{MAX_LODS}*124$. E.g. MAX_LODS=15 gives 4M. Vertices above would\n       * lead to many top-level tree nodes. Suboptimal, but not incorrect.\n       */\n      maxLods: 20,\n      /** Select algo. to use */\n      useMapToFindAdjacentEdges: true,\n      /** Go to Devtools->Performance to check Chrome's log */\n      enableProfiler: false,\n    },\n    render: {\n      naniteDevice: 'gpu' as NaniteDevice,\n      /**\n       * If projected error of the LOD is lower then this, then the LOD is rendered.\n       * High value -> high acceptable error -> coarse LOD.\n       */\n      errorThreshold: 0.5,\n      /** See cull meshlets pass shader to compare 2 implementations */\n      useVisibilityImpl_Iter: true,\n      /** Stop updating visbilit buffer (for debug) */\n      freezeGPU_Visibilty: false,\n      /** Next frame will do an expensive GPU->CPU readback to check content of the GPU 'drawn meshlets' buffer */\n      nextFrameDebugDrawnMeshletsBuffer: false,\n      shadingMode: SHADING_MODE_PBR,\n      isOverrideOcclusionCullMipmap: false,\n      occlusionCullOverrideMipmapLevel: 0,\n      /** Need 1st render first! */\n      hasValidDepthPyramid: false,\n      /** Hardware cull should be 'back'. Yet if some model has wrong winding\n       * I would refuse to spend hours debugging thinking it's a disappearing meshlet.\n       * Just use normal 3D software?\n       */\n      allowHardwareBackfaceCull: true,\n    },\n  },\n};\n\nexport function isSoftwareRasterizerEnabled() {\n  const swr = CONFIG.softwareRasterizer;\n  const enabled = swr.enabled;\n  const wouldReturnAnything = swr.threshold > 0;\n\n  // Triangle was 1x1 px and now you move camera to make it fullscreen?\n  // And by triangle I mean 10+ million triangles.\n  const potentiallyDangerous = CONFIG.nanite.render.freezeGPU_Visibilty;\n\n  // require any culling just for stability\n  // hardware rasterizing millions of (tiny) triangles is a TERRIBLE idea,\n  // but software rasterizing drives Chrome into an.. overdrive.\n  const ci = CONFIG.cullingInstances;\n  const hasInstanceCull =\n    ci.enabled && (ci.frustumCulling || ci.occlusionCulling);\n  const cm = CONFIG.cullingMeshlets;\n  const hasMshlCull = cm.frustumCulling || cm.occlusionCulling;\n  const hasAnyCulling = hasInstanceCull || hasMshlCull;\n\n  return (\n    enabled && wouldReturnAnything && !potentiallyDangerous && hasAnyCulling\n  );\n}\n", "import { Mat4, mat4, vec4, Vec4, Vec3 } from 'wgpu-matrix';\nimport {\n  BYTES_U32,\n  CAMERA_CFG,\n  CO_PER_VERTEX,\n  VERTS_IN_TRIANGLE,\n} from '../constants.ts';\n\nimport './wasm-types.d.ts';\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport type ValueOf<T> = T[keyof T];\n\n/** Remove readonly from object properties */\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport const dgr2rad = (dgr: number) => (dgr * Math.PI) / 180;\n\nexport function createCameraProjectionMat(viewportSize: Dimensions): Mat4 {\n  const aspectRatio = viewportSize.width / viewportSize.height;\n\n  return mat4.perspective(\n    dgr2rad(CAMERA_CFG.fovDgr),\n    aspectRatio,\n    CAMERA_CFG.near,\n    CAMERA_CFG.far\n  );\n}\n\nexport function getViewProjectionMatrix(\n  viewMat: Mat4,\n  projMat: Mat4,\n  result?: Mat4\n): Mat4 {\n  return mat4.multiply(projMat, viewMat, result);\n}\n\nexport function getModelViewProjectionMatrix(\n  modelMat: Mat4,\n  viewMat: Mat4,\n  projMat: Mat4,\n  result?: Mat4\n): Mat4 {\n  result = mat4.multiply(viewMat, modelMat, result);\n  result = mat4.multiply(projMat, result, result);\n  return result;\n}\n\nexport function projectPoint(mvpMatrix: Mat4, p: Vec4 | Vec3, result?: Vec4) {\n  let v: Vec4;\n  if (p.length === 4) {\n    if (p[3] !== 1) throw new Error(`Tried to project a point, but provided Vec4 has .w !== 1`); // prettier-ignore\n    v = p;\n  } else {\n    v = vec4.create(p[0], p[1], p[2], 1);\n  }\n  return vec4.transformMat4(v, mvpMatrix, result);\n}\n\n/** debug matrix to string */\nexport function dbgMat(m: Float32Array | Mat4) {\n  const s = Math.floor(Math.sqrt(m.length));\n  let result = '';\n  for (let i = 0; i < m.length; i++) {\n    if (i % s === 0) result += '\\n';\n    else result += '   ';\n    result += m[i].toFixed(2);\n  }\n  return `[${result}\\n]`;\n}\n\nexport function getClassName(a: object) {\n  // deno-lint-ignore no-explicit-any\n  return (a as any).constructor.name;\n}\n\n// deno-lint-ignore no-explicit-any\nexport function getTypeName(a: any) {\n  if (Array.isArray(a)) return 'Array';\n  if (typeof a === 'object') return getClassName(a);\n  return typeof a;\n}\n\nexport const createArray = (len: number) => Array(len).fill(0);\n\ntype TypedArrayConstructor<T extends TypedArray> = new (len: number) => T;\n\nexport function copyToTypedArray<T extends TypedArray>(\n  TypedArrayClass: TypedArrayConstructor<T>,\n  data: number[]\n): T {\n  const result = new TypedArrayClass(data.length);\n  data.forEach((e, idx) => (result[idx] = e));\n  return result;\n}\n\nexport function ensureTypedArray<T extends TypedArray>(\n  TypedArrayClass: TypedArrayConstructor<T>,\n  data: T | number[]\n): T {\n  if (data instanceof TypedArrayClass) {\n    return data;\n  } else {\n    // deno-lint-ignore no-explicit-any\n    return copyToTypedArray(TypedArrayClass, data as any);\n  }\n}\n\nexport const lerp = (a: number, b: number, fac: number) => {\n  fac = Math.max(0, Math.min(1, fac));\n  return a * (1 - fac) + b * fac;\n};\n\nexport const getTriangleCount = (indices: Uint32Array | number[] | number) =>\n  typeof indices === 'number'\n    ? indices / VERTS_IN_TRIANGLE\n    : indices.length / VERTS_IN_TRIANGLE;\n\nexport const getVertexCount = (verts: Float32Array | number[] | number) =>\n  typeof verts === 'number'\n    ? verts / CO_PER_VERTEX\n    : verts.length / CO_PER_VERTEX;\n\nexport const getBytesForTriangles = (triCnt: number) =>\n  triCnt * VERTS_IN_TRIANGLE * BYTES_U32;\n\nexport function printMinMax(name: string, arr: TypedArray | number[]) {\n  console.log(name, `min(${Math.min(...arr)})`, `max(${Math.max(...arr)})`);\n}\n\nexport function formatBytes(bytes: number, decimals = 2) {\n  if (bytes <= 0) return '0 Bytes';\n\n  // prettier-ignore\n  const units = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n  const k = 1024;\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  const v = (bytes / Math.pow(k, i)).toFixed(decimals);\n  return `${v} ${units[i]}`;\n}\n\nexport function formatNumber(num: number, decimals = 2) {\n  if (num === 0) return '0';\n  const sign = num < 0 ? '-' : '';\n  num = Math.abs(num);\n\n  const units = ['', 'k', 'm', 'b'];\n  const k = 1000;\n  const i = Math.floor(Math.log(num) / Math.log(k));\n  const v = (num / Math.pow(k, i)).toFixed(decimals);\n  return `${sign}${v}${units[i]}`;\n}\n\n/** Format 4 out of 100 into: '4 (4%)' */\nexport function formatPercentageNumber(actual: number, total: number) {\n  const percent = total > 0 ? (actual / total) * 100.0 : 0;\n  return `${formatNumber(actual)} (${percent.toFixed(1)}%)`;\n}\n\n// deno-lint-ignore no-explicit-any\nexport function once(fn: (...arg1: any[]) => void) {\n  let fired = false;\n  // deno-lint-ignore no-explicit-any\n  return (...arg1: any[]) => {\n    if (fired) return;\n    fired = true;\n    fn(...arg1);\n  };\n}\n\nexport const isHtmlElVisible = (el: HTMLElement | null) => {\n  return el && el.style.display !== 'none';\n};\n\nexport const showHtmlEl = (\n  el: HTMLElement | null,\n  display: 'block' | 'flex' = 'block'\n) => {\n  if (el) el.style.display = display;\n};\n\nexport const hideHtmlEl = (el: HTMLElement | null) => {\n  if (el) el.style.display = 'none';\n};\n\nexport const ensureHtmlElIsVisible = (\n  el: HTMLElement | null,\n  nextVisible: boolean\n) => {\n  const isVisible = isHtmlElVisible(el);\n  if (isVisible === nextVisible) return;\n\n  // console.log('HTML change visible to', nextVisible);\n  if (nextVisible) {\n    showHtmlEl(el);\n  } else {\n    hideHtmlEl(el);\n  }\n};\n\nexport const randomBetween = (start: number, end: number) => {\n  return lerp(start, end, Math.random());\n};\n\nexport function clamp(x: number, min: number, max: number): number {\n  return Math.min(Math.max(x, min), max);\n}\n\nexport function debounce<T extends unknown[]>(\n  callback: (...args: T) => void,\n  wait: number\n) {\n  let timer: number;\n\n  return (...args: T): void => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), wait);\n  };\n}\n\nexport const f32_to_u8 = (x: number) => Math.floor(x * 255);\nexport const u8_to_f32 = (x: number) => (x & 0xff) / 255.0;\n\nexport function replaceFileExt(filePath: string, nextExt: string) {\n  const pos = filePath.includes('.')\n    ? filePath.lastIndexOf('.')\n    : filePath.length;\n  const fileRoot = filePath.substring(0, pos);\n  nextExt = nextExt.startsWith('.') ? nextExt : `.${nextExt}`;\n  return `${fileRoot}${nextExt}`;\n}\n", "import { Mat4 } from 'wgpu-matrix';\nimport {\n  Dimensions,\n  ensureTypedArray,\n  getClassName,\n  getTypeName,\n} from './index.ts';\nimport { CONFIG } from '../constants.ts';\n\nexport const WEBGPU_MINIMAL_BUFFER_SIZE = 256;\n\nexport async function createGpuDevice() {\n  try {\n    const adapter = await navigator.gpu.requestAdapter({\n      powerPreference: 'high-performance',\n    });\n    const onError = (msg: string) =>\n      console.error(`WebGPU init error: '${msg}'`);\n\n    if (!adapter) {\n      // On web: check if https. On ff, WebGPU is under dev flag.\n      onError('No adapter found. WebGPU seems to be unavailable.');\n      return;\n    }\n\n    const canTimestamp = adapter.features.has('timestamp-query');\n    const requiredFeatures: GPUFeatureName[] = ['float32-filterable'];\n    if (canTimestamp) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    const device = await adapter?.requestDevice({ requiredFeatures });\n    if (!device) {\n      onError('Failed to get GPUDevice from the adapter.');\n      return;\n    }\n\n    return device;\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n}\n\nexport const GPU_BUFFER_USAGE_UNIFORM: GPUBufferUsageFlags =\n  GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST;\n\nexport function createGPUBuffer<T extends TypedArray>(\n  device: GPUDevice,\n  label: string,\n  usage: GPUBufferUsageFlags,\n  data: T\n) {\n  const gpuBuffer = device.createBuffer({\n    label,\n    size: data.byteLength,\n    usage,\n  });\n  /*console.log(`create buffer [${label}]`, {\n    dataLen: data.length,\n    dataBytes: data.byteLength,\n    gpuSize: gpuBuffer.size,\n    data,\n  });*/\n  device.queue.writeBuffer(gpuBuffer, 0, data);\n  return gpuBuffer;\n}\n\nexport function createGPU_VertexBuffer(\n  device: GPUDevice,\n  label: string,\n  data: Float32Array | number[],\n  extraUsage: GPUBufferUsage = 0\n) {\n  const dataTypedArr = ensureTypedArray(Float32Array, data);\n  return createGPUBuffer(\n    device,\n    label,\n    GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST | (extraUsage as number),\n    dataTypedArr\n  );\n}\n\nexport function createGPU_IndexBuffer(\n  device: GPUDevice,\n  label: string,\n  data: Uint32Array | number[]\n) {\n  const dataTypedArr = ensureTypedArray(Uint32Array, data);\n  return createGPUBuffer(\n    device,\n    label,\n    GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\n    dataTypedArr\n  );\n}\n\nexport function createGPU_StorageBuffer(\n  device: GPUDevice,\n  label: string,\n  data: Uint32Array | Float32Array\n) {\n  const clName = getClassName(data);\n  if (clName !== Uint32Array.name && clName !== Float32Array.name) {\n    throw new Error(`Invalid data provided to createGPU_StorageBuffer(). Expected TypedArray, got ${clName}`) // prettier-ignore\n  }\n\n  return createGPUBuffer(\n    device,\n    label,\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n    data\n  );\n}\n\nexport function writeMatrixToGPUBuffer(\n  device: GPUDevice,\n  gpuBuffer: GPUBuffer,\n  offsetBytes: number,\n  data: Mat4\n) {\n  // deno-lint-ignore no-explicit-any\n  const f32Arr: Float32Array = data as any;\n  device.queue.writeBuffer(gpuBuffer, offsetBytes, f32Arr.buffer, 0);\n}\n\nexport const getItemsPerThread = (items: number, threads: number) =>\n  Math.ceil(items / threads);\n\n///////////////\n/// Readback GPU->CPU\n\nexport function createReadbackBuffer(device: GPUDevice, orgBuffer: GPUBuffer) {\n  return device.createBuffer({\n    label: `${orgBuffer}-readback-buffer`,\n    size: orgBuffer.size,\n    usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n  });\n}\n\nexport function cmdCopyToReadbackBuffer(\n  cmdBuf: GPUCommandEncoder,\n  orgBuffer: GPUBuffer,\n  readbackBuffer: GPUBuffer\n) {\n  cmdBuf.copyBufferToBuffer(orgBuffer, 0, readbackBuffer, 0, orgBuffer.size);\n}\n\nexport async function readBufferToCPU<T>(\n  TypedArrayClass: { new (a: ArrayBuffer): T },\n  buffer: GPUBuffer\n): Promise<T> {\n  await buffer.mapAsync(GPUMapMode.READ);\n  const arrayBufferData = buffer.getMappedRange();\n  // use slice() to copy. The 'arrayBufferData' might be deallocated after unmap (chrome)\n  const resultData = new TypedArrayClass(arrayBufferData.slice(0));\n  buffer.unmap();\n  return resultData;\n}\n\nexport async function downloadBuffer<T>(\n  device: GPUDevice,\n  TypedArrayClass: { new (a: ArrayBuffer): T },\n  orgBuffer: GPUBuffer\n) {\n  if (!CONFIG.isTest) {\n    console.warn(`Reading '${orgBuffer.label}' buffer back to CPU. This is slow!`); // prettier-ignore\n  }\n\n  let readbackBuffer: GPUBuffer | undefined = undefined;\n  try {\n    readbackBuffer = createReadbackBuffer(device, orgBuffer);\n\n    // copy using command\n    const cmdBuf = device.createCommandEncoder({\n      label: `${orgBuffer.label}-readback`,\n    });\n    cmdCopyToReadbackBuffer(cmdBuf, orgBuffer, readbackBuffer);\n    device.queue.submit([cmdBuf.finish()]);\n\n    // Warning: try-catch with promises\n    const result = await readBufferToCPU(TypedArrayClass, readbackBuffer);\n\n    return result;\n  } catch (e) {\n    throw e;\n  } finally {\n    if (readbackBuffer) {\n      // readbackBuffer.unmap(); // already unmapped by readBufferToCPU()\n      readbackBuffer.destroy();\n    }\n  }\n}\n\n///////////////\n/// Texture -> Buffer readback\n\n/** When reading data from texture to buffer, we need to provide alignments */\nexport function getPaddedBytesPerRow(width: number, bytesPerPixel: number) {\n  const unpaddedBytesPerRow = width * bytesPerPixel;\n  const align = 256; // COPY_BYTES_PER_ROW_ALIGNMENT\n  const paddedBytesPerRowPadding =\n    (align - (unpaddedBytesPerRow % align)) % align;\n  return unpaddedBytesPerRow + paddedBytesPerRowPadding;\n}\n\n/** https://github.com/chirsz-ever/deno/blob/2cf21a4aea99ed8cb7530e43c8d68b9c4a84ea3e/tests/unit/webgpu_test.ts#L182 */\nexport function createReadbackBufferFromTexture(\n  device: GPUDevice,\n  dims: Dimensions,\n  bytesPerPixel: number\n) {\n  const paddedBytesPerRow = getPaddedBytesPerRow(dims.width, bytesPerPixel);\n  return device.createBuffer({\n    label: 'test-readback',\n    size: dims.height * paddedBytesPerRow,\n    usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n  });\n}\n\nexport function cmdCopyTextureToBuffer(\n  cmdBuf: GPUCommandEncoder,\n  texture: GPUTexture,\n  bytesPerPixel: number,\n  buffer: GPUBuffer,\n  mipLevel?: {\n    miplevel: number;\n    width: number;\n    height: number;\n  }\n) {\n  const width = mipLevel?.width || texture.width;\n  const height = mipLevel?.height || texture.height;\n\n  const paddedBytesPerRow = getPaddedBytesPerRow(width, bytesPerPixel);\n  cmdBuf.copyTextureToBuffer(\n    { texture, mipLevel: mipLevel?.miplevel },\n    {\n      buffer,\n      bytesPerRow: paddedBytesPerRow,\n      rowsPerImage: height,\n    },\n    { width, height }\n  );\n}\n\n///////////////\n/// Utils\n\n// deno-lint-ignore no-explicit-any\nexport const isGPUTextureView = (maybeTexView: any) =>\n  typeof maybeTexView === 'object' &&\n  getClassName(maybeTexView) === GPUTextureView.name;\n\n/** TS typings do not see difference between GPUTexture and GPUTextureView */\n// deno-lint-ignore no-explicit-any\nexport const assertIsGPUTextureView = (maybeTexView: any) => {\n  if (!isGPUTextureView(maybeTexView)) {\n    throw new Error(\n      `Expected ${GPUTextureView.name}, got ${getTypeName(maybeTexView)}`\n    );\n  }\n};\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return obj instanceof Function;\n  }\n\n};\n\nexport default Common;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0\n            )\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*,\\s*(\\S+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    });\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n      this.__state.space = 'HEX';\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n      {\n        const clientX = params.x || params.clientX || 0;\n        const clientY = params.y || params.clientY || 0;\n        evt.initMouseEvent(eventType, params.bubbles || false,\n          params.cancelable || true, window, params.clickCount || 1,\n          0, // screen X\n          0, // screen Y\n          clientX, // client X\n          clientY, // client Y\n          false, false, false, false, 0, null);\n        break;\n      }\n      case 'KeyboardEvents':\n      {\n        const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n        common.defaults(params, {\n          cancelable: true,\n          ctrlKey: false,\n          altKey: false,\n          shiftKey: false,\n          metaKey: false,\n          keyCode: undefined,\n          charCode: undefined\n        });\n        init(eventType, params.bubbles || false,\n          params.cancelable, window,\n          params.ctrlKey, params.altKey,\n          params.shiftKey, params.metaKey,\n          params.keyCode, params.charCode);\n        break;\n      }\n      default:\n      {\n        evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n        break;\n      }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n      //      width: '120px',\n      textAlign: 'center',\n      //      padding: '4px',\n      //      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n", "const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n          arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from './dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n    //    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n    //    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n  //    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          }\n        );\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n", "/**\n * dat-gui JavaScript Controller Library\n * https://github.com/dataarts/dat.gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n", "import { meshopt_Meshlets } from '../meshPreprocessing/createMeshlets.types.ts';\nimport { GPUOriginalMesh } from './GPUOriginalMesh.ts';\nimport { NaniteObject } from './naniteObject.ts';\n\nexport interface Scene {\n  naniteObjects: NaniteObject[];\n  debugMeshes: DebugMeshes;\n  fallbackDiffuseTexture: GPUTexture;\n  /** Texture with neutral (probably grey) color */\n  fallbackDiffuseTextureView: GPUTextureView;\n  samplerNearest: GPUSampler;\n  samplerLinear: GPUSampler;\n\n  // stats\n  /** Triangle count as imported from .OBJ file. This is how much you would render if you did not have nanite */\n  naiveTriangleCount: number;\n  /** Bottom-level meshlets. We don't want to render them, we want something higher-up the LOD tree to reduce triangle count */\n  naiveMeshletCount: number;\n  /** Sum of instance count over all objects */\n  totalInstancesCount: number;\n}\n\nexport function getDebugTestObject(scene: Scene): [DebugMeshes, NaniteObject] {\n  return [scene.debugMeshes, scene.naniteObjects[0]];\n}\n\nexport const getDiffuseTexture = (scene: Scene, naniteObject: NaniteObject) =>\n  naniteObject.diffuseTextureView || scene.fallbackDiffuseTextureView;\n\nexport interface DebugMeshes {\n  mesh: GPUOriginalMesh;\n  meshlets: MeshletRenderPckg;\n  meshoptimizerLODs: GPUOriginalMesh[];\n  meshoptimizerMeshletLODs: MeshletRenderPckg[];\n}\n\n/** Used only in debug */\nexport type MeshletRenderPckg = meshopt_Meshlets & {\n  vertexBuffer: GPUBuffer;\n  indexBuffer: GPUBuffer;\n};\n", "import { BYTES_U64, NANO_TO_MILISECONDS } from './constants.ts';\n\n/// Big amount of queries to never have to carry about it\nconst MAX_QUERY_COUNT = 1024;\n/// Each pass has BEGIN and END timestamp query\nconst QUERIES_PER_PASS = 2;\nconst TOTAL_MAX_QUERIES = MAX_QUERY_COUNT * QUERIES_PER_PASS;\n\ntype GpuProfilerResultItem = [string, number];\nexport type GpuProfilerResult = Array<[string, number]>;\n\nexport type ProfilerRegionId = number | undefined;\n\nexport const getProfilerTimestamp = () => performance.now();\n\nexport const getDeltaFromTimestampMS = (start: number) => {\n  const end = getProfilerTimestamp();\n  return end - start;\n};\n\n/**\n * https://github.com/Scthe/Rust-Vulkan-TressFX/blob/master/src/gpu_profiler.rs\n *\n * webgpu API: https://webgpufundamentals.org/webgpu/lessons/webgpu-timing.html\n */\nexport class GpuProfiler {\n  private _profileThisFrame = false;\n  private readonly hasRequiredFeature: boolean;\n  private readonly queryPool: GPUQuerySet;\n  private readonly queryInProgressBuffer: GPUBuffer;\n  private readonly resultsBuffer: GPUBuffer;\n\n  private currentFrameScopes: Array<[string, 'cpu' | 'gpu', number]> = [];\n\n  get enabled() {\n    return this._profileThisFrame && this.hasRequiredFeature;\n  }\n\n  constructor(device: GPUDevice) {\n    this.hasRequiredFeature = device.features.has('timestamp-query');\n    if (!this.hasRequiredFeature) {\n      // we should never use them if no feature available\n      this.queryPool = undefined!;\n      this.queryInProgressBuffer = undefined!;\n      this.resultsBuffer = undefined!;\n      return;\n    }\n\n    this.queryPool = device.createQuerySet({\n      type: 'timestamp',\n      count: TOTAL_MAX_QUERIES,\n    });\n\n    this.queryInProgressBuffer = device.createBuffer({\n      label: 'profiler-in-progress',\n      size: this.queryPool.count * BYTES_U64,\n      usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC,\n    });\n    this.resultsBuffer = device.createBuffer({\n      label: 'profiler-results',\n      size: this.queryInProgressBuffer.size,\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n    });\n  }\n\n  profileNextFrame(enabled: boolean) {\n    this._profileThisFrame = enabled;\n  }\n\n  beginFrame() {\n    while (this.currentFrameScopes.length > 0) {\n      this.currentFrameScopes.pop();\n    }\n  }\n\n  endFrame(cmdBuf: GPUCommandEncoder) {\n    if (!this.enabled) {\n      return;\n    }\n\n    const queryCount = this.currentFrameScopes.length * QUERIES_PER_PASS;\n    cmdBuf.resolveQuerySet(\n      this.queryPool,\n      0,\n      queryCount,\n      this.queryInProgressBuffer,\n      0\n    );\n    if (this.resultsBuffer.mapState === 'unmapped') {\n      cmdBuf.copyBufferToBuffer(\n        this.queryInProgressBuffer,\n        0,\n        this.resultsBuffer,\n        0,\n        this.resultsBuffer.size\n      );\n    }\n  }\n\n  async scheduleRaportIfNeededAsync(onResult?: (e: GpuProfilerResult) => void) {\n    if (!this.enabled || this.currentFrameScopes.length == 0) {\n      this._profileThisFrame = false;\n      return;\n    }\n\n    this._profileThisFrame = false;\n    const scopeNames = this.currentFrameScopes.slice();\n\n    if (this.resultsBuffer.mapState === 'unmapped') {\n      await this.resultsBuffer.mapAsync(GPUMapMode.READ);\n      const times = new BigInt64Array(this.resultsBuffer.getMappedRange());\n      const result = scopeNames.map(\n        ([name, type, cpuTime], idx): GpuProfilerResultItem => {\n          let time = 0;\n          if (type === 'gpu') {\n            const start = times[idx * QUERIES_PER_PASS];\n            const end = times[idx * QUERIES_PER_PASS + 1];\n            time = Number(end - start) * NANO_TO_MILISECONDS;\n          } else {\n            time = cpuTime;\n          }\n          return [name, time];\n        }\n      );\n      this.resultsBuffer.unmap();\n\n      onResult?.(result);\n    }\n  }\n\n  /** Provide to beginCompute/beginRenderPass's `timestampWrites` */\n  createScopeGpu(name: string): GPURenderPassTimestampWrites | undefined {\n    if (!this.enabled) {\n      return undefined;\n    }\n\n    const queryId = this.currentFrameScopes.length;\n    this.currentFrameScopes.push([name, 'gpu', 0]);\n\n    return {\n      querySet: this.queryPool,\n      beginningOfPassWriteIndex: queryId * QUERIES_PER_PASS,\n      endOfPassWriteIndex: queryId * QUERIES_PER_PASS + 1,\n    };\n  }\n\n  /*\n  NOTE: The geniuses actually removed this feature... WTF?!\n\n  /**If you want to start/end code block manually * /\n  startRegionGpu(cmdBuf: GPUCommandEncoder, name: string): ProfilerRegionId {\n    if (!this.enabled) {\n      return undefined;\n    }\n\n    const queryId = this.currentFrameScopes.length;\n    this.currentFrameScopes.push([name, 'gpu', 0]);\n    cmdBuf.writeTimestamp(this.queryPool, queryId * 2);\n\n    return queryId;\n  }\n\n  endRegionGpu(cmdBuf: GPUCommandEncoder, token: ProfilerRegionId) {\n    if (!this.enabled || token === undefined) return;\n\n    cmdBuf.writeTimestamp(this.queryPool, token * 2 + 1);\n  }\n  */\n\n  startRegionCpu(name: string): ProfilerRegionId {\n    if (!this.enabled) {\n      return undefined;\n    }\n\n    const queryId = this.currentFrameScopes.length;\n    const now = performance.now();\n    this.currentFrameScopes.push([name, 'cpu', now]);\n    return queryId;\n  }\n\n  endRegionCpu(token: ProfilerRegionId) {\n    if (!this.enabled || token === undefined) return;\n\n    const el = this.currentFrameScopes[token];\n    if (el) {\n      const [_, _2, start] = el;\n      el[2] = getDeltaFromTimestampMS(start);\n    }\n  }\n}\n", "import { CONFIG, NaniteDevice } from '../constants.ts';\nimport { getProfilerTimestamp } from '../gpuProfiler.ts';\nimport { hideHtmlEl, isHtmlElVisible, showHtmlEl } from '../utils/index.ts';\n\ntype StatsValue = number | string;\n\ntype StatOpts = {\n  hideLabel?: boolean;\n  el?: HTMLElement;\n  visibilityDevice?: NaniteDevice;\n  categoryName?: string;\n};\n\n// prettier-ignore\nconst AvailableStats = {\n  fps: { hideLabel: true } as StatOpts,\n  ms: { hideLabel: true } as StatOpts,\n  'Camera pos WS': {} as StatOpts,\n  'Camera rot': {} as StatOpts,\n  // memory\n  s0: { categoryName: 'Memory' } as StatOpts,\n  'Index buffer': {} as StatOpts,\n  'Meshlets data': { visibilityDevice: 'gpu' } as StatOpts,\n  'Instance tfxs': { visibilityDevice: 'gpu' } as StatOpts,\n  'Drawn instances': { visibilityDevice: 'gpu' } as StatOpts,\n  'Drawn impostors': { visibilityDevice: 'gpu' } as StatOpts,\n  'Drawn meshlets': { visibilityDevice: 'gpu' } as StatOpts,\n  // Geometry\n  s1: { categoryName: 'Geometry' } as StatOpts,\n  'Preprocessing': {} as StatOpts,\n  'Scene meshlets': {} as StatOpts,\n  'Scene triangles': {} as StatOpts,\n  'Rendered impostors': { visibilityDevice: 'gpu' } as StatOpts,\n  'Rendered meshlets': {} as StatOpts,\n  'Rendered triangles': {} as StatOpts, // in GPU mode this does not count impostors\n  'HW: Rendered meshlets': { visibilityDevice: 'gpu' } as StatOpts,\n  'HW: Rendered triangles': { visibilityDevice: 'gpu' } as StatOpts,\n  'SW: Rendered meshlets': { visibilityDevice: 'gpu' } as StatOpts,\n  'SW: Rendered triangles': { visibilityDevice: 'gpu' } as StatOpts,\n};\ntype StatName = keyof typeof AvailableStats;\n\nconst DELTA_SMOOTHING = 0.95;\nconst UPDATE_FREQ_MS = 1000;\n\nclass Stats {\n  // deno-lint-ignore no-explicit-any\n  private values: Record<StatName, number | string> = {} as any;\n  private lastRenderedValues: Record<string, number | string> = {};\n  //\n  private frameStart: number = 0;\n  public deltaTimeMS = 0;\n  private deltaTimeSmoothMS: number | undefined = undefined;\n  // HTML\n  private parentEl: HTMLElement;\n  private lastDOMUpdate: number = 0;\n\n  constructor() {\n    // deno-lint-ignore no-window\n    if (window && window.document) {\n      this.parentEl = window.document.getElementById('stats-window')!;\n      this.frameStart = getProfilerTimestamp();\n      this.lastDOMUpdate = this.frameStart;\n    } else {\n      this.parentEl = undefined!;\n    }\n  }\n\n  update(name: StatName, value: StatsValue) {\n    this.values[name] = value;\n  }\n\n  show = () => showHtmlEl(this.parentEl);\n\n  onBeginFrame = () => {\n    this.frameStart = getProfilerTimestamp();\n  };\n\n  onEndFrame = () => {\n    const frameEnd = getProfilerTimestamp();\n    this.deltaTimeMS = frameEnd - this.frameStart;\n\n    if (this.deltaTimeSmoothMS === undefined) {\n      this.deltaTimeSmoothMS = this.deltaTimeMS;\n    } else {\n      // lerp\n      this.deltaTimeSmoothMS =\n        this.deltaTimeSmoothMS * DELTA_SMOOTHING +\n        this.deltaTimeMS * (1.0 - DELTA_SMOOTHING);\n    }\n\n    const fps = (1.0 / this.deltaTimeMS) * 1000;\n    this.update('fps', `${fps.toFixed(2)} fps`);\n    this.update('ms', `${this.deltaTimeMS.toFixed(2)}ms`);\n\n    if (frameEnd - this.lastDOMUpdate > UPDATE_FREQ_MS) {\n      this.lastDOMUpdate = frameEnd;\n      setTimeout(this.renderStats, 0);\n    }\n  };\n\n  private renderStats = () => {\n    const statsChildrenEls: HTMLElement[] = Array.from(\n      this.parentEl.children\n      // deno-lint-ignore no-explicit-any\n    ) as any;\n\n    Object.entries(AvailableStats).forEach(([name_, opts]) => {\n      // deno-lint-ignore no-explicit-any\n      const name: StatName = name_ as any; // ...TS\n      const el = this.getStatsHtmlEl(statsChildrenEls, name, opts);\n\n      if (opts.categoryName) {\n        if (el.textContent !== opts.categoryName)\n          el.innerHTML = opts.categoryName;\n        el.classList.add('stats-category-name');\n        return;\n      }\n\n      // do not update if not visible\n      if (!this.checkVisibility(opts, el)) return;\n\n      // do not update if not changed\n      const value = this.values[name];\n      const shownValue = this.lastRenderedValues[name];\n      // if (name === 'Nanite triangles') console.log({ value, shownValue }); // dbg\n      if (value == shownValue) return;\n\n      let text = `${name}: ${value}`;\n      if (opts.hideLabel) {\n        text = String(value);\n      }\n      el.innerHTML = text;\n    });\n\n    this.lastRenderedValues = { ...this.values };\n  };\n\n  private getStatsHtmlEl = (\n    els: HTMLElement[],\n    name: StatName,\n    opts: StatOpts\n  ): HTMLElement => {\n    const STATS_ATTR = 'data-stats-attr';\n\n    if (opts.el) return opts.el;\n    let el = els.find(\n      (el: HTMLElement) => el.getAttribute(STATS_ATTR) === name\n    );\n\n    if (!el) {\n      el = document.createElement('p');\n      el.setAttribute(STATS_ATTR, name);\n      this.parentEl.appendChild(el);\n    }\n    opts.el = el;\n    return el;\n  };\n\n  private checkVisibility(opts: StatOpts, el: HTMLElement) {\n    if (!opts.visibilityDevice) return true;\n\n    const nextVisible =\n      opts.visibilityDevice === CONFIG.nanite.render.naniteDevice;\n    this.setElVisible(el, nextVisible);\n    return nextVisible;\n  }\n\n  setElVisible(el: HTMLElement, nextVisible: boolean) {\n    if (nextVisible && !isHtmlElVisible(el)) {\n      // console.log('setElVisible', el, nextVisible);\n      showHtmlEl(el);\n      this.lastRenderedValues = {}; // force rerender all\n    }\n    if (!nextVisible && isHtmlElVisible(el)) {\n      // console.log('setElVisible', el, nextVisible);\n      hideHtmlEl(el);\n      this.lastRenderedValues = {}; // force rerender all\n    }\n  }\n}\n\nexport const STATS = new Stats();\n", "import { CONFIG, DEPTH_FORMAT } from '../constants.ts';\nimport { Scene } from '../scene/scene.ts';\nimport { STATS } from '../sys_web/stats.ts';\nimport { formatPercentageNumber } from '../utils/index.ts';\n\ntype PassClass = { NAME: string };\n\nexport const createLabel = (pass: PassClass, name = '') =>\n  `${pass.NAME}${name ? '-' + name : ''}`;\n\nexport const labelShader = (pass: PassClass) => `${pass.NAME}-shader`;\nexport const labelPipeline = (pass: PassClass, name = '') =>\n  `${createLabel(pass, name)}-pipeline`;\nexport const labelUniformBindings = (pass: PassClass, name = '') =>\n  `${createLabel(pass, name)}-uniforms`;\n\nexport const getClearColorVec3 = () =>\n  CONFIG.useAlternativeClearColor ? CONFIG.clearColorAlt : CONFIG.clearColor;\n\nexport const PIPELINE_PRIMITIVE_TRIANGLE_LIST: GPUPrimitiveState = {\n  cullMode: CONFIG.nanite.render.allowHardwareBackfaceCull ? 'back' : 'none',\n  topology: 'triangle-list',\n  stripIndexFormat: undefined,\n};\n\nexport const PIPELINE_DEPTH_STENCIL_ON: GPUDepthStencilState = {\n  depthWriteEnabled: true,\n  depthCompare: 'less',\n  format: DEPTH_FORMAT,\n};\n\nexport const assignResourcesToBindings2 = (\n  pass: PassClass,\n  name: string,\n  device: GPUDevice,\n  pipeline: GPURenderPipeline | GPUComputePipeline,\n  entries: GPUBindGroupEntry[]\n) => {\n  const uniformsLayout = pipeline.getBindGroupLayout(0);\n  return device.createBindGroup({\n    label: labelUniformBindings(pass, name),\n    layout: uniformsLayout,\n    entries,\n  });\n};\n\nexport const assignResourcesToBindings = (\n  pass: PassClass,\n  device: GPUDevice,\n  pipeline: GPURenderPipeline | GPUComputePipeline,\n  entries: GPUBindGroupEntry[]\n) => {\n  return assignResourcesToBindings2(pass, '', device, pipeline, entries);\n};\n\nexport const useColorAttachment = (\n  colorTexture: GPUTextureView,\n  clearColor: number[],\n  loadOp: GPULoadOp = 'clear'\n): GPURenderPassColorAttachment => ({\n  view: colorTexture,\n  loadOp,\n  storeOp: 'store',\n  clearValue: [\n    clearColor[0],\n    clearColor[1],\n    clearColor[2],\n    clearColor[3] === undefined ? 1 : clearColor[3],\n  ],\n});\n\nexport const useDepthStencilAttachment = (\n  depthTexture: GPUTextureView,\n  depthLoadOp: GPULoadOp = 'clear'\n): GPURenderPassDepthStencilAttachment => ({\n  view: depthTexture,\n  depthClearValue: 1.0,\n  depthLoadOp,\n  depthStoreOp: 'store',\n});\n\nexport class BindingsCache {\n  private cache: Record<string, GPUBindGroup | undefined> = {};\n\n  getBindings(key: string, factory: () => GPUBindGroup): GPUBindGroup {\n    const cachedVal = this.cache[key];\n    if (cachedVal) {\n      return cachedVal;\n    }\n\n    const val = factory();\n    this.cache[key] = val;\n    return val;\n  }\n\n  clear() {\n    // Object.values(this.cache).forEach((bg) => {\n    // bg?.destroy(); // no such fn?\n    // });\n    this.cache = {};\n  }\n}\n\nexport function resetNaniteStats() {\n  STATS.update('Rendered meshlets', '-');\n  STATS.update('Rendered triangles', '-');\n  STATS.update('HW: Rendered meshlets', '-');\n  STATS.update('HW: Rendered triangles', '-');\n  STATS.update('SW: Rendered meshlets', '-');\n  STATS.update('SW: Rendered triangles', '-');\n  STATS.update('Rendered impostors', '-');\n}\n\nexport function setNaniteDrawStats(\n  scene: Scene,\n  drawnMeshletsCount: number,\n  drawnTriangleCount: number\n) {\n  STATS.update(\n    'Rendered meshlets',\n    formatPercentageNumber(drawnMeshletsCount, scene.naiveMeshletCount)\n  );\n\n  STATS.update(\n    'Rendered triangles',\n    formatPercentageNumber(drawnTriangleCount, scene.naiveTriangleCount)\n  );\n}\n\nexport function setNaniteDrawStatsHw_Sw(\n  drawnMeshletsHW: number,\n  drawnTrianglesHW: number,\n  drawnMeshletsSW: number,\n  drawnTrianglesSW: number\n) {\n  const totalMeshlets = drawnMeshletsHW + drawnMeshletsSW;\n  const totalTris = drawnTrianglesHW + drawnTrianglesSW;\n\n  STATS.update(\n    'HW: Rendered meshlets',\n    formatPercentageNumber(drawnMeshletsHW, totalMeshlets)\n  );\n  STATS.update(\n    'HW: Rendered triangles',\n    formatPercentageNumber(drawnTrianglesHW, totalTris)\n  );\n\n  STATS.update(\n    'SW: Rendered meshlets',\n    formatPercentageNumber(drawnMeshletsSW, totalMeshlets)\n  );\n  STATS.update(\n    'SW: Rendered triangles',\n    formatPercentageNumber(drawnTrianglesSW, totalTris)\n  );\n}\n\nexport function setNaniteDrawImpostorsStats(\n  drawnImpostors: number,\n  allInstances: number\n) {\n  STATS.update(\n    'Rendered impostors',\n    formatPercentageNumber(drawnImpostors, allInstances)\n  );\n}\n", "// @deno-types=\"npm:@types/dat.gui@0.7.9\"\nimport * as dat from 'dat.gui';\nimport {\n  CONFIG,\n  DisplayMode,\n  SHADING_MODE_HW_SW_IMPOSTOR,\n  SHADING_MODE_LOD_LEVEL,\n  SHADING_MODE_MESHLET,\n  SHADING_MODE_NORMALS,\n  SHADING_MODE_PBR,\n  SHADING_MODE_TRIANGLE,\n} from '../constants.ts';\nimport { GpuProfiler, GpuProfilerResult } from '../gpuProfiler.ts';\nimport { Scene, getDebugTestObject } from '../scene/scene.ts';\nimport { Camera } from '../camera.ts';\nimport { showHtmlEl } from '../utils/index.ts';\nimport { resetNaniteStats } from '../passes/_shared.ts';\n\n// https://github.com/Scthe/WebFX/blob/master/src/UISystem.ts#L13\n// https://github.com/Scthe/gaussian-splatting-webgpu/blob/master/src/web/gui.ts\n\nconst MAX_DEPTH_PYRAMID_LEVEL = 14;\n\nexport let setDisplayMode: undefined | ((e: DisplayMode) => unknown) =\n  undefined;\n\ntype GuiCtrl = dat.GUIController<Record<string, unknown>>;\n\nexport function initializeGUI(\n  profiler: GpuProfiler,\n  scene: Scene,\n  camera: Camera\n) {\n  // let softwareBackfaceCullCtrl: GuiCtrl;\n  let gpuFreezeVisiblityCtrl: GuiCtrl;\n  // let gpuVisiblityImplCtrl: GuiCtrl;\n  let _gpuShadingMode: GuiCtrl;\n  let gpuSoftwareRasterizerThrsh: GuiCtrl;\n\n  const gui = new dat.GUI();\n\n  const dummyObject = {\n    openGithub: () => {\n      window.location.href = CONFIG.githubRepoLink;\n    },\n    profile: () => {\n      profiler.profileNextFrame(true);\n    },\n    resetCamera: () => {\n      camera.resetPosition();\n    },\n    getGpuDrawStats: () => {\n      CONFIG.nanite.render.nextFrameDebugDrawnMeshletsBuffer = true;\n    },\n    showSwRasterAlert: () => {\n      alert(\n        \"WebGPU does not support atomic<u64> yet. I can't output both depth and color data with just 32 bits. Depth and normals are the best we get. And even that is a squeeze. What you see is the default white color affected by lights.\"\n      );\n    },\n  };\n\n  // github\n  gui.add(dummyObject, 'openGithub').name('GITHUB');\n\n  // profiler\n  gui.add(dummyObject, 'profile').name('Profile');\n\n  // GPU stats\n  const getGPUStatsCtrl = gui\n    .add(dummyObject, 'getGpuDrawStats')\n    .name('Get GPU stats');\n\n  addNaniteFolder();\n  addInstanceCullingFolder();\n  addMeshletCullingFolder();\n  addColorMgmt();\n  addDbgFolder();\n\n  // init visiblity\n  onVisiblityDeviceSwap();\n\n  function onVisiblityDeviceSwap() {\n    const nextDevice = CONFIG.nanite.render.naniteDevice;\n\n    resetNaniteStats();\n\n    // gpu\n    setVisible(getGPUStatsCtrl, nextDevice == 'gpu');\n    setVisible(gpuFreezeVisiblityCtrl, nextDevice == 'gpu');\n    setVisible(gpuSoftwareRasterizerThrsh, nextDevice == 'gpu');\n    // setVisible(gpuVisiblityImplCtrl, nextDevice == 'gpu');\n    // setVisible(gpuShadingMode, nextDevice == 'gpu'); // normals preview works on the CPU\n    // cpu\n    // setVisible(softwareBackfaceCullCtrl, nextDevice == 'cpu');\n  }\n\n  //////////////\n  /// subdirs\n\n  function addNaniteFolder() {\n    const dir = gui.addFolder('Nanite');\n    dir.open();\n\n    // nanite device: GPU/CPU\n    // prettier-ignore\n    const naniteDeviceDummy = createDummy(CONFIG.nanite.render, 'naniteDevice', [\n      { label: 'GPU', value: 'gpu' },\n      { label: 'CPU', value: 'cpu' },\n    ]);\n    // prettier-ignore\n    dir\n      .add(naniteDeviceDummy, 'naniteDevice', naniteDeviceDummy.values) // prettier-ignore\n      .name('Nanite device')\n      .onFinishChange(onVisiblityDeviceSwap);\n\n    // errorThreshold\n    dir\n      .add(CONFIG.nanite.render, 'errorThreshold', 0, 10)\n      .name('Error threshold');\n\n    // Visib. algo\n    // gpuVisiblityImplCtrl = dir\n    // .add(CONFIG.nanite.render, 'useVisibilityImpl_Iter')\n    // .name('Visib. algo ITER');\n\n    // shading mode\n    // prettier-ignore\n    const shadingDummy = createDummy(CONFIG.nanite.render, 'shadingMode', [\n      { label: 'Shaded', value: SHADING_MODE_PBR },\n      { label: 'Normals', value: SHADING_MODE_NORMALS },\n      { label: 'Triangles', value: SHADING_MODE_TRIANGLE },\n      { label: 'Meshlets', value: SHADING_MODE_MESHLET },\n      { label: 'LOD levels', value: SHADING_MODE_LOD_LEVEL },\n      { label: 'HW/SW/Impostor', value: SHADING_MODE_HW_SW_IMPOSTOR },\n    ]);\n    // prettier-ignore\n    _gpuShadingMode = dir\n      .add(shadingDummy, 'shadingMode', shadingDummy.values) // prettier-ignore\n      .name('Shading mode');\n\n    // freeze visibilty\n    gpuFreezeVisiblityCtrl = dir\n      .add(CONFIG.nanite.render, 'freezeGPU_Visibilty')\n      .name('Freeze culling');\n\n    dir\n      .add(dummyObject, 'showSwRasterAlert')\n      .name('Software rasterizer - README');\n\n    const cfgSr = CONFIG.softwareRasterizer;\n    dir.add(cfgSr, 'enabled').name('Softw. raster. enable');\n    gpuSoftwareRasterizerThrsh = dir\n      .add(cfgSr, 'threshold', 0.0, 2500.0)\n      .name('Softw. raster. threshold [px]');\n  }\n\n  function addInstanceCullingFolder() {\n    const dir = gui.addFolder('Instances culling');\n    dir.open();\n    const cfg = CONFIG.cullingInstances;\n    const imp = CONFIG.impostors;\n\n    dir.add(cfg, 'enabled').name('Enabled');\n    dir.add(cfg, 'frustumCulling').name('Frustum culling');\n    dir.add(cfg, 'occlusionCulling').name('Occlusion culling');\n    dir\n      .add(imp, 'billboardThreshold', 0.0, 8000.0)\n      .name('Billboard threshold [px]');\n    dir.add(imp, 'forceOnlyBillboards').name('Force billboards');\n    dir.add(imp, 'ditherStrength', 0.0, 1.0).name('Billboard dither');\n  }\n\n  function addMeshletCullingFolder() {\n    const dir = gui.addFolder('Meshlet culling');\n    dir.open();\n    const cfg = CONFIG.cullingMeshlets;\n    const cfgNanite = CONFIG.nanite.render;\n\n    // Frustum culling\n    dir.add(cfg, 'frustumCulling').name('Frustum culling');\n\n    // Occlusion culling\n    dir.add(cfg, 'occlusionCulling').name('Occlusion culling');\n    dir.add(cfgNanite, 'isOverrideOcclusionCullMipmap').name('OC override');\n    dir\n      .add(\n        cfgNanite,\n        'occlusionCullOverrideMipmapLevel',\n        0,\n        MAX_DEPTH_PYRAMID_LEVEL\n      )\n      .step(1)\n      .name('OC ov-ride lvl');\n\n    // SW backface cull\n    // softwareBackfaceCullCtrl = dir\n    // .add(cfg, 'useSoftwareBackfaceCull')\n    // .name('SW backface cull');\n  }\n\n  function addColorMgmt() {\n    const dir = gui.addFolder('Color mgmt');\n    const cfg = CONFIG.colors;\n\n    dir.add(cfg, 'gamma', 1.0, 3.0).name('Gamma');\n    dir.add(cfg, 'exposure', 0.0, 2.0).name('Exposure');\n    dir.add(cfg, 'ditherStrength', 0.0, 2.0).name('Dithering');\n  }\n\n  function addDbgFolder() {\n    const dir = gui.addFolder('DEBUG');\n    dir.open();\n\n    // bg\n    addColorController(dir, CONFIG, 'clearColor', 'Bg color');\n    dir.add(CONFIG, 'useAlternativeClearColor').name('Alt. bg');\n    dir.add(CONFIG, 'drawGround').name('Draw ground');\n\n    // display mode\n    const modeDummy = createDummy(CONFIG, 'displayMode', [\n      { label: 'Nanite', value: 'nanite' },\n      { label: 'DBG: lod', value: 'dbg-lod' },\n      { label: 'DBG: lod meshlets', value: 'dbg-lod-meshlets' },\n      { label: 'DBG: nanite meshlets', value: 'dbg-nanite-meshlets' },\n      { label: 'DBG: depth pyramid', value: 'dbg-depth-pyramid' },\n    ]);\n    const modeCtrl = dir\n      .add(modeDummy, 'displayMode', modeDummy.values)\n      .name('Display mode');\n    setDisplayMode = (e) => {\n      CONFIG.displayMode = e;\n      // deno-lint-ignore no-explicit-any\n      (modeCtrl as any).__onFinishChange();\n      modeCtrl.updateDisplay();\n    };\n\n    const [debugMeshes, naniteObject] = getDebugTestObject(scene);\n    let maxLod = debugMeshes.meshoptimizerLODs.length - 1;\n    const lodCtrl = dir\n      .add(CONFIG, 'dbgMeshoptimizerLodLevel', 0, maxLod)\n      .step(1)\n      .name('LOD level');\n\n    maxLod = naniteObject.lodLevelCount - 1; // 7 levels mean 0-6 on GUI\n    const naniteLodCtrl = dir\n      .add(CONFIG, 'dbgNaniteLodLevel', 0, maxLod)\n      .step(1)\n      .name('Nanite LOD');\n\n    const depthPyramidLevelCtrl = dir\n      .add(CONFIG, 'dbgDepthPyramidLevel', 0, MAX_DEPTH_PYRAMID_LEVEL)\n      .step(1)\n      .name('Pyramid level');\n\n    modeCtrl.onFinishChange(onDisplayModeChange);\n\n    // camera reset\n    dir.add(dummyObject, 'resetCamera').name('Reset camera');\n\n    // init\n    onDisplayModeChange();\n\n    function onDisplayModeChange() {\n      // in case camera moves when in !nanite mode and depth buffer is obsolete\n      // also executes during init, but should not crash anything\n      CONFIG.nanite.render.hasValidDepthPyramid = false;\n\n      const mode = CONFIG.displayMode;\n      const showLod = ['dbg-lod', 'dbg-lod-meshlets'].includes(mode);\n      setVisible(lodCtrl, showLod);\n      setVisible(naniteLodCtrl, mode === 'dbg-nanite-meshlets');\n      setVisible(depthPyramidLevelCtrl, mode === 'dbg-depth-pyramid');\n    }\n  }\n\n  //////////////\n  /// utils\n  function addColorController<T extends object>(\n    dir: dat.GUI,\n    obj: T,\n    prop: keyof T,\n    name: string\n  ) {\n    const dummy = {\n      value: [] as number[],\n    };\n\n    Object.defineProperty(dummy, 'value', {\n      enumerable: true,\n      get: () => {\n        // deno-lint-ignore no-explicit-any\n        const v = obj[prop] as any;\n        return [v[0] * 255, v[1] * 255, v[2] * 255];\n      },\n      set: (v: number[]) => {\n        // deno-lint-ignore no-explicit-any\n        const a = obj[prop] as any as number[];\n        a[0] = v[0] / 255;\n        a[1] = v[1] / 255;\n        a[2] = v[2] / 255;\n      },\n    });\n\n    dir.addColor(dummy, 'value').name(name);\n  }\n}\n\nfunction setVisible(ctrl: GuiCtrl, isVisible: boolean) {\n  if (!ctrl) {\n    // use stacktrace/debugger to identify which..\n    console.error(`Not controller for gui element found!`);\n    return;\n  }\n\n  // deno-lint-ignore no-explicit-any\n  const parentEl: HTMLElement = (ctrl as any).__li;\n\n  if (isVisible) {\n    parentEl.style.display = '';\n  } else {\n    parentEl.style.display = 'none';\n  }\n}\n\ninterface UiOpts<T> {\n  label: string;\n  value: T;\n}\n\n// deno-lint-ignore ban-types\nconst createDummy = <V extends Object, K extends keyof V>(\n  obj: V,\n  key: K,\n  opts: UiOpts<V[K]>[]\n): { values: string[] } & Record<K, string> => {\n  const dummy = {\n    values: opts.map((o) => o.label),\n  };\n\n  Object.defineProperty(dummy, key, {\n    enumerable: true,\n    get: () => {\n      const v = obj[key];\n      const opt = opts.find((e) => e.value === v) || opts[0];\n      return opt.label;\n    },\n    set: (selectedLabel: string) => {\n      const opt = opts.find((e) => e.label === selectedLabel) || opts[0];\n      obj[key] = opt.value;\n    },\n  });\n\n  // TS ignores Object.defineProperty and thinks we have not complete object\n  // deno-lint-ignore no-explicit-any\n  return dummy as any;\n};\n\nexport function onGpuProfilerResult(result: GpuProfilerResult) {\n  console.log('Profiler:', result);\n  const parentEl = document.getElementById('profiler-results')!;\n  parentEl.innerHTML = '';\n  // deno-lint-ignore no-explicit-any\n  showHtmlEl(parentEl.parentNode as any);\n\n  const mergeByName: Record<string, number> = {};\n  const names = new Set<string>();\n  result.forEach(([name, timeMs]) => {\n    const t = mergeByName[name] || 0;\n    mergeByName[name] = t + timeMs;\n    names.add(name);\n  });\n\n  names.forEach((name) => {\n    const timeMs = mergeByName[name];\n    const li = document.createElement('li');\n    li.innerHTML = `${name}: ${timeMs.toFixed(2)}ms`;\n    parentEl.appendChild(li);\n  });\n}\n", "/**************\n * Copied from official webgpu-samples repo under\n * 'BSD 3-Clause \"New\" or \"Revised\" License'.\n *\n * https://github.com/webgpu/webgpu-samples/blob/main/LICENSE.txt\n * https://webgpu.github.io/webgpu-samples/?sample=cameras\n */\n\nimport { CONFIG } from '../constants.ts';\nimport { setDisplayMode } from './gui.ts';\n\nconst Key = {\n  CAMERA_FORWARD: 'w',\n  CAMERA_BACK: 's',\n  CAMERA_LEFT: 'a',\n  CAMERA_RIGHT: 'd',\n  CAMERA_UP: ' ',\n  CAMERA_DOWN: 'z',\n  CAMERA_GO_FASTER: 'shift',\n  DEBUG_DEPTH: 'e',\n};\n\n// Input holds as snapshot of input state\nexport default interface Input {\n  // Digital input (e.g keyboard state)\n  readonly directions: {\n    forward: boolean;\n    backward: boolean;\n    left: boolean;\n    right: boolean;\n    up: boolean;\n    down: boolean;\n    goFaster: boolean;\n  };\n  // Analog input (e.g mouse, touchscreen)\n  readonly mouse: {\n    x: number;\n    y: number;\n    zoom: number;\n    touching: boolean;\n  };\n}\n\nexport const createMockInputState = (): Input => ({\n  directions: {\n    forward: false,\n    backward: false,\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n    goFaster: false,\n  },\n  mouse: {\n    x: 0,\n    y: 0,\n    zoom: 0,\n    touching: false,\n  },\n});\n\n// InputHandler is a function that when called, returns the current Input state.\nexport type InputHandler = () => Input;\n\n// createInputHandler returns an InputHandler by attaching event handlers to the window and canvas.\nexport function createInputHandler(\n  window: Window,\n  canvas: HTMLCanvasElement\n): InputHandler {\n  const { directions, mouse } = createMockInputState();\n\n  const setDigital = (e: KeyboardEvent, value: boolean) => {\n    switch (e.key.toLowerCase()) {\n      case Key.CAMERA_FORWARD:\n        directions.forward = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_BACK:\n        directions.backward = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_LEFT:\n        directions.left = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_RIGHT:\n        directions.right = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_UP:\n        directions.up = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_DOWN:\n        directions.down = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.CAMERA_GO_FASTER:\n        directions.goFaster = value;\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      case Key.DEBUG_DEPTH: {\n        if (!value) {\n          // on 'up' event - toggle depth preview\n          setDisplayMode?.(\n            CONFIG.displayMode === 'dbg-depth-pyramid'\n              ? 'nanite'\n              : 'dbg-depth-pyramid'\n          );\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        break;\n      }\n    }\n  };\n\n  window.addEventListener('keydown', (e) => setDigital(e, true));\n  window.addEventListener('keyup', (e) => setDigital(e, false));\n\n  canvas.style.touchAction = 'pinch-zoom';\n  canvas.addEventListener('pointerdown', () => {\n    mouse.touching = true;\n  });\n  canvas.addEventListener('pointerup', () => {\n    mouse.touching = false;\n  });\n  canvas.addEventListener('pointermove', (e: PointerEvent) => {\n    mouse.touching = e.pointerType == 'mouse' ? (e.buttons & 1) !== 0 : true;\n    if (mouse.touching) {\n      mouse.x += e.movementX;\n      mouse.y += e.movementY;\n    }\n  });\n  canvas.addEventListener(\n    'wheel',\n    (e: WheelEvent) => {\n      mouse.touching = (e.buttons & 1) !== 0;\n      if (mouse.touching) {\n        mouse.zoom += Math.sign(e.deltaY);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    { passive: false }\n  );\n\n  return () => {\n    const out: Input = {\n      directions: { ...directions },\n      mouse: { ...mouse },\n    };\n    // Clear the analog values, as these accumulate.\n    mouse.x = 0;\n    mouse.y = 0;\n    mouse.zoom = 0;\n    return out;\n  };\n}\n", "import { Mat4, Vec3, vec4 } from 'wgpu-matrix';\nimport { PassCtx } from '../passCtx.ts';\nimport {\n  dgr2rad,\n  getModelViewProjectionMatrix,\n  projectPoint,\n} from '../../utils/index.ts';\nimport { BoundingSphere, Bounds3d } from '../../utils/calcBounds.ts';\nimport { CAMERA_CFG, CONFIG } from '../../constants.ts';\nimport {\n  NaniteObject,\n  NaniteMeshletTreeNode,\n} from '../../scene/naniteObject.ts';\nimport { NaniteVisibilityBufferCPU } from './types.ts';\nimport { Frustum } from '../../utils/frustum.ts';\n\n/**\n * 'rendered' - this is the correct level to render\n * 'check-children' - children have more appropriate LOD\n */\nexport enum NaniteVisibilityStatus {\n  RENDERED,\n  CHECK_CHILDREN,\n}\n\nexport function calcNaniteMeshletsVisibility(\n  ctx: PassCtx,\n  cotHalfFov: number,\n  modelMat: Mat4,\n  naniteObject: NaniteObject\n): number {\n  // check: entire instance is visible\n  if (!checkIsInsideFrustum(ctx.cameraFrustum, modelMat, naniteObject.bounds)) {\n    return 0;\n  }\n\n  const meshletsToCheck = [...naniteObject.roots];\n  const visibilityBuffer = naniteObject.naniteVisibilityBufferCPU;\n  visibilityBuffer.prepareForDraw();\n  const getProjectedError = createErrorMetric(\n    ctx,\n    cotHalfFov,\n    visibilityBuffer,\n    modelMat\n  );\n\n  while (meshletsToCheck.length > 0) {\n    // depth-first seems better as it has shorter avg $meshletsToCheck length.\n    // const meshlet = meshletsToCheck.shift()!; // remove 1st from queue - breadth first\n    const meshlet = meshletsToCheck.pop()!; // remove last from queue - depth first\n    visibilityBuffer.setVisited(meshlet.id);\n\n    // if (checkIsBackface(ctx, modelMat, meshlet)) {\n    // culledCount += 1;\n    // continue;\n    // }\n\n    const status = getVisibilityStatus(getProjectedError, meshlet);\n\n    if (status === NaniteVisibilityStatus.RENDERED) {\n      // skip children - we are at the correct cut-off level\n      visibilityBuffer.setDrawn(meshlet);\n    } else if (status === NaniteVisibilityStatus.CHECK_CHILDREN) {\n      // check lower levels of LOD tree\n      for (let i = 0; i < meshlet.createdFrom.length; i++) {\n        const m = meshlet.createdFrom[i];\n        if (m && !visibilityBuffer.wasVisited(m.id)) {\n          visibilityBuffer.setVisited(meshlet.id);\n          meshletsToCheck.push(m);\n        }\n      }\n    }\n  }\n\n  // console.log({ visitedMeshlets }); // debug how far the tree we went\n  return visibilityBuffer.drawnMeshletsCount;\n}\n\nconst TMP_CACHED_VEC4 = vec4.create();\n\nfunction checkIsInsideFrustum(\n  frustum: Frustum,\n  modelMat: Mat4,\n  bounds: Bounds3d\n): boolean {\n  if (!CONFIG.cullingMeshlets.frustumCulling) return true;\n\n  TMP_CACHED_VEC4[0] = bounds.sphere.center[0];\n  TMP_CACHED_VEC4[1] = bounds.sphere.center[1];\n  TMP_CACHED_VEC4[2] = bounds.sphere.center[2];\n  TMP_CACHED_VEC4[3] = 1;\n  const sphereWorldSpace = projectPoint(\n    modelMat,\n    TMP_CACHED_VEC4,\n    TMP_CACHED_VEC4\n  );\n  sphereWorldSpace[3] = bounds.sphere.radius;\n  return frustum.isInside(sphereWorldSpace);\n}\n\n/** WARNING: NOT FINISHED! SEE NOTE IN `src/constants.ts` for reasons and remaining scope. */\n/*\nfunction checkIsBackface(\n  ctx: PassCtx,\n  _modelMat: Mat4,\n  meshlet: NaniteMeshletTreeNode\n) {\n  const bounds = meshlet.ownBounds;\n  if (!CONFIG.nanite.render.useSoftwareBackfaceCull || !bounds) return false;\n\n  const negate = (v: Vec3, i: number) => {\n    v[i] = -v[i];\n  };\n  const cam = ctx.cameraPositionWorldSpace;\n  negate(cam, 0); // see camera.ts for similar ops\n  negate(cam, 1);\n  negate(cam, 2);\n\n  // TODO [IGNORE] world space position? Or bring camera into model space pos? invModelMatrix * cameraPos\n  const cam2MeshletDir = vec3.normalize([\n    bounds.coneApex[0] - cam[0],\n    bounds.coneApex[1] - cam[1],\n    bounds.coneApex[2] - cam[2],\n  ]);\n\n  // TODO [IGNORE] return dot(center - camera_position, cone_axis) >= cone_cutoff * length(center - camera_position) + radius;\n  //      https://github.com/zeux/niagara/blob/master/src/shaders/math.h\n  const angle = vec3.dot(cam2MeshletDir, bounds.coneApex);\n  return angle >= bounds.coneCutoff;\n}*/\n\n/**\n * Returns visiblity status so we can skip processing children.\n *\n * Draw a cluster when (https://youtu.be/eviSykqSUUw?si=s7B8TvJxOKeWxLBP&t=1389):\n * - Parent error is too high\n * - Our error is small enough\n *\n * Render condition (https://youtu.be/eviSykqSUUw?si=67d_rFjnMYQOBGB3&t=1537):\n * `ParentError > threshold && ClusterError <= threshold`\n * This is used in non-parellel from-root rendering. On GPU, when going from bottom,\n * use: isCulled = `parentError <= threshold`, which decide if we are skipped in favour of parent.\n */\nexport function getVisibilityStatus(\n  getProjectedError: ReturnType<typeof createErrorMetric>,\n  meshlet: NaniteMeshletTreeNode\n): NaniteVisibilityStatus {\n  // prettier-ignore\n  const clusterError = getProjectedError(meshlet.sharedSiblingsBounds, meshlet.maxSiblingsError);\n  // prettier-ignore\n  const parentError = getProjectedError(meshlet.parentBounds, meshlet.parentError);\n\n  const threshold = CONFIG.nanite.render.errorThreshold;\n  // TBH we already checked parentError whn traversing the tree, so not needed. Leaving for readability\n  const shouldRenderThisExactMeshlet =\n    parentError > threshold && clusterError <= threshold;\n\n  // const dbgVsThr = (a: number) => (a > threshold ? 'GREATER' : 'LESSER(OK)');\n  // console.log(\"CMP: \", {id:meshlet.id, parent: dbgVsThr(parentError), cluster: dbgVsThr(clusterError), }); // prettier-ignore\n  return shouldRenderThisExactMeshlet\n    ? NaniteVisibilityStatus.RENDERED\n    : NaniteVisibilityStatus.CHECK_CHILDREN;\n}\n\n/**\n * Projected error in pixels (https://stackoverflow.com/a/21649403).\n * From Federico Ponchio's \"Multiresolution structures for interactive\n * visualization of very large 3D datasets\":\n *\n * > 3.6.1 Screen Space Error Saturation\n * >\n * > \"We use the screen projection error E which is simply the projection of the model space error \u03BB on screen\"\n */\nexport function createErrorMetric(\n  ctx: PassCtx,\n  cotHalfFov: number,\n  visibilityBuffer: NaniteVisibilityBufferCPU,\n  modelMat: Mat4\n) {\n  const mvpMatrix = getModelViewProjectionMatrix(\n    modelMat,\n    ctx.viewMatrix,\n    ctx.projMatrix,\n    visibilityBuffer.mvpMatrix\n  );\n  const screenHeight = ctx.viewport.height;\n\n  return function getProjectedError(\n    bounds: BoundingSphere | undefined,\n    errorWorldSpace: number\n  ) {\n    // WARNING: .parentError is INFINITY at top level\n    if (errorWorldSpace === Infinity || bounds == undefined) {\n      return Infinity;\n    }\n\n    // const center = projectPoint(mvpMatrix, bounds.center);\n    // const d2 = vec3.dot(center, center);\n    const d2 = calculateD2(mvpMatrix, bounds.center);\n    const r = errorWorldSpace;\n    const projectedR = (cotHalfFov * r) / Math.sqrt(d2 - r * r);\n    /*console.log({\n      cotHalfFov,\n      center,\n      d2,\n      r,\n      projectedR,\n      result: (projectedR * screenHeight) / 2.0,\n      THRESHOLD: CONFIG.nanite.render.errorThreshold,\n    });*/\n    return (projectedR * screenHeight) / 2.0;\n  };\n}\n\nexport const calcCotHalfFov = (fovDgr = CAMERA_CFG.fovDgr) => {\n  const fovRad = dgr2rad(fovDgr);\n  return 1.0 / Math.tan(fovRad / 2.0);\n};\n\nfunction calculateD2(m: Mat4, v: Vec3): number {\n  // project point\n  const a = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12];\n  const b = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13];\n  const c = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14];\n  // dot product\n  return a * a + b * b + c * c;\n}\n", "import { Mat4, mat4 } from 'wgpu-matrix';\nimport {\n  BYTES_F32,\n  BYTES_MAT4,\n  BYTES_U32,\n  BYTES_VEC4,\n  CONFIG,\n} from '../constants.ts';\nimport { GPU_BUFFER_USAGE_UNIFORM } from '../utils/webgpu.ts';\nimport { calcCotHalfFov } from './naniteCpu/calcNaniteMeshletsVisibility.ts';\nimport { PassCtx } from './passCtx.ts';\n\nconst FLAG_FRUSTUM_CULLING = 1;\nconst FLAG_OCCLUSION_CULLING = 2;\nconst FLAG_INSTANCES_FRUSTUM_CULLING = 1 << 5;\nconst FLAG_INSTANCES_OCCLUSION_CULLING = 1 << 6;\nconst FLAG_FORCE_BILLBOARDS = 1 << 16;\n\nexport class RenderUniformsBuffer {\n  public static SHADER_SNIPPET = (group: number) => /* wgsl */ `\n    const b11 = 3u; // binary 0b11\n    const b111 = 7u; // binary 0b111\n    const b1111 = 15u; // binary 0b1111\n    const b11111 = 31u; // binary 0b11111\n    const b111111 = 63u; // binary 0b111111\n\n    struct Uniforms {\n      vpMatrix: mat4x4<f32>,\n      vpMatrixInv: mat4x4<f32>,\n      viewMatrix: mat4x4<f32>,\n      projMatrix: mat4x4<f32>,\n      viewport: vec4f,\n      cameraPosition: vec4f,\n      cameraFrustumPlane0: vec4f, // TODO [LOW] there are much more efficient ways for frustum culling\n      cameraFrustumPlane1: vec4f, // https://github.com/zeux/niagara/blob/master/src/shaders/drawcull.comp.glsl#L72\n      cameraFrustumPlane2: vec4f,\n      cameraFrustumPlane3: vec4f,\n      cameraFrustumPlane4: vec4f,\n      cameraFrustumPlane5: vec4f,\n      // b1 - frustom cull\n      // b2 - occlusion cull (ends at: 1 << 1)\n      // b3,4,5 - shading mode (1 << 2 to 1 << 4)\n      // b6,7 - instances culling (1 << 5, 1 << 6)\n      // b8,9,10,11 - debug render depty pyramid level (value 0-15)\n      // b12,13,14,15 - debug override occlusion cull depth mipmap (value 0-15). 0b1111 means OFF\n      // b16 - force billboards\n      // b17,b18,b19,b20,b21,b22 - billboard dithering\n      // b23..32 - not used\n      flags: u32,\n      billboardThreshold: f32,\n      softwareRasterizerThreshold: f32,\n      padding0: u32,\n      colorMgmt: vec4f,\n    };\n    @binding(0) @group(${group})\n    var<uniform> _uniforms: Uniforms;\n\n    fn checkFlag(flags: u32, bit: u32) -> bool { return (flags & bit) > 0; }\n    fn useFrustumCulling(flags: u32) -> bool { return checkFlag(flags, ${FLAG_FRUSTUM_CULLING}u); }\n    fn useOcclusionCulling(flags: u32) -> bool { return checkFlag(flags, ${FLAG_OCCLUSION_CULLING}u); }\n    fn useInstancesFrustumCulling(flags: u32) -> bool { return checkFlag(flags, ${FLAG_INSTANCES_FRUSTUM_CULLING}u); }\n    fn useInstancesOcclusionCulling(flags: u32) -> bool { return checkFlag(flags, ${FLAG_INSTANCES_OCCLUSION_CULLING}u); }\n    fn useForceBillboards(flags: u32) -> bool { return checkFlag(flags, ${FLAG_FORCE_BILLBOARDS}u); }\n    fn getShadingMode(flags: u32) -> u32 {\n      return (flags >> 2u) & b111;\n    }\n    fn getDbgPyramidMipmapLevel(flags: u32) -> i32 {\n      return i32(clamp((flags >> 8u) & b1111, 0u, 15u));\n    }\n    fn getOverrideOcclusionCullMipmap(flags: u32) -> i32 {\n      let v: u32 = clamp((flags >> 12u) & b1111, 0u, 15u);\n      if (v == 15u) { return -1; }\n      return i32(v);\n    }\n    fn getBillboardDitheringStrength(flags: u32) -> f32 {\n      let v: u32 = (flags >> 17u) & b111111; // [0-64]\n      return f32(v) / 63.0;\n    }\n  `;\n\n  public static BUFFER_SIZE =\n    BYTES_MAT4 + // vpMatrix\n    BYTES_MAT4 + // vpMatrixInv\n    BYTES_MAT4 + // viewMatrix\n    BYTES_MAT4 + // projMatrix\n    BYTES_VEC4 + // viewport\n    BYTES_VEC4 + // cameraPosition\n    6 * BYTES_VEC4 + // camera frustum planes\n    4 * BYTES_U32 + // flags + padding\n    BYTES_VEC4; // color mgmt\n\n  private readonly gpuBuffer: GPUBuffer;\n  private readonly data = new ArrayBuffer(RenderUniformsBuffer.BUFFER_SIZE);\n  private readonly dataAsF32: Float32Array;\n  private readonly dataAsU32: Uint32Array;\n\n  constructor(device: GPUDevice) {\n    this.gpuBuffer = device.createBuffer({\n      label: 'render-uniforms-buffer',\n      size: RenderUniformsBuffer.BUFFER_SIZE,\n      usage: GPU_BUFFER_USAGE_UNIFORM,\n    });\n    this.dataAsF32 = new Float32Array(this.data);\n    this.dataAsU32 = new Uint32Array(this.data);\n  }\n\n  createBindingDesc = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.gpuBuffer },\n  });\n\n  update(ctx: PassCtx) {\n    const {\n      device,\n      vpMatrix,\n      viewMatrix,\n      projMatrix,\n      viewport,\n      cameraFrustum,\n      cameraPositionWorldSpace,\n      softwareRasterizerEnabled,\n    } = ctx;\n    const c = CONFIG;\n    const nanite = c.nanite.render;\n    const imp = c.impostors;\n    const col = c.colors;\n    const swr = c.softwareRasterizer;\n\n    let offsetBytes = 0;\n    offsetBytes = this.writeMat4(offsetBytes, vpMatrix);\n    offsetBytes = this.writeMat4(offsetBytes, mat4.invert(vpMatrix));\n    offsetBytes = this.writeMat4(offsetBytes, viewMatrix);\n    offsetBytes = this.writeMat4(offsetBytes, projMatrix);\n    // viewport\n    offsetBytes = this.writeF32(offsetBytes, viewport.width);\n    offsetBytes = this.writeF32(offsetBytes, viewport.height);\n    offsetBytes = this.writeF32(offsetBytes, nanite.errorThreshold); // prettier-ignore\n    offsetBytes = this.writeF32(offsetBytes, calcCotHalfFov());\n    // camera position\n    const camPos = cameraPositionWorldSpace;\n    offsetBytes = this.writeF32(offsetBytes, camPos[0]);\n    offsetBytes = this.writeF32(offsetBytes, camPos[1]);\n    offsetBytes = this.writeF32(offsetBytes, camPos[2]);\n    offsetBytes = this.writeF32(offsetBytes, 0.0); // padding\n    // camera frustum planes\n    for (let i = 0; i < cameraFrustum.planes.length; i++) {\n      offsetBytes = this.writeF32(offsetBytes, cameraFrustum.planes[i]);\n    }\n    // misc\n    offsetBytes = this.writeU32(offsetBytes, this.encodeFlags());\n    offsetBytes = this.writeF32(offsetBytes, imp.billboardThreshold);\n    const swrThreshold = softwareRasterizerEnabled ? swr.threshold : 0.0;\n    offsetBytes = this.writeF32(offsetBytes, swrThreshold);\n    // padding\n    offsetBytes += 1 * BYTES_U32;\n    // color mgmt\n    offsetBytes = this.writeF32(offsetBytes, col.gamma);\n    offsetBytes = this.writeF32(offsetBytes, col.exposure);\n    offsetBytes = this.writeF32(offsetBytes, col.ditherStrength);\n    offsetBytes += BYTES_F32; // padding\n\n    // final write\n    if (offsetBytes !== RenderUniformsBuffer.BUFFER_SIZE) {\n      throw new Error(`Invalid write to RenderUniformsBuffer. Buffer has ${RenderUniformsBuffer.BUFFER_SIZE}bytes, but tried to write ${offsetBytes} bytes.`); // prettier-ignore\n    }\n    device.queue.writeBuffer(this.gpuBuffer, 0, this.data, 0, offsetBytes);\n  }\n\n  private writeMat4(offsetBytes: number, mat: Mat4) {\n    const offset = offsetBytes / BYTES_F32;\n    for (let i = 0; i < 16; i++) {\n      this.dataAsF32[offset + i] = mat[i];\n    }\n    return offsetBytes + BYTES_MAT4;\n  }\n\n  private writeF32(offsetBytes: number, v: number) {\n    const offset = offsetBytes / BYTES_F32;\n    this.dataAsF32[offset] = v;\n    return offsetBytes + BYTES_F32;\n  }\n\n  private writeU32(offsetBytes: number, v: number) {\n    const offset = offsetBytes / BYTES_U32;\n    this.dataAsU32[offset] = Math.floor(v);\n    return offsetBytes + BYTES_U32;\n  }\n\n  private encodeFlags() {\n    const naniteCfg = CONFIG.nanite.render;\n    const ci = CONFIG.cullingInstances;\n    const cm = CONFIG.cullingMeshlets;\n    const imp = CONFIG.impostors;\n\n    let flags = 0;\n    const setFlag = (bit: number, b: boolean) => {\n      flags = flags | (b ? bit : 0);\n    };\n\n    // frustum cull\n    setFlag(FLAG_FRUSTUM_CULLING, cm.frustumCulling);\n\n    // occlusion culling: skip if we don't have depth pyramid yet\n    let occlCull = naniteCfg.hasValidDepthPyramid && cm.occlusionCulling;\n    setFlag(FLAG_OCCLUSION_CULLING, occlCull);\n\n    // b3,4 - shading mode\n    let bits = naniteCfg.shadingMode & 0b111;\n    flags = flags | (bits << 2);\n\n    // instances culling\n    occlCull = naniteCfg.hasValidDepthPyramid && ci.occlusionCulling;\n    setFlag(FLAG_INSTANCES_FRUSTUM_CULLING, ci.frustumCulling);\n    setFlag(FLAG_INSTANCES_OCCLUSION_CULLING, occlCull);\n\n    // dbgDepthPyramidLevel\n    bits = CONFIG.dbgDepthPyramidLevel & 0b1111;\n    flags = flags | (bits << 8);\n\n    // occlusionCullOverrideMipmapLevel\n    bits = naniteCfg.isOverrideOcclusionCullMipmap\n      ? naniteCfg.occlusionCullOverrideMipmapLevel & 0b1111\n      : 0b1111;\n    flags = flags | (bits << 12);\n\n    // BILLBOARDS\n    setFlag(FLAG_FORCE_BILLBOARDS, imp.forceOnlyBillboards);\n    bits = Math.floor(imp.ditherStrength * 63);\n    flags = flags | (bits << 17);\n\n    return flags;\n  }\n}\n", "///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_INSTANCES = (bindingIdx: number) => /* wgsl */ `\n\n@group(0) @binding(${bindingIdx})\nvar<storage, read> _instanceTransforms: array<mat4x4<f32>>;\n\nfn _getInstanceTransform(idx: u32) -> mat4x4<f32> {\n  return _instanceTransforms[idx];\n}\n\nfn _getInstanceCount() -> u32 {\n  return arrayLength(&_instanceTransforms);\n}\n`;\n", "/** https://github.com/Scthe/WebFX/blob/master/src/shaders/_pbr.glsl */\nexport const SNIPPET_SHADING_PBR = /* wgsl */ `\n\nconst DIELECTRIC_FRESNEL = vec3f(0.04, 0.04, 0.04); // nearly black\nconst METALLIC_DIFFUSE_CONTRIBUTION = vec3(0.0, 0.0, 0.0); // none\n\n\nfn pbr_LambertDiffuse(material: Material) -> vec3f {\n  // return material.albedo / PI;\n  return material.albedo;\n}\n\n\n/**\n * Fresnel (F): Schlick's version\n *\n * If cosTheta 0 means 90dgr, so return big value, if is 1 means 0dgr return\n * just F0. Function modeled to have shape of most common fresnel\n * reflectance function shape.\n *\n * @param float cosTheta - cos(viewDirection V, halfway vector H),\n * @param vec3 F0 - surface reflectance at 0dgr. vec3 somewhat models wavelengths\n */\nfn FresnelSchlick(cosTheta: f32, F0: vec3f) -> vec3f {\n    return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);\n}\n\n/**\n * Normal distribution function (D): GGX\n *\n * Just standard implementation ('Real Shading in Unreal Engine 4' equation 2)\n *\n * @param vec3 N - normalized normal\n * @param vec3 H - halfway vector\n * @param float roughness [0,1]\n */\nfn DistributionGGX(N: vec3f, H: vec3f, roughness: f32) -> f32 {\n    let a      = roughness * roughness;\n    let a2     = a * a;\n    let NdotH  = dotMax0(N, H);\n    let NdotH2 = NdotH * NdotH;\n\n    var denom = NdotH2 * (a2 - 1.0) + 1.0;\n    denom = PI * denom * denom;\n    return a2 / denom;\n}\n\n/**\n * Self-shadowing Smith helper function.\n *\n * @see 'Real Shading in Unreal Engine 4' equation 4 line 1,2\n *\n * @param vec3 NdotV dot prod. between normal and vector to camera/light source\n * @param float roughness material property\n */\nfn GeometrySchlickGGX(NdotV: f32, roughness: f32) -> f32 {\n    let r = (roughness + 1.0);\n    let k = (r * r) / 8.0;\n    let denom = NdotV * (1.0 - k) + k;\n    return NdotV / denom;\n}\n\n/**\n * Self-shadowing (G): GGX\n *\n * Just standard implementation ('Real Shading in Unreal Engine 4' equation 4 line 3). We do calculate self-shadowing in directions light-point and point-camera, then mul.\n *\n * @param vec3 N normal at current frag\n * @param vec3 V frag -> point\n * @param vec3 L frag -> light\n * @param float roughness material property\n *\n */\nfn GeometrySmith(N: vec3f, V: vec3f, L: vec3f, roughness: f32) -> f32 {\n    let NdotV = dotMax0(N, V);\n    let NdotL = dotMax0(N, L);\n    let ggx2  = GeometrySchlickGGX(NdotV, roughness);\n    let ggx1  = GeometrySchlickGGX(NdotL, roughness);\n    return ggx1 * ggx2;\n}\n\nfn pbr_CookTorrance(\n  material: Material,\n  V: vec3f,\n  L: vec3f,\n  // out parameter\n  // https://www.w3.org/TR/WGSL/#ref-ptr-use-cases\n  F: ptr<function,vec3f>\n) -> vec3f {\n  let H = normalize(V + L); // halfway vector\n  let N = material.normal; // normal at fragment\n\n  // F - Fresnel\n  let F0 = mix(DIELECTRIC_FRESNEL, material.albedo, material.isMetallic);\n  *F = FresnelSchlick(dotMax0(H, V), F0);\n  // G - microfacet self-shadowing\n  let G = GeometrySmith(N, V, L, material.roughness);\n  // D - Normals distribution\n  let NDF = DistributionGGX(N, H, material.roughness);\n\n  // Cook-Torrance BRDF using NDF,G,F\n  let numerator = NDF * G * (*F);\n  let denominator = 4.0 * dotMax0(N, V) * dotMax0(N, L);\n  return numerator / max(denominator, 0.001);\n}\n\nfn pbr_mixDiffuseAndSpecular(material: Material, diffuse: vec3f, specular: vec3f, F: vec3f) -> vec3f {\n  let kS = F;\n  // kD for metalics is ~0 (means they have pure black diffuse color, but take color of specular)\n  let kD = mix(vec3f(1.0, 1.0, 1.0) - kS, METALLIC_DIFFUSE_CONTRIBUTION, material.isMetallic);\n  return kD * diffuse + specular;\n}\n\n\nfn disneyPBR(material: Material, light: Light) -> vec3f {\n  let N = material.normal; // normal at fragment\n  let V = material.toEye; // viewDir\n  let L = normalize(light.position - material.positionWS); // wi in integral\n  let attenuation = 1.0; // hardcoded for this demo\n\n  // diffuse\n  let lambert = pbr_LambertDiffuse(material);\n\n  // specular\n  var F: vec3f = vec3f();\n  let specular = pbr_CookTorrance(material, V, L, &F);\n\n  // final light calc.\n  let NdotL = dotMax0(N, L);\n  let brdfFinal = pbr_mixDiffuseAndSpecular(material, lambert, specular, F);\n  let radiance = light.color * attenuation * light.intensity; // incoming color from light\n  return brdfFinal * radiance * NdotL;\n}\n`;\n", "import { IS_WGPU } from '../../constants.ts';\nimport { createArray } from '../../utils/index.ts';\n\n/** If you create a const array e.g. `const COLORS = array<vec3f, COLOR_COUNT>(...);`,\n * Naga only allows consts indices. E.g. `COLORS[0]`, but no `COLORS[i]`. Fix this\n * by creating a giant `switch()`. Hope you did not execute this code in a render loop!\n */\nexport const nagaFixIndexIntoConstArray = (\n  arrayVarName: string,\n  arrayLen: number,\n  idxExpr: string,\n  exprFn: (x: string) => string\n) => {\n  const createCaseStmt = (_: unknown, i: number) => {\n    const arrayVal = `${arrayVarName}[${i}u]`;\n    const defaultSt = i == 0 ? ', default' : '';\n    return /* wgsl */ `case ${i}u ${defaultSt}: { ${exprFn(arrayVal)} }`;\n  };\n\n  return /* wgsl */ `\n  switch (${idxExpr}) {\n      ${createArray(arrayLen).map(createCaseStmt).join('\\n')}\n  }`;\n};\n\n/**\n * Example:\n *\n * `assignValueFromConstArray(\n *   'color: vec3f', 'COLORS', 14, 'idx % COLOR_COUNT'\n *  )`\n */\nexport const assignValueFromConstArray = (\n  newVarDecl: string,\n  arrayVarName: string,\n  arrayLen: number,\n  idxExpr: string\n) => {\n  const [varName, varType] = newVarDecl.split(':').map((x) => x?.trim());\n  if (varName == undefined || varType == undefined) {\n    throw new Error(`assignValueFromConstArray expected newVarDecl param to include variable name and type e.g. 'normal: vec3f'. Got '${newVarDecl}', where name='${varName}', type=${varType}`); // prettier-ignore\n  }\n\n  if (!IS_WGPU) {\n    return `let ${newVarDecl} = ${arrayVarName}[${idxExpr}];`;\n  }\n\n  const switchStmt = nagaFixIndexIntoConstArray(\n    arrayVarName,\n    arrayLen,\n    idxExpr,\n    (x) => `${varName} = ${x};`\n  );\n  return `var ${newVarDecl};\n  ${switchStmt}`;\n};\n", "import { assignValueFromConstArray } from './nagaFixes.ts';\n\nconst MAT4 = 'mat4x4<f32>';\n\n/** I always forget the order. */\nexport const GET_MVP_MAT = /* wgsl */ `\nfn getMVP_Mat(modelMat: ${MAT4}, viewMat: ${MAT4}, projMat: ${MAT4}) -> ${MAT4} {\n  let a = viewMat * modelMat;\n  return projMat * a;\n}\n`;\n\nexport const FS_NORMAL_FROM_DERIVATIVES = /* wgsl */ `\nfn normalFromDerivatives(wsPosition: vec4f) -> vec3f{\n  let posWsDx = dpdxFine(wsPosition);\n  let posWsDy = dpdyFine(wsPosition);\n  return normalize(cross(posWsDy.xyz, posWsDx.xyz));\n}\n`;\n\n/** Object-space lighting. */\nexport const FS_FAKE_LIGHTING = /* wgsl */ `\nfn fakeLighting(wsPosition: vec4f) -> f32{\n  let AMBIENT_LIGHT = 0.1;\n  let LIGHT_DIR = vec3(5., 5., 5.);\n\n  let normal = normalFromDerivatives(wsPosition);\n  let lightDir = normalize(LIGHT_DIR);\n  let NdotL = max(0.0, dot(normal.xyz, lightDir));\n  return mix(AMBIENT_LIGHT, 1.0, NdotL);\n}\n`;\n\n/** Get random color based on index. Same index == same color every frame. */\nexport const GET_RANDOM_COLOR = /* wgsl */ `\nconst COLOR_COUNT = 14u;\nconst COLORS = array<vec3f, COLOR_COUNT>(\n    vec3f(1., 1., 1.),\n    vec3f(1., 0., 0.),\n    vec3f(0., 1., 0.),\n    vec3f(0., 0., 1.),\n    vec3f(1., 1., 0.),\n    vec3f(0., 1., 1.),\n    vec3f(1., 0., 1.),\n\n    vec3f(.5, .5, .5),\n    vec3f(.5, 0., 0.),\n    vec3f(.5, .5, 0.),\n    vec3f(0., 0., .5),\n    vec3f(.5, .5, 0.),\n    vec3f(0., .5, .5),\n    vec3f(.5, 0., .5),\n);\n\nfn getRandomColor(idx: u32) -> vec3f {\n  ${assignValueFromConstArray(\n    'color: vec3f',\n    'COLORS',\n    14,\n    'idx % COLOR_COUNT'\n  )}\n  return color;\n}\n`;\n\nexport const CLAMP_TO_MIP_LEVELS = /* wgsl */ `\nfn clampToMipLevels(v: i32, _texture: texture_2d<f32>) -> i32 {\n  let mipLevels = textureNumLevels(_texture);\n  return clamp(v, 0, i32(mipLevels - 1)); // 8 mip levels mean indices 0-7\n}\n`;\n\nexport const NORMALS_UTILS = /* wgsl */ `\n\n// WARNING: This is true only when you do not have scale (only rotation and transpose).\n// https://paroj.github.io/gltut/Illumination/Tut09%20Normal%20Transformation.html\nfn transformNormalToWorldSpace(modelMat: mat4x4f, normalV: vec3f) -> vec3f {\n  let normalMatrix = modelMat; // !\n  let normalWS = normalMatrix * vec4f(normalV, 0.0);\n  return normalize(normalWS.xyz);\n}\n\n/** https://knarkowicz.wordpress.com/2014/04/16/octahedron-normal-vector-encoding/\n * \n * NOTE: I'm running of of patience writing this code, do not judge */\nfn OctWrap(v: vec2f) -> vec2f {\n  // https://gpuweb.github.io/gpuweb/wgsl/#select-builtin\n  // select(f, t, cond); // yes, this is the actuall syntax..\n  let signX = select(-1.0, 1.0, v.x >= 0.0);\n  let signY = select(-1.0, 1.0, v.y >= 0.0);\n  return (1.0 - abs(v.yx)) * vec2f(signX, signY);\n}\n \n/** https://knarkowicz.wordpress.com/2014/04/16/octahedron-normal-vector-encoding/\n * \n * Result is in [0 .. 1]\n * \n * NOTE: I'm running of of patience writing this code, do not judge */\nfn encodeOctahedronNormal(n0: vec3f) -> vec2f {\n  var n = n0 / (abs(n0.x) + abs(n0.y) + abs(n0.z));\n  if (n.z < 0.0) {\n    let a = OctWrap(n.xy);\n    n.x = a.x;\n    n.y = a.y;\n  }\n  return n.xy * 0.5 + 0.5;\n}\n\n/** https://knarkowicz.wordpress.com/2014/04/16/octahedron-normal-vector-encoding/ */\nfn decodeOctahedronNormal(f_: vec2f) -> vec3f {\n  let f = f_ * 2.0 - 1.0;\n \n  // https://twitter.com/Stubbesaurus/status/937994790553227264\n  var n = vec3f(f.x, f.y, 1.0 - abs(f.x) - abs(f.y));\n  let t = saturate(-n.z);\n  if (n.x >= 0.0){ n.x -= t; } else { n.x += t; }\n  if (n.y >= 0.0){ n.y -= t; } else { n.y += t; }\n  return normalize(n);\n}\n`;\n\nexport const UTILS = /* wgsl */ `\n\nfn ceilDivideU32(numerator: u32, denominator: u32) -> u32 {\n  return (numerator + denominator - 1) / denominator;\n}\n`;\n", "import { CONFIG } from '../../constants.ts';\n\nconst LIGHT_COUNT = CONFIG.lightsCount;\n\nexport const DEFAULT_COLOR: [number, number, number] = [0.9, 0.9, 0.9];\n\n/** https://github.com/Scthe/WebFX/blob/master/src/shaders/sintel.frag.glsl#L135 */\nexport const SNIPPET_SHADING = /* wgsl */ `\n\nconst LIGHT_COUNT = ${LIGHT_COUNT}u;\nconst PI: f32 = ${Math.PI};\n\n\nstruct Material {\n  positionWS: vec3f,\n  normal: vec3f,\n  toEye: vec3f,\n  // disney pbr:\n  albedo: vec3f,\n  roughness: f32,\n  isMetallic: f32,\n  // ao: f32\n};\n\nstruct Light {\n  position: vec3f,\n  color: vec3f,\n  intensity: f32\n};\n\nfn unpackLight(pos: vec3f, color: vec4f, light: ptr<function, Light>) {\n  (*light).position = pos;\n  (*light).color = color.rgb;\n  (*light).intensity = color.a;\n}\n\n\nfn dotMax0 (n: vec3f, toEye: vec3f) -> f32 {\n  return max(0.0, dot(n, toEye));\n}\n\nfn doShading(\n  material: Material,\n  ambientLight: vec4f,\n  lights: array<Light, ${LIGHT_COUNT}>\n) -> vec3f {\n  let ambient = ambientLight.rgb * ambientLight.a; // * material.ao;\n  var radianceSum = vec3(0.0);\n\n  // this used to be a for-loop, but wgpu's Naga complains:\n  // let light = lights[i];\n  //                    ^ The expression may only be indexed by a constant\n  radianceSum += disneyPBR(material, lights[0]);\n  radianceSum += disneyPBR(material, lights[1]);\n\n  return ambient + radianceSum;\n}\n\n/////////////////////////////\n/////////////////////////////\n/// Config\n\nconst AMBIENT_LIGHT = vec4f(1., 1., 1., 0.05);\nconst LIGHT_FAR = 99999.0;\n\nfn fillLightsData(\n  lights: ptr<function, array<Light, LIGHT_COUNT>>\n){\n  (*lights)[0].position = vec3f(LIGHT_FAR, LIGHT_FAR, 0); // world space\n  (*lights)[0].color = vec3f(1., 0.95, 0.8);\n  // (*lights)[0].color = vec3f(1., 0.0, 0.0); // RED for testing\n  (*lights)[0].intensity = 1.5;\n\n  (*lights)[1].position = vec3f(-LIGHT_FAR, -LIGHT_FAR / 3.0, LIGHT_FAR / 3.0); // world space\n  (*lights)[1].color = vec3f(0.8, 0.8, 1.);\n  // (*lights)[1].color = vec3f(0.0, 0.0, 1.); // BLUE for testing\n  (*lights)[1].intensity = 0.7;\n}\n\nfn createDefaultMaterial(\n  material: ptr<function, Material>,\n  positionWS: vec4f\n){\n  let cameraPos = _uniforms.cameraPosition.xyz;\n  \n  (*material).positionWS = positionWS.xyz;\n  (*material).normal = normalFromDerivatives(positionWS);\n  (*material).toEye = normalize(cameraPos - positionWS.xyz);\n  // brdf params:\n  (*material).albedo = vec3f(${DEFAULT_COLOR[0]}, ${DEFAULT_COLOR[1]}, ${DEFAULT_COLOR[2]});\n  (*material).roughness = 0.8;\n  (*material).isMetallic = 0.0; // oops!\n  // material.ao = 1.0;\n}\n\n`;\n", "import { SHADING_MODE_NORMALS } from '../../constants.ts';\nimport { BUFFER_INSTANCES } from '../../scene/naniteBuffers/instancesBuffer.ts';\nimport { SNIPPET_SHADING_PBR } from '../_shaderSnippets/pbr.wgsl.ts';\nimport * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { SNIPPET_SHADING } from '../_shaderSnippets/shading.wgsl.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n    instancesTransforms: 1,\n    diffuseTexture: 2,\n    sampler: 3,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${SHADER_SNIPPETS.GET_MVP_MAT}\n${SHADER_SNIPPETS.GET_RANDOM_COLOR}\n${SHADER_SNIPPETS.FS_NORMAL_FROM_DERIVATIVES}\n${SHADER_SNIPPETS.NORMALS_UTILS}\n${SNIPPET_SHADING_PBR}\n${SNIPPET_SHADING}\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${BUFFER_INSTANCES(b.instancesTransforms)}\n\n@group(0) @binding(${b.diffuseTexture})\nvar _diffuseTexture: texture_2d<f32>;\n\n@group(0) @binding(${b.sampler})\nvar _sampler: sampler;\n\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) positionWS: vec4f,\n  @location(1) normalWS: vec3f,\n  @location(2) uv: vec2f,\n  @location(3) @interpolate(flat) instanceIdx: u32,\n};\n\n\n@vertex\nfn main_vs(\n  @location(0) inWorldPos : vec3f,\n  @location(1) inNormal : vec3f,\n  @location(2) inUV : vec2f,\n  @builtin(vertex_index) inVertexIndex: u32,\n  @builtin(instance_index) inInstanceIndex: u32,\n) -> VertexOutput {\n  var result: VertexOutput;\n\n  let modelMat = _getInstanceTransform(inInstanceIndex);\n  let mvpMatrix = getMVP_Mat(modelMat, _uniforms.viewMatrix, _uniforms.projMatrix); // either here or upload from CPU\n  let vertexPos = vec4<f32>(inWorldPos.xyz, 1.0);\n  var projectedPosition = mvpMatrix * vertexPos;\n  let positionWS = modelMat * vertexPos;\n  result.position = projectedPosition;\n  result.positionWS = positionWS;\n  result.instanceIdx = inInstanceIndex;\n  result.normalWS = transformNormalToWorldSpace(modelMat, inNormal);\n  result.uv = inUV;\n\n  return result;\n}\n\n\n@fragment\nfn main_fs(fragIn: VertexOutput) -> @location(0) vec4<f32> {\n  // not enough data for most of debug modes\n  let shadingMode = getShadingMode(_uniforms.flags);\n  var color: vec3f;\n\n  if (shadingMode == ${SHADING_MODE_NORMALS}u) {\n    color = abs(normalize(fragIn.normalWS));\n    \n  } else {\n    var material: Material;\n    createDefaultMaterial(&material, fragIn.positionWS);\n    material.normal = normalize(fragIn.normalWS);\n    material.albedo = textureSample(_diffuseTexture, _sampler, fragIn.uv).rgb;\n    \n    // shading\n    var lights = array<Light, LIGHT_COUNT>();\n    fillLightsData(&lights);\n    color = doShading(material, AMBIENT_LIGHT, lights);\n  }\n\n  return vec4(color.xyz, 1.0);\n}\n`;\n", "import { BYTES_VEC3, BYTES_VEC2 } from '../constants.ts';\n\n/** Original mesh as imported from the OBJ file */\nexport interface GPUOriginalMesh {\n  vertexCount: number;\n  triangleCount: number;\n  vertexBuffer: GPUBuffer;\n  normalsBuffer: GPUBuffer;\n  uvBuffer: GPUBuffer;\n  indexBuffer: GPUBuffer;\n}\n\nexport const VERTEX_ATTRIBUTE_POSITION: GPUVertexBufferLayout = {\n  attributes: [\n    {\n      shaderLocation: 0, // position\n      offset: 0,\n      format: 'float32x3',\n    },\n  ],\n  arrayStride: BYTES_VEC3,\n  stepMode: 'vertex',\n};\n\nexport const VERTEX_ATTRIBUTES: GPUVertexBufferLayout[] = [\n  VERTEX_ATTRIBUTE_POSITION,\n  {\n    attributes: [\n      {\n        shaderLocation: 1, // normals\n        offset: 0,\n        format: 'float32x3', // only nanite object uses octahedron normals\n      },\n    ],\n    arrayStride: BYTES_VEC3,\n    stepMode: 'vertex',\n  },\n  {\n    attributes: [\n      {\n        shaderLocation: 2, // uv\n        offset: 0,\n        format: 'float32x2',\n      },\n    ],\n    arrayStride: BYTES_VEC2,\n    stepMode: 'vertex',\n  },\n];\n", "import { VERTS_IN_TRIANGLE } from '../../constants.ts';\nimport {\n  BindingsCache,\n  PIPELINE_DEPTH_STENCIL_ON,\n  PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n  assignResourcesToBindings2,\n  getClearColorVec3,\n  labelPipeline,\n  labelShader,\n  setNaniteDrawStats,\n  useColorAttachment,\n  useDepthStencilAttachment,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport {\n  calcCotHalfFov,\n  calcNaniteMeshletsVisibility,\n} from './calcNaniteMeshletsVisibility.ts';\nimport { NaniteObject } from '../../scene/naniteObject.ts';\nimport { SHADER_CODE, SHADER_PARAMS } from './drawNanitesPass.wgsl.ts';\nimport { assertIsGPUTextureView } from '../../utils/webgpu.ts';\nimport { getDiffuseTexture } from '../../scene/scene.ts';\nimport { VERTEX_ATTRIBUTES } from '../../scene/GPUOriginalMesh.ts';\n\nexport class DrawNanitesPass {\n  public static NAME: string = 'DrawNanitesPass';\n\n  private readonly renderPipeline: GPURenderPipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  // current frame stats\n  private drawnMeshletsCount = 0;\n  private drawnTriangleCount = 0;\n  private culledInstancesCount = 0;\n\n  constructor(device: GPUDevice, outTextureFormat: GPUTextureFormat) {\n    this.renderPipeline = DrawNanitesPass.createRenderPipeline(\n      device,\n      outTextureFormat\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat\n  ) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(DrawNanitesPass),\n      code: SHADER_CODE(),\n    });\n\n    return device.createRenderPipeline({\n      label: labelPipeline(DrawNanitesPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: VERTEX_ATTRIBUTES,\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n      depthStencil: PIPELINE_DEPTH_STENCIL_ON,\n    });\n  }\n\n  initFrameStats() {\n    this.drawnMeshletsCount = 0;\n    this.drawnTriangleCount = 0;\n    this.culledInstancesCount = 0;\n  }\n\n  uploadFrameStats({ scene }: PassCtx) {\n    setNaniteDrawStats(scene, this.drawnMeshletsCount, this.drawnTriangleCount);\n  }\n\n  draw(ctx: PassCtx, naniteObject: NaniteObject, loadOp: GPULoadOp) {\n    const { cmdBuf, profiler, depthTexture, hdrRenderTexture } = ctx;\n\n    // in this fn, time taken is on CPU, as GPU is async. Not 100% accurate, but good enough?\n    const visibilityCheckProfiler = profiler?.startRegionCpu('VisibilityCheckCPU'); // prettier-ignore\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: DrawNanitesPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3(), loadOp),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture, loadOp),\n      timestampWrites: profiler?.createScopeGpu(DrawNanitesPass.NAME),\n    });\n\n    // set render pass data\n    renderPass.setPipeline(this.renderPipeline);\n\n    // draw\n    this.renderNaniteObject(ctx, renderPass, naniteObject);\n\n    // fin\n    profiler?.endRegionCpu(visibilityCheckProfiler);\n    renderPass.end();\n  }\n\n  private renderNaniteObject(\n    ctx: PassCtx,\n    renderPass: GPURenderPassEncoder,\n    naniteObject: NaniteObject\n  ) {\n    const instances = naniteObject.instances.transforms;\n    const bindings = this.bindingsCache.getBindings(naniteObject.name, () =>\n      this.createBindings(ctx, naniteObject)\n    );\n\n    renderPass.setBindGroup(0, bindings);\n    renderPass.setVertexBuffer(0, naniteObject.originalMesh.vertexBuffer);\n    renderPass.setVertexBuffer(1, naniteObject.originalMesh.normalsBuffer);\n    renderPass.setVertexBuffer(2, naniteObject.originalMesh.uvBuffer);\n    renderPass.setIndexBuffer(naniteObject.buffers.indexBuffer, 'uint32');\n\n    const cotHalfFov = calcCotHalfFov(); // ~2.414213562373095,\n\n    for (let instanceIdx = 0; instanceIdx < instances.length; instanceIdx++) {\n      const instanceModelMat = instances[instanceIdx];\n      const toDrawCount = calcNaniteMeshletsVisibility(\n        ctx,\n        cotHalfFov,\n        instanceModelMat,\n        naniteObject\n      );\n      if (toDrawCount === 0) {\n        this.culledInstancesCount += 1;\n        continue;\n      }\n      this.drawnMeshletsCount += toDrawCount;\n\n      for (let mIdx = 0; mIdx < toDrawCount; mIdx++) {\n        const m = naniteObject.naniteVisibilityBufferCPU.drawnMeshlets[mIdx];\n        const triangleCount = m.triangleCount;\n        const vertexCount = triangleCount * VERTS_IN_TRIANGLE;\n        // we draw 1 instance, but we can use 'firstInstance'\n        // to send additional data to the GPU for free.\n        // Can only use for transformId. No meshletId in shader.\n        renderPass.drawIndexed(\n          vertexCount,\n          1, // instance count\n          m.firstIndexOffset, // first index\n          0, // base vertex\n          instanceIdx // first instance\n        );\n        this.drawnTriangleCount += triangleCount;\n      }\n    }\n  }\n\n  private createBindings = (\n    { device, globalUniforms, scene }: PassCtx,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n    const diffuseTextureView = getDiffuseTexture(scene, naniteObject);\n    assertIsGPUTextureView(diffuseTextureView);\n\n    return assignResourcesToBindings2(\n      DrawNanitesPass,\n      naniteObject.name,\n      device,\n      this.renderPipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        {\n          binding: b.instancesTransforms,\n          resource: { buffer: naniteObject.instances.transformsBuffer },\n        },\n        { binding: b.diffuseTexture, resource: diffuseTextureView },\n        { binding: b.sampler, resource: scene.samplerLinear },\n      ]\n    );\n  };\n}\n", "import { Mat4, mat4, vec3 } from 'wgpu-matrix';\nimport Input from './sys_web/input.ts';\nimport { CAMERA_CFG, CONFIG, CameraOpts } from './constants.ts';\nimport { clamp, projectPoint } from './utils/index.ts';\nimport { STATS } from './sys_web/stats.ts';\n\nconst ANGLE_90_DRG_IN_RAD = Math.PI / 2;\nconst ANGLE_UP_DOWN = 0; // pitch\nconst ANGLE_LEFT_RIGHT = 1; // yaw\n\n/** https://github.com/Scthe/WebFX/blob/09713a3e7ebaa1484ff53bd8a007908a5340ca8e/src/ecs/components/FpsController.ts */\nexport class Camera {\n  private readonly _viewMatrix = mat4.identity();\n  private readonly _tmpMatrix = mat4.identity(); // cache to prevent alloc\n  /** Polar coordinate angles  */\n  private readonly _angles: [number, number] = [0, 0];\n  /** Position world space */\n  private readonly _position: [number, number, number] = [0, 0, 0];\n\n  constructor(options: CameraOpts = CAMERA_CFG.position) {\n    this.resetPosition(options);\n  }\n\n  get positionWorldSpace() {\n    return this._position;\n  }\n\n  resetPosition = (options: CameraOpts = CAMERA_CFG.position) => {\n    if (options.position?.length === 3) {\n      this._position[0] = options.position[0];\n      this._position[1] = options.position[1];\n      this._position[2] = options.position[2];\n    }\n    if (options.rotation?.length === 2) {\n      this._angles[ANGLE_UP_DOWN] = options.rotation[1];\n      this._angles[ANGLE_LEFT_RIGHT] = options.rotation[0];\n    }\n  };\n\n  update(deltaTime: number, input: Input): void {\n    this.applyMovement(deltaTime, input);\n    this.applyRotation(deltaTime, input);\n    this.updateShownStats();\n  }\n\n  private applyMovement(deltaTime: number, input: Input) {\n    const sign = (positive: boolean, negative: boolean) =>\n      (positive ? 1 : 0) - (negative ? 1 : 0);\n\n    const digital = input.directions;\n    const m =\n      deltaTime *\n      (digital.goFaster ? CONFIG.movementSpeedFaster : CONFIG.movementSpeed);\n    const moveDir: [number, number, number, number] = [0, 0, 0, 1];\n    moveDir[0] = m * sign(digital.right, digital.left);\n    moveDir[1] = m * sign(digital.up, digital.down);\n    moveDir[2] = m * sign(digital.backward, digital.forward);\n\n    const rotMatrixInv = mat4.transpose(this.getRotationMat(), this._tmpMatrix);\n    const moveDirLocal = projectPoint(rotMatrixInv, moveDir, moveDir);\n    vec3.add(this._position, moveDirLocal, this._position);\n  }\n\n  private applyRotation(deltaTime: number, input: Input) {\n    const yaw = input.mouse.x * deltaTime * CONFIG.rotationSpeed;\n    const pitch = input.mouse.y * deltaTime * CONFIG.rotationSpeed;\n\n    this._angles[ANGLE_LEFT_RIGHT] += yaw;\n    this._angles[ANGLE_UP_DOWN] += pitch;\n    const safeAngle = ANGLE_90_DRG_IN_RAD * 0.95; // no extremes pls!\n    this._angles[ANGLE_UP_DOWN] = clamp(\n      this._angles[ANGLE_UP_DOWN],\n      -safeAngle,\n      safeAngle\n    );\n  }\n\n  private updateShownStats() {\n    const fmt = (x: number) => x.toFixed(1);\n    const p = this._position;\n    const r = this._angles;\n    STATS.update('Camera pos WS', `[${fmt(p[0])}, ${fmt(p[1])}, ${fmt(p[2])}]`);\n    STATS.update(\n      'Camera rot',\n      `[${fmt(r[ANGLE_LEFT_RIGHT])}, ${fmt(r[ANGLE_UP_DOWN])}]`\n    );\n  }\n\n  private getRotationMat(): Mat4 {\n    const angles = this._angles;\n    const result = mat4.identity(this._tmpMatrix);\n    mat4.rotateX(result, angles[ANGLE_UP_DOWN], result); // up-down\n    mat4.rotateY(result, angles[ANGLE_LEFT_RIGHT], result); // left-right\n    return result;\n  }\n\n  get viewMatrix(): Mat4 {\n    const rotMat = this.getRotationMat();\n    const pos = this._position;\n\n    // we have to reverse position, as moving camera X units\n    // moves scene -X units\n    return mat4.translate(\n      rotMat,\n      [-pos[0], -pos[1], -pos[2]],\n      this._viewMatrix\n    );\n  }\n}\n", "import * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${SHADER_SNIPPETS.FS_FAKE_LIGHTING}\n${SHADER_SNIPPETS.FS_NORMAL_FROM_DERIVATIVES}\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) wsPosition: vec4f,\n};\n\n@vertex\nfn main_vs(\n  @location(0) inWorldPos : vec3f,\n  @builtin(vertex_index) inVertexIndex: u32,\n  @builtin(instance_index) inInstanceIndex: u32,\n) -> VertexOutput {\n  var result: VertexOutput;\n\n  var worldPos = vec4<f32>(inWorldPos.xyz, 1.0);\n  var projectedPosition = _uniforms.vpMatrix * worldPos;\n  projectedPosition /= projectedPosition.w;\n  result.position = vec4<f32>(projectedPosition.xyz, 1.0);\n  result.wsPosition = worldPos;\n\n  return result;\n}\n\n@fragment\nfn main_fs(fragIn: VertexOutput) -> @location(0) vec4<f32> {\n  let c = fakeLighting(fragIn.wsPosition);\n  return vec4(c, c, c, 1.0);\n}\n`;\n", "import { CONFIG, VERTS_IN_TRIANGLE } from '../../constants.ts';\nimport { VERTEX_ATTRIBUTE_POSITION } from '../../scene/GPUOriginalMesh.ts';\nimport { getDebugTestObject } from '../../scene/scene.ts';\nimport {\n  PIPELINE_DEPTH_STENCIL_ON,\n  PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n  assignResourcesToBindings,\n  getClearColorVec3,\n  labelPipeline,\n  labelShader,\n  useColorAttachment,\n  useDepthStencilAttachment,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport { SHADER_CODE } from './dbgMeshoptimizerPass.wgsl.ts';\n\nexport class DbgMeshoptimizerPass {\n  public static NAME: string = 'DbgMeshoptimizerPass';\n\n  private readonly renderPipeline: GPURenderPipeline;\n  private readonly uniformsBindings: GPUBindGroup;\n\n  constructor(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat,\n    uniforms: RenderUniformsBuffer\n  ) {\n    this.renderPipeline = DbgMeshoptimizerPass.createRenderPipeline(\n      device,\n      outTextureFormat\n    );\n    this.uniformsBindings = assignResourcesToBindings(\n      DbgMeshoptimizerPass,\n      device,\n      this.renderPipeline,\n      [uniforms.createBindingDesc(0)]\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat\n  ) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(DbgMeshoptimizerPass),\n      code: SHADER_CODE(),\n    });\n\n    return device.createRenderPipeline({\n      label: labelPipeline(DbgMeshoptimizerPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [VERTEX_ATTRIBUTE_POSITION],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n      depthStencil: PIPELINE_DEPTH_STENCIL_ON,\n    });\n  }\n\n  draw(ctx: PassCtx) {\n    const { cmdBuf, profiler, depthTexture, hdrRenderTexture, scene } = ctx;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: DbgMeshoptimizerPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3()),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture),\n      timestampWrites: profiler?.createScopeGpu(DbgMeshoptimizerPass.NAME),\n    });\n\n    // set render pass data\n    renderPass.setPipeline(this.renderPipeline);\n    renderPass.setBindGroup(0, this.uniformsBindings);\n\n    // draw\n    const [debugMeshes, _nanite] = getDebugTestObject(scene);\n    const mesh = debugMeshes.meshoptimizerLODs[CONFIG.dbgMeshoptimizerLodLevel];\n    renderPass.setVertexBuffer(0, mesh.vertexBuffer);\n    renderPass.setIndexBuffer(mesh.indexBuffer, 'uint32');\n    const vertexCount = mesh.triangleCount * VERTS_IN_TRIANGLE;\n    renderPass.drawIndexed(vertexCount, 1, 0, 0, 0);\n\n    // fin\n    renderPass.end();\n  }\n}\n", "import * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${SHADER_SNIPPETS.FS_FAKE_LIGHTING}\n${SHADER_SNIPPETS.GET_RANDOM_COLOR}\n${SHADER_SNIPPETS.FS_NORMAL_FROM_DERIVATIVES}\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) wsPosition: vec4f,\n  @location(1) @interpolate(flat) instanceIndex: u32,\n};\n\n\n@vertex\nfn main_vs(\n  @location(0) inWorldPos : vec3f,\n  @builtin(vertex_index) inVertexIndex: u32,\n  @builtin(instance_index) inInstanceIndex: u32,\n) -> VertexOutput {\n  var result: VertexOutput;\n\n  var worldPos = vec4<f32>(inWorldPos.xyz, 1.0);\n  var projectedPosition = _uniforms.vpMatrix * worldPos;\n  projectedPosition /= projectedPosition.w;\n  result.position = vec4<f32>(projectedPosition.xyz, 1.0);\n  result.wsPosition = worldPos;\n  result.instanceIndex = inInstanceIndex;\n\n  return result;\n}\n\n\n@fragment\nfn main_fs(fragIn: VertexOutput) -> @location(0) vec4<f32> {\n  let c = fakeLighting(fragIn.wsPosition);\n  var color = getRandomColor(fragIn.instanceIndex);\n  color = color * c;\n  return vec4(color.xyz, 1.0);\n}\n`;\n", "import { CONFIG, VERTS_IN_TRIANGLE } from '../../constants.ts';\nimport { VERTEX_ATTRIBUTE_POSITION } from '../../scene/GPUOriginalMesh.ts';\nimport { Scene, getDebugTestObject } from '../../scene/scene.ts';\nimport {\n  PIPELINE_DEPTH_STENCIL_ON,\n  PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n  assignResourcesToBindings,\n  getClearColorVec3,\n  labelPipeline,\n  labelShader,\n  useColorAttachment,\n  useDepthStencilAttachment,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport {\n  SHADER_CODE,\n  SHADER_PARAMS,\n} from './dbgMeshoptimizerMeshletsPass.wgsl.ts';\n\nexport class DbgMeshoptimizerMeshletsPass {\n  public static NAME: string = 'DbgMeshoptimizerMeshletsPass';\n\n  private readonly renderPipeline: GPURenderPipeline;\n  private readonly uniformsBindings: GPUBindGroup;\n\n  constructor(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat,\n    uniforms: RenderUniformsBuffer\n  ) {\n    this.renderPipeline = DbgMeshoptimizerMeshletsPass.createRenderPipeline(\n      device,\n      outTextureFormat\n    );\n    this.uniformsBindings = assignResourcesToBindings(\n      DbgMeshoptimizerMeshletsPass,\n      device,\n      this.renderPipeline,\n      [uniforms.createBindingDesc(SHADER_PARAMS.bindings.renderUniforms)]\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat\n  ) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(DbgMeshoptimizerMeshletsPass),\n      code: SHADER_CODE(),\n    });\n\n    return device.createRenderPipeline({\n      label: labelPipeline(DbgMeshoptimizerMeshletsPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [VERTEX_ATTRIBUTE_POSITION],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n      depthStencil: PIPELINE_DEPTH_STENCIL_ON,\n    });\n  }\n\n  draw(ctx: PassCtx) {\n    const { cmdBuf, profiler, depthTexture, hdrRenderTexture, scene } = ctx;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: DbgMeshoptimizerMeshletsPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3()),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture),\n      timestampWrites: profiler?.createScopeGpu(\n        DbgMeshoptimizerMeshletsPass.NAME\n      ),\n    });\n\n    // set render pass data\n    renderPass.setPipeline(this.renderPipeline);\n    renderPass.setBindGroup(0, this.uniformsBindings);\n\n    // draw\n    if (CONFIG.displayMode === 'dbg-nanite-meshlets') {\n      this.drawNaniteDbg(renderPass, scene);\n    } else {\n      this.drawMeshoptimizerMeshletLODs(renderPass, scene);\n    }\n\n    // fin\n    renderPass.end();\n  }\n\n  private drawMeshoptimizerMeshletLODs(\n    renderPass: GPURenderPassEncoder,\n    scene: Scene\n  ) {\n    const [debugMeshes, _nanite] = getDebugTestObject(scene);\n    const meshlets =\n      debugMeshes.meshoptimizerMeshletLODs[CONFIG.dbgMeshoptimizerLodLevel];\n\n    renderPass.setVertexBuffer(0, meshlets.vertexBuffer);\n    renderPass.setIndexBuffer(meshlets.indexBuffer, 'uint32');\n    let nextIdx = 0;\n    meshlets.meshlets.forEach((m, firstInstance) => {\n      const vertexCount = m.triangleCount * VERTS_IN_TRIANGLE;\n      const firstIndex = nextIdx;\n      renderPass.drawIndexed(vertexCount, 1, firstIndex, 0, firstInstance);\n      nextIdx += vertexCount;\n    });\n  }\n\n  private drawNaniteDbg(renderPass: GPURenderPassEncoder, scene: Scene) {\n    const [_debugMeshes, nanite] = getDebugTestObject(scene);\n    renderPass.setVertexBuffer(0, nanite.originalMesh.vertexBuffer);\n    renderPass.setIndexBuffer(nanite.buffers.indexBuffer, 'uint32');\n\n    const drawnMeshlets = nanite.allMeshlets.filter(\n      (m) => m.lodLevel === CONFIG.dbgNaniteLodLevel\n    );\n    drawnMeshlets.forEach((m, meshletIdx) => {\n      const vertexCount = m.triangleCount * VERTS_IN_TRIANGLE;\n      renderPass.drawIndexed(\n        vertexCount,\n        1, // instance count\n        m.firstIndexOffset, // first index\n        0, // base vertex\n        meshletIdx\n      );\n    });\n  }\n}\n", "import { BYTES_UVEC4, BYTES_VEC4 } from '../../constants.ts';\nimport type { NaniteMeshletTreeNode } from '../naniteObject.ts';\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_MESHLET_DATA = (bindingIdx: number) => /* wgsl */ `\n\nstruct NaniteMeshletTreeNode {\n  boundsMidPointAndError: vec4f, // sharedSiblingsBounds.xyz + maxSiblingsError\n  parentBoundsMidPointAndError: vec4f, // parentBounds.xyz + parentError\n  ownBoundingSphere: vec4f, // ownBounds\n  triangleCount: u32,\n  firstIndexOffset: u32,\n  lodLevel: u32, // meshlet level + padding\n  padding0: u32, // padding to fill uvec4\n}\n@group(0) @binding(${bindingIdx})\nvar<storage, read> _meshlets: array<NaniteMeshletTreeNode>;\n`;\n\nconst GPU_MESHLET_SIZE_BYTES = 3 * BYTES_VEC4 + BYTES_UVEC4;\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\nexport function createMeshletsDataBuffer(\n  device: GPUDevice,\n  name: string,\n  meshletCount: number\n): GPUBuffer {\n  return device.createBuffer({\n    label: `${name}-nanite-meshlets`,\n    size: meshletCount * GPU_MESHLET_SIZE_BYTES,\n    usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE,\n  });\n}\n\n/** Upload final meshlet data to the GPU */\nexport function uploadMeshletsToGPU(\n  device: GPUDevice,\n  meshletsBuffer: GPUBuffer,\n  allMeshlets: Array<NaniteMeshletTreeNode>\n) {\n  const meshletCount = allMeshlets.length;\n  const actualSize = meshletCount * GPU_MESHLET_SIZE_BYTES;\n  if (actualSize !== meshletsBuffer.size) {\n    // prettier-ignore\n    throw new Error(`GPU meshlet data preallocated ${meshletsBuffer.size} bytes, but ${actualSize} bytes (${meshletCount} meshlets * ${GPU_MESHLET_SIZE_BYTES}) are needed`);\n  }\n\n  let offsetBytes = 0;\n  const data = new ArrayBuffer(GPU_MESHLET_SIZE_BYTES);\n  const dataAsF32 = new Float32Array(data);\n  const dataAsU32 = new Uint32Array(data);\n  allMeshlets.forEach((m) => {\n    dataAsF32[0] = m.sharedSiblingsBounds.center[0];\n    dataAsF32[1] = m.sharedSiblingsBounds.center[1];\n    dataAsF32[2] = m.sharedSiblingsBounds.center[2];\n    dataAsF32[3] = m.maxSiblingsError;\n    dataAsF32[4] = m.parentBounds?.center[0] || 0.0;\n    dataAsF32[5] = m.parentBounds?.center[1] || 0.0;\n    dataAsF32[6] = m.parentBounds?.center[2] || 0.0;\n    dataAsF32[7] = m.parentError === Infinity ? 9999999.0 : m.parentError;\n    // own bounds\n    const ownBoundSph = m.ownBounds.sphere;\n    dataAsF32[8] = ownBoundSph.center[0];\n    dataAsF32[9] = ownBoundSph.center[1];\n    dataAsF32[10] = ownBoundSph.center[2];\n    dataAsF32[11] = ownBoundSph.radius;\n    // u32's:\n    dataAsU32[12] = m.triangleCount;\n    dataAsU32[13] = m.firstIndexOffset;\n    dataAsU32[14] = m.lodLevel;\n\n    // write\n    device.queue.writeBuffer(\n      meshletsBuffer,\n      offsetBytes,\n      data,\n      0,\n      GPU_MESHLET_SIZE_BYTES\n    );\n    offsetBytes += GPU_MESHLET_SIZE_BYTES;\n  });\n}\n", "import { mat4, Mat4 } from 'wgpu-matrix';\nimport type {\n  MeshletId,\n  NaniteMeshletTreeNode,\n} from '../../scene/naniteObject.ts';\n\n/**\n * 1. Preallocate arrays to ease memory mgmt\n * 2. Const-time visited checks\n */\nexport class NaniteVisibilityBufferCPU {\n  public visitedMeshlets: boolean[] = [];\n  public drawnMeshlets: NaniteMeshletTreeNode[] = [];\n  public drawnMeshletsCount = 0;\n  public mvpMatrix: Mat4 = mat4.identity();\n\n  initialize(meshletCount: number) {\n    this.visitedMeshlets = Array(meshletCount);\n    this.drawnMeshlets = Array(meshletCount);\n  }\n\n  prepareForDraw() {\n    // this.visitedMeshlets.fill(false);\n    for (let i = 0; i < this.visitedMeshlets.length; i++) {\n      this.visitedMeshlets[i] = false;\n    }\n    this.drawnMeshletsCount = 0;\n  }\n\n  wasVisited = (id: MeshletId): boolean => this.visitedMeshlets[id];\n  setVisited = (id: MeshletId) => {\n    this.visitedMeshlets[id] = true;\n  };\n\n  setDrawn = (m: NaniteMeshletTreeNode) => {\n    this.drawnMeshlets[this.drawnMeshletsCount] = m;\n    this.drawnMeshletsCount += 1;\n  };\n}\n", "import { IS_DENO, VERTS_IN_TRIANGLE } from '../constants.ts';\nimport { MeshletWIP } from '../meshPreprocessing/index.ts';\nimport { getTriangleCount } from '../utils/index.ts';\nimport { NaniteVisibilityBufferCPU } from '../passes/naniteCpu/types.ts';\nimport { Bounds3d } from '../utils/calcBounds.ts';\nimport { NaniteInstancesData } from './instancesData.ts';\nimport { ImpostorBillboardTexture } from './renderImpostors/renderImpostors.ts';\nimport { uploadMeshletsToGPU } from './naniteBuffers/meshletsDataBuffer.ts';\nimport { NaniteObjectBuffers } from './naniteBuffers/index.ts';\nimport { GPUOriginalMesh } from './GPUOriginalMesh.ts';\n\nexport type MeshletId = number;\n\nexport type NaniteMeshletTreeNode = Pick<\n  MeshletWIP,\n  | 'id'\n  | 'lodLevel'\n  | 'sharedSiblingsBounds'\n  | 'maxSiblingsError'\n  | 'parentBounds'\n  | 'parentError'\n> & {\n  triangleCount: number;\n  firstIndexOffset: number;\n  createdFrom: NaniteMeshletTreeNode[];\n  ownBounds: Bounds3d;\n};\n\nexport const BOTTOM_LEVEL_NODE = 0;\n\nexport class NaniteObject {\n  public readonly allMeshlets: Array<NaniteMeshletTreeNode> = [];\n  public readonly naniteVisibilityBufferCPU = new NaniteVisibilityBufferCPU();\n  public diffuseTexture: GPUTexture | undefined = undefined;\n  public diffuseTextureView: GPUTextureView | undefined = undefined;\n  public roots: NaniteMeshletTreeNode[] = [];\n  /** Max LOD tree level of _ONE_ of the roots. Some roots might have ended earlier */\n  public lodLevelCount = 0;\n\n  constructor(\n    public name: string,\n    public readonly bounds: Bounds3d,\n    public readonly originalMesh: GPUOriginalMesh,\n    public readonly buffers: NaniteObjectBuffers,\n    public readonly impostor: ImpostorBillboardTexture,\n    public readonly instances: NaniteInstancesData\n  ) {}\n\n  find = (id: MeshletId) => this.allMeshlets.find((m) => m.id === id);\n\n  contains = (id: MeshletId) => this.find(id) !== undefined;\n\n  get totalTriangleCount() {\n    return this.allMeshlets.reduce((acc, m) => acc + m.triangleCount, 0);\n  }\n\n  get totalIndicesCount() {\n    return VERTS_IN_TRIANGLE * this.totalTriangleCount;\n  }\n\n  get meshletCount() {\n    return this.allMeshlets.length;\n  }\n\n  get instancesCount() {\n    return this.instances.transforms.length;\n  }\n\n  /** Triangle count as imported from .OBJ file. This is how much you would render if you did not have nanite */\n  get bottomTriangleCount() {\n    return this.allMeshlets.reduce((acc, m) => {\n      return m.lodLevel === BOTTOM_LEVEL_NODE ? acc + m.triangleCount : acc;\n    }, 0);\n  }\n\n  /** Bottom-level meshlets. We don't want to render them, we want something higher-up the LOD tree to reduce triangle count */\n  get bottomMeshletCount() {\n    return this.allMeshlets.reduce((acc, m) => {\n      return m.lodLevel === BOTTOM_LEVEL_NODE ? acc + 1 : acc;\n    }, 0);\n  }\n\n  bindInstanceTransforms = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.instances.transformsBuffer },\n  });\n\n  finalizeNaniteObject(device: GPUDevice) {\n    this.naniteVisibilityBufferCPU.initialize(this.meshletCount);\n\n    uploadMeshletsToGPU(\n      device,\n      this.buffers.meshletsDataBuffer,\n      this.allMeshlets\n    );\n  }\n\n  /** Used only during construction */\n  addMeshlet(\n    parent: NaniteMeshletTreeNode | undefined,\n    m: MeshletWIP,\n    firstIndexOffset: number,\n    ownBounds: Bounds3d\n  ) {\n    const existing = this.find(m.id);\n    if (existing) {\n      return existing;\n    }\n\n    const node: NaniteMeshletTreeNode = {\n      id: m.id,\n      lodLevel: m.lodLevel,\n      sharedSiblingsBounds: m.sharedSiblingsBounds,\n      maxSiblingsError: m.maxSiblingsError,\n      parentBounds: m.parentBounds,\n      parentError: m.parentError,\n      firstIndexOffset,\n      triangleCount: getTriangleCount(m.indices),\n      createdFrom: [], // filled when addMeshlet() is called for children\n      ownBounds,\n    };\n\n    this.allMeshlets.push(node);\n    this.lodLevelCount = Math.max(this.lodLevelCount, node.lodLevel + 1);\n\n    if (parent) {\n      parent.createdFrom.push(node);\n    } else {\n      this.roots.push(node);\n    }\n\n    return node;\n  }\n\n  printStats() {\n    if (!IS_DENO) {\n      // prevent spam. This is literally pages long\n      console.log('All meshlets:', this.allMeshlets);\n      console.log('Root meshlets:', this.roots);\n    }\n\n    const trianglesBefore = this.bottomTriangleCount;\n    const trianglesAfter = this.roots.reduce(\n      (acc, m) => acc + m.triangleCount,\n      0\n    );\n    const simplifPct = (trianglesAfter / trianglesBefore) * 100;\n\n    console.log(`Created ${this.lodLevelCount} LOD levels. Total ${this.meshletCount} meshlets.`); // prettier-ignore\n    console.log(`There are ${this.bottomMeshletCount} bottom level meshlets with ${trianglesBefore} triangles.`); // prettier-ignore\n    console.log(`There are ${this.roots.length} root meshlets with ${trianglesAfter} triangles. Simplification: ${simplifPct.toFixed(1)}%.`); // prettier-ignore\n  }\n}\n", "import { BYTES_U32, BYTES_UVEC2 } from '../../constants.ts';\nimport { createArray } from '../../utils/index.ts';\nimport {\n  WEBGPU_MINIMAL_BUFFER_SIZE,\n  downloadBuffer,\n} from '../../utils/webgpu.ts';\nimport { BOTTOM_LEVEL_NODE, NaniteObject } from '../naniteObject.ts';\n\n///////////////////////////\n/// SHADER CODE\n///\n/// NOTE: Drawn meshlets list contains vec2u(transformMatrixId, meshletId) entries.\n///       Each such entry will be drawn either by hardware XOR software rasterizer.\n///       Same entry will NEVER exist on both lists at same time. We allocate\n///       as if we had to drawn most detailed LOD for all instances.\n///       At the start of the list are items hardware rasterized. At end - software.\n///////////////////////////\n\n/** Drawn meshlets params - hardware */\nexport const BUFFER_DRAWN_MESHLETS_PARAMS = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n\n/** arg for https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/drawIndirect */\nstruct DrawIndirect{\n  vertexCount: u32,\n  instanceCount: atomic<u32>,\n  firstVertex: u32,\n  firstInstance : u32,\n}\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnMeshletsParams: DrawIndirect;\n`;\nexport const BYTES_DRAWN_MESHLETS_PARAMS = Math.max(\n  WEBGPU_MINIMAL_BUFFER_SIZE,\n  4 * BYTES_U32\n);\n\n/** Drawn meshlets params - software */\nexport const BUFFER_DRAWN_MESHLETS_SW_PARAMS = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n\n/** arg for https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroupsIndirect */\nstruct DrawnMeshletsSw{\n  // dispatch params\n  workgroupsX: u32, // modified only by globalId=0\n  workgroupsY: ${access === 'read' ? 'u32' : 'atomic<u32>'},\n  workgroupsZ: u32, // not modified\n  /** when not limited by dispatch workgroup requirements */\n  actuallyDrawnMeshlets: ${access === 'read' ? 'u32' : 'atomic<u32>'},\n}\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnMeshletsSwParams: DrawnMeshletsSw;\n`;\nexport const BYTES_DRAWN_MESHLETS_SW_PARAMS = Math.max(\n  WEBGPU_MINIMAL_BUFFER_SIZE,\n  4 * BYTES_U32\n);\n\nconst storeUtilFns = /* wgsl */ `\n\nfn _storeMeshletHardwareDraw(idx: u32, tfxIdx: u32, meshletIdx: u32) {\n  _drawnMeshletsList[idx] = vec2u(tfxIdx, meshletIdx);\n}\nfn _storeMeshletSoftwareDraw(idx: u32, tfxIdx: u32, meshletIdx: u32) {\n  let len: u32 = arrayLength(&_drawnMeshletsList);\n  let idx2: u32 = len - 1u - idx; // stored at the back of the list\n  _drawnMeshletsList[idx2] = vec2u(tfxIdx, meshletIdx);\n}\n`;\n\nconst loadUtilFns = /* wgsl */ `\nfn _getMeshletHardwareDraw(idx: u32) -> vec2u {\n  return _drawnMeshletsList[idx];\n}\nfn _getMeshletSoftwareDraw(idx: u32) -> vec2u {\n  let len: u32 = arrayLength(&_drawnMeshletsList);\n  let idx2: u32 = len - 1u - idx; // stored at the back of the list\n  return _drawnMeshletsList[idx2];\n}\n`;\n\n/** HUGE list of possible entries */\nexport const BUFFER_DRAWN_MESHLETS_LIST = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnMeshletsList: array<vec2<u32>>;\n\n// WGSL compile error if we even HAVE (not ever called) code for 'write' if access is 'read'\n${access == 'read' ? loadUtilFns : storeUtilFns}\n`;\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\nexport function createDrawnMeshletsBuffer(\n  device: GPUDevice,\n  name: string,\n  allWIPMeshlets: Array<{ lodLevel: number }>,\n  instanceCount: number\n): GPUBuffer {\n  const bottomMeshletCount = allWIPMeshlets.filter(\n    (m) => m.lodLevel === BOTTOM_LEVEL_NODE\n  ).length;\n  const listSize = bottomMeshletCount * instanceCount * BYTES_UVEC2;\n\n  return device.createBuffer({\n    label: `${name}-nanite-drawn-meshlets`,\n    size:\n      BYTES_DRAWN_MESHLETS_PARAMS + BYTES_DRAWN_MESHLETS_SW_PARAMS + listSize,\n    usage:\n      GPUBufferUsage.STORAGE |\n      GPUBufferUsage.INDIRECT |\n      GPUBufferUsage.COPY_DST |\n      GPUBufferUsage.COPY_SRC, // for stats, debug etc.\n  });\n}\n\n/**\n * WARNING: SLOW. DO NOT USE UNLESS FOR DEBUG/TEST PURPOSES.\n *\n * Kinda sucks it's async as weird things happen.\n */\nexport async function downloadDrawnMeshletsBuffer(\n  device: GPUDevice,\n  naniteObject: NaniteObject\n) {\n  const gpuBuffer = naniteObject.buffers.drawnMeshletsBuffer;\n\n  const data = await downloadBuffer(device, Uint32Array, gpuBuffer);\n  const result = parseDrawnMeshletsBuffer(data);\n\n  console.log(`[${naniteObject.name}] Drawn meshlets buffer`, result);\n  return result;\n}\n\nexport function parseDrawnMeshletsBuffer(data: Uint32Array) {\n  // u32's used by params\n  const paramsOffset =\n    (BYTES_DRAWN_MESHLETS_PARAMS + BYTES_DRAWN_MESHLETS_SW_PARAMS) / BYTES_U32;\n\n  // parse uvec2 into something I won't forget next day\n  // remember:\n  // 1) it's uvec2,\n  // 2) the buffer has a lot of space, we do not use it whole\n  const getDrawByIdx = (idx: number) => ({\n    transformId: data[paramsOffset + 2 * idx],\n    meshletId: data[paramsOffset + 2 * idx + 1],\n  });\n\n  // hardware draw\n  const indirectDraw = data.slice(0, 4);\n  const meshletCount = indirectDraw[1];\n  const meshletIds = createArray(meshletCount).map((_, i) => getDrawByIdx(i));\n\n  // software draw\n  const swOffset = BYTES_DRAWN_MESHLETS_PARAMS / BYTES_U32;\n  const indirectDispatch = data.slice(swOffset, swOffset + 4);\n  const actuallyDrawnMeshlets = indirectDispatch[3];\n  const listLen = (data.length - paramsOffset) / 2; // in uvec2's\n  const swMeshletIds = createArray(actuallyDrawnMeshlets).map((_, i) =>\n    getDrawByIdx(listLen - 1 - i)\n  );\n\n  return {\n    hardwareRaster: {\n      vertexCount: indirectDraw[0],\n      meshletCount, // indirect draw's instanceCount\n      firstVertex: indirectDraw[2],\n      firstInstance: indirectDraw[3],\n      meshletIds,\n    },\n    softwareRaster: {\n      workgroupsX: indirectDispatch[0], // triangleIds / SHADER_PARAMS.workgroupSizeX\n      workgroupsY: indirectDispatch[1],\n      workgroupsZ: indirectDispatch[2],\n      meshletCount: actuallyDrawnMeshlets,\n      meshletIds: swMeshletIds,\n    },\n  };\n}\n", "import { vec3, Vec3 } from 'wgpu-matrix';\nimport { CO_PER_VERTEX, VERTS_IN_TRIANGLE } from '../constants.ts';\n\nexport interface Bounds3d {\n  sphere: BoundingSphere;\n  box: BoundingBox;\n}\n\nexport function calculateBounds(\n  vertices: Float32Array,\n  indices?: Uint32Array\n): Bounds3d {\n  const box = indices\n    ? calcBoundingBoxIndex(vertices, indices)\n    : calcBoundingBox(vertices);\n  return { box, sphere: calcBoundingSphere(box) };\n}\n\ntype BoundingBoxPoint = [number, number, number];\nexport type BoundingBox = [BoundingBoxPoint, BoundingBoxPoint];\n\ntype VertexCb = (v: [number, number, number]) => void;\n\nfunction yieldVertices(\n  vertices: Float32Array,\n  stride = CO_PER_VERTEX,\n  cb: VertexCb\n) {\n  const vertCount = vertices.length / stride;\n  const v: [number, number, number] = [0, 0, 0];\n\n  for (let i = 0; i < vertCount; i++) {\n    const offset = i * stride;\n    v[0] = vertices[offset];\n    v[1] = vertices[offset + 1];\n    v[2] = vertices[offset + 2];\n    cb(v);\n  }\n}\n\nfunction yieldVerticesIndex(\n  vertices: Float32Array,\n  indices: Uint32Array,\n  cb: VertexCb\n) {\n  const v: [number, number, number] = [0, 0, 0];\n\n  for (let i = 0; i < indices.length; i++) {\n    const offset = indices[i] * VERTS_IN_TRIANGLE;\n    v[0] = vertices[offset];\n    v[1] = vertices[offset + 1];\n    v[2] = vertices[offset + 2];\n    cb(v);\n  }\n}\n\nexport function boundsCalculator(): [BoundingBox, VertexCb] {\n  const maxCo: BoundingBoxPoint = [undefined!, undefined!, undefined!];\n  const minCo: BoundingBoxPoint = [undefined!, undefined!, undefined!];\n  const cb: VertexCb = (v) => {\n    for (let co = 0; co < 3; co++) {\n      maxCo[co] = maxCo[co] !== undefined ? Math.max(maxCo[co], v[co]) : v[co];\n      minCo[co] = minCo[co] !== undefined ? Math.min(minCo[co], v[co]) : v[co];\n    }\n  };\n  return [[minCo, maxCo], cb];\n}\n\nexport function calcBoundingBox(\n  vertices: Float32Array,\n  stride = CO_PER_VERTEX\n): BoundingBox {\n  const [results, addVert] = boundsCalculator();\n  yieldVertices(vertices, stride, addVert);\n  return results;\n}\n\nexport function calcBoundingBoxIndex(\n  vertices: Float32Array,\n  indices: Uint32Array\n): BoundingBox {\n  const [results, addVert] = boundsCalculator();\n  yieldVerticesIndex(vertices, indices, addVert);\n  return results;\n}\n\nexport type BoundingSphere = { center: Vec3; radius: number };\n\nexport function isSameBoundingSphere(\n  a: BoundingSphere | undefined,\n  b: BoundingSphere | undefined\n) {\n  return (\n    a?.center[0] === b?.center[0] &&\n    a?.center[1] === b?.center[1] &&\n    a?.center[2] === b?.center[2] &&\n    a?.radius === b?.radius\n  );\n}\n\nexport function calcBoundingSphere([\n  minCo,\n  maxCo,\n]: BoundingBox): BoundingSphere {\n  const center = vec3.midpoint(minCo, maxCo);\n  const radius = vec3.distance(center, maxCo);\n  return { center, radius };\n}\n\nexport function printBoundingBox(\n  vertices: Float32Array,\n  stride = CO_PER_VERTEX\n) {\n  const [minCo, maxCo] = calcBoundingBox(vertices, stride);\n  const p = (a: number[]) => '[' + a.map((x) => x.toFixed(2)).join(',') + ']';\n  console.log(`Bounding box min:`, p(minCo));\n  console.log(`Bounding box max:`, p(maxCo));\n}\n", "import { vec3 } from 'wgpu-matrix';\nimport { calcBoundingBox } from '../../utils/calcBounds.ts';\nimport { createGPUBuffer } from '../../utils/webgpu.ts';\n\n/*\nBased on:\n- https://momentsingraphics.de/ToyRenderer2SceneManagement.html#Quantization\n- https://github.com/MomentsInGraphics/vulkan_renderer/blob/38b1dc04ec3e67a311dad2f8e863eb070d076135/tools/io_export_vulkan_blender28.py#L481\n- https://github.com/MomentsInGraphics/vulkan_renderer/blob/38b1dc04ec3e67a311dad2f8e863eb070d076135/src/scene.h#L56\n*/\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_VERTEX_POSITIONS_QUANT = (\n  bindingIdx: number\n) => /* wgsl */ `\n\nstruct VertexPositionsQuant{\n  dqFac: vec4f,\n  dqSummand: vec4f,\n  data: array<vec2u>,\n}\n\n@group(0) @binding(${bindingIdx})\n// var<storage, read> _vertexPositions: array<vec2u>;\nvar<storage, read> _vertexPositionsQuant: VertexPositionsQuant;\n\n/** get vertex position. Has .w=1 */\nfn _getVertexPosition(idx: u32) -> vec4f {\n  // let dequantFactor = _objectData.dequantFactor;\n  // let dequantSummand = _objectData.dequantSummand;\n  /*let dequantFactor = vec3f(\n    5.918854526498762e-7, 5.862659691047156e-7, 4.5926591951683804e-7\n  );\n  let dequantSummand = vec3f(\n    -0.755043089389801, 0.2664794921875, -0.4934331178665161\n  );*/\n  let dequantFactor = _vertexPositionsQuant.dqFac.xyz;\n  let dequantSummand = _vertexPositionsQuant.dqSummand.xyz;\n  let positionQuant = _vertexPositionsQuant.data[idx];\n\n  let positionU32 = vec3u(\n    positionQuant[0] & 0x1FFFFF,\n    ((positionQuant[0] & 0xFFE00000) >> 21) | ((positionQuant[1] & 0x3FF) << 11),\n    (positionQuant[1] >> 10) & 0x1FFFFF\n  );\n  let positionF32 = vec3f(positionU32) * dequantFactor + dequantSummand;\n  return vec4f(positionF32.xyz, 1.0);\n}\n`;\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\nexport function createNaniteVertexPositionsBuffer_Quant(\n  device: GPUDevice,\n  name: string,\n  vertices: Float32Array\n): GPUBuffer {\n  const vertexCount = vertices.length / 3;\n  // Quantization: calculate bounding box and split into 2**21 'places' per axis.\n  // 3 axis * 21bytes = 63bytes for total vertex position.\n  // The comments refer to Christoph Peters's\n  // https://github.com/MomentsInGraphics/vulkan_renderer original code.\n  const QUANT_PLACES = 2.0 ** 21.0;\n\n  const [bboxMin, bboxMax] = calcBoundingBox(vertices);\n  const bboxSpan = vec3.sub(bboxMax, bboxMin);\n  // PY: quantization_factor = (2.0**21.0 / (box_max - box_min))\n  const quantFactor = vec3.create(\n    QUANT_PLACES / bboxSpan[0],\n    QUANT_PLACES / bboxSpan[1],\n    QUANT_PLACES / bboxSpan[2]\n  );\n  // PY: quantization_offset = -box_min * quantization_factor\n  const quantOffset = vec3.mul(bboxMin, vec3.negate(quantFactor));\n\n  const vertexPos = vec3.create();\n  const quantVertPos = (x: number) => Math.floor(Math.min(x, QUANT_PLACES - 1));\n\n  const dequantF32Count = 8; // 2 * vec4f\n  const data = new Uint32Array(dequantF32Count + vertexCount * 2);\n\n  for (let i = 0; i < vertexCount; i++) {\n    vec3.set(\n      vertices[i * 3],\n      vertices[i * 3 + 1],\n      vertices[i * 3 + 2],\n      vertexPos\n    );\n    // PY: quantized_positions = np.asarray(mesh.vertex_position * quantization_factor + quantization_offset, dtype=np.uint32)\n    vec3.mul(vertexPos, quantFactor, vertexPos);\n    vec3.add(vertexPos, quantOffset, vertexPos);\n    // PY: quantized_positions = np.minimum(2**21 - 1, quantized_positions)\n    const vertexPosQuantX = quantVertPos(vertexPos[0]); // 21 bits\n    const vertexPosQuantY = quantVertPos(vertexPos[1]); // 21 bits\n    const vertexPosQuantZ = quantVertPos(vertexPos[2]); // 21 bits\n\n    data[dequantF32Count + i * 2 + 0] = vertexPosQuantX;\n    data[dequantF32Count + i * 2 + 0] += (vertexPosQuantY & 0x7ff) << 21; // write 11 bits of axis Y\n    data[dequantF32Count + i * 2 + 1] = (vertexPosQuantY & 0x1ff800) >> 11; // write remaining 10 bits of axis Y to other u32\n    data[dequantF32Count + i * 2 + 1] += vertexPosQuantZ << 10;\n  }\n\n  // PY: dequantization_factor = 1.0 / quantization_factor\n  const dequantFactor = vec3.inverse(quantFactor); // we will revert the scaling\n  // PY: box_min + 0.5 * quantFactor;\n  const dequantSummand = vec3.addScaled(bboxMin, dequantFactor, 0.5);\n  const dataAsF32 = new Float32Array(data.buffer, 0, 8);\n  dataAsF32[0] = dequantFactor[0];\n  dataAsF32[1] = dequantFactor[1];\n  dataAsF32[2] = dequantFactor[2];\n  dataAsF32[4] = dequantSummand[0];\n  dataAsF32[5] = dequantSummand[1];\n  dataAsF32[6] = dequantSummand[2];\n\n  // provide both values to the WGSL's _getVertexPosition()\n  // console.log({ dequantFactor, dequantSummand });\n\n  return createGPUBuffer(\n    device,\n    `${name}-nanite-vertex-buffer-vec4`,\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n    data\n  );\n}\n", "import { CONFIG } from '../../constants.ts';\nimport { createGPUBuffer } from '../../utils/webgpu.ts';\nimport {\n  BUFFER_VERTEX_POSITIONS_QUANT,\n  createNaniteVertexPositionsBuffer_Quant,\n} from './vertexPositionsQuantBuffer.ts';\n\nconst USE_QUANTIZATION = CONFIG.useVertexQuantization;\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nconst BUFFER_VERTEX_POSITIONS_NATIVE = (bindingIdx: number) => /* wgsl */ `\n\n// WARNING: SSBO with 'array<vec3f>' does not work. Forces 'array<vec4f>'.\n// DO NOT ASK HOW I HAVE DEBUGGED THIS.\n@group(0) @binding(${bindingIdx})\nvar<storage, read> _vertexPositionsNative: array<vec4f>;\n\nfn _getVertexPosition(idx: u32) -> vec4f { return _vertexPositionsNative[idx]; }\n`;\n\nexport const BUFFER_VERTEX_POSITIONS = USE_QUANTIZATION\n  ? BUFFER_VERTEX_POSITIONS_QUANT\n  : BUFFER_VERTEX_POSITIONS_NATIVE;\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\nfunction createNaniteVertexPositionsBuffer_Native(\n  device: GPUDevice,\n  name: string,\n  vertices: Float32Array\n): GPUBuffer {\n  const vertexCount = vertices.length / 3;\n  const data = new Float32Array(vertexCount * 4);\n  for (let i = 0; i < vertexCount; i++) {\n    data[i * 4] = vertices[i * 3];\n    data[i * 4 + 1] = vertices[i * 3 + 1];\n    data[i * 4 + 2] = vertices[i * 3 + 2];\n    data[i * 4 + 3] = 1.0;\n  }\n  return createGPUBuffer(\n    device,\n    `${name}-nanite-vertex-buffer-vec4`,\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n    data\n  );\n}\n\nexport const createNaniteVertexPositionsBuffer = USE_QUANTIZATION\n  ? createNaniteVertexPositionsBuffer_Quant\n  : createNaniteVertexPositionsBuffer_Native;\n", "import { vec3 } from 'wgpu-matrix';\nimport { createGPUBuffer } from '../../utils/webgpu.ts';\nimport { clamp } from '../../utils/index.ts';\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_VERTEX_NORMALS = (bindingIdx: number) => /* wgsl */ `\n\n@group(0) @binding(${bindingIdx})\nvar<storage, read> _vertexNormals: array<vec2f>;\n\nfn _getVertexNormal(idx: u32) -> vec3f {\n  return decodeOctahedronNormal(_vertexNormals[idx]);\n}\n`;\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\n/** https://knarkowicz.wordpress.com/2014/04/16/octahedron-normal-vector-encoding/ */\nexport function createOctahedronNormals(\n  device: GPUDevice,\n  name: string,\n  normals: Float32Array\n): GPUBuffer {\n  const vertexCount = normals.length / 3;\n  const data = new Float32Array(vertexCount * 2);\n  const n = vec3.create();\n\n  for (let i = 0; i < vertexCount; i++) {\n    vec3.set(normals[i * 3], normals[i * 3 + 1], normals[i * 3 + 2], n);\n    const a = Math.abs(n[0]) + Math.abs(n[1]) + Math.abs(n[2]);\n    vec3.mulScalar(n, 1 / a, n);\n    if (n[2] < 0) {\n      // OctWrap\n      const x = n[0];\n      const y = n[1];\n      n[0] = (1.0 - Math.abs(y)) * (x >= 0.0 ? 1.0 : -1.0);\n      n[1] = (1.0 - Math.abs(x)) * (y >= 0.0 ? 1.0 : -1.0);\n    }\n    data[2 * i] = n[0] * 0.5 + 0.5;\n    data[2 * i + 1] = n[1] * 0.5 + 0.5;\n  }\n  return createGPUBuffer(\n    device,\n    `${name}-nanite-octahedron-normals`,\n    GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n    data\n  );\n}\n\nexport function decodeOctahedronNormal(x: number, y: number) {\n  x = x * 2.0 - 1.0;\n  y = y * 2.0 - 1.0;\n\n  // https://twitter.com/Stubbesaurus/status/937994790553227264\n  const n = vec3.create(x, y, 1.0 - Math.abs(x) - Math.abs(y));\n  const t = clamp(-n[2], 0, 1);\n  n[0] += n[0] >= 0.0 ? -t : t;\n  n[1] += n[1] >= 0.0 ? -t : t;\n  return vec3.normalize(n);\n}\n", "///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_VERTEX_UVS = (bindingIdx: number) => /* wgsl */ `\n\n@group(0) @binding(${bindingIdx})\nvar<storage, read> _vertexUV: array<vec2f>;\n\nfn _getVertexUV(idx: u32) -> vec2f { return _vertexUV[idx]; }\n`;\n", "import { BYTES_U32 } from '../../constants.ts';\nimport {\n  WEBGPU_MINIMAL_BUFFER_SIZE,\n  downloadBuffer,\n} from '../../utils/webgpu.ts';\nimport { NaniteObject } from '../naniteObject.ts';\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_DRAWN_IMPOSTORS_PARAMS = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n\n/** arg for https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroupsIndirect */\nstruct DrawIndirect{\n  vertexCount: u32,\n  instanceCount: atomic<u32>,\n  firstVertex: u32,\n  firstInstance : u32,\n}\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnImpostorsParams: DrawIndirect;\n`;\n\nexport const BUFFER_DRAWN_IMPOSTORS_LIST = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnImpostorsList: array<u32>;\n`;\n\nexport const BYTES_DRAWN_IMPOSTORS_PARAMS = Math.max(\n  WEBGPU_MINIMAL_BUFFER_SIZE,\n  4 * BYTES_U32\n);\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\nexport function createDrawnImpostorsBuffer(\n  device: GPUDevice,\n  name: string,\n  instanceCount: number\n): GPUBuffer {\n  const arraySizeBytes = BYTES_U32 * instanceCount;\n\n  const bufferGpu = device.createBuffer({\n    label: `${name}-nanite-billboards`,\n    size: BYTES_DRAWN_IMPOSTORS_PARAMS + arraySizeBytes,\n    usage:\n      GPUBufferUsage.STORAGE |\n      GPUBufferUsage.INDIRECT |\n      GPUBufferUsage.COPY_DST |\n      GPUBufferUsage.COPY_SRC, // for stats, debug etc.\n  });\n\n  return bufferGpu;\n}\n\n/**\n * WARNING: SLOW. DO NOT USE UNLESS FOR DEBUG/TEST PURPOSES.\n *\n * Kinda sucks it's async as weird things happen.\n */\nexport async function downloadDrawnImpostorsBuffer(\n  device: GPUDevice,\n  naniteObject: NaniteObject\n) {\n  const gpuBuffer = naniteObject.buffers.drawnImpostorsBuffer;\n\n  // TBH. we don't need whole buffer, just a single u32. But.. ehhhh..\n  const data = await downloadBuffer(device, Uint32Array, gpuBuffer);\n  const impostorCount = data[1];\n\n  const listOffset = BYTES_DRAWN_IMPOSTORS_PARAMS / BYTES_U32;\n  const idsList = data.slice(listOffset, listOffset + impostorCount);\n\n  const result = {\n    vertexCount: data[0],\n    impostorCount,\n    firstVertex: data[2],\n    firstInstance: data[3],\n    idsList,\n  };\n\n  console.log(`[${naniteObject.name}] Drawn impostors buffer`, result);\n  return result;\n}\n", "import { BYTES_U32, BYTES_VEC4 } from '../../constants.ts';\nimport { BoundingSphere } from '../../utils/calcBounds.ts';\nimport { WEBGPU_MINIMAL_BUFFER_SIZE } from '../../utils/webgpu.ts';\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\n\nexport const BUFFER_DRAWN_INSTANCES_PARAMS = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n\n/** arg for https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroupsIndirect */\nstruct CullParams{\n  // dispatch params\n  workgroupsX: u32, // modified only by globalId=0\n  workgroupsY: ${access === 'read' ? 'u32' : 'atomic<u32>'},\n  workgroupsZ: u32, // not modified\n  /** when not limited by dispatch workgroup requirements */\n  actuallyDrawnInstances: ${access === 'read' ? 'u32' : 'atomic<u32>'},\n  // other params:\n  objectBoundingSphere: vec4f,\n  allMeshletsCount: u32,\n}\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnInstancesParams: CullParams;\n`;\n\nexport const BYTES_DRAWN_INSTANCES_PARAMS = Math.max(\n  WEBGPU_MINIMAL_BUFFER_SIZE,\n  3 * BYTES_U32 + // dispatch itself\n    BYTES_U32 + // actuallyDrawnInstances\n    BYTES_U32 + // allMeshletsCount\n    BYTES_VEC4 // bounding sphere\n);\n\nexport const BUFFER_DRAWN_INSTANCES_LIST = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _drawnInstancesList: array<u32>;\n`;\n\n///////////////////////////\n/// GPU BUFFER\n///////////////////////////\n\nexport function createDrawnInstanceIdsBuffer(\n  device: GPUDevice,\n  name: string,\n  allMeshletsCount: number,\n  instanceCount: number,\n  wholeObjectBounds: BoundingSphere\n): GPUBuffer {\n  const dataSize = BYTES_U32 * instanceCount;\n\n  const bufferGpu = device.createBuffer({\n    label: `${name}-nanite-drawn-instances-ids`,\n    size: BYTES_DRAWN_INSTANCES_PARAMS + dataSize,\n    usage:\n      GPUBufferUsage.STORAGE |\n      GPUBufferUsage.INDIRECT |\n      GPUBufferUsage.COPY_DST |\n      GPUBufferUsage.COPY_SRC, // for stats, debug etc.\n  });\n\n  writeCullData(device, bufferGpu, allMeshletsCount, wholeObjectBounds);\n\n  return bufferGpu;\n}\n\nfunction writeCullData(\n  device: GPUDevice,\n  bufferGpu: GPUBuffer,\n  allMeshletsCount: number,\n  wholeObjectBounds: BoundingSphere\n) {\n  // write const data\n  const buffer = new ArrayBuffer(BYTES_DRAWN_INSTANCES_PARAMS);\n  const bufferF32 = new Float32Array(buffer);\n  const bufferU32 = new Uint32Array(buffer);\n\n  const offset0 = 4; // dispatch indirect, in BYTES_U32\n  // write bounding sphere\n  bufferF32[offset0 + 0] = wholeObjectBounds.center[0];\n  bufferF32[offset0 + 1] = wholeObjectBounds.center[1];\n  bufferF32[offset0 + 2] = wholeObjectBounds.center[2];\n  bufferF32[offset0 + 3] = wholeObjectBounds.radius;\n  // allMeshletsCount\n  bufferU32[offset0 + 4] = allMeshletsCount;\n\n  // write\n  device.queue.writeBuffer(\n    bufferGpu,\n    0,\n    buffer,\n    0,\n    BYTES_DRAWN_INSTANCES_PARAMS\n  );\n}\n\nexport const parseDrawnInstancesBuffer = (data: Uint32Array) => {\n  const dataF32 = new Float32Array(data.buffer);\n  const actuallyDrawnInstances = data[3];\n\n  const offset = BYTES_DRAWN_INSTANCES_PARAMS / BYTES_U32;\n  const lastWrittenIdx = actuallyDrawnInstances;\n  const instanceIds = data.slice(offset, offset + lastWrittenIdx);\n\n  return {\n    workgroupsX: data[0],\n    workgroupsY: data[1],\n    workgroupsZ: data[2],\n    actuallyDrawnInstances,\n    boundingSphere: [dataF32[4], dataF32[5], dataF32[6], dataF32[7]],\n    allMeshletsCount: data[8],\n    instanceIds,\n  };\n};\n", "import { BYTES_U32, CONFIG } from '../../constants.ts';\nimport { MeshletWIP } from '../../meshPreprocessing/index.ts';\nimport { getTriangleCount, getBytesForTriangles } from '../../utils/index.ts';\nimport { GPUOriginalMesh } from '../GPUOriginalMesh.ts';\nimport { ParsedMesh } from '../objLoader.ts';\nimport {\n  BYTES_DRAWN_IMPOSTORS_PARAMS,\n  createDrawnImpostorsBuffer,\n} from './drawnImpostorsBuffer.ts';\nimport {\n  BYTES_DRAWN_INSTANCES_PARAMS,\n  createDrawnInstanceIdsBuffer,\n} from './drawnInstancesBuffer.ts';\nimport {\n  BYTES_DRAWN_MESHLETS_PARAMS,\n  BYTES_DRAWN_MESHLETS_SW_PARAMS,\n  createDrawnMeshletsBuffer,\n} from './drawnMeshletsBuffer.ts';\nimport { createMeshletsDataBuffer } from './meshletsDataBuffer.ts';\nimport { createOctahedronNormals } from './vertexNormalsBuffer.ts';\nimport { createNaniteVertexPositionsBuffer } from './vertexPositionsBuffer.ts';\n\nexport const BUFFER_INDEX_BUFFER = (bindingIdx: number) => /* wgsl */ `\n\n@group(0) @binding(${bindingIdx})\nvar<storage, read> _indexBuffer: array<u32>;\n`;\n\ntype MeshletData = Pick<MeshletWIP, 'lodLevel'> & {\n  indices: Uint32Array | number;\n};\n\nexport class NaniteObjectBuffers {\n  /** Allocate single shared index buffer. Meshlets will use slices of it */\n  public readonly indexBuffer: GPUBuffer = undefined!;\n\n  /** GPU-flow: data for meshlets (NaniteMeshletTreeNode) uploaded to the GPU */\n  public readonly meshletsDataBuffer: GPUBuffer = undefined!;\n\n  ///////////////\n  // vertex buffers\n\n  /** SSBO with `array<vec3f>` does not work. Forces `array<vec4f>`. */\n  public readonly vertexPositionsBuffer: GPUBuffer = undefined!;\n  public readonly vertexNormalsBuffer: GPUBuffer = undefined!;\n  public readonly vertexUVsBuffer: GPUBuffer = undefined!;\n\n  ///////////////\n  // buffers that hold per-frame data\n\n  /** GPU-flow: Result of instance culling. Holds 1 dispatch indirect, object bounding sphere, and `Array<tfxId>` */\n  public readonly drawnInstancesBuffer: GPUBuffer = undefined!;\n  /** GPU-flow: Draw params and instanceIds for billboards. Holds 1 draw indirect and `Array<tfxId>` */\n  public readonly drawnImpostorsBuffer: GPUBuffer = undefined!;\n  /** GPU-flow: [Hardware+Software rasterizing] Temporary structure between passes. Holds:\n   * - 1 draw indirect for hardware draw (aligned to 256bytes),\n   * - 1 dispatch indirect for software draw (aligned to 256bytes),\n   * - list of drawn meshlets: `Array<(tfxId, meshletId)>`\n   * See more in the respective file\n   */\n  public readonly drawnMeshletsBuffer: GPUBuffer = undefined!;\n\n  constructor(\n    device: GPUDevice,\n    name: string,\n    originalMesh: GPUOriginalMesh,\n    loadedObj: ParsedMesh,\n    allWIPMeshlets: Array<MeshletData>,\n    instanceCount: number\n  ) {\n    // convinence for testing\n    if (CONFIG.isTest && device == undefined) {\n      return;\n    }\n\n    this.indexBuffer = createIndexBuffer(device, name, allWIPMeshlets);\n    this.vertexPositionsBuffer = createNaniteVertexPositionsBuffer(\n      device,\n      name,\n      loadedObj.positions\n    );\n    this.vertexNormalsBuffer = createOctahedronNormals(\n      device,\n      name,\n      loadedObj.normals\n    );\n    this.vertexUVsBuffer = originalMesh.uvBuffer;\n    this.meshletsDataBuffer = createMeshletsDataBuffer(\n      device,\n      name,\n      allWIPMeshlets.length\n    );\n    this.drawnMeshletsBuffer = createDrawnMeshletsBuffer(\n      device,\n      name,\n      allWIPMeshlets,\n      instanceCount\n    );\n    this.drawnInstancesBuffer = createDrawnInstanceIdsBuffer(\n      device,\n      name,\n      allWIPMeshlets.length,\n      instanceCount,\n      loadedObj.bounds.sphere\n    );\n    this.drawnImpostorsBuffer = createDrawnImpostorsBuffer(\n      device,\n      name,\n      instanceCount\n    );\n  }\n\n  bindIndexBuffer = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.indexBuffer },\n  });\n\n  bindVertexPositions = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.vertexPositionsBuffer },\n  });\n\n  bindVertexNormals = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.vertexNormalsBuffer },\n  });\n\n  bindVertexUVs = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.vertexUVsBuffer },\n  });\n\n  bindMeshletData = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: { buffer: this.meshletsDataBuffer },\n  });\n\n  ///////////////////////\n  // Drawn meshlets - software + hardware\n\n  cmdClearDrawnMeshletsParams(cmdBuf: GPUCommandEncoder) {\n    let offset = 0; // clear hardware draw params\n    cmdBuf.clearBuffer(this.drawnMeshletsBuffer, offset, 4 * BYTES_U32);\n    offset = BYTES_DRAWN_MESHLETS_PARAMS; // clear software draw params\n    cmdBuf.clearBuffer(this.drawnMeshletsBuffer, offset, 4 * BYTES_U32);\n  }\n\n  cmdDrawMeshletsHardwareIndirect(renderPass: GPURenderPassEncoder) {\n    renderPass.drawIndirect(this.drawnMeshletsBuffer, 0);\n  }\n\n  cmdDrawMeshletsSoftwareIndirect(computePass: GPUComputePassEncoder) {\n    computePass.dispatchWorkgroupsIndirect(\n      this.drawnMeshletsBuffer,\n      BYTES_DRAWN_MESHLETS_PARAMS\n    );\n  }\n\n  bindDrawnMeshletsParams = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnMeshletsBuffer,\n      offset: 0,\n      size: BYTES_DRAWN_MESHLETS_PARAMS,\n    },\n  });\n\n  bindDrawnMeshletsSwParams = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnMeshletsBuffer,\n      offset: BYTES_DRAWN_MESHLETS_PARAMS,\n      size: BYTES_DRAWN_MESHLETS_SW_PARAMS,\n    },\n  });\n\n  bindDrawnMeshletsList = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnMeshletsBuffer,\n      offset: BYTES_DRAWN_MESHLETS_PARAMS + BYTES_DRAWN_MESHLETS_SW_PARAMS,\n    },\n  });\n\n  _mockMeshletSoftwareDraw(device: GPUDevice, params: Uint32Array) {\n    device.queue.writeBuffer(\n      this.drawnMeshletsBuffer,\n      BYTES_DRAWN_MESHLETS_PARAMS,\n      params\n    );\n  }\n\n  _mockMeshletsDrawList(device: GPUDevice, list: Uint32Array) {\n    if (list.length % 2 !== 0) {\n      throw new Error(`Invalid list provided to _mockMeshletsDrawList(). Should have even length.`); // prettier-ignore\n    }\n    device.queue.writeBuffer(\n      this.drawnMeshletsBuffer,\n      BYTES_DRAWN_MESHLETS_PARAMS + BYTES_DRAWN_MESHLETS_SW_PARAMS,\n      list\n    );\n  }\n\n  ///////////////////////\n  // Drawn instances\n\n  cmdClearDrawnInstancesDispatchParams(cmdBuf: GPUCommandEncoder) {\n    cmdBuf.clearBuffer(this.drawnInstancesBuffer, 0, 4 * BYTES_U32);\n  }\n\n  bindDrawnInstancesParams = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnInstancesBuffer,\n      offset: 0,\n      size: BYTES_DRAWN_INSTANCES_PARAMS,\n    },\n  });\n\n  bindDrawnInstancesList = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnInstancesBuffer,\n      offset: BYTES_DRAWN_INSTANCES_PARAMS,\n    },\n  });\n\n  ///////////////////////\n  // Drawn impostors\n\n  cmdClearDrawnImpostorsParams(cmdBuf: GPUCommandEncoder) {\n    cmdBuf.clearBuffer(this.drawnImpostorsBuffer, 0, 4 * BYTES_U32);\n  }\n\n  bindDrawnImpostorsParams = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnImpostorsBuffer,\n      offset: 0,\n      size: BYTES_DRAWN_IMPOSTORS_PARAMS,\n    },\n  });\n\n  bindDrawnImpostorsList = (bindingIdx: number): GPUBindGroupEntry => ({\n    binding: bindingIdx,\n    resource: {\n      buffer: this.drawnImpostorsBuffer,\n      offset: BYTES_DRAWN_IMPOSTORS_PARAMS,\n    },\n  });\n}\n\nfunction createIndexBuffer(\n  device: GPUDevice,\n  name: string,\n  meshlets: Array<MeshletData>\n): GPUBuffer {\n  const totalTriangleCount = meshlets.reduce(\n    (acc, m) => acc + getTriangleCount(m.indices),\n    0\n  );\n  const extraUsage: GPUBufferUsageFlags = CONFIG.isExporting\n    ? GPUBufferUsage.COPY_SRC\n    : 0;\n\n  return device.createBuffer({\n    label: `${name}-nanite-index-buffer`,\n    size: getBytesForTriangles(totalTriangleCount),\n    usage:\n      GPUBufferUsage.INDEX |\n      GPUBufferUsage.COPY_DST |\n      GPUBufferUsage.STORAGE |\n      extraUsage,\n  });\n}\n", "import * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport { BUFFER_MESHLET_DATA } from '../../scene/naniteBuffers/meshletsDataBuffer.ts';\nimport { SNIPPET_SHADING_PBR } from '../_shaderSnippets/pbr.wgsl.ts';\nimport { SNIPPET_SHADING } from '../_shaderSnippets/shading.wgsl.ts';\nimport {\n  SHADING_MODE_TRIANGLE,\n  SHADING_MODE_MESHLET,\n  SHADING_MODE_LOD_LEVEL,\n  SHADING_MODE_NORMALS,\n  SHADING_MODE_HW_SW_IMPOSTOR,\n} from '../../constants.ts';\nimport { BUFFER_DRAWN_MESHLETS_LIST } from '../../scene/naniteBuffers/drawnMeshletsBuffer.ts';\nimport { BUFFER_VERTEX_POSITIONS } from '../../scene/naniteBuffers/vertexPositionsBuffer.ts';\nimport { BUFFER_VERTEX_NORMALS } from '../../scene/naniteBuffers/vertexNormalsBuffer.ts';\nimport { BUFFER_VERTEX_UVS } from '../../scene/naniteBuffers/vertexUVsBuffer.ts';\nimport { BUFFER_INSTANCES } from '../../scene/naniteBuffers/instancesBuffer.ts';\nimport { BUFFER_INDEX_BUFFER } from '../../scene/naniteBuffers/index.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n    meshlets: 1,\n    drawnMeshletIds: 2,\n    instancesTransforms: 3,\n    vertexPositions: 4,\n    vertexNormals: 5,\n    vertexUV: 6,\n    indexBuffer: 7,\n    diffuseTexture: 8,\n    sampler: 9,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${SHADER_SNIPPETS.GET_MVP_MAT}\n${SHADER_SNIPPETS.FS_FAKE_LIGHTING}\n${SHADER_SNIPPETS.GET_RANDOM_COLOR}\n${SHADER_SNIPPETS.FS_NORMAL_FROM_DERIVATIVES}\n${SHADER_SNIPPETS.NORMALS_UTILS}\n${SNIPPET_SHADING_PBR}\n${SNIPPET_SHADING}\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${BUFFER_MESHLET_DATA(b.meshlets)}\n${BUFFER_DRAWN_MESHLETS_LIST(b.drawnMeshletIds, 'read')}\n${BUFFER_VERTEX_POSITIONS(b.vertexPositions)}\n${BUFFER_VERTEX_NORMALS(b.vertexNormals)}\n${BUFFER_VERTEX_UVS(b.vertexUV)}\n${BUFFER_INSTANCES(b.instancesTransforms)}\n${BUFFER_INDEX_BUFFER(b.indexBuffer)}\n\n@group(0) @binding(${b.diffuseTexture})\nvar _diffuseTexture: texture_2d<f32>;\n\n@group(0) @binding(${b.sampler})\nvar _sampler: sampler;\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) positionWS: vec4f,\n  @location(1) normalWS: vec3f,\n  @location(2) uv: vec2f,\n  @location(3) @interpolate(flat) instanceIdx: u32,\n  @location(4) @interpolate(flat) meshletId: u32,\n  @location(5) @interpolate(flat) triangleIdx: u32,\n};\n\nconst OUT_OF_SIGHT = 9999999.0;\n\n@vertex\nfn main_vs(\n  @builtin(vertex_index) inVertexIndex: u32, // [0, triangleCount * VERTS_IN_TRIANGLE]\n  @builtin(instance_index) inInstanceIndex: u32,\n) -> VertexOutput {\n  var result: VertexOutput;\n  let drawData: vec2u = _getMeshletHardwareDraw(inInstanceIndex); // .x - transformIdx, .y - meshletIdx\n  let meshlet = _meshlets[drawData.y];\n  result.meshletId = drawData.y;\n  let modelMat = _getInstanceTransform(drawData.x);\n\n  // We always draw MAX_MESHLET_TRIANGLES * 3u, but meshlet might have less: discard.\n  // While this is not the most performant approach, it has tiny memory footprint\n  // (uvec2 * instances count * meshlets count).\n  // We just say: draw X instances, each is (MAX_MESHLET_TRIANGLES * 3u) verts.\n  if (inVertexIndex >= meshlet.triangleCount * 3) {\n    result.position.x = OUT_OF_SIGHT; // NOTE: the spec does not say NaN would discard.\n    result.position.y = OUT_OF_SIGHT; //       Suprised? Let's just say, I do not have 'mixed'\n    result.position.z = OUT_OF_SIGHT; //       feelings about WGSL.\n    result.position.w = 1.0;\n    return result;\n  }\n\n  let vertexIdx = _indexBuffer[meshlet.firstIndexOffset + inVertexIndex];\n  let vertexPos = _getVertexPosition(vertexIdx); // assumes .w=1\n  let vertexN = _getVertexNormal(vertexIdx);\n  let vertexUV = _getVertexUV(vertexIdx);\n\n  let mvpMatrix = getMVP_Mat(modelMat, _uniforms.viewMatrix, _uniforms.projMatrix);\n  let projectedPosition = mvpMatrix * vertexPos;\n  let positionWS = modelMat * vertexPos;\n  result.position = projectedPosition;\n  result.positionWS = positionWS;\n  result.normalWS = transformNormalToWorldSpace(modelMat, vertexN);\n  result.uv = vertexUV;\n  result.instanceIdx = drawData.x;\n  result.triangleIdx = inVertexIndex;\n\n  return result;\n}\n\n\n@fragment\nfn main_fs(fragIn: VertexOutput) -> @location(0) vec4<f32> {\n  let shadingMode = getShadingMode(_uniforms.flags);\n  var color: vec3f;\n  \n  if (shadingMode == ${SHADING_MODE_TRIANGLE}u) {\n    color = getRandomColor(fragIn.triangleIdx);\n  \n  } else if (shadingMode == ${SHADING_MODE_MESHLET}u) {\n    color = getRandomColor(fragIn.meshletId);\n\n  } else if (shadingMode == ${SHADING_MODE_LOD_LEVEL}u) {\n    let meshlet = _meshlets[fragIn.meshletId];\n    let lodLevel = meshlet.lodLevel;\n    color = getRandomColor(lodLevel);\n  \n  } else if (shadingMode == ${SHADING_MODE_NORMALS}u) {\n    color = abs(normalize(fragIn.normalWS));\n    \n  } else if (shadingMode == ${SHADING_MODE_HW_SW_IMPOSTOR}u) {\n    color = vec3f(1., 0., 0.);\n    \n  } else {\n    var material: Material;\n    createDefaultMaterial(&material, fragIn.positionWS);\n    material.normal = normalize(fragIn.normalWS);\n    material.albedo = textureSample(_diffuseTexture, _sampler, fragIn.uv).rgb;\n\n    // shading\n    var lights = array<Light, LIGHT_COUNT>();\n    fillLightsData(&lights);\n    color = doShading(material, AMBIENT_LIGHT, lights);\n  }\n\n  return vec4(color.xyz, 1.0);\n}\n`;\n", "import {\n  BindingsCache,\n  PIPELINE_DEPTH_STENCIL_ON,\n  PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n  assignResourcesToBindings2,\n  getClearColorVec3,\n  labelPipeline,\n  labelShader,\n  useColorAttachment,\n  useDepthStencilAttachment,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { NaniteObject } from '../../scene/naniteObject.ts';\nimport { SHADER_CODE, SHADER_PARAMS } from './rasterizeHwPass.wgsl.ts';\nimport { getDiffuseTexture } from '../../scene/scene.ts';\nimport { assertIsGPUTextureView } from '../../utils/webgpu.ts';\n\nexport class RasterizeHwPass {\n  public static NAME: string = 'RasterizeHwPass';\n\n  private readonly renderPipeline: GPURenderPipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(device: GPUDevice, outTextureFormat: GPUTextureFormat) {\n    this.renderPipeline = RasterizeHwPass.createRenderPipeline(\n      device,\n      outTextureFormat\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat\n  ) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(RasterizeHwPass),\n      code: SHADER_CODE(),\n    });\n\n    return device.createRenderPipeline({\n      label: labelPipeline(RasterizeHwPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [], // no vertex attributes\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n      depthStencil: PIPELINE_DEPTH_STENCIL_ON,\n    });\n  }\n\n  cmdHardwareRasterize(\n    ctx: PassCtx,\n    naniteObject: NaniteObject,\n    loadOp: GPULoadOp\n  ) {\n    const { cmdBuf, profiler, depthTexture, hdrRenderTexture } = ctx;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: RasterizeHwPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3(), loadOp),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture, loadOp),\n      timestampWrites: profiler?.createScopeGpu(RasterizeHwPass.NAME),\n    });\n    const bindings = this.bindingsCache.getBindings(naniteObject.name, () =>\n      this.createBindings(ctx, naniteObject)\n    );\n\n    // set render pass data\n    renderPass.setPipeline(this.renderPipeline);\n    renderPass.setBindGroup(0, bindings);\n\n    // draw\n    naniteObject.buffers.cmdDrawMeshletsHardwareIndirect(renderPass);\n\n    // fin\n    renderPass.end();\n  }\n\n  private createBindings = (\n    { device, globalUniforms, scene }: PassCtx,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n    const buffers = naniteObject.buffers;\n    const diffuseTextureView = getDiffuseTexture(scene, naniteObject);\n    assertIsGPUTextureView(diffuseTextureView);\n\n    return assignResourcesToBindings2(\n      RasterizeHwPass,\n      naniteObject.name,\n      device,\n      this.renderPipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        buffers.bindMeshletData(b.meshlets),\n        buffers.bindDrawnMeshletsList(b.drawnMeshletIds),\n        naniteObject.bindInstanceTransforms(b.instancesTransforms),\n        buffers.bindVertexPositions(b.vertexPositions),\n        buffers.bindVertexNormals(b.vertexNormals),\n        buffers.bindVertexUVs(b.vertexUV),\n        buffers.bindIndexBuffer(b.indexBuffer),\n        { binding: b.diffuseTexture, resource: diffuseTextureView },\n        { binding: b.sampler, resource: scene.samplerLinear },\n      ]\n    );\n  };\n}\n", "import { CAMERA_CFG } from '../../constants.ts';\n\n/** I always forget the order. */\nexport const LINEAR_DEPTH = /* wgsl */ `\n/** Returns value [zNear, zFar] */\nfn linearizeDepth(depth: f32) -> f32 {\n  let zNear: f32 = ${CAMERA_CFG.near}f;\n  let zFar: f32 = ${CAMERA_CFG.far}f;\n  \n  // PP := projection matrix\n  // PP[10] = zFar / (zNear - zFar);\n  // PP[14] = (zFar * zNear) / (zNear - zFar);\n  // PP[11] = -1 ; PP[15] = 0 ; w = 1 \n  // z = PP[10] * p.z + PP[14] * w; // matrix mul, but x,y do not matter for z,w coords\n  // w = PP[11] * p.z + PP[15] * w;\n  // z' = z / w = (zFar / (zNear - zFar) * p.z + (zFar * zNear) / (zNear - zFar)) / (-p.z)\n  // p.z = (zFar * zNear) / (zFar + (zNear - zFar) * z')\n  return zNear * zFar / (zFar + (zNear - zFar) * depth);\n  \n  // OpenGL:\n  // let z = depth * 2.0 - 1.0; // back to NDC\n  // let z = depth;\n  // return (2.0 * zNear * zFar) / (zFar + zNear - z * (zFar - zNear));\n}\n\n/** Returns value [0, 1] */\nfn linearizeDepth_0_1(depth: f32) -> f32 {\n  let zNear: f32 = ${CAMERA_CFG.near}f;\n  let zFar: f32 = ${CAMERA_CFG.far}f;\n  let d2 = linearizeDepth(depth);\n  return d2 / (zFar - zNear);\n}\n`;\n", "import { CAMERA_CFG } from '../../constants.ts';\nimport { LINEAR_DEPTH } from './linearDepth.wgsl.ts';\nimport { CLAMP_TO_MIP_LEVELS } from './shaderSnippets.wgls.ts';\n\nexport const SNIPPET_OCCLUSION_CULLING = /* wgsl */ `\n\n${CLAMP_TO_MIP_LEVELS}\n${LINEAR_DEPTH}\n\n/**\n * Everything closer than this will always pass the occlusion culling.\n * This fixes the AABB projection problems when sphere is near/intersecting zNear.\n * Most 'simple' sphere projection formulas just do not work in that case.\n * Technically we could test in view-space, smth like:\n *    'sphere.z < zNear && sphere.z + r > zNear'.\n * You will get flicker and instabilities.\n * \n * Look, 1h ago I have rewritten bounding sphere radius calc and had 1e-9\n * differences to old approach. The math sometimes..\n * \n * I DON'T HAVE TO DEAL WITH THIS.\n * \n * Exact value choosen cause I say so.\n */\nconst CLOSE_RANGE_NEAR_CAMERA: f32 = 4.0;\n\n/** \n * https://www.youtube.com/live/Fj1E1A4CPCM?si=PJmBhKd_TQk1GMOb&t=2462 - triangles\n * https://www.youtube.com/watch?v=5sBpo5wKmEM - meshlets\n*/\nfn isPassingOcclusionCulling(\n  modelMat: mat4x4<f32>,\n  boundingSphere: vec4f,\n  dbgOverrideMipmapLevel: i32 // if >=0 then overrides mipmap level for debug\n) -> bool {\n  let viewportSize = _uniforms.viewport.xy;\n  let viewMat = _uniforms.viewMatrix;\n  let projMat = _uniforms.projMatrix;\n\n  // project meshlet's center to view space\n  // NOTE: view space is weird, e.g. .z is NEGATIVE!\n  let center = viewMat * modelMat * vec4f(boundingSphere.xyz, 1.);\n  let r = boundingSphere.w;\n\n  let closestPointZ = abs(center.z) - r;\n\n  // get AABB in projection space\n  var aabb = vec4f();\n  let projectionOK = projectSphereView(projMat, center.xyz, r, &aabb);\n  if (!projectionOK) { return true; } // if is close to near plane, it's always visible\n  // let aabb = getAABBfrom8ProjectedPoints(projMat, center.xyz, r);\n\n  // calc pixel span at fullscreen\n  let pixelSpanW = abs(aabb.z - aabb.x) * viewportSize.x;\n  let pixelSpanH = abs(aabb.w - aabb.y) * viewportSize.y;\n  let pixelSpan = max(pixelSpanW, pixelSpanH);\n  // return pixelSpanW * pixelSpanH > 100.; // death by thousand triangles..\n\n  // Calc. mip level. If meshlet spans 50px, we round it to 64px and then sample log2(64) = 6 mip.\n  // But, we calculated span in fullscreen, and pyramid level 0 is half. So add extra 1 level.\n  var mipLevel = i32(ceil(log2(pixelSpan))); // i32 cause wgpu/deno\n  if (dbgOverrideMipmapLevel >= 0) { mipLevel = dbgOverrideMipmapLevel; } // debug\n  mipLevel = clampToMipLevels(mipLevel + 1, _depthPyramidTexture);\n  // return mipLevel == 8; // 4 - far, 5/6 - far/mid, 8 - close\n\n  // get the value from depth buffer (range: [0, 1]).\n  // let mipSize = vec2f(textureDimensions(_depthPyramidTexture, mipLevel));\n  // let samplePointAtMip = vec2u(aabb.xy * mipSize.xy);\n  // let depthFromDepthBuffer = textureLoad(_depthPyramidTexture, samplePointAtMip, mipLevel).x;\n  let depthFromDepthBuffer = textureSampleLevel(_depthPyramidTexture, _depthSampler, aabb.xy, f32(mipLevel)).x;\n  // let depthFromDepthBuffer = 1.0;\n  // return depthFromDepthBuffer == 1.0;\n\n  /*\n  // project the bounding sphere\n  // PP[10 or 2|2] = -1.000100016593933\n  // PP[14 or 3|2] = -0.010001000016927719\n  let d = center.z - r; // INVESTIGATE: +/- to get closest?\n  var depthMeshlet = (projMat[2][2] * d + projMat[3][2]) / -d; // in [0, 1]\n  \n  return depthMeshlet <= depthFromDepthBuffer;\n  */\n  let depthFromDepthBufferVS = linearizeDepth(depthFromDepthBuffer); // range [zNear .. zFar]\n  return closestPointZ <= depthFromDepthBufferVS; // if there is any pixel that is closer than 'prepass-like' depth\n}\n\n/** project view-space AABB */\nfn getAABBfrom8ProjectedPoints(projMat: mat4x4f, center: vec3f, r: f32) -> vec4f {\n  let bb0 = getBB(projMat, center.xyz, r, vec3f( 1.,  1., 1.));\n  let bb1 = getBB(projMat, center.xyz, r, vec3f(-1., -1., 1.));\n  let bb2 = getBB(projMat, center.xyz, r, vec3f(-1.,  1., 1.));\n  let bb3 = getBB(projMat, center.xyz, r, vec3f( 1., -1., 1.));\n  //\n  let bb4 = getBB(projMat, center.xyz, r, vec3f( 1.,  1., -1.));\n  let bb5 = getBB(projMat, center.xyz, r, vec3f(-1., -1., -1.));\n  let bb6 = getBB(projMat, center.xyz, r, vec3f(-1.,  1., -1.));\n  let bb7 = getBB(projMat, center.xyz, r, vec3f( 1., -1., -1.));\n  // aabb in [-1, 1]\n  let aabbClip = vec4(\n    min(min(min(bb0.x, bb1.x), min(bb2.x, bb3.x)), min(min(bb4.x, bb5.x), min(bb6.x, bb7.x))), // min x\n    min(min(min(bb0.y, bb1.y), min(bb2.y, bb3.y)), min(min(bb4.y, bb5.y), min(bb6.y, bb7.y))), // min y\n    max(max(max(bb0.x, bb1.x), max(bb2.x, bb3.x)), max(max(bb4.x, bb5.x), max(bb6.x, bb7.x))), // max x\n    max(max(max(bb0.y, bb1.y), max(bb2.y, bb3.y)), max(max(bb4.y, bb5.y), max(bb6.y, bb7.y))), // max y\n  );\n  return (aabbClip + 1.0) * 0.5; // UV space\n}\n\n/** Calc in view space */\nfn getBB(projMat: mat4x4f, center: vec3f, r: f32, dir: vec3f) -> vec4f {\n  let p = center + r * dir;\n  let pProj = projMat * vec4f(p, 1.);\n  return pProj / pProj.w;\n}\n\n/**\n * https://github.com/zeux/niagara/blob/master/src/shaders/math.h#L2\n * https://zeux.io/2023/01/12/approximate-projected-bounds/\n * 2D Polyhedral Bounds of a Clipped, Perspective-Projected 3D Sphere. Michael Mara, Morgan McGuire. 2013\n * \n * @param centerViewSpace sphere center (view space)\n * @param r radius\n */\nfn projectSphereView(\n  projMat: mat4x4f,\n  centerViewSpace: vec3f,\n  r: f32,\n  pixelSpan: ptr<function, vec4f>\n) -> bool {\n  // abs cause view space is ???\n  let zNear: f32 = ${CAMERA_CFG.near};\n  // if (abs(center.z) < r + ${CAMERA_CFG.near}){\n  // let distanceToNearPlane = abs(center.z) - zNear;\n  // if (distanceToNearPlane < r){\n  let closestPointZ = abs(centerViewSpace.z) - r;\n  if (closestPointZ < zNear + CLOSE_RANGE_NEAR_CAMERA){\n    return false;\n  }\n\n  // WARNING: This code only works for perspective camera\n  // For ortho I think you would have [c.x-r, c.y-r, c.x+r, c.y+r]?\n  let c = vec3f(centerViewSpace.xy, -centerViewSpace.z); // see camera.ts\n  let cr = c * r;\n  let czr2 = c.z * c.z - r * r;\n\n  let vx = sqrt(c.x * c.x + czr2);\n  let minX = (vx * c.x - cr.z) / (vx * c.z + cr.x);\n  let maxX = (vx * c.x + cr.z) / (vx * c.z - cr.x);\n\n  let vy = sqrt(c.y * c.y + czr2);\n  let minY = (vy * c.y - cr.z) / (vy * c.z + cr.y);\n  let maxY = (vy * c.y + cr.z) / (vy * c.z - cr.y);\n\n  \n  let P00 = projMat[0][0];\n  let P11 = projMat[1][1];\n  var aabb = vec4(minX * P00, minY * P11, maxX * P00, maxY * P11);\n  // swizzle cause Y-axis is down. We will do abs() regardless. Then convert to [0, 1]\n  aabb = aabb.xwzy * vec4(0.5, -0.5, 0.5, -0.5) + vec4(0.5);\n  *pixelSpan = aabb;\n\n  return true;\n}\n\n\nfn projectSphereToScreen(\n  modelMat: mat4x4<f32>,\n  boundingSphere: vec4f,\n  pixelSpan: ptr<function,vec2f>\n) -> bool {\n  // get AABB in projection space\n  // TODO [LOW] duplicate from occlusion culling\n  let viewportSize = _uniforms.viewport.xy;\n  let viewMat = _uniforms.viewMatrix;\n  let projMat = _uniforms.projMatrix;\n  var aabb = vec4f();\n  let center = viewMat * modelMat * vec4f(boundingSphere.xyz, 1.);\n  let r = boundingSphere.w;\n  let projectionOK = projectSphereView(projMat, center.xyz, r, &aabb);\n  *pixelSpan = vec2f(\n    abs(aabb.z - aabb.x) * viewportSize.x,\n    abs(aabb.w - aabb.y) * viewportSize.y\n  );\n  return projectionOK;\n}\n`;\n", "export const SNIPPET_FRUSTUM_CULLING = /* wgsl */ `\n\nfn isInsideCameraFrustum(\n  modelMat: mat4x4<f32>,\n  boundingSphere: vec4f\n) -> bool {\n  var center = vec4f(boundingSphere.xyz, 1.);\n  center = modelMat * center;\n  let r = boundingSphere.w;\n  let r0 = dot(center, _uniforms.cameraFrustumPlane0) <= r;\n  let r1 = dot(center, _uniforms.cameraFrustumPlane1) <= r;\n  let r2 = dot(center, _uniforms.cameraFrustumPlane2) <= r;\n  let r3 = dot(center, _uniforms.cameraFrustumPlane3) <= r;\n  let r4 = dot(center, _uniforms.cameraFrustumPlane4) <= r;\n  let r5 = dot(center, _uniforms.cameraFrustumPlane5) <= r;\n  return r0 && r1 && r2 && r3 && r4 && r5;\n}\n`;\n", "export const SNIPPET_NANITE_LOD_CULLING = /* wgsl */ `\n\nfn isCorrectNaniteLOD (\n  modelMat: mat4x4<f32>,\n  meshlet: NaniteMeshletTreeNode\n) -> bool {\n  let flags = _uniforms.flags;\n\n  let threshold = _uniforms.viewport.z;\n  let screenHeight = _uniforms.viewport.y;\n  let cotHalfFov = _uniforms.viewport.w;\n  let mvpMatrix = getMVP_Mat(modelMat, _uniforms.viewMatrix, _uniforms.projMatrix);\n\n  // getVisibilityStatus\n  let clusterError = getProjectedError(\n    mvpMatrix,\n    screenHeight,\n    cotHalfFov,\n    meshlet.boundsMidPointAndError,\n  );\n  let parentError = getProjectedError(\n    mvpMatrix,\n    screenHeight,\n    cotHalfFov,\n    meshlet.parentBoundsMidPointAndError,\n  );\n\n  return parentError > threshold && clusterError <= threshold;\n}\n\n\nfn getProjectedError(\n  mvpMatrix: mat4x4<f32>,\n  screenHeight: f32,\n  cotHalfFov: f32,\n  boundsMidPointAndError: vec4f\n) -> f32 {\n  // return 1000.0 * boundsMidPointAndError.w; // used to debug tests, see calcs at the top of 'cullMeshletsPass.test.ts'\n  \n  let r = boundsMidPointAndError.w; // error\n  \n  // WARNING: .parentError is INFINITY at top level\n  // This is implemented as GPU meshlet just having some absurd high value\n  if (r >= PARENT_ERROR_INFINITY) {\n    return PARENT_ERROR_INFINITY;\n  }\n\n  let center = mvpMatrix * vec4f(boundsMidPointAndError.xyz, 1.0f);\n  let d2 = dot(center.xyz, center.xyz); // \n  let projectedR = (cotHalfFov * r) / sqrt(d2 - r * r);\n  return (projectedR * screenHeight) / 2.0;\n}\n`;\n", "import { BUFFER_INDEX_BUFFER } from '../../scene/naniteBuffers/index.ts';\nimport { BUFFER_INSTANCES } from '../../scene/naniteBuffers/instancesBuffer.ts';\nimport { BUFFER_MESHLET_DATA } from '../../scene/naniteBuffers/meshletsDataBuffer.ts';\nimport { BUFFER_VERTEX_POSITIONS } from '../../scene/naniteBuffers/vertexPositionsBuffer.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { LINEAR_DEPTH } from '../_shaderSnippets/linearDepth.wgsl.ts';\nimport { BUFFER_VERTEX_NORMALS } from '../../scene/naniteBuffers/vertexNormalsBuffer.ts';\nimport {\n  BUFFER_DRAWN_MESHLETS_SW_PARAMS,\n  BUFFER_DRAWN_MESHLETS_LIST,\n} from '../../scene/naniteBuffers/drawnMeshletsBuffer.ts';\n\n/*\nhttps://fgiesen.wordpress.com/2013/02/10/optimizing-the-basic-rasterizer/\nhttps://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/rasterization-stage.html\nhttps://jtsorlinis.github.io/rendering-tutorial/\n\nUE5\n- https://github.com/EpicGames/UnrealEngine/blob/c830445187784f1269f43b56f095493a27d5a636/Engine/Source/Developer/NaniteUtilities/Public/Rasterizer.h#L117\n- https://github.com/EpicGames/UnrealEngine/blob/c830445187784f1269f43b56f095493a27d5a636/Engine/Shaders/Private/Nanite/NaniteRasterizer.ush#L221\n\nOther possible features:\n- supersampling \n- transparency from textures. It actually has to mix the pixel behind. But we do not know the pixel behind.\n*/\n\nexport const SHADER_PARAMS = {\n  workgroupSizeX: 32, // TODO [LOW] set better value\n  maxWorkgroupsY: 1 << 15, // Spec says limit is 65535 (2^16 - 1), so we use 32768\n  bindings: {\n    renderUniforms: 0,\n    resultBuffer: 1,\n    vertexPositions: 2,\n    indexBuffer: 3,\n    meshletsData: 4,\n    drawnMeshletIds: 5,\n    drawnMeshletParams: 6,\n    instancesTransforms: 7,\n    vertexNormals: 8,\n  },\n};\n\nexport const BUFFER_SOFTWARE_RASTERIZER_RESULT = (\n  bindingIdx: number,\n  access: 'read_write' | 'read'\n) => /* wgsl */ `\n\n@group(0) @binding(${bindingIdx})\nvar<storage, ${access}> _softwareRasterizerResult: ${\n  access === 'read_write' ? 'array<atomic<u32>>' : 'array<u32>'\n};\n`;\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst c = SHADER_PARAMS;\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${SHADER_SNIPPETS.GET_MVP_MAT}\n${SHADER_SNIPPETS.UTILS}\n${SHADER_SNIPPETS.NORMALS_UTILS}\n${LINEAR_DEPTH}\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${BUFFER_MESHLET_DATA(b.meshletsData)}\n${BUFFER_DRAWN_MESHLETS_SW_PARAMS(b.drawnMeshletParams, 'read')}\n${BUFFER_DRAWN_MESHLETS_LIST(b.drawnMeshletIds, 'read')}\n${BUFFER_VERTEX_POSITIONS(b.vertexPositions)}\n${BUFFER_VERTEX_NORMALS(b.vertexNormals)}\n${BUFFER_INDEX_BUFFER(b.indexBuffer)}\n${BUFFER_INSTANCES(b.instancesTransforms)}\n${BUFFER_SOFTWARE_RASTERIZER_RESULT(b.resultBuffer, 'read_write')}\n\n// test colors in ABGR\nconst COLOR_RED: u32 = 0xff0000ffu;\nconst COLOR_GREEN: u32 = 0xff00ff00u;\nconst COLOR_BLUE: u32 = 0xffff0000u;\nconst COLOR_TEAL: u32 = 0xffffff00u;\nconst COLOR_PINK: u32 = 0xffff00ffu;\nconst COLOR_YELLOW: u32 = 0xff00ffffu;\n\n@compute\n@workgroup_size(${c.workgroupSizeX}, 1, 1)\nfn main(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  // x - triangle id inside meshlet, always 0-124. You might have to discard\n  // y - entry index into drawn meshlets SW list\n  // z - 1\n\n  let viewportSize: vec2f = _uniforms.viewport.xy;\n  let viewMatrix = _uniforms.viewMatrix;\n  let projMatrix = _uniforms.projMatrix;\n\n  let triangleIdx: u32 = global_id.x;\n\n  // prepare iters\n  let drawnMeshletCnt: u32 = _drawnMeshletsSwParams.actuallyDrawnMeshlets;\n  let iterCount: u32 = ceilDivideU32(drawnMeshletCnt, ${c.maxWorkgroupsY}u);\n  let tfxOffset: u32 = global_id.y * iterCount;\n\n  for(var i: u32 = 0u; i < iterCount; i++){\n    let iterOffset: u32 = tfxOffset + i;\n    if (iterOffset >= drawnMeshletCnt) { continue; }\n\n    // get meshlet\n    let drawData: vec2u = _getMeshletSoftwareDraw(iterOffset); // .x - transfromIdx, .y - meshletIdx\n    let meshlet = _meshlets[drawData.y];\n    if (triangleIdx >= meshlet.triangleCount) { continue; }\n\n    // get tfx\n    let modelMat = _getInstanceTransform(drawData.x);\n    let mvpMat = getMVP_Mat(modelMat, viewMatrix, projMatrix);\n\n    // draw\n    let indexOffset = meshlet.firstIndexOffset;\n    rasterize(\n      modelMat,\n      mvpMat,\n      viewportSize,\n      indexOffset,\n      triangleIdx\n    );\n  } \n}\n\nfn rasterize(\n  modelMat: mat4x4f,\n  mvpMat: mat4x4f,\n  viewportSizeF32: vec2f,\n  indexOffset: u32,\n  triangleIdx: u32\n) {\n  let viewportSize = vec2u(viewportSizeF32);\n\n  let idx0 = _indexBuffer[indexOffset + triangleIdx * 3u];\n  let idx1 = _indexBuffer[indexOffset + triangleIdx * 3u + 1u]; // swap idx1 and idx2 for CCW\n  let idx2 = _indexBuffer[indexOffset + triangleIdx * 3u + 2u];\n  let vertexPos0 = _getVertexPosition(idx0); // assumes .w=1\n  let vertexPos1 = _getVertexPosition(idx1); // assumes .w=1\n  let vertexPos2 = _getVertexPosition(idx2); // assumes .w=1\n  let v0_NDC: vec3f = projectVertex(mvpMat, vertexPos0);\n  let v1_NDC: vec3f = projectVertex(mvpMat, vertexPos1);\n  let v2_NDC: vec3f = projectVertex(mvpMat, vertexPos2);\n  let v0: vec2f = ndc2viewportPx(viewportSizeF32.xy, v0_NDC); // in pixels\n  let v1: vec2f = ndc2viewportPx(viewportSizeF32.xy, v1_NDC); // in pixels\n  let v2: vec2f = ndc2viewportPx(viewportSizeF32.xy, v2_NDC); // in pixels\n  // storeResult(viewportSize, vec2u(v0.xy), COLOR_RED); // dbg\n  // storeResult(viewportSize, vec2u(v1.xy), COLOR_GREEN); // dbg\n  // storeResult(viewportSize, vec2u(v2.xy), COLOR_BLUE); // dbg\n  let vertexN0 = _getVertexNormal(idx0);\n  let vertexN1 = _getVertexNormal(idx1);\n  let vertexN2 = _getVertexNormal(idx2);\n  let n0 = transformNormalToWorldSpace(modelMat, vertexN0);\n  let n1 = transformNormalToWorldSpace(modelMat, vertexN1);\n  let n2 = transformNormalToWorldSpace(modelMat, vertexN2);\n  \n  // backface culling - CCW is OK, CW fails\n  let triangleArea = -edgeFunction(v0, v1, v2); // negative cause CCW is default in WebGPU\n  if (triangleArea < 0.) { return; }\n  // NOTE: to handle CW, just swap v1 and v2\n\n  // get bounding box XY points. All values in pixels as f32\n  // MAX: top right on screen, but remember Y is inverted!\n  var boundRectMax: vec2f = ceil(max(max(v0, v1), v2));\n  // MIN: bottom left on screen, but remember Y is inverted!\n  var boundRectMin: vec2f = floor(min(min(v0, v1), v2));\n  // scissor\n  boundRectMax = min(boundRectMax, viewportSizeF32.xy);\n  boundRectMin = max(boundRectMin, vec2f(0.0, 0.0));\n  // storeResult(viewportSize, vec2u(boundRectMax), COLOR_PINK); // dbg\n  // storeResult(viewportSize, vec2u(boundRectMin), COLOR_PINK); // dbg\n\n  // check if triangle covers only 1 pixel. It would do 0 iters.\n  // But most code (incl. UE5) ignore this case?\n  /*if(boundRectMin.x == boundRectMax.x && boundRectMin.y == boundRectMax.y) {\n    let depth: f32 = (v0_NDC.z + v1_NDC.z + v2_NDC.z) / 3.0; // ?\n    let n: vec3f = normalize(n0 + n1 + n2); // [-1, 1] // ?\n    let value = createPayload(depth, n);\n    storeResult(viewportSize, vec2u(u32(boundRectMin.x), u32(boundRectMin.y)), value);\n  }*/\n\n\n\n  let CC0 = edgeC(v2, v1);\n  let CC1 = edgeC(v0, v2);\n  let CC2 = edgeC(v1, v0);\n  // In prod. impl. you should consider reading the full rules of rasterization for your API.\n  // Your goal is to avoid 'holes' between what is software and hardware rasterized.\n  // https://www.sctheblog.com/blog/hair-software-rasterize/#half-of-the-pixel-offset\n  let firstSamplePoint = boundRectMin.xy + vec2f(0.5);\n  var CY0 = firstSamplePoint.x * CC0.A + firstSamplePoint.y * CC0.B + CC0.C;\n  var CY1 = firstSamplePoint.x * CC1.A + firstSamplePoint.y * CC1.B + CC1.C;\n  var CY2 = firstSamplePoint.x * CC2.A + firstSamplePoint.y * CC2.B + CC2.C;\n  let triangleArea2 = CY0 + CY1 + CY2; // I wish I had debugger to preview the difference between both..\n\n  // iterate row-by-row\n  for (var y: f32 = boundRectMin.y; y < boundRectMax.y; y+=1.0) {\n    var CX0 = CY0;\n    var CX1 = CY1;\n    var CX2 = CY2;\n\n    // iterate columns\n    for (var x: f32 = boundRectMin.x; x < boundRectMax.x; x+=1.0) {\n      // barycentric coordinates (using simplest possible impl.)\n      // let p = vec2f(x, y);\n      // let C0 = edgeFunction(v2, v1, p) / triangleArea; // for vertex 0\n      // let C1 = edgeFunction(v0, v2, p) / triangleArea; // for vertex 1\n      // let C2 = edgeFunction(v1, v0, p) / triangleArea; // for vertex 2\n\n      // if (C0 >= 0 && C1 >= 0 && C2 >= 0) {\n      if (CX0 >= 0 && CX1 >= 0 && CX2 >= 0) {\n        // barycentric coordinates\n        let C0 = CX0 / triangleArea2; // for vertex 0\n        let C1 = CX1 / triangleArea2; // for vertex 1\n        let C2 = CX2 / triangleArea2; // for vertex 2\n        \n        let depth: f32 = v0_NDC.z * C0 + v1_NDC.z * C1 + v2_NDC.z * C2;\n        let n: vec3f = normalize(n0 * C0 + n1 * C1 + n2 * C2); // [-1, 1]\n        \n        let value = createPayload(depth, n);\n        storeResult(viewportSize, vec2u(u32(x), u32(y)), value);\n      }\n\n      CX0 += CC0.A;\n      CX1 += CC1.A;\n      CX2 += CC2.A;\n    }\n\n    CY0 += CC0.B;\n    CY1 += CC1.B;\n    CY2 += CC2.B;\n  }\n}\n\n/** https://www.sctheblog.com/blog/hair-software-rasterize/#optimization-or-not */\nstruct EdgeC{ A: f32, B: f32, C: f32 }\nfn edgeC(v0: vec2f, v1: vec2f) -> EdgeC{\n  // from edgeFunction() formula we extract: A * p.x + B * p.y + C.\n  // This way, when we iterate over x-axis, we can just add A for\n  // next pixel, as the \"B * p.y + C\" part does not change\n  var result: EdgeC;\n  result.A = v1.y - v0.y; // for p.x\n  result.B = -v1.x + v0.x; // for p.y\n  result.C = -v0.x * v1.y + v0.y * v1.x; // rest\n  return result;\n}\n\n/** https://www.sctheblog.com/blog/hair-software-rasterize/#edge-function */\nfn edgeFunction(v0: vec2f, v1: vec2f, p: vec2f) -> f32 {\n  return (p.x - v0.x) * (v1.y - v0.y) - (p.y - v0.y) * (v1.x - v0.x);\n}\n\nconst U16_MAX: f32 = 65535.0;\n\nfn createPayload(depth0: f32, n: vec3f) -> u32 {\n  // TODO [IGNORE] We could also store color data in 565 format instead of normals.\n  //      But HDR would wreck us. So tonemap here (and also in hw rasterizer)?\n  //      Feels like crap.\n\n  // encode depth in 16bits\n  // let depth = linearizeDepth_0_1(depth0); // debug, otherwise non-linear depth is not visible\n  let depth = 1.0 - depth0; // reverse so we can take max instead of min. The buffer clear set all values to 0, so can't use min\n  let depthU16 = clamp(depth * U16_MAX, 0., U16_MAX - 1); // depth in range fit for u16\n\n  // encode normals. We could use pack4x8snorm(), but too lazy to debug\n  // let n_0_1 = n * 0.5 + 0.5; // [0-1] // VERSION 0: NO OCT. ENCODED, XY ONLY\n  let n_0_1 = encodeOctahedronNormal(n); // this has some edge cases, but as entire thing is a hack around lack of atomic<u64>, I do not care\n  let nPacked: u32 = (\n    (u32(n_0_1.x * 255) << 8) |\n     u32(n_0_1.y * 255)\n  );\n\n  return (u32(depthU16) << 16) | nPacked;\n}\n\nfn debugBarycentric(C0: f32, C1: f32, C2: f32) -> u32 {\n  let color0: u32 = u32(C0 * 255); // 0-255 as u32\n  let color1: u32 = u32(C1 * 255); // 0-255 as u32\n  let color2: u32 = u32(C2 * 255); // 0-255 as u32\n  return (0xff000000u | // alpha\n     color0 | // red\n    (color1 << 8) | // green\n    (color2 << 16) // blue\n  );\n}\n\nfn projectVertex(mvpMat:mat4x4f, pos: vec4f) -> vec3f {\n  let posClip = mvpMat * pos;\n  let posNDC = posClip / posClip.w;\n  return posNDC.xyz;\n}\n\nfn ndc2viewportPx(viewportSize: vec2f, pos: vec3f) -> vec2f {\n  let pos_0_1 = pos.xy * 0.5 + 0.5; // to [0-1]\n  return pos_0_1 * viewportSize.xy;\n}\n\n/** NOTE: if you want to store color for .png file, it's in ABGR format */\nfn storeResult(viewportSize: vec2u, posPx: vec2u, value: u32) {\n  // bitcast<u32>(value); <- if needed\n  if(\n    posPx.x < 0 || posPx.x >= viewportSize.x ||\n    posPx.y < 0 || posPx.y >= viewportSize.y\n  ) {\n    return;\n  }\n  let y = viewportSize.y - posPx.y; // invert cause WebGPU coordinates\n  let idx: u32 = y * viewportSize.x + posPx.x;\n  // WebGPU clears to 0. So atomicMin is pointless..\n  atomicMax(&_softwareRasterizerResult[idx], value);\n}\n`;\n", "import { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { BUFFER_MESHLET_DATA } from '../../scene/naniteBuffers/meshletsDataBuffer.ts';\nimport { CONFIG } from '../../constants.ts';\nimport { SNIPPET_OCCLUSION_CULLING } from '../_shaderSnippets/cullOcclusion.wgsl.ts';\nimport { SNIPPET_FRUSTUM_CULLING } from '../_shaderSnippets/cullFrustum.wgsl.ts';\nimport { SNIPPET_NANITE_LOD_CULLING } from '../_shaderSnippets/nanite.wgsl.ts';\nimport {\n  BUFFER_DRAWN_INSTANCES_PARAMS,\n  BUFFER_DRAWN_INSTANCES_LIST,\n} from '../../scene/naniteBuffers/drawnInstancesBuffer.ts';\nimport {\n  BUFFER_DRAWN_MESHLETS_LIST,\n  BUFFER_DRAWN_MESHLETS_PARAMS,\n  BUFFER_DRAWN_MESHLETS_SW_PARAMS,\n} from '../../scene/naniteBuffers/drawnMeshletsBuffer.ts';\nimport { BUFFER_INSTANCES } from '../../scene/naniteBuffers/instancesBuffer.ts';\nimport { SHADER_PARAMS as SHADER_PARAMS_RASTERIZE_SW } from '../rasterizeSw/rasterizeSwPass.wgsl.ts';\n\nexport const SHADER_PARAMS = {\n  workgroupSizeX: 32,\n  maxWorkgroupsY: 1 << 15, // Spec says limit is 65535 (2^16 - 1), so we use 32768\n  maxMeshletTriangles: `${CONFIG.nanite.preprocess.meshletMaxTriangles}u`,\n  bindings: {\n    renderUniforms: 0,\n    meshletsData: 1,\n    instancesTransforms: 2,\n    drawnMeshletsParams: 3,\n    drawnMeshletsSwParams: 4,\n    drawnMeshletsList: 5,\n    depthPyramidTexture: 6,\n    depthSampler: 7,\n    drawnInstancesParams: 8,\n    drawnInstancesList: 9,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n/// We dispatch X=meshletCount, YZ=instance count\n/// There is limit of 65535 and instance count can go over.\n/// Variant 1: Split instance ID between YZ and have tons of empty workgroups.\n/// Variant 2: Z=1 and iterate in shader.\n/// Variant 3: Same as variant 2, but dispatch indirect based on cullInstancesPass. This is the one you should read.\n///////////////////////////\nconst c = SHADER_PARAMS;\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${SHADER_SNIPPETS.GET_MVP_MAT}\n${SHADER_SNIPPETS.UTILS}\n${SNIPPET_OCCLUSION_CULLING}\n${SNIPPET_FRUSTUM_CULLING}\n${SNIPPET_NANITE_LOD_CULLING}\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${BUFFER_MESHLET_DATA(b.meshletsData)}\n${BUFFER_DRAWN_MESHLETS_PARAMS(b.drawnMeshletsParams, 'read_write')}\n${BUFFER_DRAWN_MESHLETS_SW_PARAMS(b.drawnMeshletsSwParams, 'read_write')}\n${BUFFER_DRAWN_MESHLETS_LIST(b.drawnMeshletsList, 'read_write')}\n${BUFFER_INSTANCES(b.instancesTransforms)}\n\n@group(0) @binding(${b.depthPyramidTexture})\nvar _depthPyramidTexture: texture_2d<f32>;\n\n@group(0) @binding(${b.depthSampler})\nvar _depthSampler: sampler;\n\n\n/** JS uses errorValue=Infnity when parent does not exist. I don't want to risk CPU->GPU transfer for infinity, so I use ridiculous value */\nconst PARENT_ERROR_INFINITY: f32 = 99990.0f;\n\n\n\n///////////////////////////\n/// SHADER VARIANT 1: use (global_id.y, global_id.z) to get the instance id\n///////////////////////////\n\n@compute\n@workgroup_size(${c.workgroupSizeX}, 1, 1)\nfn main_SpreadYZ(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  // set rest of the indirect draw params. Has to be first line in the shader in case we ooopsie and do early return by accident somewhere.\n  resetOtherDrawParams(global_id);\n\n  // get meshlet\n  let meshletIdx: u32 = global_id.x;\n  if (meshletIdx >= arrayLength(&_meshlets)) {\n    return;\n  }\n  let meshlet = _meshlets[meshletIdx];\n\n  // reconstruct instanceId\n  let tfxIdx: u32 = (global_id.z * ${c.maxWorkgroupsY}u) + global_id.y;\n  if (tfxIdx >= _getInstanceCount()) {\n    return;\n  }\n  let modelMat = _getInstanceTransform(tfxIdx);\n\n  let settingsFlags = _uniforms.flags;\n  if (isMeshletRendered(settingsFlags, modelMat, meshlet)){\n    registerDraw(modelMat, meshlet.ownBoundingSphere, tfxIdx, meshletIdx);\n  }\n}\n\n\n///////////////////////////\n/// SHADER VARIANT 2: iterate inside shader\n///////////////////////////\n\n@compute\n@workgroup_size(${c.workgroupSizeX}, 1, 1)\nfn main_Iter(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  // set rest of the indirect draw params. Has to be first line in the shader in case we ooopsie and do early return by accident somewhere.\n  resetOtherDrawParams(global_id);\n\n  // get meshlet\n  let meshletIdx: u32 = global_id.x;\n  if (meshletIdx >= arrayLength(&_meshlets)) {\n    return;\n  }\n  let meshlet = _meshlets[meshletIdx];\n  let settingsFlags = _uniforms.flags;\n\n  // prepare iters\n  let instanceCount: u32 = _getInstanceCount();\n  let iterCount: u32 = ceilDivideU32(instanceCount, ${c.maxWorkgroupsY}u);\n  let tfxOffset: u32 = global_id.y * iterCount;\n  for(var i: u32 = 0u; i < iterCount; i++){\n    let tfxIdx: u32 = tfxOffset + i;\n    let modelMat = _getInstanceTransform(tfxIdx);\n\n    if (isMeshletRendered(settingsFlags, modelMat, meshlet)){\n      registerDraw(modelMat, meshlet.ownBoundingSphere, tfxIdx, meshletIdx);\n    }\n  } \n}\n\n///////////////////////////\n/// SHADER VARIANT 2: iterate inside shader INDIRECT DISPATCH\n///////////////////////////\n\n\n\n// cull params\n${BUFFER_DRAWN_INSTANCES_PARAMS(b.drawnInstancesParams, 'read')}\n// array with results\n${BUFFER_DRAWN_INSTANCES_LIST(b.drawnInstancesList, 'read')}\n\n@compute\n@workgroup_size(${c.workgroupSizeX}, 1, 1)\nfn main_Indirect(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  // set rest of the indirect draw params. Has to be first line in the shader in case we ooopsie and do early return by accident somewhere.\n  resetOtherDrawParams(global_id);\n\n  // get meshlet\n  let meshletIdx: u32 = global_id.x;\n  if (meshletIdx >= arrayLength(&_meshlets)) {\n    return;\n  }\n  let meshlet = _meshlets[meshletIdx];\n  let settingsFlags = _uniforms.flags;\n\n  // prepare iters\n  let instanceCount: u32 = _drawnInstancesParams.actuallyDrawnInstances;\n  let iterCount: u32 = ceilDivideU32(instanceCount, ${c.maxWorkgroupsY}u);\n  let tfxOffset: u32 = global_id.y * iterCount;\n  for(var i: u32 = 0u; i < iterCount; i++){\n    let iterOffset: u32 = tfxOffset + i;\n    let tfxIdx: u32 = _drawnInstancesList[iterOffset];\n    let modelMat = _getInstanceTransform(tfxIdx);\n\n    if (isMeshletRendered(settingsFlags, modelMat, meshlet)){\n      registerDraw(modelMat, meshlet.ownBoundingSphere, tfxIdx, meshletIdx);\n    }\n  } \n}\n\n///////////////////////////\n/// UTILS\n///////////////////////////\n\nfn isMeshletRendered(\n  settingsFlags: u32,\n  modelMat: mat4x4<f32>,\n  meshlet: NaniteMeshletTreeNode\n) -> bool {\n  if (\n    useFrustumCulling(settingsFlags) &&\n    !isInsideCameraFrustum(modelMat, meshlet.ownBoundingSphere)\n  ) {\n    return false;\n  }\n\n  let overrideMipmap = getOverrideOcclusionCullMipmap(settingsFlags);\n  if (\n    useOcclusionCulling(settingsFlags) &&\n    !isPassingOcclusionCulling(modelMat, meshlet.ownBoundingSphere, overrideMipmap)\n  ) {\n    return false;\n  }\n\n  return isCorrectNaniteLOD(modelMat, meshlet);\n}\n\nfn resetOtherDrawParams(global_id: vec3<u32>){\n  if (global_id.x == 0u) {\n    // We always draw 'MAX_MESHLET_TRIANGLES * VERTS_PER_TRIANGLE(3)' verts. Draw pass will discard if the meshlet has less.\n    _drawnMeshletsParams.vertexCount = ${c.maxMeshletTriangles} * 3u;\n    _drawnMeshletsParams.firstVertex = 0u;\n    _drawnMeshletsParams.firstInstance = 0u;\n\n    _drawnMeshletsSwParams.workgroupsX = ceilDivideU32(\n      ${CONFIG.nanite.preprocess.meshletMaxTriangles}u,\n      ${SHADER_PARAMS_RASTERIZE_SW.workgroupSizeX}u\n    );\n    _drawnMeshletsSwParams.workgroupsZ = 1u;\n  }\n}\n\nfn registerDraw(\n  modelMat: mat4x4f,\n  boundingSphere: vec4f,\n  tfxIdx: u32,\n  meshletIdx: u32\n){\n  // TODO [LOW] Aggregate atomic writes. Use ballot like [Wihlidal 2015]:\n  // \"Optimizing the Graphics Pipeline with Compute\"\n  // \n  // TBH this *could* be optimized by the shader compiler. It can assume that\n  // some threads in a warp add 1 to the atomic. It *COULD* then add\n  // to the global atomic the sum ONCE and re-distribute result among the threads.\n  // See NV_shader_thread_group, functionality 4.\n\n  \n  var pixelSpan = vec2f();\n  let projectionOK = projectSphereToScreen(modelMat, boundingSphere, &pixelSpan);\n  // let useSoftwareRasterizer = true; // mock\n  let useSoftwareRasterizer = projectionOK &&\n    pixelSpan.x * pixelSpan.y < _uniforms.softwareRasterizerThreshold; \n\n  if (useSoftwareRasterizer) {\n    // (software rasterizer)\n    // add 1, but no more than MAX_WORKGROUPS_Y.\n    // meh impl, but..\n    let MAX_WORKGROUPS_Y: u32 = ${SHADER_PARAMS_RASTERIZE_SW.maxWorkgroupsY}u;\n    atomicAdd(&_drawnMeshletsSwParams.workgroupsY, 1u);\n    atomicMin(&_drawnMeshletsSwParams.workgroupsY, MAX_WORKGROUPS_Y);\n      \n    // add to the ACTUALL total counter\n    let idx = atomicAdd(&_drawnMeshletsSwParams.actuallyDrawnMeshlets, 1u);\n    _storeMeshletSoftwareDraw(idx, tfxIdx, meshletIdx);\n\n  } else {\n     // (hardware rasterizer)\n    let idx = atomicAdd(&_drawnMeshletsParams.instanceCount, 1u);\n    _storeMeshletHardwareDraw(idx, tfxIdx, meshletIdx);\n  }\n}\n`;\n", "import { NaniteObject } from '../../scene/naniteObject.ts';\nimport {\n  assertIsGPUTextureView,\n  getItemsPerThread,\n} from '../../utils/webgpu.ts';\nimport {\n  BindingsCache,\n  assignResourcesToBindings2,\n  labelPipeline,\n  labelShader,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { SHADER_PARAMS, SHADER_CODE } from './cullMeshletsPass.wgsl.ts';\nimport { CONFIG } from '../../constants.ts';\n\n/** Pass to cull on meshlet level */\nexport class CullMeshletsPass {\n  public static NAME: string = 'CullMeshletsPass';\n\n  // shader variant 1\n  private readonly pipeline_SpreadYZ: GPUComputePipeline;\n  private readonly bindingsCache_SpreadYZ = new BindingsCache();\n\n  // shader variant 2\n  private readonly pipeline_Iter: GPUComputePipeline;\n  private readonly bindingsCache_Iter = new BindingsCache();\n\n  // shader variant 3\n  private readonly pipeline_Indirect: GPUComputePipeline;\n  private readonly bindingsCache_Indirect = new BindingsCache();\n\n  constructor(device: GPUDevice) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(CullMeshletsPass),\n      code: SHADER_CODE(),\n    });\n\n    this.pipeline_SpreadYZ = CullMeshletsPass.createPipeline(\n      device,\n      shaderModule,\n      'main_SpreadYZ'\n    );\n    this.pipeline_Iter = CullMeshletsPass.createPipeline(\n      device,\n      shaderModule,\n      'main_Iter'\n    );\n    this.pipeline_Indirect = CullMeshletsPass.createPipeline(\n      device,\n      shaderModule,\n      'main_Indirect'\n    );\n  }\n\n  private static createPipeline(\n    device: GPUDevice,\n    shaderModule: GPUShaderModule,\n    mainFn: string\n  ) {\n    return device.createComputePipeline({\n      label: labelPipeline(CullMeshletsPass, mainFn),\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: mainFn,\n      },\n    });\n  }\n\n  onViewportResize = () => {\n    this.bindingsCache_SpreadYZ.clear();\n    this.bindingsCache_Iter.clear();\n    this.bindingsCache_Indirect.clear();\n  };\n\n  cmdCullMeshlets(ctx: PassCtx, naniteObject: NaniteObject) {\n    const { cmdBuf, profiler } = ctx;\n\n    // forget draws from previous frame\n    naniteObject.buffers.cmdClearDrawnMeshletsParams(cmdBuf);\n\n    const computePass = cmdBuf.beginComputePass({\n      label: CullMeshletsPass.NAME,\n      timestampWrites: profiler?.createScopeGpu(CullMeshletsPass.NAME),\n    });\n\n    if (CONFIG.cullingInstances.enabled) {\n      this.dispatchVariant_Indirect(ctx, computePass, naniteObject);\n    } else if (CONFIG.nanite.render.useVisibilityImpl_Iter) {\n      this.dispatchVariant_Iter(ctx, computePass, naniteObject);\n    } else {\n      this.dispatchVariant_SpreadYZ(ctx, computePass, naniteObject);\n    }\n\n    computePass.end();\n  }\n\n  /** See shader for explanation */\n  private dispatchVariant_SpreadYZ(\n    ctx: PassCtx,\n    computePass: GPUComputePassEncoder,\n    naniteObject: NaniteObject\n  ) {\n    const pipeline = this.pipeline_SpreadYZ;\n    const bindings = this.bindingsCache_SpreadYZ.getBindings(\n      naniteObject.name,\n      () => this.createBindings(ctx, pipeline, naniteObject)\n    );\n\n    computePass.setPipeline(pipeline);\n    computePass.setBindGroup(0, bindings);\n\n    // dispatch params\n    // X: one per meshlet\n    const workgroupsCntX = getItemsPerThread(\n      naniteObject.meshletCount,\n      SHADER_PARAMS.workgroupSizeX\n    );\n    // Y,Z: There is max of 65k for this number. We might have > 65k instances.\n    // So we split the instance count between y, z.\n    const workgroupsCntY = Math.ceil(\n      Math.min(naniteObject.instancesCount, SHADER_PARAMS.maxWorkgroupsY)\n    );\n    const workgroupsCntZ = Math.ceil(\n      naniteObject.instancesCount / SHADER_PARAMS.maxWorkgroupsY\n    );\n\n    // dispatch\n    computePass.dispatchWorkgroups(\n      workgroupsCntX,\n      workgroupsCntY,\n      workgroupsCntZ\n    );\n  }\n\n  /** See shader for explanation */\n  private dispatchVariant_Iter(\n    ctx: PassCtx,\n    computePass: GPUComputePassEncoder,\n    naniteObject: NaniteObject\n  ) {\n    const pipeline = this.pipeline_Iter;\n    const bindings = this.bindingsCache_Iter.getBindings(\n      naniteObject.name,\n      () => this.createBindings(ctx, pipeline, naniteObject)\n    );\n\n    computePass.setPipeline(pipeline);\n    computePass.setBindGroup(0, bindings);\n\n    // dispatch params\n    // X: one per meshlet\n    const workgroupsCntX = getItemsPerThread(\n      naniteObject.meshletCount,\n      SHADER_PARAMS.workgroupSizeX\n    );\n    // Y: one per instance, but do not overflow limit 65k\n    const workgroupsCntY = Math.min(\n      naniteObject.instancesCount,\n      SHADER_PARAMS.maxWorkgroupsY\n    );\n    // Z: nope\n    const workgroupsCntZ = 1;\n\n    // dispatch\n    computePass.dispatchWorkgroups(\n      workgroupsCntX,\n      workgroupsCntY,\n      workgroupsCntZ\n    );\n  }\n\n  /** See shader for explanation */\n  private dispatchVariant_Indirect(\n    ctx: PassCtx,\n    computePass: GPUComputePassEncoder,\n    naniteObject: NaniteObject\n  ) {\n    const pipeline = this.pipeline_Indirect;\n    const bindings = this.bindingsCache_Indirect.getBindings(\n      naniteObject.name,\n      () => this.createBindingsIndirect(ctx, pipeline, naniteObject)\n    );\n\n    computePass.setPipeline(pipeline);\n    computePass.setBindGroup(0, bindings);\n\n    // dispatch\n    computePass.dispatchWorkgroupsIndirect(\n      naniteObject.buffers.drawnInstancesBuffer,\n      0\n    );\n  }\n\n  /** Shared by both normal and indirect variants */\n  private getTheUsuallBindGroups(\n    {\n      globalUniforms,\n      prevFrameDepthPyramidTexture,\n      depthPyramidSampler,\n    }: PassCtx,\n    naniteObject: NaniteObject\n  ) {\n    const b = SHADER_PARAMS.bindings;\n    const buffers = naniteObject.buffers;\n    assertIsGPUTextureView(prevFrameDepthPyramidTexture);\n\n    return [\n      globalUniforms.createBindingDesc(b.renderUniforms),\n      buffers.bindMeshletData(b.meshletsData),\n      buffers.bindDrawnMeshletsParams(b.drawnMeshletsParams),\n      buffers.bindDrawnMeshletsList(b.drawnMeshletsList),\n      buffers.bindDrawnMeshletsSwParams(b.drawnMeshletsSwParams),\n      naniteObject.bindInstanceTransforms(b.instancesTransforms),\n      {\n        binding: b.depthPyramidTexture,\n        resource: prevFrameDepthPyramidTexture,\n      },\n      { binding: b.depthSampler, resource: depthPyramidSampler },\n    ];\n  }\n\n  private createBindings = (\n    ctx: PassCtx,\n    pipeline: GPUComputePipeline,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const { device } = ctx;\n    const bindGroups = this.getTheUsuallBindGroups(ctx, naniteObject);\n\n    return assignResourcesToBindings2(\n      CullMeshletsPass,\n      naniteObject.name,\n      device,\n      pipeline,\n      bindGroups\n    );\n  };\n\n  private createBindingsIndirect = (\n    ctx: PassCtx,\n    pipeline: GPUComputePipeline,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const { device } = ctx;\n    const b = SHADER_PARAMS.bindings;\n    const bindGroups = this.getTheUsuallBindGroups(ctx, naniteObject);\n\n    const buffers = naniteObject.buffers;\n\n    return assignResourcesToBindings2(\n      CullMeshletsPass,\n      naniteObject.name,\n      device,\n      pipeline,\n      [\n        ...bindGroups,\n        buffers.bindDrawnInstancesParams(b.drawnInstancesParams),\n        buffers.bindDrawnInstancesList(b.drawnInstancesList),\n      ]\n    );\n  };\n}\n", "import { Mat4, Vec4, vec3, vec4 } from 'wgpu-matrix';\n\n/** cached: prevent runtime memory alloc. */\nconst tmpVec = vec4.create();\n\n/**\n * Left handed, where:\n *\n * - right: (1, 0, 0)\n * - up: (0, 1, 0)\n * - forward: (0, 0, 1)\n *\n * Same as WebGL: https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_model_view_projection\n */\nexport class Frustum {\n  private static PLANE_NAMES = [\n    'left',\n    'right',\n    'top',\n    'bottom',\n    'near',\n    'far',\n  ];\n  readonly planes = new Float32Array(24);\n\n  /**\n   * https://www8.cs.umu.se/kurser/5DV051/HT12/lab/plane_extraction.pdf\n   *\n   * NDC culling:\n   *\n   * * -1.0 \u2264 x \u2264 1.0  --->  -w \u2264 x' \u2264 w\n   * * -1.0 \u2264 y \u2264 1.0  --->  -w \u2264 y' \u2264 w\n   * * -0.0 \u2264 z \u2264 1.0  --->  -0 \u2264 z' \u2264 w (NOTE: this depends on actual matrices, you might have to use `-w \u2264 z'` just like the rest)\n   *\n   * And (https://github.com/greggman/wgpu-matrix/blob/main/src/vec4-impl.ts#L652):\n   *\n   * * `x' = m[0] * p.x + m[4] * p.y + m[ 8] * p.z + m[12] * w;`\n   * * `y' = m[1] * p.x + m[5] * p.y + m[ 9] * p.z + m[13] * w;`\n   * * `z' = m[2] * p.x + m[6] * p.y + m[10] * p.z + m[14] * w;`\n   * * `w  = m[3] * p.x + m[7] * p.y + m[11] * p.z + m[15] * w;`\n   *\n   * For `-w \u2264 x'  ---> -w - x' \u2264 0` (left plane):\n   *\n   * * `-(m[0] + m[3]) * p.x - (m[4] + m[7]) * p.y - (m[8] + m[11]) * p.z - (m[12] + m[15]) * w \u2264 0`\n   *\n   * For `x' \u2264 w  ---> x' -w \u2264 0` (right plane):\n   *\n   * * `(m[0] - m[3]) * p.x + (m[4] - m[7]) * p.y + (m[8] - m[11]) * p.z + (m[12] - m[15]) * w \u2264 0`\n   *\n   * For `-0 \u2264 z'` (near plane, if `-w \u2264 z'` does not work)\n   *\n   * * `0 \u2264 m[2] * p.x + m[6] * p.y + m[10] * p.z + m[14] * w;`\n   *\n   * etc.\n   */\n  update(vpMatrix: Mat4) {\n    const m = vpMatrix;\n\n    // 0: Left clipping plane: -w \u2264 x'\n    vec3.set(-(m[0] + m[3]), -(m[4] + m[7]), -(m[8] + m[11]), tmpVec);\n    let l = vec3.length(tmpVec);\n    this.planes[0] = tmpVec[0] / l;\n    this.planes[1] = tmpVec[1] / l;\n    this.planes[2] = tmpVec[2] / l;\n    this.planes[3] = -(m[12] + m[15]) / l;\n    // 1: Right clipping plane: x' \u2264 w\n    vec3.set(m[0] - m[3], m[4] - m[7], m[8] - m[11], tmpVec);\n    l = vec3.length(tmpVec);\n    this.planes[4] = tmpVec[0] / l;\n    this.planes[5] = tmpVec[1] / l;\n    this.planes[6] = tmpVec[2] / l;\n    this.planes[7] = (m[12] - m[15]) / l;\n    // 2 Top clipping plane: -w \u2264 y'\n    vec3.set(-(m[1] + m[3]), -(m[5] + m[7]), -(m[9] + m[11]), tmpVec);\n    l = vec3.length(tmpVec);\n    this.planes[8] = tmpVec[0] / l;\n    this.planes[9] = tmpVec[1] / l;\n    this.planes[10] = tmpVec[2] / l;\n    this.planes[11] = -(m[13] + m[15]) / l;\n    // 3: Bottom clipping plane: y' \u2264 w\n    vec3.set(m[1] - m[3], m[5] - m[7], m[9] - m[11], tmpVec);\n    l = vec3.length(tmpVec);\n    this.planes[12] = tmpVec[0] / l;\n    this.planes[13] = tmpVec[1] / l;\n    this.planes[14] = tmpVec[2] / l;\n    this.planes[15] = (m[13] - m[15]) / l;\n    // 4: Near clipping plane: -0 \u2264 z'\n    vec3.set(-(m[2] + m[3]), -(m[6] + m[7]), -(m[10] + m[11]), tmpVec);\n    l = vec3.length(tmpVec);\n    this.planes[16] = tmpVec[0] / l;\n    this.planes[17] = tmpVec[1] / l;\n    this.planes[18] = tmpVec[2] / l;\n    this.planes[19] = -(m[14] + m[15]) / l;\n    // 5: Far clipping plane: z' \u2264 w\n    vec3.set(m[2] - m[3], m[6] - m[7], m[10] - m[11], tmpVec);\n    l = vec3.length(tmpVec);\n    this.planes[20] = tmpVec[0] / l;\n    this.planes[21] = tmpVec[1] / l;\n    this.planes[22] = tmpVec[2] / l;\n    this.planes[23] = (m[14] - m[15]) / l;\n  }\n\n  /** REMEMBER: sphere is world space */\n  isInside(sphereWorldSpace: Vec4) {\n    const s = sphereWorldSpace;\n    let result = true;\n\n    for (let i = 0; i < 6; i++) {\n      const distance =\n        s[0] * this.planes[i * 4] + // plane.nx\n        s[1] * this.planes[i * 4 + 1] + // plane.ny\n        s[2] * this.planes[i * 4 + 2] + // plane.nz\n        this.planes[i * 4 + 3]; // plane.d\n\n      // The point is $distance away from the plane. The sign indicates\n      // in front/back. But the sphere has $radius.\n      // * For point we want the $distance to be negative.\n      //   Depends on the normal direction, but this is for our case.\n      // * For sphere we want $distance - $radius to be negative.\n      //   So the point on the 'positive' side, can still become negative.\n      //   with big enough radius.\n      const inFront = distance <= s[3];\n      // console.log(`${Frustum.PLANE_NAMES[i]}: ${inFront} (dist=${distance.toFixed(2)} ,  r=${s[3].toFixed(2)} ,  to 0=${(distance+s[3]).toFixed(2)})`); // prettier-ignore\n      result = result && inFront;\n    }\n\n    return result;\n  }\n\n  toStr() {\n    const fmt = (i: number) => this.planes[i].toFixed(2);\n    const p2str = (i: number) =>\n      `[${fmt(i)}, ${fmt(i + 1)}, ${fmt(i + 2)},  d=${fmt(i + 3)}]`;\n    const ps = Frustum.PLANE_NAMES.map(\n      (name, i) => '  ' + name + ': ' + p2str(i * 4)\n    );\n    return `Frustum:( \\n${ps.join('\\n')}\\n)`;\n  }\n}\n", "export const SHADER_PARAMS = {\n  workgroupSizeX: 8,\n  workgroupSizeY: 8,\n  bindings: {\n    textureSrc: 0,\n    textureDst: 1,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n/// Requires device feature 'float32-filterable'\n/// https://www.youtube.com/watch?v=YCteLdYdZWQ&list=PL0JVLUVCkk-l7CWCn3-cdftR0oajugYvd&index=14\n///////////////////////////\nconst c = SHADER_PARAMS;\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n@group(0) @binding(${b.textureSrc})\nvar _textureSrc: texture_2d<f32>;\n\n@group(0) @binding(${b.textureDst})\nvar _textureDst: texture_storage_2d<r32float, write>;\n\n\n@compute\n@workgroup_size(${c.workgroupSizeX}, ${c.workgroupSizeY}, 1)\nfn main(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  let index = global_id.xy;\n  let dimSrc = vec2u(textureDimensions(_textureSrc, 0));\n\n  if (index.x >= dimSrc.x || index.y >= dimSrc.y){\n    return;\n  }\n\n  // sample\n  var depth = 0.0;\n  let pos = index * 2;\n  // max cause we have: depthCompare='less',\n  // so everything closer (less depth) will be rendered.\n  // \"Culled if the closest mesh vertex is still further than depthmap\"\n  // TBH we could also use textureGather() here\n  depth = max(depth, textureLoad(_textureSrc, pos                , 0).x);\n  depth = max(depth, textureLoad(_textureSrc, pos + vec2u(0u, 1u), 0).x);\n  depth = max(depth, textureLoad(_textureSrc, pos + vec2u(1u, 0u), 0).x);\n  depth = max(depth, textureLoad(_textureSrc, pos + vec2u(1u, 1u), 0).x);\n\n  // write\n  textureStore(_textureDst, index, vec4(depth));\n}\n`;\n", "import {\n  assertIsGPUTextureView,\n  getItemsPerThread,\n} from '../../utils/webgpu.ts';\nimport {\n  labelShader,\n  labelPipeline,\n  assignResourcesToBindings2,\n  createLabel,\n} from '../_shared.ts';\nimport { SHADER_PARAMS, SHADER_CODE } from './depthPyramidPass.wgsl.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { CONFIG, IS_DENO } from '../../constants.ts';\n\ninterface PyramidLevel {\n  level: number;\n  textureView: GPUTextureView;\n  bindings: GPUBindGroup;\n  width: number;\n  height: number;\n}\n\nconst getMipSize = (d: number) => Math.floor(d / 2);\n\nexport const createDepthPyramidSampler = (device: GPUDevice) => {\n  return device.createSampler({\n    label: createLabel(DepthPyramidPass, 'depth-sampler'),\n    magFilter: 'nearest',\n    minFilter: 'nearest',\n    mipmapFilter: 'nearest',\n    addressModeU: 'clamp-to-edge',\n    addressModeV: 'clamp-to-edge',\n  });\n};\n\nexport class DepthPyramidPass {\n  public static NAME: string = 'DepthPyramidPass';\n\n  private readonly pipeline: GPUComputePipeline;\n  private resultTexture: GPUTexture | undefined = undefined;\n  private resultTextureView: GPUTextureView | undefined = undefined;\n\n  // TODO [IGNORE] is this sampler really needed? Maybe use textureLoad() instead of textureSample?\n  /** Sampler for any other pass that wants to use depth pyramid */\n  public readonly depthSampler: GPUSampler;\n\n  /**\n   * - 0 - downscaled 2x,\n   * - 1 - downscaled 4x, etc. */\n  public pyramidLevels: PyramidLevel[] = [];\n\n  constructor(device: GPUDevice) {\n    this.pipeline = DepthPyramidPass.createPipeline(device);\n    this.depthSampler = createDepthPyramidSampler(device);\n  }\n\n  private static createPipeline(device: GPUDevice) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(DepthPyramidPass),\n      code: SHADER_CODE(),\n    });\n    return device.createComputePipeline({\n      label: labelPipeline(DepthPyramidPass),\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: 'main',\n      },\n    });\n  }\n\n  /** Conditionally refreshes the result texture based on source dimensions. */\n  verifyResultTexture(\n    device: GPUDevice,\n    textureSrc: GPUTexture,\n    textureSrcView: GPUTextureView,\n    forceRecreate: boolean = false\n  ): [GPUTexture, GPUTextureView] {\n    assertIsGPUTextureView(textureSrcView);\n    const dstW = getMipSize(textureSrc.width);\n    const dstH = getMipSize(textureSrc.height);\n\n    // check if existing is good enough\n    if (\n      this.resultTexture?.width === dstW &&\n      this.resultTexture?.height === dstH &&\n      this.pyramidLevels.length > 0 &&\n      this.resultTextureView != undefined &&\n      !forceRecreate\n    ) {\n      return [this.resultTexture, this.resultTextureView];\n    }\n\n    // create a new texture\n    if (this.resultTexture) {\n      this.resultTexture.destroy();\n    }\n\n    let mipLevelCount = Math.ceil(Math.log2(Math.min(dstW, dstH)));\n    console.log(`${DepthPyramidPass.NAME}: Create depth pyramid: ${dstW}x${dstH} with ${mipLevelCount} mip levels`); // prettier-ignore\n\n    this.resultTexture = device.createTexture({\n      label: createLabel(DepthPyramidPass, `result-${dstW}-${dstH}`),\n      dimension: '2d',\n      size: [dstW, dstH, 1],\n      format: 'r32float',\n      usage:\n        GPUTextureUsage.COPY_SRC |\n        GPUTextureUsage.STORAGE_BINDING |\n        GPUTextureUsage.TEXTURE_BINDING,\n      mipLevelCount,\n    });\n    this.resultTextureView = this.resultTexture.createView({\n      label: `${this.resultTexture.label}-view`,\n    });\n\n    // create mipmaps\n    this.pyramidLevels = [];\n    let minWidth = dstW;\n    let mipHeight = dstH;\n    let prevLevelTexView = textureSrcView;\n\n    if (!this.runtimeEnvSupportsDepthPyramid()) {\n      // prevent creating bindings!\n      console.warn(`Current runtime environment does not support depth pyramid`); // prettier-ignore\n      mipLevelCount = 0;\n    }\n\n    for (let baseMipLevel = 0; baseMipLevel < mipLevelCount; baseMipLevel++) {\n      const textureView = this.resultTexture.createView({\n        label: createLabel(DepthPyramidPass, `mip-${baseMipLevel}`),\n        baseMipLevel,\n        mipLevelCount: 1,\n      });\n      const bindings = this.createBindings(\n        device,\n        `mip-${baseMipLevel}`,\n        prevLevelTexView,\n        textureView\n      );\n\n      this.pyramidLevels.push({\n        level: baseMipLevel,\n        textureView,\n        bindings,\n        width: minWidth,\n        height: mipHeight,\n      });\n      // console.log('Depth pyramid level', this.pyramidLevels.at(-1));\n\n      // prepare next iter\n      prevLevelTexView = textureView;\n      minWidth = getMipSize(minWidth);\n      mipHeight = getMipSize(mipHeight);\n    }\n\n    return [this.resultTexture, this.resultTextureView];\n  }\n\n  private runtimeEnvSupportsDepthPyramid() {\n    // wgpu/naga throws errors if we bind depth texture as normal texture.\n    // This could be fixed with more code. But it's only needed for Deno rendering,\n    // where we always render only first frame, so why bother?\n    // First frame (even on web) never uses depth pyramid, cause no previous frame data..\n    const isNotSupported = IS_DENO && !CONFIG.isTest; // blacklist\n    return !isNotSupported;\n  }\n\n  /** Returns if runtime env supports depth pyramid */\n  cmdCreateDepthPyramid(\n    ctx: PassCtx,\n    textureSrc: GPUTexture,\n    textureSrcView: GPUTextureView\n  ) {\n    if (!this.runtimeEnvSupportsDepthPyramid()) {\n      return false;\n    }\n\n    const { cmdBuf, profiler } = ctx;\n    assertIsGPUTextureView(textureSrcView);\n\n    this.verifyResultTexture(ctx.device, textureSrc, textureSrcView);\n\n    // no need to clear previous values, as we override every pixel\n    const computePass = cmdBuf.beginComputePass({\n      label: DepthPyramidPass.NAME,\n      timestampWrites: profiler?.createScopeGpu(DepthPyramidPass.NAME),\n    });\n\n    computePass.setPipeline(this.pipeline);\n\n    this.pyramidLevels.forEach((level) =>\n      this.dispatchPyramidLevel(computePass, level)\n    );\n\n    computePass.end();\n    return true;\n  }\n\n  private dispatchPyramidLevel(\n    computePass: GPUComputePassEncoder,\n    level: PyramidLevel\n  ) {\n    computePass.setBindGroup(0, level.bindings);\n\n    // dispatch params\n    const workgroupsCntX = getItemsPerThread(\n      level.width,\n      SHADER_PARAMS.workgroupSizeX\n    );\n    const workgroupsCntY = getItemsPerThread(\n      level.height,\n      SHADER_PARAMS.workgroupSizeY\n    );\n\n    // dispatch\n    computePass.dispatchWorkgroups(workgroupsCntX, workgroupsCntY, 1);\n    // console.log(`${DepthPyramidPass.NAME}.dispatch [${workgroupsCntX}, ${workgroupsCntY}, 1]`); // prettier-ignore\n  }\n\n  private createBindings = (\n    device: GPUDevice,\n    name: string,\n    textureSrcView: GPUTextureView,\n    textureDstView: GPUTextureView\n  ): GPUBindGroup => {\n    assertIsGPUTextureView(textureSrcView);\n    assertIsGPUTextureView(textureDstView);\n    const bindIdx = SHADER_PARAMS.bindings;\n\n    return assignResourcesToBindings2(\n      DepthPyramidPass,\n      name,\n      device,\n      this.pipeline,\n      [\n        { binding: bindIdx.textureSrc, resource: textureSrcView },\n        { binding: bindIdx.textureDst, resource: textureDstView },\n      ]\n    );\n  };\n}\n", "export const FULLSCREEN_TRIANGLE_POSITION = /* wgsl */ `\n\n/** https://www.saschawillems.de/blog/2016/08/13/vulkan-tutorial-on-rendering-a-fullscreen-quad-without-buffers/ */\nfn getFullscreenTrianglePosition(vertIdx: u32) -> vec4f {\n  let outUV = vec2u((vertIdx << 1) & 2, vertIdx & 2);\n  return vec4f(vec2f(outUV) * 2.0 - 1.0, 0.0, 1.0);\n}\n`;\n\nexport function cmdDrawFullscreenTriangle(renderPass: GPURenderPassEncoder) {\n  renderPass.draw(3);\n}\n", "import {\n  FULLSCREEN_TRIANGLE_POSITION,\n  cmdDrawFullscreenTriangle,\n} from '../_shaderSnippets/fullscreenTriangle.wgsl.ts';\nimport { LINEAR_DEPTH } from '../_shaderSnippets/linearDepth.wgsl.ts';\nimport { CLAMP_TO_MIP_LEVELS } from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport {\n  BindingsCache,\n  assignResourcesToBindings2,\n  getClearColorVec3,\n  labelPipeline,\n  labelShader,\n  useColorAttachment,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n    depthPyramidTexture: 1,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n@group(0) @binding(${b.depthPyramidTexture})\nvar _depthPyramidTexture: texture_2d<f32>;\n\n${CLAMP_TO_MIP_LEVELS}\n${FULLSCREEN_TRIANGLE_POSITION}\n${LINEAR_DEPTH}\n\n@vertex\nfn main_vs(\n  @builtin(vertex_index) VertexIndex : u32\n) -> @builtin(position) vec4f {\n  return getFullscreenTrianglePosition(VertexIndex);\n}\n\n\n@fragment\nfn main_fs(\n  // this is not uv, it's in pixels\n  @builtin(position) coord: vec4<f32>\n) -> @location(0) vec4<f32> {\n  let viewportSize = vec2f(_uniforms.viewport.x, _uniforms.viewport.y);\n  var mipLevel: i32 = getDbgPyramidMipmapLevel(_uniforms.flags);\n  mipLevel = clampToMipLevels(mipLevel, _depthPyramidTexture);\n  let mipSize = vec2f(textureDimensions(_depthPyramidTexture, mipLevel));\n  let mipCoord = coord.xy / viewportSize * mipSize;\n\n  var depth = textureLoad(_depthPyramidTexture, vec2u(mipCoord.xy), mipLevel).x;\n  \n  var c = vec3f(0., 0., 0.);\n  if (depth < 1.0) {\n    c.g = linearizeDepth_0_1(depth);\n    c.b = 0.2; // some color so it's not black regardless of depth\n  }\n\n  return vec4(c, 1.0);\n}\n`;\n\nexport class DepthPyramidDebugDrawPass {\n  public static NAME: string = 'DepthPyramidDebugDrawPass';\n\n  private readonly renderPipeline: GPURenderPipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(device: GPUDevice, outTextureFormat: GPUTextureFormat) {\n    this.renderPipeline = DepthPyramidDebugDrawPass.createRenderPipeline(\n      device,\n      outTextureFormat\n    );\n  }\n\n  private static createRenderPipeline(\n    device: GPUDevice,\n    outTextureFormat: GPUTextureFormat\n  ) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(DepthPyramidDebugDrawPass),\n      code: SHADER_CODE(),\n    });\n\n    return device.createRenderPipeline({\n      label: labelPipeline(DepthPyramidDebugDrawPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n  }\n\n  onViewportResize = () => this.bindingsCache.clear();\n\n  cmdDraw(ctx: PassCtx) {\n    const { cmdBuf, profiler, hdrRenderTexture, depthTexture } = ctx;\n\n    const renderPass = cmdBuf.beginRenderPass({\n      label: DepthPyramidDebugDrawPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3()),\n      ],\n      timestampWrites: profiler?.createScopeGpu(DepthPyramidDebugDrawPass.NAME),\n    });\n\n    const bindings = this.bindingsCache.getBindings(depthTexture.label, () =>\n      this.createBindings(ctx)\n    );\n    renderPass.setBindGroup(0, bindings);\n    renderPass.setPipeline(this.renderPipeline);\n    cmdDrawFullscreenTriangle(renderPass);\n    renderPass.end();\n  }\n\n  private createBindings = ({\n    device,\n    globalUniforms,\n    prevFrameDepthPyramidTexture,\n  }: PassCtx): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n\n    return assignResourcesToBindings2(\n      DepthPyramidDebugDrawPass,\n      '000',\n      device,\n      this.renderPipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        {\n          binding: b.depthPyramidTexture,\n          resource: prevFrameDepthPyramidTexture,\n        },\n      ]\n    );\n  };\n}\n", "import { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { CONFIG } from '../../constants.ts';\nimport { SNIPPET_OCCLUSION_CULLING } from '../_shaderSnippets/cullOcclusion.wgsl.ts';\nimport { SNIPPET_FRUSTUM_CULLING } from '../_shaderSnippets/cullFrustum.wgsl.ts';\nimport { SHADER_PARAMS as SHADER_PARAMS_CULL_MESHLETS } from '../cullMeshlets/cullMeshletsPass.wgsl.ts';\nimport {\n  BUFFER_DRAWN_INSTANCES_LIST,\n  BUFFER_DRAWN_INSTANCES_PARAMS,\n} from '../../scene/naniteBuffers/drawnInstancesBuffer.ts';\nimport {\n  BUFFER_DRAWN_IMPOSTORS_PARAMS,\n  BUFFER_DRAWN_IMPOSTORS_LIST,\n} from '../../scene/naniteBuffers/drawnImpostorsBuffer.ts';\nimport { BUFFER_INSTANCES } from '../../scene/naniteBuffers/instancesBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  workgroupSizeX: 32,\n  maxWorkgroupsY: 1 << 15, // Spec says limit is 65535 (2^16 - 1), so we use 32768\n  maxMeshletTriangles: `${CONFIG.nanite.preprocess.meshletMaxTriangles}u`,\n  bindings: {\n    renderUniforms: 0,\n    instancesTransforms: 1,\n    dispatchIndirectParams: 2,\n    drawnInstanceIdsResult: 3,\n    billboardsParams: 4,\n    billboardsIdsResult: 5,\n    depthPyramidTexture: 6,\n    depthSampler: 7,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst c = SHADER_PARAMS;\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${SHADER_SNIPPETS.GET_MVP_MAT}\n${SHADER_SNIPPETS.UTILS}\n${SNIPPET_FRUSTUM_CULLING}\n${SNIPPET_OCCLUSION_CULLING}\n\n// instance transforms\n${BUFFER_INSTANCES(b.instancesTransforms)}\n\n// cull params\n${BUFFER_DRAWN_INSTANCES_PARAMS(b.dispatchIndirectParams, 'read_write')}\n// cull: array with results\n${BUFFER_DRAWN_INSTANCES_LIST(b.drawnInstanceIdsResult, 'read_write')}\n\n// billboard params\n${BUFFER_DRAWN_IMPOSTORS_PARAMS(b.billboardsParams, 'read_write')}\n// billboard: array with results\n${BUFFER_DRAWN_IMPOSTORS_LIST(b.billboardsIdsResult, 'read_write')}\n\n// depth pyramid + sampler\n@group(0) @binding(${b.depthPyramidTexture})\nvar _depthPyramidTexture: texture_2d<f32>;\n@group(0) @binding(${b.depthSampler})\nvar _depthSampler: sampler;\n\n\n\n@compute\n@workgroup_size(${c.workgroupSizeX}, 1, 1)\nfn main(\n  @builtin(global_invocation_id) global_id: vec3<u32>,\n) {\n  // set rest of the indirect draw params. Has to be first line in the shader in case we ooopsie and do early return by accident somewhere.\n  resetOtherDrawParams(global_id);\n\n  let settingsFlags = _uniforms.flags;\n  let boundingSphere = _drawnInstancesParams.objectBoundingSphere;\n  let MAX_WORKGROUPS_Y: u32 = ${SHADER_PARAMS_CULL_MESHLETS.maxWorkgroupsY}u;\n\n  \n  // prepare iters\n  let instanceCount: u32 = _getInstanceCount();\n  let iterCount: u32 = ceilDivideU32(instanceCount, ${c.maxWorkgroupsY}u);\n  let tfxOffset: u32 = global_id.x * iterCount;\n\n  for(var i: u32 = 0u; i < iterCount; i++){\n    let tfxIdx: u32 = tfxOffset + i;\n    if (tfxIdx >= instanceCount) { continue; }\n    let modelMat = _getInstanceTransform(tfxIdx);\n\n    if (!isInstanceRendered(settingsFlags, modelMat, boundingSphere)){\n      continue;\n    }\n\n    if (renderAsBillboard(settingsFlags, modelMat, boundingSphere)) {\n      let idx = atomicAdd(&_drawnImpostorsParams.instanceCount, 1u);\n      _drawnImpostorsList[idx] = tfxIdx;\n\n    } else {\n      // add 1, but no more than MAX_WORKGROUPS_Y.\n      // meh impl, but..\n      atomicAdd(&_drawnInstancesParams.workgroupsY, 1u);\n      atomicMin(&_drawnInstancesParams.workgroupsY, MAX_WORKGROUPS_Y);\n      \n      // add to the ACTUALL total counter\n      let idx = atomicAdd(&_drawnInstancesParams.actuallyDrawnInstances, 1u);\n      _drawnInstancesList[idx] = tfxIdx;\n    }\n  } \n}\n\n///////////////////////////\n/// UTILS\n///////////////////////////\n\nfn isInstanceRendered(\n  settingsFlags: u32,\n  modelMat: mat4x4<f32>,\n  boundingSphere: vec4f\n) -> bool {\n  if (\n    useInstancesFrustumCulling(settingsFlags) &&\n    !isInsideCameraFrustum(modelMat, boundingSphere)\n  ) {\n    return false;\n  }\n\n  let overrideMipmap = getOverrideOcclusionCullMipmap(settingsFlags);\n  if (\n    useInstancesOcclusionCulling(settingsFlags) &&\n    !isPassingOcclusionCulling(modelMat, boundingSphere, overrideMipmap)\n  ) {\n    return false;\n  }\n\n  return true;\n}\n\n\nfn renderAsBillboard(\n  settingsFlags: u32,\n  modelMat: mat4x4<f32>,\n  boundingSphere: vec4f\n) -> bool {\n  if (useForceBillboards(settingsFlags)) {\n    return true;\n  }\n\n  var pixelSpan = vec2f();\n  let projectionOK = projectSphereToScreen(modelMat, boundingSphere, &pixelSpan);\n  return (\n    projectionOK &&\n    pixelSpan.x * pixelSpan.y < _uniforms.billboardThreshold\n  );\n}\n\nfn resetOtherDrawParams(global_id: vec3<u32>){\n  if (global_id.x == 0u) {\n    _drawnInstancesParams.workgroupsX = ceilDivideU32(\n      _drawnInstancesParams.allMeshletsCount,\n      ${SHADER_PARAMS_CULL_MESHLETS.workgroupSizeX}u\n    );\n    _drawnInstancesParams.workgroupsZ = 1u;\n\n    _drawnImpostorsParams.vertexCount = 6u; // billboard\n    _drawnImpostorsParams.firstVertex = 0u;\n    _drawnImpostorsParams.firstInstance = 0u;\n  }\n}\n\n`;\n", "import { NaniteObject } from '../../scene/naniteObject.ts';\nimport { assertIsGPUTextureView } from '../../utils/webgpu.ts';\nimport {\n  BindingsCache,\n  assignResourcesToBindings2,\n  labelPipeline,\n  labelShader,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { SHADER_PARAMS, SHADER_CODE } from './cullInstancesPass.wgsl.ts';\n\nexport class CullInstancesPass {\n  public static NAME: string = 'CullInstancesPass';\n\n  private readonly pipeline: GPUComputePipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(device: GPUDevice) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(CullInstancesPass),\n      code: SHADER_CODE(),\n    });\n\n    this.pipeline = device.createComputePipeline({\n      label: labelPipeline(CullInstancesPass),\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: 'main',\n      },\n    });\n  }\n\n  onViewportResize = () => {\n    this.bindingsCache.clear();\n  };\n\n  cmdCullInstances(ctx: PassCtx, naniteObject: NaniteObject) {\n    const { cmdBuf, profiler } = ctx;\n\n    // forget draws from previous frame\n    naniteObject.buffers.cmdClearDrawnInstancesDispatchParams(cmdBuf);\n    naniteObject.buffers.cmdClearDrawnImpostorsParams(cmdBuf);\n\n    const computePass = cmdBuf.beginComputePass({\n      label: CullInstancesPass.NAME,\n      timestampWrites: profiler?.createScopeGpu(CullInstancesPass.NAME),\n    });\n\n    const pipeline = this.pipeline;\n    const bindings = this.bindingsCache.getBindings(naniteObject.name, () =>\n      this.createBindings(ctx, pipeline, naniteObject)\n    );\n\n    computePass.setPipeline(pipeline);\n    computePass.setBindGroup(0, bindings);\n\n    // dispatch params\n    // X: one per instance, but do not overflow limit 65k\n    const workgroupsCntX = Math.min(\n      naniteObject.instancesCount,\n      SHADER_PARAMS.maxWorkgroupsY\n    );\n    const workgroupsCntY = 1;\n    const workgroupsCntZ = 1;\n\n    // dispatch\n    // console.log(`${CullInstancesPass.NAME} dispatch(${workgroupsCntX}, ${workgroupsCntY}, ${workgroupsCntZ})`); // prettier-ignore\n    computePass.dispatchWorkgroups(\n      workgroupsCntX,\n      workgroupsCntY,\n      workgroupsCntZ\n    );\n\n    computePass.end();\n  }\n\n  private createBindings = (\n    {\n      device,\n      globalUniforms,\n      prevFrameDepthPyramidTexture,\n      depthPyramidSampler,\n    }: PassCtx,\n    pipeline: GPUComputePipeline,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n    assertIsGPUTextureView(prevFrameDepthPyramidTexture);\n\n    const buffers = naniteObject.buffers;\n\n    return assignResourcesToBindings2(\n      CullInstancesPass,\n      naniteObject.name,\n      device,\n      pipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        naniteObject.bindInstanceTransforms(b.instancesTransforms),\n        buffers.bindDrawnInstancesParams(b.dispatchIndirectParams),\n        buffers.bindDrawnInstancesList(b.drawnInstanceIdsResult),\n        buffers.bindDrawnImpostorsParams(b.billboardsParams),\n        buffers.bindDrawnImpostorsList(b.billboardsIdsResult),\n        {\n          binding: b.depthPyramidTexture,\n          resource: prevFrameDepthPyramidTexture,\n        },\n        { binding: b.depthSampler, resource: depthPyramidSampler },\n      ]\n    );\n  };\n}\n", "import { IS_WGPU } from '../../constants.ts';\n\n/** usual 8x8 Bayer matrix dithering */\nexport const SNIPPET_DITHER = /* wgsl */ `\n\nconst DITHER_ELEMENT_RANGE: f32 = 63.0;\n\n/** No. of possible colors in u8 color value */\nconst DITHER_LINEAR_COLORSPACE_COLORS: f32 = 256.0;\n\n// Too lazy to use texture or smth\nconst DITHER_MATRIX = array<u32, 64>(\n  0, 32,  8, 40,  2, 34, 10, 42,\n 48, 16, 56, 24, 50, 18, 58, 26,\n 12, 44,  4, 36, 14, 46,  6, 38,\n 60, 28, 52, 20, 62, 30, 54, 22,\n  3, 35, 11, 43,  1, 33,  9, 41,\n 51, 19, 59, 27, 49, 17, 57, 25,\n 15, 47,  7, 39, 13, 45,  5, 37,\n 63, 31, 55, 23, 61, 29, 53, 21\n);\n\n/** Returns 0-1 dithered value\n * @ Param gl_FragCoord - fragment coordinate (in pixels)\n */\nfn getDitherForPixel(gl_FragCoord: vec2u) -> f32 {\n  let pxPos = vec2u(\n    gl_FragCoord.x % 8u,\n    gl_FragCoord.y % 8u\n  );\n  let idx = pxPos.y * 8u + pxPos.x;\n  // Disabled on Deno, as Naga does not allow indexing 'array<u32, 64>'\n  // with nonconst values. See 'nagaFixes.ts'.\n  let matValue = DITHER_MATRIX[${IS_WGPU ? '0' : 'idx'}]; // [1-64]\n  return f32(matValue) / DITHER_ELEMENT_RANGE;\n}\n\n/**\n * Add some random value to each pixel,\n * hoping it would make it different than neighbours\n */\nfn ditherColor (\n  gl_FragCoord: vec2u,\n  originalColor: vec3f,\n  strength: f32\n) -> vec3f {\n  let ditherMod = getDitherForPixel(gl_FragCoord) * strength  / DITHER_LINEAR_COLORSPACE_COLORS;\n  return originalColor + ditherMod;\n}\n\n`;\n", "export const SNIPPET_PACKING = /* wgsl */ `\n\nfn packNormal(n: vec4f) -> f32 {\n  return bitcast<f32>(pack4x8snorm(n));\n}\n\nfn unpackNormal(p: f32) -> vec3f {\n  let v = unpack4x8snorm(bitcast<u32>(p));\n  return normalize(v.xyz);\n}\n\nfn packColor8888(color: vec4f) -> f32 {\n  return bitcast<f32>(pack4x8unorm(color));\n}\n\nfn unpackColor8888(p: f32) -> vec4f {\n  return unpack4x8unorm(bitcast<u32>(p));\n}\n`;\n", "import {\n  CONFIG,\n  SHADING_MODE_HW_SW_IMPOSTOR,\n  SHADING_MODE_NORMALS,\n} from '../../constants.ts';\nimport { SNIPPET_DITHER } from '../_shaderSnippets/dither.wgsl.ts';\nimport { SNIPPET_PACKING } from '../_shaderSnippets/pack.wgsl.ts';\nimport { BUFFER_DRAWN_INSTANCES_PARAMS } from '../../scene/naniteBuffers/drawnInstancesBuffer.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport { BUFFER_DRAWN_IMPOSTORS_LIST } from '../../scene/naniteBuffers/drawnImpostorsBuffer.ts';\nimport * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { SNIPPET_SHADING_PBR } from '../_shaderSnippets/pbr.wgsl.ts';\nimport { SNIPPET_SHADING } from '../_shaderSnippets/shading.wgsl.ts';\nimport { BUFFER_INSTANCES } from '../../scene/naniteBuffers/instancesBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n    instancesTransforms: 1,\n    wholeObjectCullData: 2,\n    billboardsIdsResult: 3,\n    impostorTexture: 4,\n    sampler: 5,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${SNIPPET_DITHER}\n${SNIPPET_PACKING}\n${SHADER_SNIPPETS.NORMALS_UTILS}\n${SNIPPET_SHADING_PBR}\n${SNIPPET_SHADING}\n${SHADER_SNIPPETS.FS_NORMAL_FROM_DERIVATIVES}\n\n// for bounding sphere\n${BUFFER_DRAWN_INSTANCES_PARAMS(b.wholeObjectCullData, 'read')}\n\n// instance transforms\n${BUFFER_INSTANCES(b.instancesTransforms)}\n\n// billboard: array with results\n${BUFFER_DRAWN_IMPOSTORS_LIST(b.billboardsIdsResult, 'read')}\n\n@group(0) @binding(${b.impostorTexture})\nvar _diffuseTexture: texture_2d<f32>;\n\n@group(0) @binding(${b.sampler})\nvar _sampler: sampler;\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) positionWS: vec4f,\n  @location(1) uv: vec2f,\n  @location(2) @interpolate(flat) facingAngleDgr: f32,\n  @location(3) @interpolate(flat) tfxIdx: u32,\n};\n\n@vertex\nfn main_vs(\n  @builtin(vertex_index) inVertexIndex: u32,\n  @builtin(instance_index) inInstanceIndex: u32,\n) -> VertexOutput {\n  // I would love to have this outside main_vs() as const,\n  // but wgpu's Naga does not like it.\n  var BILLBOARD_VERTICES = array<vec2<f32>, 6>(\n    vec2<f32>(-1.0, -1.0),\n    vec2<f32>(-1.0, 1.0),\n    vec2<f32>(1.0, -1.0),\n    vec2<f32>(1.0, 1.0),\n    vec2<f32>(-1.0, 1.0),\n    vec2<f32>(1.0, -1.0),\n  );\n\n  var result: VertexOutput;\n  \n  let quadOffset = BILLBOARD_VERTICES[inVertexIndex];\n  let tfxIdx = _drawnImpostorsList[inInstanceIndex];\n  let modelMat = _getInstanceTransform(tfxIdx);\n  \n  let boundingSphere = _drawnInstancesParams.objectBoundingSphere;\n  let r = boundingSphere.w;\n  let viewMat = _uniforms.viewMatrix;\n  let projMat = _uniforms.projMatrix;\n  \n  // See './mathPlayground.test.ts' for test for math on this part\n  // center -> view, then move corners in view space by radius, then project\n  let center = viewMat * modelMat * vec4f(boundingSphere.xyz, 1.);\n  let cornerVS = vec4f(center.xy + r * quadOffset, center.z, 1.);\n  // TODO modify .z to bring closer/FURTHER in view space? Further means occ. cull will be more conservative\n\n  result.position = projMat * cornerVS;\n  result.positionWS = modelMat * vec4f(boundingSphere.xyz, 1.); // TODO [IGNORE] viewMatInv * cornerVS; would be better\n  result.uv = (quadOffset.xy + 1.0) / 2.0;\n  result.uv.y = 1.0 - result.uv.y;\n  result.tfxIdx = tfxIdx;\n\n  // calculate 2d angle (ignore Y-axis) between camera-to-object and where model is facing\n  // used to calculate which impostor image to use\n  let cameraPos = _uniforms.cameraPosition.xyz;\n  let centerWS = (modelMat * vec4f(boundingSphere.xyz, 1.)).xyz;\n  var camera2ModelDir: vec3f = cameraPos - centerWS;\n  // var camera2ModelDir: vec3f = cameraPos; // mock\n  var objectFrontDir: vec3f = (modelMat * vec4f(0., 0., 1., 0.)).xyz;\n  // let objectFrontDir = vec3f(0., 0., 1.0); // mock\n  result.facingAngleDgr = angleDgr_axisXZ(objectFrontDir, camera2ModelDir);\n\n  return result;\n}\n\n/** https://math.stackexchange.com/questions/878785/how-to-find-an-angle-in-range0-360-between-2-vectors\n * \n * Consult 'src\\passes\\naniteBillboard\\mathPlayground.test.ts' before making any changes!\n */\nfn angleDgr_axisXZ(vecA: vec3f, vecB: vec3f) -> f32 {\n  let vecAn = normalize(vec2f(vecA.x, vecA.z));\n  let vecBn = normalize(vec2f(vecB.x, vecB.z));\n  let dot = vecAn.x * vecBn.x + vecAn.y * vecBn.y;\n  let det = vecAn.x * vecBn.y - vecAn.y * vecBn.x;\n  var dgr = degrees(atan2(det, dot));\n\n  while (dgr < 0.0) { dgr += 360.0; }\n  return dgr;\n}\n\n\nconst IMPOSTOR_COUNT: u32 = ${CONFIG.impostors.views};\nconst IMPOSTOR_COUNT_INV: f32 = 1.0 / f32(${CONFIG.impostors.views});\n\n\nstruct ImpostorSample {\n  diffuse: vec4f,\n  normal: vec3f,\n};\n\n@fragment\nfn main_fs(\n  fragIn: VertexOutput\n) -> @location(0) vec4<f32> {\n  let modelMat = _getInstanceTransform(fragIn.tfxIdx);\n  let delta = 360.0 * IMPOSTOR_COUNT_INV; // 30dgr\n  let shownImageF32 = fragIn.facingAngleDgr / delta;\n\n  // do blend between 2 consecutive billboard images. Not amazing, but..\n  let shownImage0 = u32(floor(shownImageF32));\n  let shownImage1 = u32(ceil(shownImageF32)); // to hipster to +1\n  let impostor0 = impostorSample(modelMat, shownImage0, fragIn.uv);\n  let impostor1 = impostorSample(modelMat, shownImage1, fragIn.uv);\n\n  // mix factor between both images\n  let ditherStr = getBillboardDitheringStrength(_uniforms.flags);\n  let dither = getDitherForPixel(vec2u(fragIn.position.xy)) - 0.5; // range: [-0.5 .. 0.5]\n  let modStr = saturate(mix(fract(shownImageF32), dither, ditherStr));\n\n  let shadingMode = getShadingMode(_uniforms.flags);\n  var color: vec4f;\n\n  if (shadingMode == ${SHADING_MODE_NORMALS}u) {\n    // ignores impostor1, but it's just a debug mode so..\n    color = vec4f(abs(impostor0.normal), impostor0.diffuse.a);\n    \n  } else if (shadingMode == ${SHADING_MODE_HW_SW_IMPOSTOR}u) {\n    color = vec4f(0., 0., 1., impostor0.diffuse.a);\n\n  } else {\n    // shading\n    var material: Material;\n    createDefaultMaterial(&material, fragIn.positionWS);\n    var lights = array<Light, LIGHT_COUNT>();\n    fillLightsData(&lights);\n\n    // impostor 0\n    material.normal = impostor0.normal;\n    material.albedo = impostor0.diffuse.rgb;\n    let c0 = doShading(material, AMBIENT_LIGHT, lights);\n    // impostor 1\n    material.normal = impostor1.normal;\n    material.albedo = impostor1.diffuse.rgb;\n    let c1 = doShading(material, AMBIENT_LIGHT, lights);\n\n    // mix\n    let a = mix(impostor0.diffuse.a, impostor1.diffuse.a, modStr);\n    color = vec4f(mix(c0, c1, modStr), a);\n  }\n\n  if (color.a < 0.5) { discard; }\n  return vec4(color.xyz, 1.0);\n}\n\n\nfn impostorSample(modelMat: mat4x4f, idx: u32, uv: vec2f) -> ImpostorSample {\n  // e.g. for idx=4 and uv.x=0.7 turn into 4.7 and then divide by IMPOSTOR_COUNT\n  let uvX = (f32(idx % IMPOSTOR_COUNT) + uv.x) * IMPOSTOR_COUNT_INV;\n  let texValues = textureSample(_diffuseTexture, _sampler, vec2f(uvX, uv.y));\n\n  var result: ImpostorSample;\n  result.diffuse = unpackColor8888(texValues.r);\n  result.normal = transformNormalToWorldSpace(modelMat, unpackNormal(texValues.g));\n  return result;\n}\n`;\n", "import { NaniteObject } from '../../scene/naniteObject.ts';\nimport {\n  BindingsCache,\n  assignResourcesToBindings2,\n  getClearColorVec3,\n  labelPipeline,\n  labelShader,\n  useColorAttachment,\n  useDepthStencilAttachment,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { DEPTH_FORMAT } from '../../constants.ts';\nimport { SHADER_CODE, SHADER_PARAMS } from './naniteBillboard.wgsl.ts';\n\n/** Render impostor billboards */\nexport class NaniteBillboardPass {\n  public static NAME: string = 'NaniteBillboardPass';\n\n  private readonly pipeline: GPURenderPipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(device: GPUDevice, outTextureFormat: GPUTextureFormat) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(NaniteBillboardPass),\n      code: SHADER_CODE(),\n    });\n\n    this.pipeline = device.createRenderPipeline({\n      label: labelPipeline(NaniteBillboardPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: {\n        cullMode: 'none',\n        topology: 'triangle-list',\n        stripIndexFormat: undefined,\n      },\n      depthStencil: {\n        depthWriteEnabled: true,\n        depthCompare: 'less',\n        format: DEPTH_FORMAT,\n      },\n    });\n  }\n\n  cmdRenderBillboards(\n    ctx: PassCtx,\n    naniteObject: NaniteObject,\n    loadOp: GPULoadOp\n  ) {\n    const { cmdBuf, profiler, depthTexture, hdrRenderTexture } = ctx;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const renderPass = cmdBuf.beginRenderPass({\n      label: NaniteBillboardPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3(), loadOp),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture, loadOp),\n      timestampWrites: profiler?.createScopeGpu(NaniteBillboardPass.NAME),\n    });\n    const bindings = this.bindingsCache.getBindings(naniteObject.name, () =>\n      this.createBindings(ctx, naniteObject)\n    );\n\n    // set render pass data\n    renderPass.setPipeline(this.pipeline);\n    renderPass.setBindGroup(0, bindings);\n\n    // draw\n    renderPass.drawIndirect(naniteObject.buffers.drawnImpostorsBuffer, 0);\n\n    // fin\n    renderPass.end();\n  }\n\n  private createBindings = (\n    { device, globalUniforms, scene }: PassCtx,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n    const buffers = naniteObject.buffers;\n\n    return assignResourcesToBindings2(\n      NaniteBillboardPass,\n      naniteObject.name,\n      device,\n      this.pipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        naniteObject.bindInstanceTransforms(b.instancesTransforms),\n        buffers.bindDrawnInstancesParams(b.wholeObjectCullData),\n        buffers.bindDrawnImpostorsList(b.billboardsIdsResult),\n        naniteObject.impostor.bind(b.impostorTexture),\n        // needs nearest as we will also sample packed normals\n        { binding: b.sampler, resource: scene.samplerNearest },\n      ]\n    );\n  };\n}\n", "/**\n * https://knarkowicz.wordpress.com/2016/01/06/aces-filmic-tone-mapping-curve/\n */\nexport const SNIPPET_ACES = /* wgsl */ `\n\nfn doACES_Tonemapping(x: vec3f) -> vec3f {\n  let a = 2.51;\n  let b = 0.03;\n  let c = 2.43;\n  let d = 0.59;\n  let e = 0.14;\n  return saturate((x*(a*x+b)) / (x*(c*x+d)+e));\n}\n`;\n", "import { SHADING_MODE_PBR } from '../../constants.ts';\nimport { SNIPPET_ACES } from '../_shaderSnippets/aces.wgsl.ts';\nimport { SNIPPET_DITHER } from '../_shaderSnippets/dither.wgsl.ts';\nimport { FULLSCREEN_TRIANGLE_POSITION } from '../_shaderSnippets/fullscreenTriangle.wgsl.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n    textureSrc: 1,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${FULLSCREEN_TRIANGLE_POSITION}\n${SNIPPET_DITHER}\n${SNIPPET_ACES}\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n\n@group(0) @binding(${b.textureSrc})\nvar _textureSrc: texture_2d<f32>;\n\n\n@vertex\nfn main_vs(\n  @builtin(vertex_index) VertexIndex : u32\n) -> @builtin(position) vec4f {\n  return getFullscreenTrianglePosition(VertexIndex);\n}\n\nfn doGamma (color: vec3f, gammaValue: f32) -> vec3f {\n  return pow(color, vec3f(1.0 / gammaValue));\n}\n\n@fragment\nfn main_fs(\n  @builtin(position) positionPxF32: vec4<f32>\n) -> @location(0) vec4<f32> {\n  let fragPositionPx = vec2u(positionPxF32.xy);\n  var color = textureLoad(_textureSrc, fragPositionPx, 0).rgb;\n  \n  let shadingMode = getShadingMode(_uniforms.flags);\n  if (shadingMode == ${SHADING_MODE_PBR}u) {\n    let gamma = _uniforms.colorMgmt.x;\n    let exposure = _uniforms.colorMgmt.y;\n    let ditherStr = _uniforms.colorMgmt.z;\n  \n    color = ditherColor(fragPositionPx, color, ditherStr);\n    color = color * exposure;\n    color = saturate(doACES_Tonemapping(color));\n    color = doGamma(color, gamma);\n  }\n\n  return vec4(color.xyz, 1.0);\n}\n\n`;\n", "import { assertIsGPUTextureView } from '../../utils/webgpu.ts';\nimport {\n  labelShader,\n  labelPipeline,\n  assignResourcesToBindings2,\n  BindingsCache,\n  getClearColorVec3,\n  useColorAttachment,\n} from '../_shared.ts';\nimport { SHADER_PARAMS, SHADER_CODE } from './presentPass.wgsl.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { cmdDrawFullscreenTriangle } from '../_shaderSnippets/fullscreenTriangle.wgsl.ts';\n\nexport class PresentPass {\n  public static NAME: string = 'PresentPass';\n\n  private readonly renderPipeline: GPURenderPipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(device: GPUDevice, outTextureFormat: GPUTextureFormat) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(PresentPass),\n      code: SHADER_CODE(),\n    });\n\n    this.renderPipeline = device.createRenderPipeline({\n      label: labelPipeline(PresentPass),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: outTextureFormat }],\n      },\n      primitive: { topology: 'triangle-list' },\n    });\n  }\n\n  onViewportResize = () => this.bindingsCache.clear();\n\n  cmdDraw(ctx: PassCtx, screenTexture: GPUTextureView) {\n    const { cmdBuf, profiler, depthTexture } = ctx;\n    assertIsGPUTextureView(screenTexture);\n\n    const renderPass = cmdBuf.beginRenderPass({\n      label: PresentPass.NAME,\n      colorAttachments: [\n        // TBH no need for clear as we override every pixel\n        useColorAttachment(screenTexture, getClearColorVec3()),\n      ],\n      timestampWrites: profiler?.createScopeGpu(PresentPass.NAME),\n    });\n\n    const bindings = this.bindingsCache.getBindings(depthTexture.label, () =>\n      this.createBindings(ctx)\n    );\n    renderPass.setBindGroup(0, bindings);\n    renderPass.setPipeline(this.renderPipeline);\n    cmdDrawFullscreenTriangle(renderPass);\n    renderPass.end();\n  }\n\n  private createBindings = ({\n    device,\n    globalUniforms,\n    hdrRenderTexture,\n  }: PassCtx): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n\n    return assignResourcesToBindings2(\n      PresentPass,\n      '000',\n      device,\n      this.renderPipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        { binding: b.textureSrc, resource: hdrRenderTexture },\n      ]\n    );\n  };\n}\n", "import { BYTES_U32 } from '../../constants.ts';\nimport { NaniteObject } from '../../scene/naniteObject.ts';\nimport { Dimensions } from '../../utils/index.ts';\nimport {\n  labelShader,\n  labelPipeline,\n  assignResourcesToBindings2,\n  BindingsCache,\n} from '../_shared.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { SHADER_CODE, SHADER_PARAMS } from './rasterizeSwPass.wgsl.ts';\n\nexport class RasterizeSwPass {\n  public static NAME: string = 'RasterizeSwPass';\n\n  private readonly pipeline: GPUComputePipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  /** result framebuffer as flat buffer */\n  public resultBuffer: GPUBuffer = undefined!; // see this.handleViewportResize()\n\n  constructor(device: GPUDevice) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(RasterizeSwPass),\n      code: SHADER_CODE(),\n    });\n    this.pipeline = device.createComputePipeline({\n      label: labelPipeline(RasterizeSwPass),\n      layout: 'auto',\n      compute: {\n        module: shaderModule,\n        entryPoint: 'main',\n      },\n    });\n  }\n\n  /** Clears to 0. We cannot select a number */\n  clearFramebuffer(ctx: PassCtx) {\n    ctx.cmdBuf.clearBuffer(this.resultBuffer, 0, this.resultBuffer.size);\n  }\n\n  onViewportResize = (device: GPUDevice, viewportSize: Dimensions) => {\n    this.bindingsCache.clear();\n\n    if (this.resultBuffer) {\n      this.resultBuffer.destroy();\n    }\n\n    this.resultBuffer = device.createBuffer({\n      label: `rasterize-sw`,\n      size: BYTES_U32 * viewportSize.width * viewportSize.height,\n      usage:\n        GPUBufferUsage.STORAGE |\n        GPUBufferUsage.INDIRECT |\n        GPUBufferUsage.COPY_DST |\n        GPUBufferUsage.COPY_SRC, // for stats, debug etc.\n    });\n  };\n\n  cmdSoftwareRasterize(ctx: PassCtx, naniteObject: NaniteObject) {\n    const { cmdBuf, profiler } = ctx;\n\n    // no need to clear previous values, as we override every pixel\n    const computePass = cmdBuf.beginComputePass({\n      label: RasterizeSwPass.NAME,\n      timestampWrites: profiler?.createScopeGpu(RasterizeSwPass.NAME),\n    });\n\n    const bindings = this.bindingsCache.getBindings(naniteObject.name, () =>\n      this.createBindings(ctx, this.resultBuffer, naniteObject)\n    );\n    computePass.setPipeline(this.pipeline);\n    computePass.setBindGroup(0, bindings);\n\n    // dispatch\n    naniteObject.buffers.cmdDrawMeshletsSoftwareIndirect(computePass);\n\n    computePass.end();\n  }\n\n  private createBindings = (\n    { device, globalUniforms }: PassCtx,\n    resultBuffer: GPUBuffer,\n    naniteObject: NaniteObject\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n    const buffers = naniteObject.buffers;\n\n    return assignResourcesToBindings2(\n      RasterizeSwPass,\n      naniteObject.name,\n      device,\n      this.pipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        { binding: b.resultBuffer, resource: { buffer: resultBuffer } },\n        buffers.bindVertexPositions(b.vertexPositions),\n        buffers.bindVertexNormals(b.vertexNormals),\n        buffers.bindIndexBuffer(b.indexBuffer),\n        buffers.bindMeshletData(b.meshletsData),\n        buffers.bindDrawnMeshletsList(b.drawnMeshletIds),\n        buffers.bindDrawnMeshletsSwParams(b.drawnMeshletParams),\n        naniteObject.bindInstanceTransforms(b.instancesTransforms),\n      ]\n    );\n  };\n}\n", "import { FULLSCREEN_TRIANGLE_POSITION } from '../_shaderSnippets/fullscreenTriangle.wgsl.ts';\nimport { BUFFER_SOFTWARE_RASTERIZER_RESULT } from '../rasterizeSw/rasterizeSwPass.wgsl.ts';\nimport * as SHADER_SNIPPETS from '../_shaderSnippets/shaderSnippets.wgls.ts';\nimport { RenderUniformsBuffer } from '../renderUniformsBuffer.ts';\nimport { SNIPPET_SHADING_PBR } from '../_shaderSnippets/pbr.wgsl.ts';\nimport { SNIPPET_SHADING } from '../_shaderSnippets/shading.wgsl.ts';\nimport {\n  SHADING_MODE_HW_SW_IMPOSTOR,\n  SHADING_MODE_NORMALS,\n} from '../../constants.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n    softwareRasterizerResult: 1,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n/// I wish I could use compute pass, but WGSL has.. problems\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n${FULLSCREEN_TRIANGLE_POSITION}\n${SHADER_SNIPPETS.NORMALS_UTILS}\n${SHADER_SNIPPETS.FS_NORMAL_FROM_DERIVATIVES}\n${SNIPPET_SHADING_PBR}\n${SNIPPET_SHADING}\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n${BUFFER_SOFTWARE_RASTERIZER_RESULT(b.softwareRasterizerResult, 'read')}\n\n\n@vertex\nfn main_vs(\n  @builtin(vertex_index) VertexIndex : u32\n) -> @builtin(position) vec4f {\n  return getFullscreenTrianglePosition(VertexIndex);\n}\n\nstruct FragmentOutput {\n  @builtin(frag_depth) fragDepth: f32,\n  @location(0) color: vec4<f32>,\n};\n\n@fragment\nfn main_fs(\n  @builtin(position) positionPxF32: vec4<f32>\n) -> FragmentOutput {\n  var result: FragmentOutput;\n\n  let fragPositionPx = vec2u(positionPxF32.xy);\n  // var colorHw = textureLoad(_textureHDR, fragPositionPx, 0).rgb;\n  // var color = vec4f(0., 0., 0., 0.,);\n\n  // sample software rasterizer\n  let viewportSize: vec2f = _uniforms.viewport.xy;\n  // let yInv = viewportSize.y - positionPxF32.y;\n  let swRasterizerIdx: u32 = u32(positionPxF32.y) * u32(viewportSize.x) + u32(positionPxF32.x);\n  let swRasterizerResU32: u32 = _softwareRasterizerResult[swRasterizerIdx];\n  // let swRasterizerRes: vec4f = unpack4x8unorm(swRasterizerResU32);\n\n  if (swRasterizerResU32 == 0u){\n    // no pixel for software rasterizer, do not override.\n    // 0 is the value we cleared the buffer to, so any write with atomicMax()\n    // would affect the result. And it's not possible to try to write 0\n    // given what software rasterizer stores. E.g. if depth bits were\n    // 0, then the point would be on near plane, which is no AS terrible to cull.\n    // Oct. encoded normal would also have to be 0, and there would have to be\n    // no pixels directly behind that one (cause atomicMax would used them instead).\n    discard;\n  }\n\n  // color = vec4f(swRasterizerRes.rgb, 1.0);\n  \n  // decode depth\n  let swRasterDepth: u32 = swRasterizerResU32 >> 16;\n  let swRasterDepthF32: f32 = 1.0 - f32(swRasterDepth) / 65535.0;\n  // Not writing depth here would REALLY screws us in next frame occlusion culling\n  result.fragDepth = swRasterDepthF32; // this pass has depth test ON!\n  // result.color = vec4f(swRasterDepthF32, swRasterDepthF32, swRasterDepthF32, 1.0); // dbg\n\n  // decode normal\n  let nx = f32((swRasterizerResU32 >> 8) & 0xff) / 255.0; // [0, 1]\n  let ny = f32(swRasterizerResU32 & 0xff) / 255.0; // [0, 1]\n  // let nUnpacked: vec3f = vec3f(vec2f(nx, ny) * 2.0 - 1.0, 0.0); // [-1 .. 1] // VERSION 0: NO OCT. ENCODED, XY ONLY\n  let nUnpacked: vec3f = normalize(decodeOctahedronNormal(vec2f(nx, ny)));\n\n  let shadingMode = getShadingMode(_uniforms.flags);\n  \n  if (shadingMode == ${SHADING_MODE_NORMALS}u) {\n    result.color = vec4f(abs(nUnpacked.xyz), 1.0);\n    // result.color = vec4f(nUnpacked.xyz, 1.0);\n    // result.color = vec4f(-nUnpacked.xyz, 1.0);\n   \n  } else if (shadingMode == ${SHADING_MODE_HW_SW_IMPOSTOR}u) {\n    result.color = vec4f(0., 1., 0., 1.);\n\n  } else {\n    // material\n    var material: Material;\n    let positionProj = vec4(\n      (positionPxF32.x / viewportSize.x) * 2.0 - 1.0, // [-1, 1]\n      (positionPxF32.y / viewportSize.y) * 2.0 - 1.0, // [-1, 1]\n      swRasterDepthF32,\n      1.0\n    );\n    var positionWs = _uniforms.vpMatrixInv * positionProj;\n    positionWs = positionWs / positionWs.w;\n    createDefaultMaterial(&material, positionWs);\n    material.normal = nUnpacked;\n    material.roughness = 0.0;\n\n    // shading\n    var lights = array<Light, LIGHT_COUNT>();\n    fillLightsData(&lights);\n    result.color = vec4f(doShading(material, AMBIENT_LIGHT, lights), 1.0);\n  }\n\n  return result;\n}\n\n`;\n", "import { assertIsGPUTextureView } from '../../utils/webgpu.ts';\nimport {\n  labelShader,\n  labelPipeline,\n  assignResourcesToBindings2,\n  BindingsCache,\n  useColorAttachment,\n  getClearColorVec3,\n  PIPELINE_DEPTH_STENCIL_ON,\n  useDepthStencilAttachment,\n} from '../_shared.ts';\nimport { SHADER_PARAMS, SHADER_CODE } from './rasterizeCombine.wgsl.ts';\nimport { PassCtx } from '../passCtx.ts';\nimport { cmdDrawFullscreenTriangle } from '../_shaderSnippets/fullscreenTriangle.wgsl.ts';\n\nexport class RasterizeCombine {\n  public static NAME: string = 'RasterizeCombine';\n\n  private readonly pipeline: GPURenderPipeline;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(device: GPUDevice, outTextureFormat: GPUTextureFormat) {\n    const shaderModule = device.createShaderModule({\n      label: labelShader(RasterizeCombine),\n      code: SHADER_CODE(),\n    });\n\n    this.pipeline = device.createRenderPipeline({\n      label: labelPipeline(RasterizeCombine),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [\n          {\n            format: outTextureFormat,\n            blend: {\n              // color is based on the alpha from the shader's output.\n              // So we can decide in code. But it also has a discard() there.\n              color: {\n                srcFactor: 'src-alpha',\n                dstFactor: 'one-minus-src-alpha',\n                operation: 'add',\n              },\n              alpha: {\n                srcFactor: 'one',\n                dstFactor: 'one',\n                operation: 'add',\n              },\n            },\n          },\n        ],\n      },\n      primitive: { topology: 'triangle-list' },\n      depthStencil: PIPELINE_DEPTH_STENCIL_ON,\n    });\n  }\n\n  onViewportResize = () => this.bindingsCache.clear();\n\n  cmdCombineRasterResults(ctx: PassCtx) {\n    const {\n      cmdBuf,\n      profiler,\n      hdrRenderTexture,\n      rasterizerSwResult,\n      depthTexture,\n    } = ctx;\n    assertIsGPUTextureView(hdrRenderTexture);\n\n    const renderPass = cmdBuf.beginRenderPass({\n      label: RasterizeCombine.NAME,\n      colorAttachments: [\n        // do not clear!\n        useColorAttachment(hdrRenderTexture, getClearColorVec3(), 'load'),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture, 'load'),\n      timestampWrites: profiler?.createScopeGpu(RasterizeCombine.NAME),\n    });\n\n    const bindings = this.bindingsCache.getBindings(depthTexture.label, () =>\n      this.createBindings(ctx, rasterizerSwResult)\n    );\n    renderPass.setBindGroup(0, bindings);\n    renderPass.setPipeline(this.pipeline);\n    cmdDrawFullscreenTriangle(renderPass);\n    renderPass.end();\n  }\n\n  private createBindings = (\n    { device, globalUniforms }: PassCtx,\n    rasterizerSwResult: GPUBuffer\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n\n    return assignResourcesToBindings2(\n      RasterizeCombine,\n      RasterizeCombine.NAME,\n      device,\n      this.pipeline,\n      [\n        globalUniforms.createBindingDesc(b.renderUniforms),\n        {\n          binding: b.softwareRasterizerResult,\n          resource: { buffer: rasterizerSwResult },\n        },\n      ]\n    );\n  };\n}\n", "import { vec4 } from 'wgpu-matrix';\nimport { boundsCalculator } from '../utils/calcBounds.ts';\nimport {\n  BindingsCache,\n  PIPELINE_DEPTH_STENCIL_ON,\n  assignResourcesToBindings2,\n  getClearColorVec3,\n  useColorAttachment,\n  useDepthStencilAttachment,\n} from './_shared.ts';\nimport { PassCtx } from './passCtx.ts';\nimport { RenderUniformsBuffer } from './renderUniformsBuffer.ts';\nimport { projectPoint } from '../utils/index.ts';\nimport { CAMERA_CFG } from '../constants.ts';\n\n/** Software rasterizer depth has the whole 16-bit hack.\n * TBH the fix based on blend is better, but this can also help.\n */\nconst SOFTW_RASTER_DEPTH_16BIT_FIX =\n  ((CAMERA_CFG.far - CAMERA_CFG.near) / 0xffff) * 100.0;\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    renderUniforms: 0,\n  },\n};\nconst b = SHADER_PARAMS.bindings;\n\nconst SHADER_CODE = (\n  offset: string,\n  span: string,\n  floorHeight: string\n) => /* wgsl */ `\n\n${RenderUniformsBuffer.SHADER_SNIPPET(b.renderUniforms)}\n\nconst H = ${floorHeight};\nconst OFFSET = ${offset};\nconst SPAN = ${span};\n\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) positionWS: vec4f,\n};\n\n@vertex\nfn main_vs(\n  @builtin(vertex_index) in_vertex_index : u32\n) -> VertexOutput {\n  let offset0 = vec2f(\n    f32(i32(in_vertex_index / 2u )), // [-1, -1, 0, 0]\n    f32(i32(in_vertex_index & 1u)) // [-1, 1, -1, 1, ...]\n  );\n  \n  let height = H - ${SOFTW_RASTER_DEPTH_16BIT_FIX};\n  let offset = offset0 * SPAN + OFFSET;\n  var pos = vec4<f32>(offset.x, height, offset.y, 1.);\n  \n  var result: VertexOutput;\n  result.position = _uniforms.vpMatrix * pos;\n  result.positionWS = pos;\n  return result;\n}\n\nconst C0: f32 = 0.15;\nconst C1: f32 = 0.3;\nconst BLUE  = vec3f(0.,   121., 255.) / 255.;\nconst RED   = vec3f(255., 0.,     0.) / 255.;\nconst GREEN = vec3f(143., 204.,  18.) / 255.;\nconst SATURATION = 0.6;\n\n@fragment\nfn main_fs(fragIn: VertexOutput) -> @location(0) vec4f {\n  let offsetFrom0 = SPAN + OFFSET;\n  let posFromStart = fragIn.positionWS.xz - offsetFrom0;\n\n  /*\n  let patternMask = fract((floor(posFromStart.y) + floor(posFromStart.x)) / 2.0);\n  let col0 = vec4f(C0, C0, C0, 1.0);\n  let col1 = vec4f(C1, C1, C1, 1.0);\n  return select(col0, col1, patternMask > 0.0);*/\n  \n  let mm = fract(floor(posFromStart) / 2.0);\n  var color = vec3f(0.8);\n  if(mm.x > 0.0 && mm.y > 0.0) { color = BLUE; }\n  if(mm.x > 0.0 && mm.y == 0.0) { color = RED; }\n  if(mm.x == 0.0 && mm.y > 0.0) { color = GREEN; }\n  return vec4f(color * SATURATION, 1.0);\n}\n`;\n\nexport class DrawGroundPass {\n  public static NAME: string = 'DrawGroundPass';\n\n  private pipeline: GPURenderPipeline | undefined;\n  private readonly bindingsCache = new BindingsCache();\n\n  constructor(private readonly outTextureFormat: GPUTextureFormat) {}\n\n  private getRenderPipeline(ctx: PassCtx): GPURenderPipeline {\n    if (this.pipeline !== undefined) {\n      return this.pipeline;\n    }\n\n    const { device } = ctx;\n    const [offset, span, floorHeight] = calculateGroundSize(ctx);\n\n    const code = SHADER_CODE(offset, span, floorHeight);\n    const shaderModule = device.createShaderModule({ code });\n\n    const renderPipeline = device.createRenderPipeline({\n      label: 'ground-render',\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: [],\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [\n          {\n            format: this.outTextureFormat,\n            blend: {\n              // we cleared alpha at the start of the frame to 0.0.\n              // if we drawn ANTHING, then we set it to 1.0.\n              // if we did NOT draw ANYTHING, it's still 0.0\n              color: {\n                srcFactor: 'one-minus-dst-alpha',\n                dstFactor: 'dst-alpha',\n                operation: 'add',\n              },\n              alpha: {\n                srcFactor: 'one',\n                dstFactor: 'one',\n                operation: 'add',\n              },\n            },\n          },\n        ],\n      },\n      primitive: {\n        cullMode: 'back', // do not switch this off!\n        topology: 'triangle-strip',\n        stripIndexFormat: undefined,\n      },\n      depthStencil: PIPELINE_DEPTH_STENCIL_ON,\n    });\n\n    this.pipeline = renderPipeline;\n    return renderPipeline;\n  }\n\n  cmdDrawGround(ctx: PassCtx, loadOp: GPULoadOp) {\n    const { cmdBuf, profiler, depthTexture, hdrRenderTexture } = ctx;\n\n    const renderPass = cmdBuf.beginRenderPass({\n      label: DrawGroundPass.NAME,\n      colorAttachments: [\n        useColorAttachment(hdrRenderTexture, getClearColorVec3(), loadOp),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(depthTexture, loadOp),\n      timestampWrites: profiler?.createScopeGpu(DrawGroundPass.NAME),\n    });\n\n    const pipeline = this.getRenderPipeline(ctx);\n\n    const bindings = this.bindingsCache.getBindings(DrawGroundPass.NAME, () =>\n      this.createBindings(ctx, pipeline)\n    );\n\n    // set render pass data\n    renderPass.setPipeline(pipeline);\n    renderPass.setBindGroup(0, bindings);\n    renderPass.draw(4, 1, 0, 0);\n    renderPass.end();\n  }\n\n  private createBindings = (\n    { device, globalUniforms }: PassCtx,\n    pipeline: GPURenderPipeline\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n\n    return assignResourcesToBindings2(DrawGroundPass, '', device, pipeline, [\n      globalUniforms.createBindingDesc(b.renderUniforms),\n    ]);\n  };\n}\n\nfunction calculateGroundSize({ scene }: PassCtx) {\n  const [bounds, addPoint] = boundsCalculator();\n  const tmp = vec4.create();\n\n  scene.naniteObjects.forEach((o) => {\n    const bBox = o.bounds.box;\n    o.instances.transforms.forEach((tfxMat) => {\n      addPoint(projectPoint(tfxMat, bBox[0], tmp));\n      addPoint(projectPoint(tfxMat, bBox[1], tmp));\n    });\n  });\n\n  const offset = `vec2f(${bounds[0][0]}, ${bounds[0][2]})`;\n  const spanXZ = [bounds[1][0] - bounds[0][0], bounds[1][2] - bounds[0][2]];\n  const span = `vec2f(${spanXZ[0]}, ${spanXZ[1]})`;\n  const floorHeight = `f32(${bounds[0][1]})`;\n  // console.log({ floorHeight, bounds, offset, spanXZ });\n  return [offset, span, floorHeight];\n}\n", "import { Mat4, mat4 } from 'wgpu-matrix';\nimport { RenderUniformsBuffer } from './passes/renderUniformsBuffer.ts';\nimport {\n  Dimensions,\n  createCameraProjectionMat,\n  debounce,\n  getViewProjectionMatrix,\n} from './utils/index.ts';\nimport Input from './sys_web/input.ts';\nimport {\n  CONFIG,\n  DEPTH_FORMAT,\n  HDR_RENDER_TEX_FORMAT,\n  isSoftwareRasterizerEnabled,\n} from './constants.ts';\nimport { DrawNanitesPass } from './passes/naniteCpu/drawNanitesPass.ts';\nimport { Camera } from './camera.ts';\nimport { PassCtx } from './passes/passCtx.ts';\nimport { DbgMeshoptimizerPass } from './passes/debug/dbgMeshoptimizerPass.ts';\nimport { DbgMeshoptimizerMeshletsPass } from './passes/debug/dbgMeshoptimizerMeshletsPass.ts';\nimport { RasterizeHwPass } from './passes/rasterizeHw/rasterizeHwPass.ts';\nimport { CullMeshletsPass } from './passes/cullMeshlets/cullMeshletsPass.ts';\nimport { GpuProfiler } from './gpuProfiler.ts';\nimport { Scene } from './scene/scene.ts';\nimport { Frustum } from './utils/frustum.ts';\nimport { assertIsGPUTextureView } from './utils/webgpu.ts';\nimport { DepthPyramidPass } from './passes/depthPyramid/depthPyramidPass.ts';\nimport { DepthPyramidDebugDrawPass } from './passes/depthPyramid/depthPyramidDebugDrawPass.ts';\nimport { CullInstancesPass } from './passes/cullInstances/cullInstancesPass.ts';\nimport { NaniteBillboardPass } from './passes/naniteBillboard/naniteBillboardPass.ts';\nimport { PresentPass } from './passes/presentPass/presentPass.ts';\nimport { RasterizeSwPass } from './passes/rasterizeSw/rasterizeSwPass.ts';\nimport { RasterizeCombine } from './passes/rasterizeCombine/rasterizeCombine.ts';\nimport { DrawGroundPass } from './passes/drawGroundPass.ts';\n\nexport class Renderer {\n  private readonly renderUniformBuffer: RenderUniformsBuffer;\n  public readonly cameraCtrl: Camera;\n  private readonly cameraFrustum: Frustum = new Frustum();\n  private projectionMat: Mat4;\n  private readonly _viewMatrix = mat4.identity(); // cached to prevent allocs.\n  private readonly viewportSize: Dimensions = { width: 0, height: 0 };\n  private frameIdx = 0;\n\n  // render target textures\n  private depthTexture: GPUTexture = undefined!; // see this.handleViewportResize()\n  private depthTextureView: GPUTextureView = undefined!; // see this.handleViewportResize()\n  private hdrRenderTexture: GPUTexture = undefined!; // see this.handleViewportResize()\n  private hdrRenderTextureView: GPUTextureView = undefined!; // see this.handleViewportResize()\n\n  // passes\n  private readonly drawMeshPass: DrawNanitesPass;\n  private readonly rasterizeHwPass: RasterizeHwPass;\n  private readonly rasterizeSwPass: RasterizeSwPass;\n  private readonly cullMeshletsPass: CullMeshletsPass;\n  private readonly cullInstancesPass: CullInstancesPass;\n  private readonly naniteBillboardPass: NaniteBillboardPass;\n  private readonly rasterizeCombine: RasterizeCombine;\n  private readonly drawGroundPass: DrawGroundPass;\n  private readonly presentPass: PresentPass;\n  // depth pyramid\n  private readonly depthPyramidPass: DepthPyramidPass;\n  private readonly depthPyramidDebugDrawPass: DepthPyramidDebugDrawPass;\n  // debug\n  private readonly dbgMeshoptimizerPass: DbgMeshoptimizerPass;\n  private readonly dbgMeshoptimizerMeshletsPass: DbgMeshoptimizerMeshletsPass;\n\n  constructor(\n    private readonly device: GPUDevice,\n    viewportSize: Dimensions,\n    preferredCanvasFormat: GPUTextureFormat,\n    private readonly profiler?: GpuProfiler\n  ) {\n    this.renderUniformBuffer = new RenderUniformsBuffer(device);\n\n    this.drawMeshPass = new DrawNanitesPass(device, HDR_RENDER_TEX_FORMAT);\n    this.rasterizeHwPass = new RasterizeHwPass(device, HDR_RENDER_TEX_FORMAT);\n    this.rasterizeSwPass = new RasterizeSwPass(device);\n    this.cullMeshletsPass = new CullMeshletsPass(device);\n    this.cullInstancesPass = new CullInstancesPass(device);\n    this.naniteBillboardPass = new NaniteBillboardPass(\n      device,\n      HDR_RENDER_TEX_FORMAT\n    );\n    this.rasterizeCombine = new RasterizeCombine(device, HDR_RENDER_TEX_FORMAT);\n    this.depthPyramidPass = new DepthPyramidPass(device);\n    this.depthPyramidDebugDrawPass = new DepthPyramidDebugDrawPass(\n      device,\n      HDR_RENDER_TEX_FORMAT\n    );\n    this.drawGroundPass = new DrawGroundPass(HDR_RENDER_TEX_FORMAT);\n    this.presentPass = new PresentPass(device, preferredCanvasFormat);\n\n    // geometry debug passes\n    this.dbgMeshoptimizerPass = new DbgMeshoptimizerPass(\n      device,\n      HDR_RENDER_TEX_FORMAT,\n      this.renderUniformBuffer\n    );\n    this.dbgMeshoptimizerMeshletsPass = new DbgMeshoptimizerMeshletsPass(\n      device,\n      HDR_RENDER_TEX_FORMAT,\n      this.renderUniformBuffer\n    );\n\n    this.cameraCtrl = new Camera();\n    this.projectionMat = createCameraProjectionMat(viewportSize);\n\n    this.handleViewportResize(viewportSize);\n  }\n\n  updateCamera(deltaTime: number, input: Input): Mat4 {\n    this.cameraCtrl.update(deltaTime, input);\n  }\n\n  cmdRender(\n    cmdBuf: GPUCommandEncoder,\n    scene: Scene,\n    screenTexture: GPUTextureView\n  ) {\n    assertIsGPUTextureView(screenTexture);\n\n    const viewMatrix = this.cameraCtrl.viewMatrix;\n    const vpMatrix = getViewProjectionMatrix(\n      viewMatrix,\n      this.projectionMat,\n      this._viewMatrix\n    );\n    this.cameraFrustum.update(vpMatrix);\n    const [_depthPyramidTex, depthPyramidTexView] =\n      this.depthPyramidPass.verifyResultTexture(\n        this.device,\n        this.depthTexture,\n        this.depthTextureView\n      );\n    const ctx: PassCtx = {\n      frameIdx: this.frameIdx,\n      cmdBuf,\n      viewport: this.viewportSize,\n      scene,\n      hdrRenderTexture: this.hdrRenderTextureView,\n      rasterizerSwResult: this.rasterizeSwPass.resultBuffer,\n      softwareRasterizerEnabled: isSoftwareRasterizerEnabled(),\n      device: this.device,\n      profiler: this.profiler,\n      viewMatrix,\n      vpMatrix,\n      projMatrix: this.projectionMat,\n      cameraFrustum: this.cameraFrustum,\n      cameraPositionWorldSpace: this.cameraCtrl.positionWorldSpace,\n      depthTexture: this.depthTextureView,\n      prevFrameDepthPyramidTexture: depthPyramidTexView,\n      globalUniforms: this.renderUniformBuffer,\n      depthPyramidSampler: this.depthPyramidPass.depthSampler,\n    };\n\n    this.renderUniformBuffer.update(ctx);\n\n    if (CONFIG.displayMode === 'dbg-lod') {\n      this.dbgMeshoptimizerPass.draw(ctx);\n    } else if (\n      CONFIG.displayMode === 'dbg-lod-meshlets' ||\n      CONFIG.displayMode === 'dbg-nanite-meshlets'\n    ) {\n      this.dbgMeshoptimizerMeshletsPass.draw(ctx);\n    } else {\n      // draw nanite - calc visibility either CPU or GPU\n      if (CONFIG.nanite.render.naniteDevice === 'gpu') {\n        this.cmdDrawNanite_GPU(ctx);\n      } else {\n        this.cmdDrawNanite_CPU(ctx);\n      }\n    }\n\n    this.presentPass.cmdDraw(ctx, screenTexture);\n\n    this.frameIdx += 1;\n  }\n\n  private cmdDrawNanite_CPU(ctx: PassCtx) {\n    const { naniteObjects } = ctx.scene;\n\n    this.drawMeshPass.initFrameStats();\n\n    // draw objects\n    for (let i = 0; i < naniteObjects.length; i++) {\n      const naniteObject = naniteObjects[i];\n      const loadOp: GPULoadOp = i == 0 ? 'clear' : 'load';\n\n      this.drawMeshPass.draw(ctx, naniteObject, loadOp);\n    }\n\n    // draw ground\n    if (CONFIG.drawGround) {\n      this.drawGroundPass.cmdDrawGround(ctx, 'load');\n    }\n\n    this.drawMeshPass.uploadFrameStats(ctx);\n  }\n\n  private cmdDrawNanite_GPU(ctx: PassCtx) {\n    const { naniteObjects } = ctx.scene;\n    const softwareRasterizeEnabled = ctx.softwareRasterizerEnabled;\n\n    if (softwareRasterizeEnabled) {\n      this.rasterizeSwPass.clearFramebuffer(ctx);\n    }\n\n    // draw objects\n    for (let i = 0; i < naniteObjects.length; i++) {\n      const naniteObject = naniteObjects[i];\n      const loadOp: GPULoadOp = i == 0 ? 'clear' : 'load';\n\n      if (!CONFIG.nanite.render.freezeGPU_Visibilty) {\n        if (CONFIG.cullingInstances.enabled) {\n          this.cullInstancesPass.cmdCullInstances(ctx, naniteObject);\n        }\n        this.cullMeshletsPass.cmdCullMeshlets(ctx, naniteObject);\n      }\n\n      // draw: hardware\n      this.rasterizeHwPass.cmdHardwareRasterize(ctx, naniteObject, loadOp);\n\n      // draw: software\n      if (softwareRasterizeEnabled) {\n        this.rasterizeSwPass.cmdSoftwareRasterize(ctx, naniteObject);\n      }\n\n      // draw: impostors\n      if (CONFIG.cullingInstances.enabled) {\n        this.naniteBillboardPass.cmdRenderBillboards(ctx, naniteObject, 'load');\n      }\n    }\n\n    // combine hardware + software rasterizer results\n    if (softwareRasterizeEnabled) {\n      this.rasterizeCombine.cmdCombineRasterResults(ctx);\n    }\n\n    // draw ground\n    if (CONFIG.drawGround) {\n      this.drawGroundPass.cmdDrawGround(ctx, 'load');\n    }\n\n    // depth pyramid\n    const pyramidOk = this.depthPyramidPass.cmdCreateDepthPyramid(\n      ctx,\n      this.depthTexture,\n      this.depthTextureView\n    );\n    CONFIG.nanite.render.hasValidDepthPyramid = pyramidOk;\n\n    if (CONFIG.displayMode === 'dbg-depth-pyramid') {\n      this.depthPyramidDebugDrawPass.cmdDraw(ctx);\n    }\n  }\n\n  private handleViewportResize = (viewportSize: Dimensions) => {\n    console.log(`Viewport resize`, viewportSize);\n    CONFIG.nanite.render.hasValidDepthPyramid = false;\n\n    this.viewportSize.width = viewportSize.width;\n    this.viewportSize.height = viewportSize.height;\n\n    this.projectionMat = createCameraProjectionMat(viewportSize);\n\n    if (this.depthTexture) {\n      this.depthTexture.destroy();\n    }\n    if (this.hdrRenderTexture) {\n      this.hdrRenderTexture.destroy();\n    }\n\n    const vpStr = `${viewportSize.width}x${viewportSize.height}`;\n\n    this.hdrRenderTexture = this.device.createTexture({\n      label: `hdr-texture-${vpStr}`,\n      size: [viewportSize.width, viewportSize.height],\n      format: HDR_RENDER_TEX_FORMAT,\n      usage:\n        GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n    });\n    this.hdrRenderTextureView = this.hdrRenderTexture.createView();\n\n    this.depthTexture = this.device.createTexture({\n      label: `depth-texture-${vpStr}`,\n      size: [viewportSize.width, viewportSize.height],\n      format: DEPTH_FORMAT,\n      usage:\n        GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n    });\n    this.depthTextureView = this.depthTexture.createView();\n\n    // reset bindings that used texture\n    this.depthPyramidDebugDrawPass.onViewportResize();\n    this.cullMeshletsPass.onViewportResize();\n    this.cullInstancesPass.onViewportResize();\n    this.rasterizeSwPass.onViewportResize(this.device, viewportSize);\n    this.depthPyramidPass.verifyResultTexture(\n      this.device,\n      this.depthTexture,\n      this.depthTextureView,\n      true\n    );\n    this.rasterizeCombine.onViewportResize();\n    this.presentPass.onViewportResize();\n  };\n\n  onCanvasResize = debounce(this.handleViewportResize, 500);\n}\n", "import { Dimensions } from '../utils/index.ts';\n\nexport type ResizeHandler = (viewportSize: Dimensions) => void;\n\nexport function initCanvasResizeSystem(\n  canvas: HTMLCanvasElement,\n  canvasContext: CanvasRenderingContext2D\n) {\n  const sizeNow = getViewportSize();\n  canvas.width = sizeNow.width;\n  canvas.height = sizeNow.height;\n  console.log('Init canvas size:', sizeNow);\n\n  const listeners: ResizeHandler[] = [];\n  const addListener = (f: ResizeHandler) => listeners.push(f);\n\n  // Has nothing to do with resize actually.\n  const getScreenTextureView = (): GPUTextureView =>\n    canvasContext.getCurrentTexture().createView();\n\n  return {\n    revalidateCanvasSize,\n    addListener,\n    getViewportSize,\n    getScreenTextureView,\n  };\n\n  function revalidateCanvasSize() {\n    const sizeNow = getViewportSize();\n    const hasChanged =\n      sizeNow.width !== canvas.width || sizeNow.height !== canvas.height;\n\n    if (hasChanged && sizeNow.width && sizeNow.height) {\n      applyResize(sizeNow);\n    }\n  }\n\n  function applyResize(d: Dimensions) {\n    // console.log('Canvas resize:', d);\n    canvas.width = d.width;\n    canvas.height = d.height;\n    listeners.forEach((l) => l(d));\n  }\n\n  function getViewportSize(): Dimensions {\n    // deno-lint-ignore no-explicit-any\n    const devicePixelRatio = (window as any).devicePixelRatio || 1;\n    return {\n      width: canvas.clientWidth * devicePixelRatio,\n      height: canvas.clientHeight * devicePixelRatio,\n    };\n  }\n}\n", "type ErrorCb = (msg: string) => never;\n\nexport function createErrorSystem(device: GPUDevice) {\n  const ERROR_SCOPES: GPUErrorFilter[] = [\n    'internal',\n    'out-of-memory',\n    'validation',\n  ];\n  const ERROR_SCOPES_REV = ERROR_SCOPES.toReversed();\n\n  let currentScopeName = '-';\n\n  return {\n    startErrorScope,\n    reportErrorScopeAsync,\n  };\n\n  function startErrorScope(scopeName: string = '-') {\n    currentScopeName = scopeName;\n    ERROR_SCOPES.forEach((sc) => device.pushErrorScope(sc));\n  }\n\n  async function reportErrorScopeAsync(cb?: ErrorCb) {\n    let lastError = undefined;\n\n    for (const name of ERROR_SCOPES_REV) {\n      const err = await device.popErrorScope();\n      if (err) {\n        const msg = `WebGPU error [${currentScopeName}][${name}]: ${err.message}`;\n        lastError = msg;\n        if (cb) {\n          cb(msg);\n        } else {\n          console.error(msg);\n        }\n      }\n    }\n\n    return lastError;\n  }\n}\n\nexport const rethrowWebGPUError = (msg: string): never => {\n  throw new Error(msg);\n};\n", "import { getTypeName } from './index.ts';\nimport type {\n  WasmHeap,\n  WasmArray,\n  WasmPtrInout,\n  WasmBasicType,\n  WasmBasicTypeName,\n  WasmModule,\n} from './wasm-types.d.ts';\n\n// Some references:\n// - https://marcoselvatici.github.io/WASM_tutorial/\n// - https://radu-matei.com/blog/practical-guide-to-wasm-memory/\n\nconst DEBUG_ALLOC = false;\n// TODO [LOW] re-Emscripten metis with free(). ATM we use metisFreeAllocations()\n// to mass free() the memory at the end of object processing.\n// Metis does not allocate much memory, so you will not alloc >2GB.\n// Meshoptimizer on the other hand... each I've exported _free() and hope it works.\nconst SILENCE_MEMORY_LEAKS = true;\n\nconst heapPtr2str = <T extends WasmArray>(\n  module: WasmModule,\n  arr: T,\n  ptr: number\n) => {\n  const moduleName = module['_meshopt_buildMeshlets'] == undefined ? 'metis' : 'meshoptimizer' // prettier-ignore\n  return `${moduleName}@0x${ptr.toString(16)}: ${arr.byteLength} bytes (${getTypeName(arr)}: ${arr.length} items)`; // prettier-ignore\n};\n\n// https://stackoverflow.com/questions/41875728/pass-a-javascript-array-as-argument-to-a-webassembly-function\nexport const wasmPtr = (arr: WasmArray, inout: WasmPtrInout = 'in') => ({\n  arr,\n  inout,\n});\n\nfunction copyToWasmHeap<T extends WasmArray>(\n  module: WasmModule,\n  heap: WasmHeap,\n  arr: T\n) {\n  const mallocFn = '_create_buffer' in module ? '_create_buffer' : '_malloc';\n  const heapPointer = module[mallocFn](arr.length * arr.BYTES_PER_ELEMENT);\n  module[heap].set(arr, heapPointer / arr.BYTES_PER_ELEMENT);\n  if (DEBUG_ALLOC) {\n    console.log(`Alloc ${heapPtr2str(module, arr, heapPointer)}`);\n  }\n  return heapPointer;\n}\n\nfunction getMemoryHeapForJsArray(arr: WasmArray): WasmHeap | undefined {\n  if (arr instanceof Float32Array) return 'HEAPF32';\n  if (arr instanceof Uint32Array) return 'HEAPU32';\n  if (arr instanceof Int32Array) return 'HEAP32';\n  if (arr instanceof Uint8Array) return 'HEAPU8';\n  return undefined;\n}\n\nfunction transformIntoWasmArg(\n  module: WasmModule,\n  fnName: string,\n  arg: WasmBasicType\n) {\n  if (typeof arg === 'number' || typeof arg === 'string' || arg === null) {\n    return arg;\n  }\n  const heap = getMemoryHeapForJsArray(arg.arr);\n  if (heap) {\n    return copyToWasmHeap(module, heap, arg.arr);\n  }\n\n  const s = JSON.stringify(arg);\n  throw new Error(`Wasm function '${fnName}' received invalid argument: ${s}`);\n}\n\nexport const wasmCall = <RetType>(\n  module: WasmModule,\n  returnTypeName: WasmBasicTypeName,\n  fnName: string,\n  argsJS: WasmBasicType[]\n): RetType => {\n  const argsWasm = argsJS.map((arg) =>\n    transformIntoWasmArg(module, fnName, arg)\n  );\n  const argsTypes = argsJS.map(\n    (arg): WasmBasicTypeName => (typeof arg === 'string' ? 'string' : 'number')\n  );\n\n  let result: RetType;\n  if ('ccall' in module) {\n    result = module.ccall(fnName, returnTypeName, argsTypes, argsWasm);\n  } else {\n    // deno-lint-ignore no-explicit-any\n    result = (module as any)[`_${fnName}`](...argsWasm);\n  }\n\n  argsJS.forEach((arg, i) => {\n    const rawHeapAddr = argsWasm[i];\n    if (\n      typeof arg === 'number' ||\n      typeof arg === 'string' ||\n      typeof rawHeapAddr === 'string' ||\n      arg === null\n    ) {\n      return;\n    }\n\n    // copy back from wasm's heap to JS TypedArray\n    const heap = getMemoryHeapForJsArray(arg.arr)!;\n    const wasmHeapAddr = rawHeapAddr! / arg.arr.BYTES_PER_ELEMENT; // convert to emscripten\n\n    if (arg.inout === 'out') {\n      // console.log(`${fnName} HEAP`, module[heap]);\n      const length = arg.arr.length;\n      // copy into the user-provided array\n      arg.arr.set(module[heap].subarray(wasmHeapAddr, wasmHeapAddr + length));\n    }\n\n    // free the allocated heap memory\n    if (DEBUG_ALLOC) {\n      console.log(`[${fnName}] Will free  ${heapPtr2str(module, arg.arr, rawHeapAddr)}`); // prettier-ignore\n    }\n    if (module._free !== undefined) {\n      module._free(rawHeapAddr);\n    } else if (!SILENCE_MEMORY_LEAKS) {\n      console.error(`Memory leak [${fnName}]: ${heapPtr2str(module, arg.arr, rawHeapAddr)}`, { module, fnName }); // prettier-ignore\n    }\n  });\n\n  return result;\n};\n\nexport const meshoptCall = <\n  FnName extends keyof typeof meshoptimizer,\n  RetType extends ReturnType<(typeof meshoptimizer)[FnName]>\n>(\n  module: WasmModule,\n  returnTypeName: WasmBasicTypeName,\n  fnName: FnName,\n  argsJS: Parameters<(typeof meshoptimizer)[FnName]>\n): RetType => {\n  // deno-lint-ignore no-explicit-any\n  return wasmCall(module, returnTypeName, fnName as any, argsJS);\n};\n\nexport const metisCall = <\n  FnName extends keyof typeof metis,\n  RetType extends ReturnType<(typeof metis)[FnName]>\n>(\n  module: WasmModule,\n  returnTypeName: WasmBasicTypeName,\n  fnName: FnName,\n  argsJS: Parameters<(typeof metis)[FnName]>\n): RetType => {\n  // deno-lint-ignore no-explicit-any\n  return wasmCall(module, returnTypeName, fnName as any, argsJS);\n};\n", "\nvar Module = (() => {\n  var _scriptName = import.meta.url;\n  \n  return (\nfunction(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});[\"_malloc\",\"_free\",\"_meshopt_buildMeshletsBound\",\"_meshopt_buildMeshlets\",\"_meshopt_buildMeshletsScan\",\"_meshopt_simplify\",\"_meshopt_generateVertexRemap\",\"_meshopt_remapIndexBuffer\",\"_meshopt_remapVertexBuffer\",\"_meshopt_simplifyScale\",\"_meshopt_computeMeshletBounds\",\"_memory\",\"___indirect_function_table\",\"onRuntimeInitialized\"].forEach(prop=>{if(!Object.getOwnPropertyDescriptor(readyPromise,prop)){Object.defineProperty(readyPromise,prop,{get:()=>abort(\"You are getting \"+prop+\" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),set:()=>abort(\"You are setting \"+prop+\" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")})}});var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module[\"ENVIRONMENT\"]){throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\")}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_SHELL){if(typeof process==\"object\"&&typeof require===\"function\"||typeof window==\"object\"||typeof importScripts==\"function\")throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\")}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}if(!(typeof window==\"object\"||typeof importScripts==\"function\"))throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{assert(!isFileURI(url),\"readAsync does not work with file:// URLs\");fetch(url,{credentials:\"same-origin\"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+\" : \"+response.url))}).then(onload,onerror)}}}else{throw new Error(\"environment detection error\")}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;checkIncomingModuleAPI();if(Module[\"arguments\"])arguments_=Module[\"arguments\"];legacyModuleProp(\"arguments\",\"arguments_\");if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];legacyModuleProp(\"thisProgram\",\"thisProgram\");if(Module[\"quit\"])quit_=Module[\"quit\"];legacyModuleProp(\"quit\",\"quit_\");assert(typeof Module[\"memoryInitializerPrefixURL\"]==\"undefined\",\"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"pthreadMainPrefixURL\"]==\"undefined\",\"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"cdInitializerPrefixURL\"]==\"undefined\",\"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"filePackagePrefixURL\"]==\"undefined\",\"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"read\"]==\"undefined\",\"Module.read option was removed (modify read_ in JS)\");assert(typeof Module[\"readAsync\"]==\"undefined\",\"Module.readAsync option was removed (modify readAsync in JS)\");assert(typeof Module[\"readBinary\"]==\"undefined\",\"Module.readBinary option was removed (modify readBinary in JS)\");assert(typeof Module[\"setWindowTitle\"]==\"undefined\",\"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)\");assert(typeof Module[\"TOTAL_MEMORY\"]==\"undefined\",\"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");legacyModuleProp(\"asm\",\"wasmExports\");legacyModuleProp(\"read\",\"read_\");legacyModuleProp(\"readAsync\",\"readAsync\");legacyModuleProp(\"readBinary\",\"readBinary\");legacyModuleProp(\"setWindowTitle\",\"setWindowTitle\");assert(!ENVIRONMENT_IS_WORKER,\"worker environment detected but not enabled at build time.  Add `worker` to `-sENVIRONMENT` to enable.\");assert(!ENVIRONMENT_IS_NODE,\"node environment detected but not enabled at build time.  Add `node` to `-sENVIRONMENT` to enable.\");assert(!ENVIRONMENT_IS_SHELL,\"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.\");var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];legacyModuleProp(\"wasmBinary\",\"wasmBinary\");if(typeof WebAssembly!=\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed\"+(text?\": \"+text:\"\"))}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}assert(!Module[\"STACK_SIZE\"],\"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");assert(typeof Int32Array!=\"undefined\"&&typeof Float64Array!==\"undefined\"&&Int32Array.prototype.subarray!=undefined&&Int32Array.prototype.set!=undefined,\"JS engine does not provide full typed array support\");assert(!Module[\"wasmMemory\"],\"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\");assert(!Module[\"INITIAL_MEMORY\"],\"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\");function writeStackCookie(){var max=_emscripten_stack_get_end();assert((max&3)==0);if(max==0){max+=4}HEAPU32[max>>2]=34821223;HEAPU32[max+4>>2]=2310721022;HEAPU32[0>>2]=1668509029}function checkStackCookie(){if(ABORT)return;var max=_emscripten_stack_get_end();if(max==0){max+=4}var cookie1=HEAPU32[max>>2];var cookie2=HEAPU32[max+4>>2];if(cookie1!=34821223||cookie2!=2310721022){abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`)}if(HEAPU32[0>>2]!=1668509029){abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\")}}(function(){var h16=new Int16Array(1);var h8=new Int8Array(h16.buffer);h16[0]=25459;if(h8[0]!==115||h8[1]!==99)throw\"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\"})();var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){assert(!runtimeInitialized);runtimeInitialized=true;checkStackCookie();callRuntimeCallbacks(__ATINIT__)}function postRun(){checkStackCookie();if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}assert(Math.imul,\"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.fround,\"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.clz32,\"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.trunc,\"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies);if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!=\"undefined\"){runDependencyWatcher=setInterval(()=>{if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err(\"still waiting on run dependencies:\")}err(`dependency: ${dep}`)}if(shown){err(\"(end of list)\")}},1e4)}}else{err(\"warning: run dependency added without ID\")}}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err(\"warning: run dependency removed without ID\")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var FS={error(){abort(\"Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM\")},init(){FS.error()},createDataFile(){FS.error()},createPreloadedFile(){FS.error()},createLazyFile(){FS.error()},open(){FS.error()},mkdev(){FS.error()},registerDevice(){FS.error()},analyzePath(){FS.error()},ErrnoError(){FS.error()}};Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");function createExportWrapper(name,nargs){return(...args)=>{assert(runtimeInitialized,`native function \\`${name}\\` called before runtime initialization`);var f=wasmExports[name];assert(f,`exported native function \\`${name}\\` not found`);assert(args.length<=nargs,`native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);return f(...args)}}function findWasmBinary(){if(Module[\"locateFile\"]){var f=\"meshoptimizer.wasm\";if(!isDataURI(f)){return locateFile(f)}return f}return new URL(\"meshoptimizer.wasm\",import.meta.url).href}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),error=>{try{resolve(getBinarySync(binaryFile))}catch(e){reject(e)}})})}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);if(isFileURI(wasmBinaryFile)){err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`)}abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{env:wasmImports,wasi_snapshot_preview1:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"memory\"];assert(wasmMemory,\"memory not found in wasm exports\");updateMemoryViews();addOnInit(wasmExports[\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");var trueModule=Module;function receiveInstantiationResult(result){assert(Module===trueModule,\"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");trueModule=null;receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}if(!wasmBinaryFile)wasmBinaryFile=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}function legacyModuleProp(prop,newName,incoming=true){if(!Object.getOwnPropertyDescriptor(Module,prop)){Object.defineProperty(Module,prop,{configurable:true,get(){let extra=incoming?\" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\":\"\";abort(`\\`Module.${prop}\\` has been replaced by \\`${newName}\\``+extra)}})}}function ignoredModuleProp(prop){if(Object.getOwnPropertyDescriptor(Module,prop)){abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`)}}function isExportedByForceFilesystem(name){return name===\"FS_createPath\"||name===\"FS_createDataFile\"||name===\"FS_createPreloadedFile\"||name===\"FS_unlink\"||name===\"addRunDependency\"||name===\"FS_createLazyFile\"||name===\"FS_createDevice\"||name===\"removeRunDependency\"}function missingGlobal(sym,msg){if(typeof globalThis!=\"undefined\"){Object.defineProperty(globalThis,sym,{configurable:true,get(){warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);return undefined}})}}missingGlobal(\"buffer\",\"Please use HEAP8.buffer or wasmMemory.buffer\");missingGlobal(\"asm\",\"Please use wasmExports instead\");function missingLibrarySymbol(sym){if(typeof globalThis!=\"undefined\"&&!Object.getOwnPropertyDescriptor(globalThis,sym)){Object.defineProperty(globalThis,sym,{configurable:true,get(){var msg=`\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;var librarySymbol=sym;if(!librarySymbol.startsWith(\"_\")){librarySymbol=\"$\"+sym}msg+=` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;if(isExportedByForceFilesystem(sym)){msg+=\". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\"}warnOnce(msg);return undefined}})}unexportedRuntimeSymbol(sym)}function unexportedRuntimeSymbol(sym){if(!Object.getOwnPropertyDescriptor(Module,sym)){Object.defineProperty(Module,sym,{configurable:true,get(){var msg=`'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;if(isExportedByForceFilesystem(sym)){msg+=\". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\"}abort(msg)}})}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var ptrToString=ptr=>{assert(typeof ptr===\"number\");ptr>>>=0;return\"0x\"+ptr.toString(16).padStart(8,\"0\")};var stackRestore=val=>__emscripten_stack_restore(val);var stackSave=()=>_emscripten_stack_get_current();var warnOnce=text=>{warnOnce.shown||={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce(\"Invalid UTF-8 leading byte \"+ptrToString(u0)+\" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{assert(typeof ptr==\"number\",`UTF8ToString expects a number (got ${typeof ptr})`);return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"};var ___assert_fail=(condition,filename,line,func)=>{abort(`Assertion failed: ${UTF8ToString(condition)}, at: `+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])};var __abort_js=()=>{abort(\"native code called abort()\")};var __emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`)}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;assert(requestedSize>oldSize);var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);return false};var _fd_close=fd=>{abort(\"fd_close called without SYSCALLS_REQUIRE_FILESYSTEM\")};var convertI32PairToI53Checked=(lo,hi)=>{assert(lo==lo>>>0||lo==(lo|0));assert(hi===(hi|0));return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN};function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);return 70}var printCharBuffers=[null,[],[]];var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};var flush_NO_FILESYSTEM=()=>{_fflush(0);if(printCharBuffers[1].length)printChar(1,10);if(printCharBuffers[2].length)printChar(2,10)};var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};var getCFunc=ident=>{var func=Module[\"_\"+ident];assert(func,\"Cannot call unknown function \"+ident+\", make sure it is exported\");return func};var writeArrayToMemory=(array,buffer)=>{assert(array.length>=0,\"writeArrayToMemory array must have a length (should be an array or typed array)\");HEAP8.set(array,buffer)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{assert(typeof str===\"string\",`stringToUTF8Array expects a string (got ${typeof str})`);if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>1114111)warnOnce(\"Invalid Unicode code point \"+ptrToString(u)+\" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>{assert(typeof maxBytesToWrite==\"number\",\"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)};var stackAlloc=sz=>__emscripten_stack_alloc(sz);var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={string:str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},array:arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;assert(returnType!==\"array\",'Return type should not be \"array\".');if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func(...cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=(ident,returnType,argTypes,opts)=>(...args)=>ccall(ident,returnType,argTypes,args,opts);function checkIncomingModuleAPI(){ignoredModuleProp(\"fetchSettings\")}var wasmImports={__assert_fail:___assert_fail,_abort_js:__abort_js,_emscripten_memcpy_js:__emscripten_memcpy_js,emscripten_resize_heap:_emscripten_resize_heap,fd_close:_fd_close,fd_seek:_fd_seek,fd_write:_fd_write};var wasmExports=createWasm();var ___wasm_call_ctors=createExportWrapper(\"__wasm_call_ctors\",0);var _meshopt_buildMeshletsBound=Module[\"_meshopt_buildMeshletsBound\"]=createExportWrapper(\"meshopt_buildMeshletsBound\",3);var _meshopt_buildMeshlets=Module[\"_meshopt_buildMeshlets\"]=createExportWrapper(\"meshopt_buildMeshlets\",11);var _meshopt_buildMeshletsScan=Module[\"_meshopt_buildMeshletsScan\"]=createExportWrapper(\"meshopt_buildMeshletsScan\",8);var _meshopt_computeMeshletBounds=Module[\"_meshopt_computeMeshletBounds\"]=createExportWrapper(\"meshopt_computeMeshletBounds\",7);var _meshopt_simplify=Module[\"_meshopt_simplify\"]=createExportWrapper(\"meshopt_simplify\",10);var _meshopt_simplifyScale=Module[\"_meshopt_simplifyScale\"]=createExportWrapper(\"meshopt_simplifyScale\",3);var _meshopt_generateVertexRemap=Module[\"_meshopt_generateVertexRemap\"]=createExportWrapper(\"meshopt_generateVertexRemap\",6);var _meshopt_remapVertexBuffer=Module[\"_meshopt_remapVertexBuffer\"]=createExportWrapper(\"meshopt_remapVertexBuffer\",5);var _meshopt_remapIndexBuffer=Module[\"_meshopt_remapIndexBuffer\"]=createExportWrapper(\"meshopt_remapIndexBuffer\",4);var _fflush=createExportWrapper(\"fflush\",1);var _malloc=Module[\"_malloc\"]=createExportWrapper(\"malloc\",1);var _free=Module[\"_free\"]=createExportWrapper(\"free\",1);var _emscripten_stack_init=()=>(_emscripten_stack_init=wasmExports[\"emscripten_stack_init\"])();var _emscripten_stack_get_free=()=>(_emscripten_stack_get_free=wasmExports[\"emscripten_stack_get_free\"])();var _emscripten_stack_get_base=()=>(_emscripten_stack_get_base=wasmExports[\"emscripten_stack_get_base\"])();var _emscripten_stack_get_end=()=>(_emscripten_stack_get_end=wasmExports[\"emscripten_stack_get_end\"])();var __emscripten_stack_restore=a0=>(__emscripten_stack_restore=wasmExports[\"_emscripten_stack_restore\"])(a0);var __emscripten_stack_alloc=a0=>(__emscripten_stack_alloc=wasmExports[\"_emscripten_stack_alloc\"])(a0);var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports[\"emscripten_stack_get_current\"])();var dynCall_jiji=Module[\"dynCall_jiji\"]=createExportWrapper(\"dynCall_jiji\",5);Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var missingLibrarySymbols=[\"writeI53ToI64\",\"writeI53ToI64Clamped\",\"writeI53ToI64Signaling\",\"writeI53ToU64Clamped\",\"writeI53ToU64Signaling\",\"readI53FromI64\",\"readI53FromU64\",\"convertI32PairToI53\",\"convertU32PairToI53\",\"getTempRet0\",\"setTempRet0\",\"zeroMemory\",\"exitJS\",\"isLeapYear\",\"ydayFromDate\",\"arraySum\",\"addDays\",\"inetPton4\",\"inetNtop4\",\"inetPton6\",\"inetNtop6\",\"readSockaddr\",\"writeSockaddr\",\"initRandomFill\",\"randomFill\",\"emscriptenLog\",\"readEmAsmArgs\",\"jstoi_q\",\"getExecutableName\",\"listenOnce\",\"autoResumeAudioContext\",\"dynCallLegacy\",\"getDynCaller\",\"dynCall\",\"handleException\",\"keepRuntimeAlive\",\"runtimeKeepalivePush\",\"runtimeKeepalivePop\",\"callUserCallback\",\"maybeExit\",\"asmjsMangle\",\"asyncLoad\",\"alignMemory\",\"mmapAlloc\",\"HandleAllocator\",\"getNativeTypeSize\",\"STACK_SIZE\",\"STACK_ALIGN\",\"POINTER_SIZE\",\"ASSERTIONS\",\"uleb128Encode\",\"sigToWasmTypes\",\"generateFuncType\",\"convertJsFunctionToWasm\",\"getEmptyTableSlot\",\"updateTableMap\",\"getFunctionAddress\",\"addFunction\",\"removeFunction\",\"reallyNegative\",\"unSign\",\"strLen\",\"reSign\",\"formatString\",\"intArrayFromString\",\"intArrayToString\",\"AsciiToString\",\"stringToAscii\",\"UTF16ToString\",\"stringToUTF16\",\"lengthBytesUTF16\",\"UTF32ToString\",\"stringToUTF32\",\"lengthBytesUTF32\",\"stringToNewUTF8\",\"registerKeyEventCallback\",\"maybeCStringToJsString\",\"findEventTarget\",\"getBoundingClientRect\",\"fillMouseEventData\",\"registerMouseEventCallback\",\"registerWheelEventCallback\",\"registerUiEventCallback\",\"registerFocusEventCallback\",\"fillDeviceOrientationEventData\",\"registerDeviceOrientationEventCallback\",\"fillDeviceMotionEventData\",\"registerDeviceMotionEventCallback\",\"screenOrientation\",\"fillOrientationChangeEventData\",\"registerOrientationChangeEventCallback\",\"fillFullscreenChangeEventData\",\"registerFullscreenChangeEventCallback\",\"JSEvents_requestFullscreen\",\"JSEvents_resizeCanvasForFullscreen\",\"registerRestoreOldStyle\",\"hideEverythingExceptGivenElement\",\"restoreHiddenElements\",\"setLetterbox\",\"softFullscreenResizeWebGLRenderTarget\",\"doRequestFullscreen\",\"fillPointerlockChangeEventData\",\"registerPointerlockChangeEventCallback\",\"registerPointerlockErrorEventCallback\",\"requestPointerLock\",\"fillVisibilityChangeEventData\",\"registerVisibilityChangeEventCallback\",\"registerTouchEventCallback\",\"fillGamepadEventData\",\"registerGamepadEventCallback\",\"registerBeforeUnloadEventCallback\",\"fillBatteryEventData\",\"battery\",\"registerBatteryEventCallback\",\"setCanvasElementSize\",\"getCanvasElementSize\",\"jsStackTrace\",\"getCallstack\",\"convertPCtoSourceLocation\",\"getEnvStrings\",\"checkWasiClock\",\"wasiRightsToMuslOFlags\",\"wasiOFlagsToMuslOFlags\",\"createDyncallWrapper\",\"safeSetTimeout\",\"setImmediateWrapped\",\"clearImmediateWrapped\",\"polyfillSetImmediate\",\"getPromise\",\"makePromise\",\"idsToPromises\",\"makePromiseCallback\",\"ExceptionInfo\",\"findMatchingCatch\",\"Browser_asyncPrepareDataCounter\",\"setMainLoop\",\"getSocketFromFD\",\"getSocketAddress\",\"FS_createPreloadedFile\",\"FS_modeStringToFlags\",\"FS_getMode\",\"FS_stdin_getChar\",\"FS_unlink\",\"FS_createDataFile\",\"FS_mkdirTree\",\"_setNetworkCallback\",\"heapObjectForWebGLType\",\"toTypedArrayIndex\",\"webgl_enable_ANGLE_instanced_arrays\",\"webgl_enable_OES_vertex_array_object\",\"webgl_enable_WEBGL_draw_buffers\",\"webgl_enable_WEBGL_multi_draw\",\"emscriptenWebGLGet\",\"computeUnpackAlignedImageSize\",\"colorChannelsInGlTextureFormat\",\"emscriptenWebGLGetTexPixelData\",\"emscriptenWebGLGetUniform\",\"webglGetUniformLocation\",\"webglPrepareUniformLocationsBeforeFirstUse\",\"webglGetLeftBracePos\",\"emscriptenWebGLGetVertexAttrib\",\"__glGetActiveAttribOrUniform\",\"writeGLArray\",\"registerWebGlEventCallback\",\"runAndAbortIfError\",\"ALLOC_NORMAL\",\"ALLOC_STACK\",\"allocate\",\"writeStringToMemory\",\"writeAsciiToMemory\",\"setErrNo\",\"demangle\",\"stackTrace\"];missingLibrarySymbols.forEach(missingLibrarySymbol);var unexportedSymbols=[\"run\",\"addOnPreRun\",\"addOnInit\",\"addOnPreMain\",\"addOnExit\",\"addOnPostRun\",\"addRunDependency\",\"removeRunDependency\",\"out\",\"err\",\"callMain\",\"abort\",\"wasmMemory\",\"wasmExports\",\"writeStackCookie\",\"checkStackCookie\",\"convertI32PairToI53Checked\",\"stackSave\",\"stackRestore\",\"stackAlloc\",\"ptrToString\",\"getHeapMax\",\"growMemory\",\"ENV\",\"MONTH_DAYS_REGULAR\",\"MONTH_DAYS_LEAP\",\"MONTH_DAYS_REGULAR_CUMULATIVE\",\"MONTH_DAYS_LEAP_CUMULATIVE\",\"ERRNO_CODES\",\"ERRNO_MESSAGES\",\"DNS\",\"Protocols\",\"Sockets\",\"timers\",\"warnOnce\",\"readEmAsmArgsArray\",\"jstoi_s\",\"wasmTable\",\"noExitRuntime\",\"getCFunc\",\"freeTableIndexes\",\"functionsInTableMap\",\"setValue\",\"getValue\",\"PATH\",\"PATH_FS\",\"UTF8Decoder\",\"UTF8ArrayToString\",\"UTF8ToString\",\"stringToUTF8Array\",\"stringToUTF8\",\"lengthBytesUTF8\",\"UTF16Decoder\",\"stringToUTF8OnStack\",\"writeArrayToMemory\",\"JSEvents\",\"specialHTMLTargets\",\"findCanvasEventTarget\",\"currentFullscreenStrategy\",\"restoreOldWindowedStyle\",\"UNWIND_CACHE\",\"ExitStatus\",\"flush_NO_FILESYSTEM\",\"promiseMap\",\"uncaughtExceptionCount\",\"exceptionLast\",\"exceptionCaught\",\"Browser\",\"getPreloadedImageData__data\",\"wget\",\"SYSCALLS\",\"preloadPlugins\",\"FS_stdin_getChar_buffer\",\"FS_createPath\",\"FS_createDevice\",\"FS_readFile\",\"FS\",\"FS_createLazyFile\",\"MEMFS\",\"TTY\",\"PIPEFS\",\"SOCKFS\",\"tempFixedLengthArray\",\"miniTempWebGLFloatBuffers\",\"miniTempWebGLIntBuffers\",\"GL\",\"AL\",\"GLUT\",\"EGL\",\"GLEW\",\"IDBStore\",\"SDL\",\"SDL_gfx\",\"allocateUTF8\",\"allocateUTF8OnStack\",\"print\",\"printErr\"];unexportedSymbols.forEach(unexportedRuntimeSymbol);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function stackCheckInit(){_emscripten_stack_init();writeStackCookie()}function run(){if(runDependencies>0){return}stackCheckInit();preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();assert(!Module[\"_main\"],'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}checkStackCookie()}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();moduleRtn=readyPromise;for(const prop of Object.keys(Module)){if(!(prop in moduleArg)){Object.defineProperty(moduleArg,prop,{configurable:true,get(){abort(`Access to module property ('${prop}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`)}})}}\n\n\n  return moduleRtn;\n}\n);\n})();\nexport default Module;\n", "import MeshOptModule from '../lib/meshoptimizer.js';\nimport { WasmModule } from '../utils/wasm-types.d.ts';\n\n/** Used in tests to point to local .wasm file */\nexport const OVERRIDE_MESHOPTIMIZER_WASM_PATH = {\n  value: undefined as string | undefined,\n};\n\nlet MESHOPTIMIZER_MODULE: WasmModule | undefined = undefined;\n\nexport async function getMeshOptimizerModule() {\n  if (MESHOPTIMIZER_MODULE !== undefined) return MESHOPTIMIZER_MODULE;\n\n  const MeshOpt = await MeshOptModule({\n    locateFile: (e: string) => OVERRIDE_MESHOPTIMIZER_WASM_PATH.value || e,\n  });\n  const module: WasmModule = MeshOpt;\n  MESHOPTIMIZER_MODULE = module;\n  return module;\n}\n", "import { Vec3 } from 'wgpu-matrix';\nimport { BYTES_F32 } from '../constants.ts';\n\n/** https://github.com/zeux/meshoptimizer/blob/master/src/meshoptimizer.h#L511 */\nexport interface meshopt_Bounds {\n  center: Vec3; // float center[3];\n  radius: number; // float radius;\n  coneApex: Vec3; // float cone_apex[3];\n  coneAxis: Vec3; // float cone_axis[3];\n  coneCutoff: number; // float cone_cutoff; /* = cos(angle/2) */\n}\nexport const MESHOPT_BOUNDS_BYTES =\n  3 * BYTES_F32 + // float center[3];\n  BYTES_F32 + // float radius;\n  3 * BYTES_F32 + // float cone_apex[3];\n  3 * BYTES_F32 + // float cone_axis[3];\n  BYTES_F32 + // float cone_cutoff; /* = cos(angle/2) */\n  3 + // signed char cone_axis_s8[3];\n  1; // signed char cone_cutoff_s8;\n\nexport interface meshopt_Meshlet {\n  /* offsets within meshletVertices */\n  vertexOffset: number; // unsigned int\n  /** number of vertices in the meshlet */\n  vertexCount: number; // unsigned int\n  /* offsets within meshletTriangles */\n  triangleOffset: number; // unsigned int\n  /** number of triangles in the meshlet */\n  triangleCount: number; // unsigned int\n  // bounds?: meshopt_Bounds;\n}\nexport const U32_IN_MESHOPT_MESHLET = 4;\n\nexport type meshopt_Meshlets = {\n  meshlets: meshopt_Meshlet[];\n  /**\n   * Mapping of the previous positions into new vertex buffer.\n   * Each meshlet `m` has a `[m.vertexOffset : m.vertexOffset + m.vertexCount]`\n   * slice of this array.\n   */\n  meshletVertices: Uint32Array;\n  /**\n   * Indices within a meshlet. Restarts anew for every meshlet.\n   * Each value is in range `[0, maxMeshletVertices]`.\n   * Each meshlet `m` has a `[m.triangleOffset : m.triangleOffset + m.triangleCount]`\n   * slice of this array.\n   */\n  meshletTriangles: Uint32Array;\n};\n", "import { vec3 } from 'wgpu-matrix';\nimport { BYTES_F32, BYTES_U32, VERTS_IN_TRIANGLE } from '../constants.ts';\nimport { copyToTypedArray } from '../utils/index.ts';\nimport { WasmModule } from '../utils/wasm-types.d.ts';\nimport { meshoptCall, wasmPtr } from '../utils/wasm.ts';\nimport { getMeshOptimizerModule } from './meshoptimizerUtils.ts';\nimport { ParsedMesh } from '../scene/objLoader.ts';\nimport {\n  meshopt_Meshlets,\n  meshopt_Meshlet,\n  U32_IN_MESHOPT_MESHLET,\n  meshopt_Bounds,\n  MESHOPT_BOUNDS_BYTES,\n} from './createMeshlets.types.ts';\n\ninterface Opts {\n  /**https://zeux.io/2023/01/16/meshlet-size-tradeoffs/ */\n  maxVertices?: number;\n  /** https://zeux.io/2023/01/16/meshlet-size-tradeoffs/ */\n  maxTriangles?: number;\n  /** cone_weight should be set to 0 when cone culling is not used, and a value between 0 and 1 otherwise to balance between cluster size and cone culling efficiency*/\n  coneWeight?: number;\n  /**\n   * DO NOT ASK, ALWAYS LEAVE THIS ON.\n   * THIS OPTION EXISTS ONLY TO INFORM YOU THAT SOMETHING SO IMPORTANT EXISTS.\n   * IT'S NOT MEANT TO BE TOGGLED.\n   */\n  rewriteIndicesToReferenceOriginalVertexBuffer?: boolean;\n}\n\n/**\n * Split mesh into meshlets.\n *\n * https://github.com/zeux/meshoptimizer?tab=readme-ov-file#mesh-shading\n * https://github.com/zeux/meshoptimizer/issues/531\n */\nexport async function createMeshlets(\n  mesh: ParsedMesh,\n  indices: Uint32Array,\n  opts: Opts\n): Promise<meshopt_Meshlets> {\n  // max_vertices=64, max_triangles=124, cone_weight=0\n  const module = await getMeshOptimizerModule();\n  const indicesCount = indices.length;\n\n  // \"Looking at the original NVidia mesh shader publication,\n  // one concrete number they recommend is 64 vertices\n  // and 84 or 126 triangles per meshlet.\"\n  // https://zeux.io/2023/01/16/meshlet-size-tradeoffs/\n  opts.maxVertices = opts.maxVertices || 64;\n  opts.maxTriangles = opts.maxTriangles || 124; // or 126\n  opts.coneWeight = opts.coneWeight === undefined ? 0 : opts.coneWeight;\n  opts.rewriteIndicesToReferenceOriginalVertexBuffer =\n    opts.rewriteIndicesToReferenceOriginalVertexBuffer !== false;\n  // console.log('createMeshlets', opts);\n\n  const maxMeshlets = buildMeshletsBound(module, indicesCount, opts);\n\n  const [meshletCount, meshletsRaw, meshletVertices, meshletTriangles] =\n    buildMeshlets(\n      module,\n      mesh.positions,\n      mesh.vertexCount,\n      mesh.positionsStride,\n      indices,\n      indicesCount,\n      opts,\n      maxMeshlets\n    );\n\n  const meshlets: meshopt_Meshlet[] = [];\n  for (let i = 0; i < meshletCount; i += 1) {\n    const idx = i * U32_IN_MESHOPT_MESHLET;\n    const meshlet: Omit<meshopt_Meshlet, 'bounds'> = {\n      vertexOffset: meshletsRaw[idx + 0],\n      triangleOffset: meshletsRaw[idx + 1],\n      vertexCount: meshletsRaw[idx + 2],\n      triangleCount: meshletsRaw[idx + 3],\n    };\n    /*const bounds = computeMeshletBounds(\n      module,\n      vertices,\n      meshData,\n      meshletVertices,\n      meshletTriangles,\n      meshlet\n    );*/\n    // console.log('bounds', bounds);\n\n    meshlets.push(meshlet);\n  }\n\n  const lastMeshlet = meshlets.at(-1)!;\n  const lastVertexIdx = lastMeshlet.vertexOffset + lastMeshlet.vertexCount;\n  const lastTriangleIdx =\n    lastMeshlet.triangleOffset + ((lastMeshlet.triangleCount * 3 + 3) & ~3);\n\n  // indices: convert  U8->U32\n  let meshletTrianglesU32 = new Uint32Array(lastTriangleIdx);\n  for (let i = 0; i < lastTriangleIdx; i++) {\n    meshletTrianglesU32[i] = meshletTriangles[i];\n  }\n\n  // indices: reuse original vertex buffer. ALWAYS ON (PLEASE)!\n  if (opts.rewriteIndicesToReferenceOriginalVertexBuffer) {\n    const rewriteIdxs = meshletIndicesWithOriginalVertexBuffer(\n      meshlets,\n      meshletVertices,\n      meshletTrianglesU32\n    );\n    meshletTrianglesU32 = copyToTypedArray(Uint32Array, rewriteIdxs);\n  } else {\n    console.warn(\n      \"'rewriteIndicesToReferenceOriginalVertexBuffer' is OFF. You are stupid. I will not crash the app. I will enjoy watching you fail.\"\n    );\n  }\n\n  return {\n    meshlets,\n    meshletVertices: meshletVertices.slice(0, lastVertexIdx),\n    meshletTriangles: meshletTrianglesU32,\n  };\n}\n\nfunction buildMeshlets(\n  module: WasmModule,\n  vertices: Float32Array,\n  vertexCount: number,\n  stride: number,\n  indices: Uint32Array,\n  indicesCount: number,\n  opts: Opts,\n  maxMeshlets: number\n): [number, Uint32Array, Uint32Array, Uint8Array] {\n  // meshlets must contain enough space for all meshlets,\n  // worst case size can be computed with meshopt_buildMeshletsBound\n  const meshlets = new Uint32Array(maxMeshlets * U32_IN_MESHOPT_MESHLET);\n  // meshlet_vertices must contain enough space for all meshlets,\n  // worst case size is equal to max_meshlets * max_vertices\n  const meshletVertices = new Uint32Array(maxMeshlets * opts.maxVertices!);\n  // meshlet_triangles must contain enough space for all meshlets,\n  // worst case size is equal to max_meshlets * max_triangles * 3\n  const meshletTriangles = new Uint8Array(maxMeshlets * opts.maxTriangles! * 3);\n\n  const meshletCount = meshoptCall(module, 'number', 'meshopt_buildMeshlets', [\n    wasmPtr(meshlets, 'out'), // meshopt_Meshlet* meshlets,\n    wasmPtr(meshletVertices, 'out'), // unsigned int* meshlet_vertices,\n    wasmPtr(meshletTriangles, 'out'), // unsigned char* meshlet_triangles,\n    wasmPtr(indices), // const unsigned int* indices,\n    indicesCount, // size_t index_count,\n    wasmPtr(vertices), // const float* vertex_positions,\n    vertexCount, // size_t vertex_count,\n    stride, // size_t vertex_positions_stride\n    opts.maxVertices!, // size_t max_vertices,\n    opts.maxTriangles!, // size_t max_triangles,\n    opts.coneWeight!, // float cone_weight\n  ]);\n  return [meshletCount, meshlets, meshletVertices, meshletTriangles];\n}\n\nfunction buildMeshletsBound(\n  module: WasmModule,\n  indicesCount: number,\n  opts: Opts\n): number {\n  // \"Looking at the original NVidia mesh shader publication,\n  // one concrete number they recommend is 64 vertices\n  // and 84 or 126 triangles per meshlet.\"\n  // https://zeux.io/2023/01/16/meshlet-size-tradeoffs/\n  return meshoptCall(module, 'number', 'meshopt_buildMeshletsBound', [\n    indicesCount,\n    opts.maxVertices!,\n    opts.maxTriangles!,\n  ]);\n}\n\n/** Rewrite meshlet indices to point to the original vertex buffer */\nfunction meshletIndicesWithOriginalVertexBuffer(\n  meshlets: meshopt_Meshlet[],\n  meshletVertices: Uint32Array,\n  meshletTriangles: Uint32Array\n) {\n  const meshletIndices: number[] = [];\n  for (let i = 0; i < meshlets.length; i++) {\n    const meshlet = meshlets[i];\n\n    for (let j = 0; j < meshlet.triangleCount * VERTS_IN_TRIANGLE; j++) {\n      const o = meshlet.triangleOffset + j;\n      const vertexIdxInsideMeshlet = meshletTriangles[o]; // 0-63\n      const vertIdx =\n        meshletVertices[meshlet.vertexOffset + vertexIdxInsideMeshlet];\n      meshletIndices.push(vertIdx);\n    }\n  }\n\n  return meshletIndices;\n}\n\nexport function splitIndicesPerMeshlets(meshlets: meshopt_Meshlets) {\n  let nextIdx = 0;\n  return meshlets.meshlets.map((m) => {\n    const vertexCount = m.triangleCount * VERTS_IN_TRIANGLE;\n    const firstIndex = nextIdx;\n    const res = meshlets.meshletTriangles.slice(\n      firstIndex,\n      firstIndex + vertexCount\n    );\n    nextIdx += vertexCount;\n    return res;\n  });\n}\n\nfunction _computeMeshletBounds(\n  module: WasmModule,\n  vertices: Float32Array,\n  vertexCount: number,\n  stride: number,\n  meshletVertices: Uint32Array,\n  meshletTriangles: Uint8Array,\n  meshlet: Omit<meshopt_Meshlet, 'bounds'>\n): meshopt_Bounds {\n  const mVerts = new Uint32Array(\n    meshletVertices,\n    meshlet.vertexOffset * BYTES_U32\n  );\n  const mIdx = new Uint8Array(meshletTriangles, meshlet.triangleOffset);\n  // console.log('computeMeshletBounds', arguments);\n\n  const returnValueBuffer = new Float32Array(MESHOPT_BOUNDS_BYTES / BYTES_F32);\n\n  const _ret = meshoptCall(module, 'number', 'meshopt_computeMeshletBounds', [\n    wasmPtr(returnValueBuffer, 'out'),\n    wasmPtr(mVerts), // unsigned int* meshlet_vertices, ||| &meshlet_vertices[m.vertex_offset],\n    wasmPtr(mIdx), // unsigned char* meshlet_triangles, ||| &meshlet_triangles[m.triangle_offset],\n    meshlet.triangleCount, // size_t triangle_count, ||| m.triangle_count,\n    wasmPtr(vertices), // const float* vertex_positions, ||| &vertices[0].x,\n    vertexCount, // size_t vertex_count, ||| vertices.size(),\n    stride, // size_t vertex_positions_stride ||| sizeof(Vertex)\n  ]);\n\n  return parseMeshopt_Bounds(returnValueBuffer);\n}\n\nfunction parseMeshopt_Bounds(data: Float32Array): meshopt_Bounds {\n  return {\n    center: vec3.create(data[0], data[1], data[2]), // float center[3];\n    radius: data[3], // float radius;\n    coneApex: vec3.create(data[4], data[5], data[6]), // float cone_apex[3];\n    coneAxis: vec3.create(data[7], data[8], data[9]), // float cone_axis[3];\n    coneCutoff: data[10], // float cone_cutoff; /* = cos(angle/2) */\n  };\n}\n", "import { ParsedMesh } from '../scene/objLoader.ts';\nimport { WasmModule } from '../utils/wasm-types.d.ts';\nimport { meshoptCall, wasmPtr } from '../utils/wasm.ts';\nimport { getMeshOptimizerModule } from './meshoptimizerUtils.ts';\n// import { MeshoptSimplifier } from 'meshoptimizer'; // Try meshoptimizer's original WASM, see simplify2() below\n\n// TODO [CRITICAL] what if we persist some data inside meshoptimizer WASM's heap? There is no need to copy data between calls for the same mesh. TBH. this would probably only apply to vertex buffer. Still, could be nice.\n\n/**\n * Do not move vertices that are located on the topological border\n * (vertices on triangle edges that don't have a paired triangle).\n * Useful for simplifying portions of the larger mesh.\n *\n * https://github.com/zeux/meshoptimizer/blob/c9fd0916d56d86fe8bec2803d7b8b0ddcff6ad1a/src/meshoptimizer.h#L329\n */\nconst MESHOPT_SIMPLIFY_LOCK_BORDER = 1 << 0;\n\ninterface Opts {\n  targetIndexCount: number;\n  /** [0-1], where 0.01 means 1%. */\n  targetError?: number;\n  lockBorders?: boolean;\n}\n\nconst roundToMultiplyOf3 = (a: number) => Math.floor(a / 3) * 3;\n\nexport const calculateTargetIndexCount = (\n  originalCount: number,\n  decimateFactor: number\n) => {\n  return roundToMultiplyOf3(originalCount / decimateFactor);\n};\n\n/**\n * Reduce triangle count. Mesh will look worse.\n *\n * https://github.com/zeux/meshoptimizer?tab=readme-ov-file#simplification\n */\nexport async function simplifyMesh(\n  mesh: ParsedMesh,\n  indices: Uint32Array,\n  opts: Opts\n) {\n  const module = await getMeshOptimizerModule();\n  const indicesCount = indices.length;\n\n  opts.targetIndexCount = roundToMultiplyOf3(opts.targetIndexCount);\n  opts.targetError = opts.targetError || 0.01;\n  opts.lockBorders = opts.lockBorders != false;\n\n  const [error, newIndexCount, result] = simplify(\n    module,\n    mesh.verticesAndAttributes,\n    mesh.vertexCount,\n    mesh.verticesAndAttributesStride,\n    indices,\n    indicesCount,\n    opts\n  );\n  // const [error, newIndexCount, result] = simplify2(mesh, indices, opts);\n\n  const errorScale = simplifyScale(\n    module,\n    mesh.verticesAndAttributes,\n    mesh.vertexCount,\n    mesh.verticesAndAttributesStride\n  );\n\n  return {\n    error,\n    errorScale,\n    indexBuffer: result.slice(0, newIndexCount),\n  };\n}\n\n/**\n * Reduces the number of triangles in the mesh, attempting to preserve mesh appearance as much as possible.\n *\n * https://github.com/zeux/meshoptimizer/blob/3c3e56d312cbe7d5929c78401de2124c7be3bc07/src/indexgenerator.cpp#L201\n */\nfunction simplify(\n  module: WasmModule,\n  vertices: Float32Array,\n  vertexCount: number,\n  stride: number,\n  indices: Uint32Array,\n  indicesCount: number,\n  opts: Opts\n): [number, number, Uint32Array] {\n  const result = new Uint32Array(indicesCount);\n  const outResultError = new Float32Array(1);\n\n  // meshopt_SimplifyX flags, 0 is a safe default\n  const options = opts.lockBorders ? MESHOPT_SIMPLIFY_LOCK_BORDER : 0;\n\n  const newIndexCount = meshoptCall(module, 'number', 'meshopt_simplify', [\n    wasmPtr(result, 'out'), // destination\n    wasmPtr(indices), // indices\n    indicesCount, // index_count\n    wasmPtr(vertices), // vertex_positions_data\n    vertexCount, // vertex_count\n    stride, // vertex_positions_stride\n    opts.targetIndexCount, // target_index_count\n    opts.targetError!, // target_error\n    options, // options\n    wasmPtr(outResultError, 'out'), // out_result_error\n  ]);\n  return [outResultError[0], newIndexCount, result];\n}\n\n/*\nfunction simplify2(\n  mesh: ParsedMesh,\n  indices: Uint32Array,\n  opts: Opts\n): [number, number, Uint32Array] {\n  MeshoptSimplifier.useExperimentalFeatures = true;\n  const stride = 3; // in elements?\n  const attrs = mesh.uv;\n  const attrsWeights = [0.1, 0.1];\n  const attrsStride = 2;\n\n  const [result, error] = MeshoptSimplifier.simplifyWithAttributes(\n    indices, // indices: Uint32Array\n    mesh.positions, // vertex_positions: Float32Array\n    stride, // vertex_positions_stride: number\n    attrs, // vertex_attributes: Float32Array,\n    attrsStride, // vertex_attributes_stride: number,\n    attrsWeights, // attribute_weights: number[],\n    null, // vertex_lock: boolean[] | null,\n    opts.targetIndexCount, // target_index_count: number,\n    opts.targetError!, // target_error: number,\n    ['LockBorder'] // flags?: Flags[]\n  );\n  return [error, result.length, result];\n}\n*/\n\n/** https://github.com/zeux/meshoptimizer/blob/3c3e56d312cbe7d5929c78401de2124c7be3bc07/src/simplifier.cpp#L1903 */\nfunction simplifyScale(\n  module: WasmModule,\n  vertices: Float32Array,\n  vertexCount: number,\n  stride: number\n): number {\n  const scale = meshoptCall(module, 'number', 'meshopt_simplifyScale', [\n    wasmPtr(vertices),\n    vertexCount,\n    stride,\n  ]);\n  return scale;\n}\n", "import { VERTS_IN_TRIANGLE } from '../../constants.ts';\nimport { createMeshlets } from '../../meshPreprocessing/createMeshlets.ts';\nimport { simplifyMesh } from '../../meshPreprocessing/simplifyMesh.ts';\nimport { getTriangleCount, getVertexCount } from '../../utils/index.ts';\nimport { createGPU_IndexBuffer } from '../../utils/webgpu.ts';\nimport { GPUOriginalMesh } from '../GPUOriginalMesh.ts';\nimport { ParsedMesh } from '../objLoader.ts';\nimport { DebugMeshes, MeshletRenderPckg } from '../scene.ts';\n\nexport async function createDebugMeshes(\n  device: GPUDevice,\n  originalMesh: GPUOriginalMesh,\n  parsedMesh: ParsedMesh\n): Promise<DebugMeshes> {\n  const originalIndices = parsedMesh.indices;\n\n  const meshlets = await createMeshletsMesh(\n    device,\n    originalMesh,\n    parsedMesh,\n    originalIndices\n  );\n\n  const meshoptimizerLODs = await createMeshLODs(\n    device,\n    originalMesh,\n    parsedMesh,\n    originalIndices\n  );\n\n  const meshoptimizerMeshletLODsAsync = meshoptimizerLODs.map(\n    ([lodMesh, indices], level) => {\n      return createMeshletsMesh(\n        device,\n        lodMesh,\n        parsedMesh,\n        indices,\n        `-lod${level}`\n      );\n    }\n  );\n  const meshoptimizerMeshletLODs = await Promise.all(\n    meshoptimizerMeshletLODsAsync\n  );\n\n  return {\n    mesh: originalMesh,\n    meshlets,\n    meshoptimizerLODs: meshoptimizerLODs.map((e) => e[0]),\n    meshoptimizerMeshletLODs,\n  };\n}\n\nasync function createMeshLODs(\n  device: GPUDevice,\n  originalMesh: GPUOriginalMesh,\n  parsedMesh: ParsedMesh,\n  originalIndices: Uint32Array\n): Promise<Array<[GPUOriginalMesh, Uint32Array]>> {\n  const MAX_LODS = 10;\n  const vertices = parsedMesh.positions;\n  const originalTriangleCount = getTriangleCount(originalIndices);\n  const finalTargetTriangleCount = originalTriangleCount / 10;\n  let triangleCount = originalTriangleCount;\n  const meshLODs: Array<[GPUOriginalMesh, Uint32Array]> = [];\n\n  const addMeshLod = (mesh: GPUOriginalMesh, indexData: Uint32Array) => {\n    meshLODs.push([mesh, indexData]);\n  };\n  addMeshLod(originalMesh, originalIndices);\n\n  while (\n    triangleCount > finalTargetTriangleCount &&\n    meshLODs.length < MAX_LODS\n  ) {\n    const level = meshLODs.length;\n\n    const targetIndexCount = (triangleCount * VERTS_IN_TRIANGLE) / 2;\n    // TBH we should use last indices instead of original mesh. Though this is debug view..\n    const simplifiedMesh = await simplifyMesh(parsedMesh, originalIndices, {\n      targetIndexCount,\n      targetError: 0.05,\n    });\n    const newTriangleCount = getTriangleCount(simplifiedMesh.indexBuffer);\n    if (newTriangleCount === originalTriangleCount) break; // cannot be simplified\n    /*console.log(\n      `LOD [${level}] (${triangleCount}->${newTriangleCount})`,\n      simplifiedMesh\n    );*/\n    triangleCount = newTriangleCount;\n\n    const indexBuffer = createGPU_IndexBuffer(\n      device,\n      `dbg-lod-test-index-buffer-${level}`,\n      simplifiedMesh.indexBuffer\n    );\n    const meshLod: GPUOriginalMesh = {\n      ...originalMesh,\n      indexBuffer,\n      vertexCount: getVertexCount(vertices),\n      triangleCount: getTriangleCount(simplifiedMesh.indexBuffer),\n    };\n    addMeshLod(meshLod, simplifiedMesh.indexBuffer);\n  }\n\n  return meshLODs;\n}\n\nasync function createMeshletsMesh(\n  device: GPUDevice,\n  originalMesh: GPUOriginalMesh,\n  mesh: ParsedMesh,\n  indices: Uint32Array,\n  labelSuffix: string = ''\n): Promise<MeshletRenderPckg> {\n  const meshlets = await createMeshlets(mesh, indices, {});\n\n  const meshletIndexBuffer = createGPU_IndexBuffer(\n    device,\n    `dbg-meshlets-indices${labelSuffix}`,\n    meshlets.meshletTriangles\n  );\n\n  return {\n    ...meshlets,\n    vertexBuffer: originalMesh.vertexBuffer, // reuse <3\n    indexBuffer: meshletIndexBuffer,\n  };\n}\n", "import { Mat4, mat4 } from 'wgpu-matrix';\nimport { BYTES_MAT4 } from '../constants.ts';\nimport { randomBetween, dgr2rad } from '../utils/index.ts';\nimport { writeMatrixToGPUBuffer } from '../utils/webgpu.ts';\n\nexport type InstancesGridDef = {\n  countX: number;\n  countY: number;\n  spacing: number;\n  offsetX: number;\n  offsetY: number;\n};\nexport const getInstancesCount = (g: InstancesGridDef) => g.countX * g.countY;\n\nexport function createGrid(\n  countX: number = 10,\n  countY: number = 10,\n  spacing: number = 1.3,\n  offsetX = 0,\n  offsetY = 0\n): InstancesGridDef {\n  return { countX, countY, spacing, offsetX, offsetY };\n}\n\nexport interface NaniteInstancesData {\n  transforms: Array<Mat4>;\n  /** Array of Mat4 */\n  transformsBuffer: GPUBuffer;\n  count: number;\n}\n\nexport function createInstancesData(\n  device: GPUDevice,\n  name: string,\n  grid: InstancesGridDef\n): NaniteInstancesData {\n  const transformsBuffer = device.createBuffer({\n    label: `${name}-nanite-transforms`,\n    size: BYTES_MAT4 * grid.countX * grid.countY,\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n  });\n  const transforms: Array<Mat4> = [];\n\n  let offsetBytes = 0;\n  for (let x = 0; x < grid.countX; x++) {\n    for (let y = 0; y < grid.countY; y++) {\n      const moveMat = mat4.translation([\n        -x * grid.spacing + grid.offsetX,\n        0,\n        -y * grid.spacing + grid.offsetY,\n      ]);\n      const angleDgr = x == 0 && y == 0 ? 0 : randomBetween(0, 360);\n      // const angleDgr = x * -90; // use if you just want to have preview for other angles\n      const rotMat = mat4.rotationY(dgr2rad(angleDgr));\n      const tfxMat = mat4.multiply(moveMat, rotMat);\n\n      transforms.push(tfxMat);\n      writeMatrixToGPUBuffer(device, transformsBuffer, offsetBytes, tfxMat);\n      offsetBytes += BYTES_MAT4;\n    }\n  }\n\n  const count = getInstancesCount(grid);\n  return { transforms, transformsBuffer, count };\n}\n", "import { ValueOf } from '../utils/index.ts';\nimport { InstancesGridDef, createGrid } from './instancesData.ts';\n\n// prettier-ignore\nconst OBJECTS = {\n  bunny: { file: 'bunny.obj', scale: 8 },\n  lucy: { file: 'lucy.obj', scale: 1 },\n  lucyJson: { file: 'lucy.json', scale: 1 },\n  dragon: { file: 'xyzrgb_dragon.obj', scale: 0.01 },\n  dragonJson: { file: 'xyzrgb_dragon.json', scale: 0.01 },\n  robot: { file: 'robot.obj', scale: 1 },\n  robotJson: { file: 'robot.json', scale: 1 },\n  cube: { file: 'cube.obj', scale: 1 },\n  plane: { file: 'plane.obj', scale: 1, texture: 'test-texture.png' },\n  planeSubdiv: { file: 'plane-subdiv.obj', scale: 0.5 },\n  displacedPlane: {\n    file: 'displaced-plane.obj',\n    scale: 0.2,\n    texture: 'test-texture.png',\n  },\n  // test flat shading - it WILL fail with 'cannot simplify' error.\n  displacedPlaneFlat: { file: 'displaced-plane-flat.obj', scale: 0.2 },\n  // jinx\n  jinxBackpack: { file: 'jinx/jinx_backpack.obj', scale: 1, texture: 'jinx/jinx_backpack.png' },\n  jinxBody: { file: 'jinx/jinx_body.obj', scale: 1, texture: 'jinx/jinx_body.png' },\n  jinxFace: { file: 'jinx/jinx_face.obj', scale: 1, texture: 'jinx/jinx_face.png' },\n  jinxHair: { file: 'jinx/jinx_hair.obj', scale: 1, texture: 'jinx/jinx_hair.png' },\n  jinxCombined: { file: 'jinx-combined/jinx-combined.obj', scale: 1, texture: 'jinx-combined/jinx-combined.png' },\n};\nexport type SceneObjectName = keyof typeof OBJECTS;\n\nexport type SceneObjectDef = ReturnType<typeof getSceneObjectDef>;\n\nexport function getSceneObjectDef(name: SceneObjectName) {\n  const result = OBJECTS[name];\n  if (!result) {\n    throw new Error(`Nonexistent object '${name}'`);\n  }\n  return result as {\n    file: string;\n    scale: number;\n    texture: string | undefined;\n  };\n}\n\nexport const SCENES = {\n  bunnySingle: [sceneModel('bunny', 1, 1)],\n  bunny: [sceneModel('bunny')],\n  bunnyRow: [sceneModel('bunny', 32768, 1)],\n  bunny1b: [sceneModel('bunny', 500, 500, 0.8)],\n  bunny1b_dense: [sceneModel('bunny', 500, 500, 0.5)],\n  lucySingle: [sceneModel('lucy', 1, 1)],\n  lucySingleJson: [sceneModel('lucyJson', 1, 1)],\n  lucy: [sceneModel('lucy', 10, 10, 0)],\n  lucy1b: [sceneModel('lucyJson', 110, 110, 0.7)],\n  dragon: [sceneModel('dragon', 1, 1)],\n  dragonJson: [sceneModel('dragonJson', 70, 70)],\n  robot: [sceneModel('robot', 1, 1)],\n  robotJson: [sceneModel('robotJson', 1, 1)],\n  cube: [sceneModel('cube', 1, 1)],\n  plane: [sceneModel('plane', 1, 1)],\n  planeSubdiv: [sceneModel('planeSubdiv', 1, 1)],\n  displacedPlane: [sceneModel('displacedPlane', 1, 1)],\n  displacedPlaneFlat: [sceneModel('displacedPlaneFlat', 1, 1)],\n  manyObjects: [\n    sceneModelUniformGrid('displacedPlane', 10, 2, 0),\n    sceneModelUniformGrid('bunny', 10, 2, 1),\n  ],\n  manyObjects2: [\n    sceneModelUniformGrid('lucyJson', 70, 1.2, 0),\n    sceneModelUniformGrid('dragonJson', 70, 1.2, 0.6),\n  ],\n  jinxCombined: [\n    // sceneModel('jinxCombined', 100, 100)\n    sceneModelUniformGrid('jinxCombined', 120, 0.7),\n  ],\n  jinx: {\n    models: [\n      'jinxBody',\n      'jinxFace',\n      'jinxHair',\n      'jinxBackpack',\n    ] as SceneObjectName[],\n    instances: createGrid(100, 100, 1.0),\n  },\n};\n\nexport type SceneName = keyof typeof SCENES;\nexport type SceneDesc = ValueOf<typeof SCENES>;\n\nfunction sceneModel(\n  model: SceneObjectName,\n  ...args: Parameters<typeof createGrid>\n) {\n  const instances = createGrid(...args);\n  return obj(model, instances);\n}\n\nfunction sceneModelUniformGrid(\n  model: SceneObjectName,\n  count: number,\n  spacing: number,\n  offset = 0\n) {\n  const instances = createGrid(count, count, spacing, offset, offset);\n  return obj(model, instances);\n}\n\nfunction obj(model: SceneObjectName, instances: InstancesGridDef) {\n  return { model, instances };\n}\n\nexport function isValidSceneName(scName: unknown): scName is SceneName {\n  return typeof scName === 'string' && Object.keys(SCENES).includes(scName);\n}\n", "import { SNIPPET_PACKING } from '../../passes/_shaderSnippets/pack.wgsl.ts';\nimport { FS_NORMAL_FROM_DERIVATIVES } from '../../passes/_shaderSnippets/shaderSnippets.wgls.ts';\n\nexport const SHADER_PARAMS = {\n  bindings: {\n    matrices: 0,\n    diffuseTexture: 1,\n    sampler: 2,\n  },\n};\n\n///////////////////////////\n/// SHADER CODE\n///////////////////////////\nconst b = SHADER_PARAMS.bindings;\n\nexport const SHADER_CODE = () => /* wgsl */ `\n\n@group(0) @binding(${b.matrices})\nvar<storage, read> _matrices: array<mat4x4<f32>>;\n\n@group(0) @binding(${b.diffuseTexture})\nvar _diffuseTexture: texture_2d<f32>;\n\n@group(0) @binding(${b.sampler})\nvar _sampler: sampler;\n\nstruct VertexOutput {\n  @builtin(position) position: vec4<f32>,\n  @location(0) positionWS: vec4f,\n  @location(1) normalWS: vec3f,\n  @location(2) uv: vec2f,\n};\n\n@vertex\nfn main_vs(\n  @location(0) positionWS: vec3f,\n  @location(1) inNormal : vec3f,\n  @location(2) inUV : vec2f,\n  @builtin(instance_index) inInstanceIndex: u32,\n) -> VertexOutput {\n  // NOTE: we render the model as-is, so no model matrix.\n  let projMat = _matrices[0];\n  let viewMat = _matrices[1 + inInstanceIndex];\n  let positionWS_4 = vec4f(positionWS.xyz, 1.0);\n  let positionProj = projMat * viewMat * positionWS_4;\n  \n  var result: VertexOutput;\n  result.position = positionProj;\n  result.positionWS = positionWS_4;\n  result.normalWS = inNormal;\n  result.uv = inUV;\n  return result;\n}\n\n${FS_NORMAL_FROM_DERIVATIVES}\n${SNIPPET_PACKING}\n\n@fragment\nfn main_fs(\n  fragIn: VertexOutput\n) -> @location(0) vec2f {\n  let c = textureSample(_diffuseTexture, _sampler, fragIn.uv).rgb;\n  // TODO [IGNORE] store diffuse texture's alpha instead of override with 1.0\n\n  let normalWS = normalize(fragIn.normalWS.xyz);\n  return vec2f(\n    packColor8888(vec4f(c.rgb, 1.0)),\n    packNormal(vec4f(normalWS, 0.0))\n  );\n}\n`;\n", "import { BYTES_U8_VEC4 } from '../constants.ts';\nimport { Dimensions, clamp } from './index.ts';\n\nconst toUNorm8 = (a: number) => {\n  a = a < 1 ? a * 255 : a;\n  return Math.floor(clamp(a, 0, 255));\n};\n\nexport function createFallbackTexture(\n  device: GPUDevice,\n  color: [number, number, number]\n) {\n  const size: Dimensions = { width: 4, height: 4 };\n  const channelCnt = 4; // 1 byte each\n\n  const texture = device.createTexture({\n    label: 'fallback-texture-0',\n    dimension: '2d',\n    size: [size.width, size.height, 1],\n    format: 'rgba8unorm',\n    usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,\n  });\n\n  // fill data\n  const data = new Uint8Array(size.width * size.height * channelCnt);\n  for (let x = 0; x < size.width; x++) {\n    for (let y = 0; y < size.height; y++) {\n      const offset = (x * size.width + y) * channelCnt;\n      data[offset] = toUNorm8(color[0]); // 0-255\n      data[offset + 1] = toUNorm8(color[1]); // 0-255\n      data[offset + 2] = toUNorm8(color[2]); // 0-255\n      data[offset + 3] = 255;\n    }\n  }\n\n  device.queue.writeTexture(\n    { texture },\n    data,\n    { bytesPerRow: size.width * BYTES_U8_VEC4 },\n    [size.width, size.height]\n  );\n  return texture;\n}\n\nexport function createSampler(device: GPUDevice, mode: GPUFilterMode) {\n  return device.createSampler({\n    label: 'default-sampler',\n    magFilter: mode,\n    minFilter: mode,\n    mipmapFilter: 'nearest',\n    addressModeU: 'repeat',\n    addressModeV: 'repeat',\n  });\n}\n", "import { Mat4, mat4 } from 'wgpu-matrix';\nimport { BYTES_F32, BYTES_VEC2, CONFIG } from '../../constants.ts';\nimport { BYTES_MAT4 } from '../../constants.ts';\nimport {\n  labelShader,\n  labelPipeline,\n  PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n  PIPELINE_DEPTH_STENCIL_ON,\n  useColorAttachment,\n  assignResourcesToBindings2,\n  createLabel,\n  useDepthStencilAttachment,\n} from '../../passes/_shared.ts';\nimport { SHADER_CODE, SHADER_PARAMS } from './renderImpostors.wgsl.ts';\nimport { BoundingSphere } from '../../utils/calcBounds.ts';\nimport { createArray, dgr2rad } from '../../utils/index.ts';\nimport { assertIsGPUTextureView } from '../../utils/webgpu.ts';\nimport { createSampler } from '../../utils/textures.ts';\nimport { VERTEX_ATTRIBUTES } from '../GPUOriginalMesh.ts';\n\nexport class ImpostorBillboardTexture {\n  public readonly textureView: GPUTextureView;\n\n  constructor(public readonly texture: GPUTexture) {\n    this.textureView = texture.createView();\n  }\n\n  bind = (idx: number): GPUBindGroupEntry => ({\n    binding: idx,\n    resource: this.textureView,\n  });\n}\n\nexport interface ImpostorMesh {\n  name: string;\n  vertexBuffer: GPUBuffer;\n  normalsBuffer: GPUBuffer;\n  uvBuffer: GPUBuffer;\n  indexBuffer: GPUBuffer;\n  triangleCount: number;\n  bounds: BoundingSphere;\n  texture: GPUTextureView | undefined;\n}\n\n// const OUT_TEXTURE_FORMAT: GPUTextureFormat = 'rgba8unorm'; // 8bit per channel, will be read as float [0-1]\nconst OUT_TEXTURE_FORMAT: GPUTextureFormat = 'rg32float';\nconst DEPTH_FORMAT: GPUTextureFormat = 'depth24plus';\nexport const IMPOSTOR_BYTES_PER_PIXEL = BYTES_VEC2;\n\nexport class ImpostorRenderer {\n  public static NAME: string = 'ImpostorRenderer';\n  private static CLEAR_COLOR = [0.0, 0.0, 0.0, 0.0];\n\n  private readonly pipeline: GPURenderPipeline;\n  private readonly matricesBuffer: GPUBuffer;\n  private readonly matricesF32: Float32Array;\n  private readonly sampler: GPUSampler;\n  private readonly depthTexture: GPUTexture;\n  private readonly depthTextureView: GPUTextureView;\n\n  constructor(\n    device: GPUDevice,\n    private readonly fallbackTexture: GPUTextureView,\n    private readonly viewCount = CONFIG.impostors.views,\n    private readonly textureSize = CONFIG.impostors.textureSize\n  ) {\n    assertIsGPUTextureView(this.fallbackTexture);\n\n    const shaderModule = device.createShaderModule({\n      label: labelShader(ImpostorRenderer),\n      code: SHADER_CODE(),\n    });\n\n    this.pipeline = device.createRenderPipeline({\n      label: labelPipeline(ImpostorRenderer),\n      layout: 'auto',\n      vertex: {\n        module: shaderModule,\n        entryPoint: 'main_vs',\n        buffers: VERTEX_ATTRIBUTES,\n      },\n      fragment: {\n        module: shaderModule,\n        entryPoint: 'main_fs',\n        targets: [{ format: OUT_TEXTURE_FORMAT }],\n      },\n      primitive: PIPELINE_PRIMITIVE_TRIANGLE_LIST,\n      depthStencil: { ...PIPELINE_DEPTH_STENCIL_ON, format: DEPTH_FORMAT },\n    });\n\n    this.matricesBuffer = device.createBuffer({\n      label: `${ImpostorRenderer.NAME}-matrices`,\n      size: BYTES_MAT4 * (1 + this.viewCount),\n      usage:\n        GPUBufferUsage.STORAGE |\n        GPUBufferUsage.INDIRECT |\n        GPUBufferUsage.COPY_DST |\n        GPUBufferUsage.COPY_SRC,\n    });\n    this.matricesF32 = new Float32Array(this.matricesBuffer.size / BYTES_F32);\n\n    this.sampler = createSampler(device, 'linear');\n\n    this.depthTexture = device.createTexture({\n      label: createLabel(ImpostorRenderer, 'depth'),\n      size: [this.textureSize * this.viewCount, this.textureSize],\n      format: DEPTH_FORMAT,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    this.depthTextureView = this.depthTexture.createView();\n  }\n\n  createImpostorTexture(\n    device: GPUDevice,\n    mesh: ImpostorMesh\n  ): ImpostorBillboardTexture {\n    const resultTexture = this.createResultTexture(device, mesh);\n\n    // render views\n    const cmdBuf = device.createCommandEncoder({\n      label: `${ImpostorRenderer.NAME}-${mesh.name}-cmd-buffer`,\n    });\n    const result = this.renderImpostorTexture(\n      device,\n      cmdBuf,\n      resultTexture,\n      mesh\n    );\n    device.queue.submit([cmdBuf.finish()]);\n\n    return result;\n  }\n\n  private createResultTexture(device: GPUDevice, mesh: ImpostorMesh) {\n    const sizeW = this.textureSize * this.viewCount;\n    const extraUsage: GPUTextureDescriptor['usage'] = CONFIG.isTest\n      ? GPUTextureUsage.COPY_SRC\n      : 0;\n\n    return device.createTexture({\n      label: createLabel(ImpostorRenderer, mesh.name),\n      dimension: '2d',\n      size: [sizeW, this.textureSize, 1],\n      format: OUT_TEXTURE_FORMAT,\n      usage:\n        GPUTextureUsage.TEXTURE_BINDING |\n        GPUTextureUsage.RENDER_ATTACHMENT |\n        extraUsage,\n    });\n  }\n\n  /** Render to the target texture */\n  private renderImpostorTexture(\n    device: GPUDevice,\n    cmdBuf: GPUCommandEncoder,\n    targetTexture: GPUTexture,\n    mesh: ImpostorMesh\n  ): ImpostorBillboardTexture {\n    // https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass\n    const targetTextureView = targetTexture.createView();\n    const renderPass = cmdBuf.beginRenderPass({\n      label: ImpostorRenderer.NAME,\n      colorAttachments: [\n        useColorAttachment(\n          targetTextureView,\n          ImpostorRenderer.CLEAR_COLOR,\n          'clear'\n        ),\n      ],\n      depthStencilAttachment: useDepthStencilAttachment(\n        this.depthTextureView,\n        'clear'\n      ),\n    });\n\n    // set render pass data\n    const bindings = this.createBindings(device, mesh);\n    renderPass.setVertexBuffer(0, mesh.vertexBuffer);\n    renderPass.setVertexBuffer(1, mesh.normalsBuffer);\n    renderPass.setVertexBuffer(2, mesh.uvBuffer);\n    renderPass.setIndexBuffer(mesh.indexBuffer, 'uint32');\n    renderPass.setPipeline(this.pipeline);\n    renderPass.setBindGroup(0, bindings);\n\n    const textureSize = this.textureSize;\n\n    // draw\n    for (let i = 0; i < this.viewCount; i++) {\n      renderPass.setViewport(\n        textureSize * i, // x\n        0, // y\n        textureSize, // w\n        textureSize, // h\n        0, // minDepth\n        1 // maxDepth\n      );\n      // instance index holds which view matrix to use\n      renderPass.drawIndexed(mesh.triangleCount * 3, 1, 0, 0, i);\n    }\n\n    // fin\n    renderPass.end();\n\n    return new ImpostorBillboardTexture(targetTexture);\n  }\n\n  private createBindings = (\n    device: GPUDevice,\n    mesh: ImpostorMesh\n  ): GPUBindGroup => {\n    const b = SHADER_PARAMS.bindings;\n\n    const projMat = this.getProjectionMat(mesh);\n    const rotDelta = 360.0 / this.viewCount; // e.g. 30dgr\n    const viewMats = createArray(this.viewCount).map((_, i) =>\n      mat4.rotationY(dgr2rad(rotDelta * i))\n    );\n    this.writeUniforms(device, projMat, viewMats);\n\n    const texture = mesh.texture || this.fallbackTexture;\n    assertIsGPUTextureView(texture);\n\n    return assignResourcesToBindings2(\n      ImpostorRenderer,\n      `${ImpostorRenderer.NAME}-${mesh.name}`,\n      device,\n      this.pipeline,\n      [\n        { binding: b.matrices, resource: { buffer: this.matricesBuffer } },\n        { binding: b.diffuseTexture, resource: texture },\n        { binding: b.sampler, resource: this.sampler },\n      ]\n    );\n  };\n\n  private writeUniforms(device: GPUDevice, projMat: Mat4, viewMats: Mat4[]) {\n    let offsetBytes = 0;\n    offsetBytes = this.writeMat4(offsetBytes, projMat);\n    viewMats.forEach((mat) => {\n      offsetBytes = this.writeMat4(offsetBytes, mat);\n    });\n    if (\n      offsetBytes !== this.matricesF32.byteLength ||\n      offsetBytes !== this.matricesBuffer.size\n    ) {\n      throw new Error(`Impostor matrices write error. GPUBuffer has ${this.matricesBuffer.size} bytes, CPU buffer is ${this.matricesF32.byteLength}, but have used ${offsetBytes} bytes.`); // prettier-ignore\n    }\n\n    device.queue.writeBuffer(this.matricesBuffer, 0, this.matricesF32);\n  }\n\n  // TODO copied from renderUniformsBuffer.ts. Use some BufferData/BufferWritter class?\n  private writeMat4(offsetBytes: number, mat: Mat4) {\n    const offset = offsetBytes / BYTES_F32;\n    for (let i = 0; i < 16; i++) {\n      this.matricesF32[offset + i] = mat[i];\n    }\n    return offsetBytes + BYTES_MAT4;\n  }\n\n  private getProjectionMat(mesh: ImpostorMesh) {\n    const b = mesh.bounds;\n    const r = b.radius;\n    return mat4.ortho(\n      b.center[0] - r,\n      b.center[0] + r,\n      b.center[1] - r,\n      b.center[1] + r,\n      b.center[2] - r,\n      b.center[2] + r\n    );\n  }\n}\n", "import { VERTS_IN_TRIANGLE } from '../constants.ts';\nimport { createArray, getTriangleCount } from '../utils/index.ts';\n\n/** Indices of the vertices. First index is the smaller number.\n *\n * Using object that has build-in == operator turns out to be fast.\n * Ideally it would be a number, but 32bits is too small. BigInt is slow.\n * We could try to use collision-prone hash for coarse phase\n * (something like collision detection) with the Map-based algo.\n */\nexport type Edge = string;\n\n// min, max used for easier isSameEdge()\nexport const createEdge = (ii: number, jj: number): Edge =>\n  `${Math.min(ii, jj)}-${Math.max(ii, jj)}`;\n\nexport function listAllEdges(indices: Uint32Array): Edge[] {\n  if (indices.length % VERTS_IN_TRIANGLE !== 0) {\n    throw new Error(\n      `Index buffer has ${indices.length} indices, cannot make triangles from this`\n    );\n  }\n\n  const result: Edge[] = [];\n  const triangleCount = getTriangleCount(indices);\n  const addEdge = (ii: number, jj: number) => result.push(createEdge(ii, jj)); // min, max used for easier isSameEdge()\n\n  for (let i = 0; i < triangleCount; i++) {\n    const i0 = indices[VERTS_IN_TRIANGLE * i];\n    const i1 = indices[VERTS_IN_TRIANGLE * i + 1];\n    const i2 = indices[VERTS_IN_TRIANGLE * i + 2];\n    addEdge(i0, i1);\n    addEdge(i0, i2);\n    addEdge(i1, i2);\n  }\n\n  return result;\n}\n\nexport const isSameEdge = (e0: Edge, e1: Edge): boolean => e0 === e1;\n\n/** Boundary edges - edge that belongs to only 1 triangle. */\nexport function findBoundaryEdges(allEdges: Edge[]): Edge[] {\n  const countEdgeRepeats = (e: Edge) => {\n    let repeats = 0;\n    allEdges.forEach((e2) => {\n      if (isSameEdge(e, e2)) repeats += 1;\n    });\n    return repeats;\n  };\n\n  // only in 1 triangle, so not shared by 2 triangles\n  return allEdges.filter((e) => countEdgeRepeats(e) == 1);\n}\n\n/** DEPENDS OF ALL MESHLETS SHARING SAME VERTEX BUFFER THAT DOES NOT HAVE DUPLICATES!\n *\n * Quadratic scaling with ln search.\n */\nexport function findAdjacentMeshlets_Iter(edgesPerMeshlet: Edge[][]) {\n  const edgesPerMeshlet2 = edgesPerMeshlet.map((m) => new Set(m));\n\n  const hasSharedEdge = (meshlet0: Set<string>, meshlet1: Set<string>) => {\n    for (const e0 of meshlet0) {\n      if (meshlet1.has(e0)) return true;\n    }\n    return false;\n  };\n\n  const result: number[][] = createArray(edgesPerMeshlet2.length).map(() => []);\n  for (let i = 0; i < edgesPerMeshlet2.length; i++) {\n    const meshlet0 = edgesPerMeshlet2[i];\n    for (let j = i + 1; j < edgesPerMeshlet2.length; j++) {\n      const meshlet1 = edgesPerMeshlet2[j];\n      if (i !== j && hasSharedEdge(meshlet0, meshlet1)) {\n        result[i].push(j);\n        result[j].push(i);\n      }\n    }\n  }\n  return result;\n}\n\n/** DEPENDS OF ALL MESHLETS SHARING SAME VERTEX BUFFER THAT DOES NOT HAVE DUPLICATES!\n *\n * Uses map to detect shared edges between meshlets.\n */\nexport function findAdjacentMeshlets_Map(edgesPerMeshlet: Edge[][]) {\n  const mmap = new Map<string, Array<number>>();\n  for (let i = 0; i < edgesPerMeshlet.length; i++) {\n    const meshlet0 = edgesPerMeshlet[i];\n    for (let j = 0; j < meshlet0.length; j++) {\n      const edgeHash = meshlet0[j];\n      const d = mmap.get(edgeHash) || [];\n      d.push(i);\n      mmap.set(edgeHash, d);\n    }\n  }\n  // console.log(mmap);\n\n  const result: number[][] = createArray(edgesPerMeshlet.length).map(() => []);\n  mmap.forEach((meshletIds2) => {\n    // console.log(meshletIds);\n    const meshletIds = Array.from(meshletIds2);\n    const l = meshletIds.length;\n    for (let i = 0; i < l; i++) {\n      for (let j = i + 1; j < l; j++) {\n        const m0 = meshletIds[i];\n        const m1 = meshletIds[j];\n        // remember, meshlets can share multiple edges\n        if (!result[m0].includes(m1)) result[m0].push(m1);\n        if (!result[m1].includes(m0)) result[m1].push(m0);\n      }\n    }\n  });\n  return result;\n}\n", "\nvar Module = (() => {\n  var _scriptDir = import.meta.url;\n  \n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module=typeof Module!=\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;if(Module[\"locateFile\"]){wasmBinaryFile=\"metis.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}}else{wasmBinaryFile=new URL(\"metis.wasm\",import.meta.url).toString()}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"x\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"z\"];addOnInit(Module[\"asm\"][\"y\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function ___call_sighandler(fp,sig){getWasmTableEntry(fp)(sig)}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}var PATH={isAbs:path=>path.charAt(0)===\"/\",splitPath:filename=>{var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join(\"/\"))},join2:(l,r)=>{return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){var randomBuffer=new Uint8Array(1);return()=>{crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else return()=>abort(\"randomDevice\")}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(p=>!!p),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){abort()}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,arrayBuffer=>{assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{path=PATH_FS.resolve(FS.cwd(),path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:node=>{var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:(parentid,name)=>{var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>{return node===node.parent},isMountpoint:node=>{return!!node.mounted},isFile:mode=>{return(mode&61440)===32768},isDir:mode=>{return(mode&61440)===16384},isLink:mode=>{return(mode&61440)===40960},isChrdev:mode=>{return(mode&61440)===8192},isBlkdev:mode=>{return(mode&61440)===24576},isFIFO:mode=>{return(mode&61440)===4096},isSocket:mode=>{return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:str=>{var flags=FS.flagModes[str];if(typeof flags==\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:flag=>{var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:(node,perms)=>{if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:dir=>{var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:(dir,name)=>{try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:(node,flags)=>{if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:(fd_start=0,fd_end=FS.MAX_OPEN_FDS)=>{for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:fd=>FS.streams[fd],createStream:(stream,fd_start,fd_end)=>{if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}},flags:{get:function(){return this.shared.flags},set:function(val){this.shared.flags=val}},position:{get:function(){return this.shared.position},set:function(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:mountpoint=>{var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:(parent,name)=>{return parent.node_ops.lookup(parent,name)},mknod:(path,mode,dev)=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:(path,mode)=>{mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:(path,mode)=>{mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:(path,mode)=>{var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:(path,mode,dev)=>{if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:path=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:path=>{var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:(path,dontFollow)=>{var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:path=>{return FS.stat(path,true)},chmod:(path,mode,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,true)},fchmod:(fd,mode)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:(path,uid,gid,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,true)},fchown:(fd,uid,gid)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:(path,len)=>{if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:(path,atime,mtime)=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:stream=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>{return stream.fd===null},llseek:(stream,offset,whence)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:(stream,offset,length)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync:(stream,buffer,offset,length,mmapFlags)=>{if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:(path,opts={})=>{opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir:path=>{var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:()=>{FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:()=>{FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:()=>{FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:()=>{var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:(parent,name)=>{var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:()=>{if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1)},ensureErrnoError:()=>{if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message=\"FS error\"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:()=>{FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:(input,output,error)=>{FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:()=>{FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:(path,dontResolveLastLink)=>{var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath:(path,dontResolveLastLink)=>{try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:(parent,name,properties,canRead,canWrite)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:(parent,name,input,output)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:stream=>{stream.seekable=false},close:stream=>{if(output&&output.buffer&&output.buffer.length){output(10)}},read:(stream,buffer,offset,length,pos)=>{var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||\"\",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node},createPreloadedFile:(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}},indexedDB:()=>{return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:()=>{return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=()=>{out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=()=>{var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=()=>{ok++;if(ok+fail==total)finish()};putRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:(paths,onload,onerror)=>{onload=onload||(()=>{});onerror=onerror||(()=>{});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=()=>{var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var getRequest=files.get(path);getRequest.onsuccess=()=>{if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAPU32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;tempI64=[Math.floor(stat.atime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.atime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=0;tempI64=[Math.floor(stat.mtime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.mtime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=0;tempI64=[Math.floor(stat.ctime.getTime()/1e3)>>>0,(tempDouble=Math.floor(stat.ctime.getTime()/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];HEAPU32[buf+96>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+104>>2]=tempI64[0],HEAP32[buf+108>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream}};function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:return-28}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function __emscripten_throw_longjmp(){throw Infinity}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _proc_exit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;_proc_exit(status)}var _exit=exitJS;function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function convertI32PairToI53Checked(lo,hi){return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var offset=convertI32PairToI53Checked(offset_low,offset_high);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _system(command){if(!command)return 0;setErrNo(52);return-1}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\"){return UTF8ToString(ret)}if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type===\"number\"||type===\"boolean\");var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();var asmLibraryArg={\"a\":___assert_fail,\"r\":___call_sighandler,\"j\":___syscall_fcntl64,\"t\":___syscall_ioctl,\"u\":___syscall_openat,\"o\":__emscripten_throw_longjmp,\"v\":_emscripten_memcpy_big,\"p\":_emscripten_resize_heap,\"w\":_exit,\"h\":_fd_close,\"s\":_fd_read,\"n\":_fd_seek,\"i\":_fd_write,\"d\":invoke_d,\"b\":invoke_i,\"l\":invoke_iii,\"k\":invoke_iiii,\"e\":invoke_iiiiiii,\"g\":invoke_iiiiiiiii,\"c\":invoke_vi,\"f\":invoke_vii,\"m\":invoke_viii,\"q\":_system};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _METIS_PartGraphKway=Module[\"_METIS_PartGraphKway\"]=function(){return(_METIS_PartGraphKway=Module[\"_METIS_PartGraphKway\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _setThrew=Module[\"_setThrew\"]=function(){return(_setThrew=Module[\"_setThrew\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};function invoke_i(index){var sp=stackSave();try{return getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_d(index){var sp=stackSave();try{return getWasmTableEntry(index)()}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}Module[\"ccall\"]=ccall;Module[\"cwrap\"]=cwrap;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return Module.ready\n}\n);\n})();\nexport default Module;", "import * as MetisModule from '../lib/metis3-1.js';\nimport { ValueOf, createArray } from '../utils/index.ts';\nimport { WasmModule } from '../utils/wasm-types.d.ts';\nimport { metisCall, wasmPtr } from '../utils/wasm.ts';\n\nlet METIS_MODULE: WasmModule | undefined = undefined;\n\n/** Used in tests to point to local .wasm file */\nexport const OVERRIDE_METIS_WASM_PATH = {\n  value: undefined as string | undefined,\n};\n\nexport async function getMetisModule() {\n  if (METIS_MODULE !== undefined) return METIS_MODULE;\n\n  const module: WasmModule = await MetisModule.default({\n    locateFile: (e: string) => OVERRIDE_METIS_WASM_PATH.value || e,\n  });\n  METIS_MODULE = module;\n  return module;\n}\n\n/**\n * Clear the reference so GC can collect the Instance and free the memory.\n * I am too lazy to re-Emscripten metis with free().\n */\nexport function metisFreeAllocations() {\n  METIS_MODULE = undefined;\n}\n\n/**\n * Metis manual section 5.4\n *\n * https://github.com/KarypisLab/METIS/blob/e0f1b88b8efcb24ffa0ec55eabb78fbe61e58ae7/include/metis.h#L263\n */\nexport const METIS_OPTION = {\n  OBJTYPE: 1 as const,\n  /** Specifies the matching scheme to be used during coarsening. */\n  CTYPE: 2 as const,\n  /** Determines the algorithm used during initial partitioning.  */\n  IPTYPE: 3 as const,\n  /** Determines the algorithm used for refinement. */\n  RTYPE: 4 as const,\n  /** ecifies that the coarsening will not perform any 2\u2013hop matchings when the standard matching approach fails to sufficiently coarsen the graph. */\n  NO2HOP: 20 as const,\n  /** Specifies the number of different partitionings that it will compute. */\n  NCUTS: 8 as const,\n  /** Specifies the number of iterations for the refinement algorithms at each stage of the uncoarsening process. */\n  NITER: 7 as const,\n  /** Specifies the maximum allowed load imbalance among the partitions. */\n  UFACTOR: 17 as const,\n  /** Specifies that the partitioning routines should try to minimize the maximum degree of the subdomain graph, i.e., the graph in which each partition is a node, and edges connect subdomains with a shared interface. */\n  MINCONN: 11 as const,\n  /** Specifies that the partitioning routines should try to produce partitions that are contiguous. */\n  CONTIG: 12 as const,\n  /** Specifies the seed for the random number generator. */\n  SEED: 9 as const,\n  /** start index is 0 or 1. */\n  NUMBERING: 18 as const,\n  /** Debug level. */\n  DBGLVL: 5 as const,\n};\n\n/** The maximum length of the options[] array. https://github.com/KarypisLab/METIS/blob/e0f1b88b8efcb24ffa0ec55eabb78fbe61e58ae7/include/metis.h#L162 */\nconst METIS_NOPTIONS = 40;\n\nexport type MetisOptions = Partial<\n  Record<ValueOf<typeof METIS_OPTION>, number>\n>;\n\nconst METIS_OK = 1; // Returned normally\nconst METIS_ERROR_INPUT = -2; // Returned due to erroneous inputs and/or options\nconst METIS_ERROR_MEMORY = -3; // Returned due to insufficient memory\nconst METIS_ERROR = -4; // Some other errors\n\n/**\n * Use metis to partition the graph.\n *\n * @param adjacency [vertex i][...other vertices to which i is connected]\n * @param nparts number of parts to partition the graph\n * @param opts\n * @returns array of size `nparts`, each contains vertex ids\n */\nexport function partitionGraph(\n  adjacency: number[][],\n  nparts: number,\n  opts: MetisOptions = {}\n) {\n  const [xadj, adjncy] = createAdjacencyData(adjacency);\n  return partitionGraphImpl(xadj, adjncy, nparts, opts);\n}\n\n/** Internal/test use mostly. Call `partitionGraph()` instead. */\nexport async function partitionGraphImpl(\n  xadj: number[],\n  adjncy: number[],\n  nparts: number,\n  opts: MetisOptions = {}\n) {\n  const module = await getMetisModule();\n\n  const i32Arr = (a: number[]) => wasmPtr(new Int32Array(a));\n  const i32 = (a: number) => i32Arr([a]);\n\n  const vertexCount = xadj.length - 1;\n  const constraintsCount = 1;\n  nparts = Math.ceil(nparts);\n  // console.log({ vertexCount, constraintsCount, nparts });\n\n  const objval = new Int32Array(1);\n  const parts = new Int32Array(vertexCount);\n  const options = createOptions(opts);\n\n  const returnCode = metisCall(module, 'number', 'METIS_PartGraphKway', [\n    i32(vertexCount), // idx_t *nvtxs,\n    i32(constraintsCount), // idx_t *ncon,\n    i32Arr(xadj), // idx_t *xadj,\n    i32Arr(adjncy), // idx_t *adjncy,\n    null, // idx_t *vwgt,\n    null, // idx_t *vsize,\n    // TODO [IGNORE] UE5 adjwgt: https://github.com/EpicGames/UnrealEngine/blob/ue5-main/Engine/Source/Developer/NaniteBuilder/Private/GraphPartitioner.cpp#L63\n    // https://youtu.be/eviSykqSUUw?si=GttgyFXof02ENUa4&t=1095\n    null, // idx_t *adjwgt,\n    i32(nparts), // idx_t *nparts,\n    null, // real_t *tpwgts,\n    null, // real_t *ubvec,\n    // TODO [IGNORE] UE5 options: https://github.com/EpicGames/UnrealEngine/blob/ue5-main/Engine/Source/Developer/NaniteBuilder/Private/GraphPartitioner.cpp#L50\n    wasmPtr(options), // idx_t *options,\n    wasmPtr(objval, 'out'), // idx_t *objval,\n    wasmPtr(parts, 'out'), // idx_t *part\n  ]);\n  checkErrCode(returnCode);\n  // console.log('partitionGraph result', parts);\n\n  const result: number[][] = createArray(nparts).map((_) => []);\n  parts.forEach((partitionIdx, vertIdx) => {\n    result[partitionIdx].push(vertIdx);\n  });\n\n  return result;\n}\n\n/** https://github.com/KarypisLab/METIS/blob/e0f1b88b8efcb24ffa0ec55eabb78fbe61e58ae7/libmetis/auxapi.c#L36 */\nfunction createOptions(opts: MetisOptions): Int32Array {\n  const result = new Int32Array(METIS_NOPTIONS);\n  result.fill(-1);\n\n  Object.entries(opts).forEach(([k, v]) => {\n    if (v !== undefined) result[parseInt(k, 10)] = v;\n  });\n  return result;\n}\n\nfunction checkErrCode(code: number) {\n  switch (code) {\n    case METIS_OK:\n      return;\n    case METIS_ERROR_INPUT:\n      throw new Error(\n        '[Metis error] METIS_ERROR_INPUT (Returned due to erroneous inputs and/or options)'\n      );\n    case METIS_ERROR_MEMORY:\n      throw new Error(\n        '[Metis error] METIS_ERROR_MEMORY (Returned due to insufficient memory)'\n      );\n    case METIS_ERROR:\n    default:\n      throw new Error(`[Metis error] code=${code} (Some other error)`);\n  }\n}\n\n/**\n * # Section 5.5 Graph data structure\n *\n * In this format the adjacency structure of a graph with **n vertices** and **m edges** is represented using two arrays `xadj` and `adjncy`. The `xadj` array is of size n + 1 whereas the `adjncy` array is of size 2m (this is because for each edge between vertices v and u we actually store both (v; u) and (u; v)).\n *\n * The adjacency structure of the graph is stored as follows. Assuming that **vertex numbering starts from 0 (C style)**, then the **adjacency list of vertex i** is stored in array `adjncy` starting at index `xadj[i]` and ending at (but not including) index `xadj[i + 1]` (i.e., `adjncy[xadj[i]]` through and including `adjncy[xadj[i + 1]-1]`).\n *\n * That is, for each vertex i, its adjacency list is stored in consecutive locations in the array `adjncy`, and the array `xadj` is used to point to where it begins and where it ends.\n */\nexport function createAdjacencyData(adjacency: number[][]) {\n  const adjncy: number[] = [];\n  const xadj: number[] = [0];\n\n  for (let i = 0; i < adjacency.length; i++) {\n    adjncy.push(...adjacency[i]);\n    xadj.push(adjncy.length);\n  }\n\n  return [xadj, adjncy];\n}\n", "import { CONFIG, VERTS_IN_TRIANGLE } from '../constants.ts';\nimport { MeshletId } from '../scene/naniteObject.ts';\nimport {\n  clamp,\n  formatPercentageNumber,\n  getTriangleCount,\n} from '../utils/index.ts';\nimport { BoundingSphere, calculateBounds } from '../utils/calcBounds.ts';\nimport { createMeshlets, splitIndicesPerMeshlets } from './createMeshlets.ts';\nimport {\n  listAllEdges,\n  findBoundaryEdges,\n  Edge,\n  findAdjacentMeshlets_Iter,\n  findAdjacentMeshlets_Map,\n} from './edgesUtils.ts';\nimport { metisFreeAllocations, partitionGraph } from './partitionGraph.ts';\nimport { calculateTargetIndexCount, simplifyMesh } from './simplifyMesh.ts';\nimport { ParsedMesh } from '../scene/objLoader.ts';\n\nconst findAdjacentMeshlets = CONFIG.nanite.preprocess.useMapToFindAdjacentEdges\n  ? findAdjacentMeshlets_Map\n  : findAdjacentMeshlets_Iter;\n\nconst DEBUG = false;\n\n/** Progress [0..1]. Promise, so you can yield thread (for DOM updates) if you want */\nexport type MeshPreprocessProgressCb = (progress: number) => Promise<void>;\n\n/** Sometimes you get simplification error 0 and then error for children and parent are same. Would render both at same time. */\nconst MINIMAL_SIMPLICATION_ERROR = 0.000000001;\n\nlet NEXT_MESHLET_ID = 0;\n\n/**\n * Meshlet when constructing the tree. This is an intermediary structure.\n * Later on we will convert it to 'NaniteMeshletTreeNode'.\n *\n * WIP - work in progress\n */\nexport interface MeshletWIP {\n  id: MeshletId;\n  /** In tree, these are the children nodes */\n  createdFrom: MeshletWIP[];\n  /** 0 for leaf, N for root (e.g. 6 is the root for bunny.obj) */\n  lodLevel: number;\n  indices: Uint32Array;\n  boundaryEdges: Edge[];\n\n  // Nanite error calc:\n  /** ## CALCULATED DURING CREATION!\n   * Simplification error when the meshlet was created. Shared between all the meshlets created from the same lower level (more detailed) meshlets */\n  maxSiblingsError: number;\n  /** ## CALCULATED DURING CREATION!\n   *  Combined bounds of the (lower level, more detailed) meshlets used to create this meshlet. Shared with other meshlets created from the same meshlets */\n  sharedSiblingsBounds: BoundingSphere;\n  /** ## ASSINGED WHEN MORE COARSE MESHLET USES US AS A BASE!\n   * Parent/higher-level meshlets means created from this meshlet. `Infinity` for root (most coarse) meshlet. */\n  parentError: number;\n  /** ## ASSINGED WHEN MORE COARSE MESHLET USES US AS A BASE!\n   * Parent/higher-level meshlets means created from this meshlet. `undefined` for root (most coarse) meshlet. */\n  parentBounds: BoundingSphere | undefined;\n}\n\nexport const isWIP_Root = (m: Pick<MeshletWIP, 'parentBounds'>) =>\n  m.parentBounds === undefined;\n\nexport async function createNaniteMeshlets(\n  parsedMesh: ParsedMesh,\n  indices: Uint32Array,\n  progressCb?: MeshPreprocessProgressCb\n): Promise<MeshletWIP[]> {\n  const np = CONFIG.nanite.preprocess;\n  const DECIMATE_FACTOR = np.simplificationDecimateFactor;\n  const SIMPLIFICATION_FACTOR_REQ = np.simplificationFactorRequirement;\n  const SIMPLIFICATION_FACTOR_REQ_BETWEEN_LEVELS =\n    1.0 - np.simplificationFactorRequirementBetweenLevels;\n  const SIMPLIFICATION_TARGET_ERROR_MULTIPLIER =\n    np.simplificationTargetErrorMultiplier;\n  const MAX_LODS = np.maxLods;\n\n  NEXT_MESHLET_ID = 0;\n  const estimatedMeshletCount = estimateFinalMeshletCount(indices); // guess for progress stats\n\n  const allMeshlets: MeshletWIP[] = [];\n  let lodLevel = 0;\n  // does not matter, bottom meshlets have error 0, so they always pass\n  // the 'has error < threshold' check. They only depend on the parent's error.\n  // If the parent also passes the check, the parent should be rendered instead\n  const mockBounds = calculateBounds(parsedMesh.positions, indices).sphere;\n  const bottomMeshlets = await splitIntoMeshlets(indices, 0.0, [], mockBounds);\n\n  let currentMeshlets = bottomMeshlets;\n  lodLevel += 1;\n  let simplificationTargetError =\n    CONFIG.nanite.preprocess.simplificationTargetError;\n  let lastLevelTriangeCount = -1;\n\n  for (; lodLevel < MAX_LODS + 1; lodLevel++) {\n    // break condition: nothing left to minimize\n    // prettier-ignore\n    if (currentMeshlets.length <= 1) {\n      // console.log(`Did not fill all ${MAX_LODS} LOD levels, mesh is too small`);\n      break;\n    }\n\n    // break condition: no change in triangle count between 2 last LOD levels\n    const startTriangeCount = getMeshletsTriangleCount(currentMeshlets);\n    if (startTriangeCount === lastLevelTriangeCount) {\n      console.warn(`LOD iteration failed to simplify even a single triangle at level ${lodLevel}. Stopping at ${currentMeshlets.length} meshlets.`); // prettier-ignore\n      break;\n    }\n\n    // break condition: we started removing too few triangles for us to bother continuing\n    const removedTrisStr = lodLevel == 1 ? '' : `Previous level removed ${formatPercentageNumber(lastLevelTriangeCount - startTriangeCount, lastLevelTriangeCount)} of the remaining triangles.`; // prettier-ignore\n    const simplificationBetweenLevels = 1.0 - (startTriangeCount / lastLevelTriangeCount); // prettier-ignore\n    const removedEnough =\n      simplificationBetweenLevels >= SIMPLIFICATION_FACTOR_REQ_BETWEEN_LEVELS;\n    if (lodLevel > 1 && !removedEnough) {\n      console.warn(`LOD iteration became too ineffective at level ${lodLevel}. ${removedTrisStr} Stopping at ${currentMeshlets.length} meshlets.`); // prettier-ignore\n      break;\n    }\n\n    // log\n    console.log(`Creating LOD level ${lodLevel}. Starting with ${startTriangeCount} triangles (${currentMeshlets.length} meshlets). ${removedTrisStr}`); // prettier-ignore\n    lastLevelTriangeCount = startTriangeCount;\n\n    // 1. group meshlets into groups of 4\n    // e.g. 33 meshlets is 9 groups (last one is 1 meshlet)\n    const GROUP_SIZE = 4;\n    const nparts = Math.ceil(currentMeshlets.length / GROUP_SIZE);\n    let partitioned = [currentMeshlets];\n    if (currentMeshlets.length > GROUP_SIZE) {\n      const adjacency = findAdjacentMeshlets(\n        currentMeshlets.map((m) => m.boundaryEdges)\n      );\n      // each part is 4 meshlets\n      const meshletIdxPerPart = await partitionGraph(adjacency, nparts, {});\n      partitioned = meshletIdxPerPart.map((indices) => {\n        return indices.map((i) => currentMeshlets[i]);\n      });\n    }\n    if (DEBUG) {\n      // prettier-ignore\n      console.log(\n        `[LOD ${lodLevel}] Starting with ${currentMeshlets.length} meshlets.`,\n        `Partition into groups of <=4 meshlets:`, partitioned\n      );\n    }\n\n    // 2. for each group of 4 meshlets\n    const newlyCreatedMeshlets: MeshletWIP[] = [];\n    for (const childMeshletGroup of partitioned) {\n      // 2.1 [GROUP] merge triangles from all meshlets in the group\n      const megaMeshlet: Uint32Array = mergeMeshlets(...childMeshletGroup);\n\n      // 2.2 [GROUP] simplify to remove not needed edges/vertices in the middle\n      const targetIndexCount = calculateTargetIndexCount(\n        megaMeshlet.length,\n        DECIMATE_FACTOR\n      );\n      const simplifiedMesh = await simplifyMesh(parsedMesh, megaMeshlet, {\n        targetIndexCount,\n        targetError: simplificationTargetError,\n        lockBorders: true, // important!\n      });\n\n      // AKA percent of triangles still left after simplify.\n      // Check if we simplified enough. If we could not simplify further, no point\n      // in continuing for this group for higher levels\n      const trianglesBefore = getTriangleCount(megaMeshlet);\n      const trianglesAfter = getTriangleCount(simplifiedMesh.indexBuffer);\n      const simplificationFactor = trianglesAfter / trianglesBefore;\n      if (simplificationFactor > SIMPLIFICATION_FACTOR_REQ) {\n        // Simplification unsuccessful. This is OK for complicated objects\n        // Current `childMeshlet` will be roots of the LOD tree (no parent).\n        console.warn(`Part of the mesh could not be simplified more (LOD level=${lodLevel}). Reduced from ${trianglesBefore} to ${formatPercentageNumber(trianglesAfter, trianglesBefore)} triangles`); // prettier-ignore\n        continue;\n      }\n\n      // simplification went OK, calculate meshlet data\n      const errorNow = Math.max(\n        simplifiedMesh.error * simplifiedMesh.errorScale,\n        MINIMAL_SIMPLICATION_ERROR\n      );\n      const childrenError = Math.max(\n        ...childMeshletGroup.map((m) => m.maxSiblingsError)\n      );\n      const totalError = errorNow + childrenError;\n      const bounds = calculateBounds(parsedMesh.positions, megaMeshlet).sphere;\n\n      // 2.3 [GROUP] split into new meshlets. Share: simplificationError, bounds (both are used in nanite to reproject the error)\n      let newMeshlets: MeshletWIP[];\n      if (partitioned.length === 1) {\n        // this happens on last iteration, when < 4 meshlets\n        // prettier-ignore\n        const rootMeshlet = await createMeshletWip(simplifiedMesh.indexBuffer, totalError, childMeshletGroup, bounds);\n        newMeshlets = [rootMeshlet];\n      } else {\n        // prettier-ignore\n        newMeshlets = await splitIntoMeshlets(simplifiedMesh.indexBuffer, totalError, childMeshletGroup, bounds);\n      }\n\n      if (DEBUG) {\n        // prettier-ignore\n        console.log(\n          `\\tTry simplify (intial=${getTriangleCount(megaMeshlet)} into target=${getTriangleCount(targetIndexCount)} tris), got ${getTriangleCount(simplifiedMesh.indexBuffer)} tris (${(100.0 * simplificationFactor).toFixed(2)}%).`,\n          'Meshlets:', newMeshlets\n        );\n      }\n\n      // update all lower level meshlets with parent data.\n      // This way they all take same decision when deciding if render self or parent\n      childMeshletGroup.forEach((childMeshlet) => {\n        childMeshlet.parentError = totalError; // set based on simplify, not meshlets!\n        childMeshlet.parentBounds = bounds;\n        // childMeshlet.maxSiblingsError = childrenError; // NO! DO NOT EVER TOUCH THIS\n      });\n      newlyCreatedMeshlets.push(...newMeshlets);\n    }\n\n    // check if the base mesh (LOD level 0) is even simplify-able into LOD level 1\n    if (lodLevel == 1 && newlyCreatedMeshlets.length == 0) {\n      throw new SimplificationError(lodLevel - 1, parsedMesh.vertexCount);\n    }\n\n    currentMeshlets = newlyCreatedMeshlets;\n    simplificationTargetError *= SIMPLIFICATION_TARGET_ERROR_MULTIPLIER;\n  }\n\n  // We have filled all LOD tree levels (or reached MAX_LODS iters).\n  // By now the LOD tree is complete\n\n  // mass free the memory, see the JSDocs of the fn.\n  metisFreeAllocations();\n\n  return allMeshlets;\n\n  /////////////\n  /// Utils\n\n  async function splitIntoMeshlets(\n    indices: Uint32Array,\n    simplificationError: number,\n    createdFrom: MeshletWIP[],\n    sharedSiblingsBounds: BoundingSphere\n  ) {\n    const meshletsOpt = await createMeshlets(parsedMesh, indices, {\n      maxVertices: CONFIG.nanite.preprocess.meshletMaxVertices,\n      maxTriangles: CONFIG.nanite.preprocess.meshletMaxTriangles,\n      coneWeight: CONFIG.nanite.preprocess.meshletBackfaceCullingConeWeight,\n    });\n    // during init: create tons of small meshlets\n    // during iter: split simplified mesh into 2+ meshlets\n    const meshletsIndices = splitIndicesPerMeshlets(meshletsOpt);\n\n    const meshlets: MeshletWIP[] = await Promise.all(\n      meshletsIndices.map((indices) => {\n        return createMeshletWip(\n          indices,\n          simplificationError,\n          createdFrom,\n          sharedSiblingsBounds\n        );\n      })\n    );\n\n    return meshlets;\n  }\n\n  async function createMeshletWip(\n    indices: Uint32Array,\n    simplificationError: number,\n    createdFrom: MeshletWIP[],\n    sharedSiblingsBounds: BoundingSphere\n  ): Promise<MeshletWIP> {\n    const edges = listAllEdges(indices);\n    const boundaryEdges = findBoundaryEdges(edges);\n    const m: MeshletWIP = {\n      id: NEXT_MESHLET_ID,\n      indices,\n      boundaryEdges,\n      maxSiblingsError: simplificationError,\n      parentError: Infinity,\n      sharedSiblingsBounds,\n      parentBounds: undefined,\n      lodLevel,\n      createdFrom,\n    };\n    NEXT_MESHLET_ID += 1;\n    allMeshlets.push(m);\n    await reportProgress();\n    return m;\n  }\n\n  async function reportProgress() {\n    const progress = clamp(allMeshlets.length / estimatedMeshletCount, 0, 1);\n    // console.log({ now: allMeshlets.length, estimatedMeshletCount, progress });\n    await progressCb?.(progress);\n  }\n}\n\nfunction mergeMeshlets(...meshletGroup: MeshletWIP[]): Uint32Array {\n  const len = meshletGroup.reduce((acc, m) => acc + m.indices.length, 0);\n  const result = new Uint32Array(len);\n\n  // copy all indices into a single Uint32Array one by one\n  let nextIdx = 0;\n  meshletGroup.forEach((m) => {\n    m.indices.forEach((idx) => {\n      result[nextIdx] = idx;\n      nextIdx += 1;\n    });\n  });\n\n  return result;\n}\n\n/**\n * Guesses how many meshlets from indices. Not exact,\n * but seems ~OK from the experiments/\n */\nfunction estimateFinalMeshletCount(indices: Uint32Array) {\n  const EXTRA_BOTTOM_LEVEL_MESHLETS = 1.5;\n  const AVG_MESHLET_REDUCTION_PER_LEVEL = 0.66;\n\n  const triCnt = indices.length / VERTS_IN_TRIANGLE;\n  let lastLevelMeshlets =\n    Math.ceil(triCnt / CONFIG.nanite.preprocess.meshletMaxTriangles) *\n    EXTRA_BOTTOM_LEVEL_MESHLETS;\n  let totalMeshlets = lastLevelMeshlets;\n\n  while (lastLevelMeshlets > 1) {\n    const nextLevelMeshlets = Math.floor(\n      lastLevelMeshlets * AVG_MESHLET_REDUCTION_PER_LEVEL\n    );\n    totalMeshlets += nextLevelMeshlets;\n    lastLevelMeshlets = nextLevelMeshlets;\n  }\n\n  return totalMeshlets;\n}\n\nexport class SimplificationError extends Error {\n  constructor(lodLevel: number, vertexCount: number) {\n    // Flat shading turns each triangle into something like it's own sub-mesh.\n    // All 3 triangle vertices share same normal, but a triangle\n    // next to it has different normal, so 3 more vertices.\n    // In that case, 2 triangles next to each other have 6 different unique\n    // vertices instead of 4. This is impossible to simplify.\n    // This could be enforced in code, but I'm too lazy.\n\n    // prettier-ignore\n    super(\n      `Failed to simplify the mesh. Was not able to simplify beyond LOD level ${lodLevel}. This usually happens if you have duplicated vertices (${vertexCount}, should roughly match Blender's). One cause could be a flat shading or tons of UV islands.`\n    );\n  }\n}\n\nfunction getMeshletsTriangleCount(mx: MeshletWIP[]) {\n  const idxCnt = mx.reduce((acc, m) => acc + m.indices.length, 0);\n  return getTriangleCount(idxCnt);\n}\n", "import { CONFIG } from '../../constants.ts';\nimport { isSameBoundingSphere } from '../../utils/calcBounds.ts';\nimport { NaniteMeshletTreeNode, NaniteObject } from '../naniteObject.ts';\n\nconst throwErr = (msg: string) => {\n  throw new Error(`Internal error, invalid nanite LOD tree. ${msg}`); // prettier-ignore\n};\n\nexport function assertValidNaniteObject(naniteObject: NaniteObject) {\n  const meshletsToCheck = [...naniteObject.roots];\n  const visitedMeshlets = new Set<NaniteMeshletTreeNode['id']>([]);\n\n  while (meshletsToCheck.length > 0) {\n    const meshlet = meshletsToCheck.pop()!; // remove last from queue - depth first\n    if (visitedMeshlets.has(meshlet.id)) {\n      continue;\n    }\n    visitedMeshlets.add(meshlet.id);\n\n    assertHaveSameParent(meshlet.createdFrom);\n    assertHasHigherErrorThanChildren(meshlet);\n    assertHasValidParentData(naniteObject, meshlet);\n\n    meshlet.createdFrom.forEach((m) => {\n      meshletsToCheck.push(m);\n    });\n  }\n\n  if (visitedMeshlets.size !== naniteObject.meshletCount) {\n    throwErr(`Some meshlets were not added to LOD tree. Tree contains ${visitedMeshlets.size} nodes, while expected ${naniteObject.meshletCount}`); // prettier-ignore\n  }\n}\n\nfunction assertHasHigherErrorThanChildren(meshlet: NaniteMeshletTreeNode) {\n  const myError = meshlet.maxSiblingsError;\n  meshlet.createdFrom.forEach((m) => {\n    const childError = m.maxSiblingsError;\n    if (myError <= childError) {\n      throwErr(`The error should increase as we go higher. My error if ${myError}, while child's is ${childError} (+${childError-myError})`); // prettier-ignore\n    }\n  });\n}\n\nfunction assertHaveSameParent(meshlets: NaniteMeshletTreeNode[]) {\n  if (meshlets.length <= 1) {\n    return; // nothing to check\n  }\n  const refMeshlet = meshlets[0];\n\n  for (let i = 1; i < meshlets.length; i++) {\n    const m = meshlets[i];\n    if (!isSameBoundingSphere(m.parentBounds, refMeshlet.parentBounds)) {\n      throwErr(`Meshlets should have same 'parentBounds'`); // prettier-ignore\n    }\n\n    // NOTE: we are testing by actually breaking this condition. Makes it easier.\n    if (!CONFIG.isTest && m.parentError !== refMeshlet.parentError) {\n      throwErr(`Meshlets should have same 'parentError'`); // prettier-ignore\n    }\n  }\n}\n\n// TODO [LOW] implement. Kinda awakward with current tree structure. You have to find all meshlets created from same meshlets as us\n// function assertHasSameErrorAsSiblings() {\n// if (m.sharedSiblingsBounds !== refMeshlet.sharedSiblingsBounds) {\n// throwErr(`Meshlets should have same 'sharedSiblingsBounds'`); // prettier-ignore\n// }\n// if (m.maxSiblingsError !== refMeshlet.maxSiblingsError) {\n// throwErr(`Meshlets should have same 'maxSiblingsError'`); // prettier-ignore\n// }\n// }\n\nfunction assertHasValidParentData(\n  obj: NaniteObject,\n  meshlet: NaniteMeshletTreeNode\n) {\n  const isRoot = obj.roots.includes(meshlet);\n\n  if (isRoot) {\n    // root should have empty/invalid parent fields\n    if (isFinite(meshlet.parentError)) {\n      throwErr(`Root node should have parent error INFINITY, was ${meshlet.parentError}`); // prettier-ignore\n    }\n    if (meshlet.parentBounds !== undefined) {\n      throwErr(`Root node should have no parent bounds, was ${JSON.stringify(meshlet.parentBounds)}`); // prettier-ignore\n    }\n  } else {\n    // child node\n    // NOTE: we are testing by actually breaking this condition. Makes it easier.\n    if (!CONFIG.isTest && !isFinite(meshlet.parentError)) {\n      throwErr(`Child node should have valid parent error, was INFINITY`); // prettier-ignore\n    }\n    if (meshlet.parentBounds === undefined) {\n      throwErr(`Child node should have valid parent bounds`); // prettier-ignore\n    }\n  }\n}\n", "import { BYTES_U32, CONFIG } from '../../constants.ts';\nimport { NaniteMeshletTreeNode, NaniteObject } from '../naniteObject.ts';\nimport { createArray, getBytesForTriangles } from '../../utils/index.ts';\nimport { MeshletWIP, isWIP_Root } from '../../meshPreprocessing/index.ts';\nimport { calculateBounds } from '../../utils/calcBounds.ts';\nimport { GPUOriginalMesh } from '../GPUOriginalMesh.ts';\nimport { ParsedMesh } from '../objLoader.ts';\nimport { assertValidNaniteObject } from '../utils/assertValidNaniteObject.ts';\nimport { NaniteInstancesData } from '../instancesData.ts';\nimport { ImpostorBillboardTexture } from '../renderImpostors/renderImpostors.ts';\nimport { NaniteObjectBuffers } from '../naniteBuffers/index.ts';\n\nexport function createNaniteObject(\n  device: GPUDevice,\n  name: string,\n  originalMesh: GPUOriginalMesh,\n  loadedObj: ParsedMesh,\n  allWIPMeshlets: MeshletWIP[],\n  instances: NaniteInstancesData,\n  impostor: ImpostorBillboardTexture\n): NaniteObject {\n  const naniteBuffers = new NaniteObjectBuffers(\n    device,\n    name,\n    originalMesh,\n    loadedObj,\n    allWIPMeshlets,\n    instances.count\n  );\n\n  const naniteObject = new NaniteObject(\n    name,\n    loadedObj.bounds,\n    originalMesh,\n    naniteBuffers,\n    impostor,\n    instances\n  );\n\n  // write meshlets to the LOD tree\n  let indexBufferOffsetBytes = 0;\n  let nextId = 0; // id in the index buffer order\n  const rewriteIds = createArray(naniteObject.meshletCount);\n\n  // array of [parentNode, meshletToCheck]\n  const roots = allWIPMeshlets.filter(isWIP_Root);\n  const meshletsToCheck: Array<\n    [NaniteMeshletTreeNode | undefined, MeshletWIP]\n  > = roots.map((m) => [undefined, m]);\n\n  while (meshletsToCheck.length > 0) {\n    const [parentNode, meshlet] = meshletsToCheck.shift()!; // remove 1st from queue\n\n    if (naniteObject.contains(meshlet.id)) {\n      continue;\n    }\n\n    // create meshlet\n    const ownBounds = calculateBounds(loadedObj.positions, meshlet.indices);\n    const node = naniteObject.addMeshlet(\n      parentNode,\n      meshlet,\n      indexBufferOffsetBytes / BYTES_U32,\n      ownBounds\n    );\n\n    // write index buffer slice\n    device.queue.writeBuffer(\n      naniteBuffers.indexBuffer,\n      indexBufferOffsetBytes,\n      meshlet.indices,\n      0\n    );\n    indexBufferOffsetBytes += getBytesForTriangles(node.triangleCount);\n\n    // rewrite id's to be in index buffer order\n    rewriteIds[meshlet.id] = nextId;\n    nextId += 1;\n\n    // schedule child nodes processing\n    meshlet.createdFrom.forEach((m) => {\n      if (m) {\n        meshletsToCheck.push([node, m]);\n      }\n    });\n  }\n\n  // assert all added OK\n  if (allWIPMeshlets.length !== naniteObject.allMeshlets.length) {\n    // prettier-ignore\n    throw new Error(`Created ${allWIPMeshlets.length} meshlets, but only ${naniteObject.allMeshlets.length} were added to the LOD tree? Please verify '.createdFrom' for all meshlets.`);\n  }\n\n  // rewrite id's to be in index buffer order\n  // This should be the last step, as we use ids all over the place.\n  // After this step, MeshletWIP[_].id !== naniteLODTree.allMeshlets[_].id\n  naniteObject.allMeshlets.forEach((m) => {\n    m.id = rewriteIds[m.id];\n  });\n\n  // upload meshlet data to the GPU\n  naniteObject.finalizeNaniteObject(device);\n\n  // finalize\n  assertValidNaniteObject(naniteObject);\n\n  // print stats\n  if (!CONFIG.isTest) {\n    naniteObject.printStats();\n  }\n\n  return naniteObject;\n}\n", "import * as objLoader from 'webgl-obj-loader';\nimport {\n  copyToTypedArray,\n  createArray,\n  getVertexCount,\n} from '../utils/index.ts';\nimport { vec3 } from 'wgpu-matrix';\nimport { optimizeMeshBuffers } from '../meshPreprocessing/optimizeMeshBuffers.ts';\nimport { BYTES_F32, BYTES_VEC3 } from '../constants.ts';\nimport { Bounds3d, calculateBounds } from '../utils/calcBounds.ts';\n\nconst Mesh = objLoader.default?.Mesh || objLoader.Mesh; // deno vs chrome\nconst Layout = objLoader.default?.Layout || objLoader.Layout; // deno vs chrome\n\ninterface ObjMesh {\n  indices: number[];\n  vertices: number[];\n  vertexNormals?: Array<number | typeof NaN>;\n  textures?: Array<number | typeof NaN>;\n}\nconst vertexCount = (mesh: ObjMesh) => Math.ceil(mesh.vertices.length / 3);\n\nexport interface ParsedMesh {\n  vertexCount: number;\n  positions: Float32Array;\n  positionsStride: number; // in bytes\n  normals: Float32Array;\n  uv: Float32Array;\n  verticesAndAttributes: Float32Array;\n  verticesAndAttributesStride: number; // in bytes\n  indices: Uint32Array;\n  indicesCount: number;\n  bounds: Bounds3d;\n}\n\nexport async function loadObjFile(\n  objText: string,\n  scale: number\n): Promise<ParsedMesh> {\n  const mesh = new Mesh(objText) as ObjMesh;\n  cleanupRawOBJData(mesh, scale);\n  // console.log(mesh);\n\n  const vertexCountInitial = getVertexCount(mesh.vertices);\n  const indicesInitial = copyToTypedArray(Uint32Array, mesh.indices);\n\n  // create a single buffer that containst ALL vertex attributes\n  const layout = new Layout(Layout.POSITION, Layout.NORMAL, Layout.UV);\n  // deno-lint-ignore no-explicit-any\n  const verticesAndAttributesU8 = (mesh as any).makeBufferData(layout);\n  const verticesAndAttributes = new Float32Array(verticesAndAttributesU8);\n\n  // optimize vertex and index buffer\n  const strideBytes = layout.stride; // 32\n  const strideF32 = strideBytes / BYTES_F32; // 8\n  const [verticesNew, indicesNew] = await optimizeMeshBuffers(\n    verticesAndAttributes,\n    vertexCountInitial,\n    strideBytes,\n    indicesInitial\n  );\n\n  // split optimized vertex buffer into per-attribute copies\n  const attributes = splitVerticesWithAttributesIntoSeparateLists(\n    verticesNew,\n    strideF32\n  );\n\n  return {\n    vertexCount: attributes.vertexCount,\n    positions: attributes.positions,\n    positionsStride: BYTES_VEC3,\n    normals: attributes.normals,\n    uv: attributes.uv,\n    indices: indicesNew,\n    indicesCount: indicesNew.length,\n    verticesAndAttributes: verticesNew,\n    verticesAndAttributesStride: strideBytes,\n    bounds: calculateBounds(attributes.positions),\n  };\n}\n\nconst hasNormals = (mesh: ObjMesh) => {\n  if (!mesh.vertexNormals || !Array.isArray(mesh.vertexNormals)) return false;\n  const firstEl = mesh.vertexNormals[0];\n  return typeof firstEl === 'number' && !isNaN(firstEl);\n};\n\ntype MeshWithTextures = Required<Pick<ObjMesh, 'textures'>>;\n\nconst hasUVs = (mesh: ObjMesh): mesh is ObjMesh & MeshWithTextures => {\n  if (!mesh.textures || !Array.isArray(mesh.textures)) return false;\n  const firstEl = mesh.textures[0];\n  return typeof firstEl === 'number' && !isNaN(firstEl);\n};\n\nfunction cleanupRawOBJData(mesh: ObjMesh, scale: number) {\n  mesh.vertices = mesh.vertices.map((e: number) => e * scale);\n\n  if (!hasNormals(mesh)) {\n    recalcNormals(mesh);\n  }\n\n  if (!hasUVs(mesh)) {\n    const vertCnt = vertexCount(mesh);\n    mesh.textures = createArray(vertCnt * 2).fill(0.5);\n  } else {\n    for (let i = 0; i < mesh.textures.length; i += 1) {\n      let v = mesh.textures[i];\n      v = v % 1; // to range [0-1]\n      v = v < 0 ? 1.0 - Math.abs(v) : v; // negative to positive\n      // v = (i & 1) == 0 ? 1 - v : v; // invert X - not needed\n      v = (i & 1) == 1 ? 1 - v : v; // invert Y - webgpu coordinate system\n      mesh.textures[i] = v;\n    }\n  }\n}\n\n/** https://github.com/zeux/meshoptimizer/blob/f13503c8f1196e20bcfb1e67ea1e97b1d0ce98c7/demo/main.cpp#L145 */\nfunction recalcNormals(mesh: ObjMesh) {\n  const vertCnt = vertexCount(mesh);\n  mesh.vertexNormals = createArray(vertCnt * 3).fill(0.0);\n\n  const x = (idx: number) => mesh.vertices[3 * idx];\n  const y = (idx: number) => mesh.vertices[3 * idx + 1];\n  const z = (idx: number) => mesh.vertices[3 * idx + 2];\n\n  // accumulate triangle normals for each vert\n  for (let i = 0; i < mesh.indices.length; i += 3) {\n    const a = mesh.indices[i];\n    const b = mesh.indices[i + 1];\n    const c = mesh.indices[i + 2];\n\n    const nx = (y(b) - y(a)) * (z(c) - z(a)) - (z(b) - z(a)) * (y(c) - y(a));\n    const ny = (z(b) - z(a)) * (x(c) - x(a)) - (x(b) - x(a)) * (z(c) - z(a));\n    const nz = (x(b) - x(a)) * (y(c) - y(a)) - (y(b) - y(a)) * (x(c) - x(a));\n\n    for (let k = 0; k < 3; ++k) {\n      const index = mesh.indices[i + k];\n      mesh.vertexNormals[index * 3 + 0] += nx;\n      mesh.vertexNormals[index * 3 + 1] += ny;\n      mesh.vertexNormals[index * 3 + 2] += nz;\n    }\n  }\n\n  // average/normalize accumulated normals\n  let tmp = vec3.create();\n  for (let i = 0; i < vertCnt; i++) {\n    const n = vec3.set(\n      mesh.vertexNormals[i * 3 + 0],\n      mesh.vertexNormals[i * 3 + 1],\n      mesh.vertexNormals[i * 3 + 2],\n      tmp\n    );\n    tmp = vec3.normalize(n, tmp);\n    mesh.vertexNormals[i * 3 + 0] = tmp[0];\n    mesh.vertexNormals[i * 3 + 1] = tmp[1];\n    mesh.vertexNormals[i * 3 + 2] = tmp[2];\n  }\n}\n\n/** split optimized vertex buffer into per-attribute copies */\nexport function splitVerticesWithAttributesIntoSeparateLists(\n  verticesNew: Float32Array,\n  strideF32: number = 8\n) {\n  const newVertexCount = verticesNew.length / strideF32;\n  const positionsF32 = new Float32Array(newVertexCount * 3);\n  const normalsF32 = new Float32Array(newVertexCount * 3);\n  const uvF32 = new Float32Array(newVertexCount * 2);\n  for (let vertIdx = 0; vertIdx < newVertexCount; vertIdx++) {\n    const offset = vertIdx * strideF32;\n    positionsF32[3 * vertIdx + 0] = verticesNew[offset + 0];\n    positionsF32[3 * vertIdx + 1] = verticesNew[offset + 1];\n    positionsF32[3 * vertIdx + 2] = verticesNew[offset + 2];\n    normalsF32[3 * vertIdx + 0] = verticesNew[offset + 3];\n    normalsF32[3 * vertIdx + 1] = verticesNew[offset + 4];\n    normalsF32[3 * vertIdx + 2] = verticesNew[offset + 5];\n    uvF32[2 * vertIdx + 0] = verticesNew[offset + 6];\n    uvF32[2 * vertIdx + 1] = verticesNew[offset + 7];\n  }\n\n  return {\n    vertexCount: newVertexCount,\n    positions: positionsF32,\n    normals: normalsF32,\n    uv: uvF32,\n  };\n}\n", "import { BYTES_F32 } from '../constants.ts';\nimport { getMeshOptimizerModule } from './meshoptimizerUtils.ts';\nimport { meshoptCall, wasmPtr } from '../utils/wasm.ts';\nimport { WasmModule } from '../utils/wasm-types.d.ts';\n\n/**\n * Optimize vertex and index buffer.\n *\n * https://github.com/zeux/meshoptimizer?tab=readme-ov-file#indexing\n */\nexport async function optimizeMeshBuffers(\n  vertices: Float32Array,\n  vertexCount: number,\n  stride: number,\n  indices: Uint32Array\n): Promise<[Float32Array, Uint32Array]> {\n  const module = await getMeshOptimizerModule();\n  const indexCount = indices.length;\n\n  const [newVertCnt, remap] = generateVertexRemap(\n    module,\n    vertices,\n    vertexCount,\n    stride,\n    indices,\n    indexCount\n  );\n  // console.log('generateVertexRemap res:', newVertCnt);\n  // console.log('generateVertexRemap remap:', remap);\n\n  const newIndices = remapIndexBuffer(module, indices, indexCount, remap);\n  const newVertices = remapVertexBuffer(\n    module,\n    vertices,\n    vertexCount,\n    stride,\n    newVertCnt,\n    remap\n  );\n  // console.log('indices', indices, '=>', newIndices);\n  // console.log('vertices', vertices, '=>', newVertices);\n  return [newVertices, newIndices];\n}\n\n/** https://github.com/zeux/meshoptimizer/blob/3c3e56d312cbe7d5929c78401de2124c7be3bc07/src/indexgenerator.cpp#L201 */\nfunction generateVertexRemap(\n  module: WasmModule,\n  vertices: Float32Array,\n  vertexCount: number,\n  stride: number,\n  indices: Uint32Array,\n  indexCount: number\n): [number, Uint32Array] {\n  const result = new Uint32Array(indexCount);\n  const newVertexCount = meshoptCall(\n    module,\n    'number',\n    'meshopt_generateVertexRemap',\n    [\n      wasmPtr(result, 'out'),\n      wasmPtr(indices),\n      indexCount,\n      wasmPtr(vertices),\n      vertexCount,\n      stride,\n    ]\n  );\n  return [newVertexCount, result];\n}\n\n/** https://github.com/zeux/meshoptimizer/blob/3c3e56d312cbe7d5929c78401de2124c7be3bc07/src/indexgenerator.cpp#L341 */\nfunction remapIndexBuffer(\n  module: WasmModule,\n  indices: Uint32Array,\n  indexCount: number,\n  remap: Uint32Array\n) {\n  const result = new Uint32Array(indexCount);\n  meshoptCall(module, 'number', 'meshopt_remapIndexBuffer', [\n    wasmPtr(result, 'out'),\n    wasmPtr(indices),\n    indexCount,\n    wasmPtr(remap),\n  ]);\n  return result;\n}\n\n/** https://github.com/zeux/meshoptimizer/blob/3c3e56d312cbe7d5929c78401de2124c7be3bc07/src/indexgenerator.cpp#L305 */\nfunction remapVertexBuffer(\n  module: WasmModule,\n  vertices: Float32Array,\n  oldVertCnt: number,\n  stride: number,\n  newVertCnt: number,\n  remap: Uint32Array\n) {\n  const result = new Float32Array((newVertCnt * stride) / BYTES_F32);\n  meshoptCall(module, 'number', 'meshopt_remapVertexBuffer', [\n    wasmPtr(result, 'out'),\n    wasmPtr(vertices),\n    oldVertCnt,\n    stride,\n    wasmPtr(remap),\n  ]);\n  return result;\n}\n", "import { getVertexCount, getTriangleCount } from '../../utils/index.ts';\nimport {\n  createGPU_VertexBuffer,\n  createGPU_IndexBuffer,\n} from '../../utils/webgpu.ts';\nimport { GPUOriginalMesh } from '../GPUOriginalMesh.ts';\nimport { ParsedMesh } from '../objLoader.ts';\n\nexport function createOriginalMesh(\n  device: GPUDevice,\n  sceneName: string,\n  mesh: ParsedMesh\n): GPUOriginalMesh {\n  const vertexBuffer = createGPU_VertexBuffer(\n    device,\n    `${sceneName}-original-vertices`,\n    mesh.positions\n  );\n  const normalsBuffer = createGPU_VertexBuffer(\n    device,\n    `${sceneName}-original-normals`,\n    mesh.normals\n  );\n  const uvBuffer = createGPU_VertexBuffer(\n    device,\n    `${sceneName}-original-uvs`,\n    mesh.uv,\n    GPUBufferUsage.STORAGE\n  );\n  const indexBuffer = createGPU_IndexBuffer(\n    device,\n    `${sceneName}-original-indices`,\n    mesh.indices\n  );\n  return {\n    indexBuffer,\n    uvBuffer,\n    normalsBuffer,\n    vertexBuffer,\n    vertexCount: getVertexCount(mesh.positions),\n    triangleCount: getTriangleCount(mesh.indices),\n  };\n}\n", "// deno-lint-ignore-file no-explicit-any\nimport { Bounds3d } from '../../utils/calcBounds.ts';\nimport { NaniteMeshletTreeNode } from '../naniteObject.ts';\nimport { ParsedMesh } from '../objLoader.ts';\n\nexport type SerializedNode = Omit<NaniteMeshletTreeNode, 'createdFrom'> & {\n  createdFrom: Array<NaniteMeshletTreeNode['id']>;\n};\n\nexport interface SerializedNaniteObject {\n  exporterVersion: number;\n  name: string;\n  bounds: Bounds3d;\n  allMeshlets: SerializedNode[];\n  roots: Array<NaniteMeshletTreeNode['id']>;\n  lodLevelCount: number;\n  parsedMesh: Pick<\n    ParsedMesh,\n    | 'vertexCount'\n    | 'positionsStride'\n    // | 'verticesAndAttributes'\n    | 'verticesAndAttributesStride'\n    // | 'indices'\n    | 'indicesCount'\n    | 'bounds'\n  >;\n  // meshletIndexBufferData: number[] | Uint32Array;\n}\n\nexport function serializeNode(node: NaniteMeshletTreeNode): SerializedNode {\n  return {\n    ...node,\n    createdFrom: node.createdFrom.map((n) => n.id),\n  };\n}\n\nexport function deserializeNodes(\n  nodes: SerializedNode[]\n): NaniteMeshletTreeNode[] {\n  const getById = (id: NaniteMeshletTreeNode['id']) => {\n    const n = nodes.find((n) => n.id === id);\n    if (n == undefined) {\n      throw new ImportError(`CreatedFrom node with id='${id}' does not exist`);\n    }\n    return n;\n  };\n  nodes.forEach((node) => {\n    node.createdFrom = node.createdFrom.map(getById) as any;\n    if (node.parentError === null) {\n      node.parentError = Infinity;\n    }\n  });\n  return nodes as any;\n}\n\nexport class ImportError extends Error {\n  constructor(msg: string) {\n    super(`Invalid file to import. ${msg}`);\n  }\n}\n", "import { createOriginalMesh } from '../load/createOriginalMesh.ts';\nimport { LoadedObject } from '../load/loadScene.ts';\nimport { NaniteObjectBuffers } from '../naniteBuffers/index.ts';\nimport { NaniteObject } from '../naniteObject.ts';\nimport { downloadBuffer } from '../../utils/webgpu.ts';\nimport {\n  serializeNode,\n  SerializedNaniteObject,\n  deserializeNodes,\n  ImportError,\n} from './types.ts';\nimport {\n  ensureTypedArray,\n  formatBytes,\n  replaceFileExt,\n} from '../../utils/index.ts';\nimport {\n  ParsedMesh,\n  splitVerticesWithAttributesIntoSeparateLists,\n} from '../objLoader.ts';\nimport { assertValidNaniteObject } from '../utils/assertValidNaniteObject.ts';\nimport { ObjectLoaderParams, createImpostors } from '../load/loadObject.ts';\nimport { getProfilerTimestamp } from '../../gpuProfiler.ts';\nimport {\n  BYTES_U32,\n  CONFIG,\n  MODELS_DIR,\n  VERTS_IN_TRIANGLE,\n} from '../../constants.ts';\n\nexport async function exportToFile(\n  device: GPUDevice,\n  object: LoadedObject,\n  outputPathJson: string,\n  outputPathBin: string\n) {\n  const { naniteObject, parsedMesh } = object;\n\n  const allMeshlets = naniteObject.allMeshlets.map(serializeNode);\n  // console.log(allMeshlets);\n\n  const meshletIndexBufferData = await downloadBuffer(\n    device,\n    Uint32Array,\n    naniteObject.buffers.indexBuffer\n  );\n\n  const serializedNaniteObj: SerializedNaniteObject = {\n    exporterVersion: 0,\n    name: naniteObject.name,\n    bounds: naniteObject.bounds,\n    allMeshlets,\n    roots: naniteObject.roots.map((n) => n.id),\n    lodLevelCount: naniteObject.lodLevelCount,\n    parsedMesh: {\n      vertexCount: parsedMesh.vertexCount,\n      positionsStride: parsedMesh.positionsStride,\n      // verticesAndAttributes: parsedMesh.verticesAndAttributes, // binary\n      verticesAndAttributesStride: parsedMesh.verticesAndAttributesStride,\n      // indices: parsedMesh.indices, // binary\n      indicesCount: parsedMesh.indicesCount,\n      bounds: parsedMesh.bounds,\n    },\n    // meshletIndexBufferData, // binary\n  };\n\n  const str = JSON.stringify(serializedNaniteObj, (_key, value) => {\n    if (value !== undefined) {\n      // console.log(key, getClassName(value));\n      if (value instanceof Float32Array || value instanceof Uint32Array) {\n        return Array.from(value);\n      }\n    }\n    return value;\n  });\n  await Deno.writeTextFile(outputPathJson, str);\n\n  // write binary file\n  const fileBin = await Deno.create(outputPathBin);\n  const writerBin = fileBin.writable.getWriter();\n  console.log(`Writing vertex buffer: ${formatBytes(parsedMesh.verticesAndAttributes.byteLength)}`); // prettier-ignore\n  await writeTypedArray(writerBin, parsedMesh.verticesAndAttributes);\n  console.log(`Writing original index buffer: ${formatBytes(parsedMesh.indices.byteLength)}`); // prettier-ignore\n  await writeTypedArray(writerBin, parsedMesh.indices);\n  console.log(`Writing meshlets' index buffer: ${formatBytes(meshletIndexBufferData.byteLength)}`); // prettier-ignore\n  await writeTypedArray(writerBin, meshletIndexBufferData);\n  await writerBin.close();\n}\n\nfunction writeTypedArray(\n  writer: WritableStreamDefaultWriter<Uint8Array>,\n  data: Uint32Array | Float32Array\n) {\n  return writer.write(new Uint8Array(data.buffer));\n}\n\nexport async function importFromFile(\n  params: ObjectLoaderParams,\n  jsonText: string\n) {\n  const { device, instances, name, objectDef, progressCb, addTimer } = params;\n\n  let timerStart = getProfilerTimestamp();\n  const jsonObj: SerializedNaniteObject = JSON.parse(jsonText);\n  addTimer('JSON parsing', timerStart);\n\n  // read binary file\n  const binaryFilePath = replaceFileExt(\n    `${MODELS_DIR}/${objectDef.file}`,\n    '.bin'\n  );\n  const binaryFileContent = await readObjectBinaryFile(jsonObj, binaryFilePath);\n\n  // split optimized vertex buffer into per-attribute copies\n  const attributes = splitVerticesWithAttributesIntoSeparateLists(\n    binaryFileContent.verticesAndAttributes\n  );\n\n  // create basic mesh representation\n  const parsedMesh: ParsedMesh = {\n    ...jsonObj.parsedMesh,\n    positions: ensureTypedArray(Float32Array, attributes.positions),\n    normals: ensureTypedArray(Float32Array, attributes.normals),\n    uv: ensureTypedArray(Float32Array, attributes.uv),\n    verticesAndAttributes: ensureTypedArray(\n      Float32Array,\n      binaryFileContent.verticesAndAttributes\n    ),\n    indices: ensureTypedArray(Uint32Array, binaryFileContent.indices),\n  };\n  const originalMesh = createOriginalMesh(device, name, parsedMesh);\n\n  // create nanite buffers\n  const buffers = new NaniteObjectBuffers(\n    device,\n    name,\n    originalMesh,\n    parsedMesh,\n    jsonObj.allMeshlets.map((m) => ({\n      indices: m.triangleCount * 3,\n      lodLevel: m.lodLevel,\n    })),\n    instances.count\n  );\n\n  // create impostors\n  const impostors = await createImpostors(\n    params,\n    name,\n    originalMesh,\n    parsedMesh\n  );\n\n  // create nanite object\n  await progressCb?.(name, `Uploading '${name}' data to the GPU`);\n  timerStart = getProfilerTimestamp();\n  const naniteObject = new NaniteObject(\n    name,\n    jsonObj.bounds,\n    originalMesh,\n    buffers,\n    impostors,\n    instances\n  );\n  device.queue.writeBuffer(\n    naniteObject.buffers.indexBuffer,\n    0,\n    binaryFileContent.meshletIndices,\n    0\n  );\n\n  // set meshlet data\n  const allMeshlets = deserializeNodes(jsonObj.allMeshlets);\n  naniteObject.allMeshlets.push(...allMeshlets);\n  jsonObj.roots.forEach((id) => {\n    const n = allMeshlets.find((n) => n.id === id);\n    if (n == undefined) {\n      throw new ImportError(`Root node with id='${id}' does not exist`);\n    }\n    naniteObject.roots.push(n);\n  });\n  naniteObject.lodLevelCount =\n    allMeshlets.reduce((acc, m) => Math.max(acc, m.lodLevel), 0) + 1;\n\n  // upload meshlet data to the GPU\n  naniteObject.finalizeNaniteObject(device);\n  addTimer('Finalize nanite object', timerStart);\n\n  assertValidNaniteObject(naniteObject);\n\n  // print stats\n  if (!CONFIG.isTest) {\n    naniteObject.printStats();\n  }\n\n  return {\n    originalMesh,\n    parsedMesh,\n    naniteObject,\n  };\n}\n\nasync function readObjectBinaryFile(\n  jsonObj: SerializedNaniteObject,\n  path: string\n) {\n  const mesh = jsonObj.parsedMesh;\n  const verticesBytes = mesh.vertexCount * mesh.verticesAndAttributesStride;\n  const indicesBytes = mesh.indicesCount * BYTES_U32;\n  const meshletTriangles = jsonObj.allMeshlets.reduce(\n    (acc, m) => acc + m.triangleCount,\n    0\n  );\n  const meshletIndicesBytes = meshletTriangles * VERTS_IN_TRIANGLE * BYTES_U32;\n\n  const bytesBuffer = await CONFIG.loaders.binaryFileReader(path);\n  let offset = 0;\n\n  // mesh vertex buffer\n  const verticesAndAttributes = new Float32Array(\n    bytesBuffer.slice(offset, offset + verticesBytes)\n  );\n  offset += verticesBytes;\n  assertByteSize('vertex buffer', verticesAndAttributes, verticesBytes);\n  // assertSameBuffer(mesh.verticesAndAttributes, verticesAndAttributes);\n\n  // mesh index buffer\n  const indices = new Uint32Array(\n    bytesBuffer.slice(offset, offset + indicesBytes)\n  );\n  offset += indicesBytes;\n  assertByteSize('index buffer', indices, indicesBytes);\n  // assertSameBuffer(mesh.indices, indices);\n\n  // meshlet index buffer\n  const meshletIndices = new Uint32Array(bytesBuffer.slice(offset));\n  assertByteSize('meshlet indices buffer', meshletIndices, meshletIndicesBytes);\n  /*const jsonData = ensureTypedArray(\n    Uint32Array,\n    jsonObj.meshletIndexBufferData\n  );\n  assertSameBuffer(jsonData, meshletIndices);*/\n\n  return { verticesAndAttributes, indices, meshletIndices };\n}\n\nfunction assertByteSize<T extends Uint32Array | Float32Array>(\n  type: string,\n  data: T,\n  expectedBytes: number\n) {\n  if (data.byteLength !== expectedBytes) {\n    throw new ImportError(`Invalid binary ${type}. Expected ${expectedBytes} bytes, got ${data.byteLength}`); // prettier-ignore\n  }\n}\n\n// deno-lint-ignore no-unused-vars\nfunction assertSameBuffer<T extends Uint32Array | Float32Array>(a: T, b: T) {\n  if (a.length !== b.length) {\n    throw new Error(`Different length: ${a.length} vs ${b.length}`);\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      throw new Error(`Different data at idx=${i}: ${a[i]} vs ${b[i]}`);\n    }\n  }\n}\n", "import { CONFIG, MODELS_DIR } from '../../constants.ts';\nimport {\n  getProfilerTimestamp,\n  getDeltaFromTimestampMS,\n} from '../../gpuProfiler.ts';\nimport { createNaniteMeshlets } from '../../meshPreprocessing/index.ts';\nimport { getVertexCount, getTriangleCount } from '../../utils/index.ts';\nimport { printBoundingBox } from '../../utils/calcBounds.ts';\nimport { createNaniteObject } from './createNaniteObject.ts';\nimport { ParsedMesh, loadObjFile } from '../objLoader.ts';\nimport {\n  SceneObjectName,\n  getSceneObjectDef,\n  SceneObjectDef,\n} from '../sceneFiles.ts';\nimport { NaniteInstancesData } from '../instancesData.ts';\nimport { ImpostorRenderer } from '../renderImpostors/renderImpostors.ts';\nimport { createOriginalMesh } from './createOriginalMesh.ts';\nimport { ObjectLoadingProgressCb } from './types.ts';\nimport { importFromFile } from '../import-export/import-export.ts';\nimport { GPUOriginalMesh } from '../GPUOriginalMesh.ts';\n\nexport interface ObjectLoaderParams {\n  name: SceneObjectName;\n  objectDef: SceneObjectDef;\n  device: GPUDevice;\n  instances: NaniteInstancesData;\n  impostorRenderer: ImpostorRenderer;\n  diffuseTextureView: GPUTextureView | undefined;\n  progressCb?: ObjectLoadingProgressCb;\n  start: number;\n  addTimer: (name: string, start: number) => void;\n}\n\ntype Result = Awaited<ReturnType<typeof loadObjectObj>>;\n\nexport async function loadObject(\n  device: GPUDevice,\n  name: SceneObjectName,\n  instances: NaniteInstancesData,\n  impostorRenderer: ImpostorRenderer,\n  progressCb?: ObjectLoadingProgressCb\n): Promise<Result> {\n  console.groupCollapsed(`Object '${name}'`);\n  await progressCb?.(name, `Loading object: '${name}'`);\n  const start = getProfilerTimestamp();\n  const timers: string[] = [];\n  const addTimer = (name: string, start: number) =>\n    timers.push(`${name}: ${getDeltaFromTimestampMS(start).toFixed(2)}ms`);\n\n  // get file text\n  const objectDef = getSceneObjectDef(name);\n  const fileText = await CONFIG.loaders.textFileReader(\n    `${MODELS_DIR}/${objectDef.file}`\n  );\n  addTimer('File content fetch', start);\n\n  // load texture if needed\n  // Do it now so it fails early if you have typo in the path\n  const tex = await loadObjectTexture(\n    device,\n    addTimer,\n    // deno-lint-ignore no-explicit-any\n    (objectDef as any)['texture']\n  );\n\n  const params: ObjectLoaderParams = {\n    name,\n    objectDef,\n    device,\n    instances,\n    impostorRenderer,\n    progressCb,\n    addTimer,\n    start,\n    diffuseTextureView: tex.diffuseTextureView,\n  };\n\n  const isJson = objectDef.file.endsWith('.json');\n  const result: Result = await (isJson\n    ? importFromFile(params, fileText)\n    : loadObjectObj(params, fileText));\n\n  // assign textures\n  result.naniteObject.diffuseTexture = tex.diffuseTexture;\n  result.naniteObject.diffuseTextureView = tex.diffuseTextureView;\n\n  // end\n  addTimer('---TOTAL---', start);\n  console.log(`Object '${name}' loaded. Timers:`, timers);\n  console.groupEnd();\n\n  return result;\n}\n\nasync function loadObjectObj(params: ObjectLoaderParams, objFileText: string) {\n  const { device, instances, name, objectDef, progressCb, addTimer } = params;\n\n  // parse OBJ file\n  let timerStart = getProfilerTimestamp();\n  const loadedObj = await loadObjFile(objFileText, objectDef.scale);\n  addTimer('OBJ parsing', timerStart);\n  // prettier-ignore\n  console.log(`Object '${name}': ${getVertexCount(loadedObj.positions)} vertices, ${getTriangleCount(loadedObj.indices)} triangles`);\n  printBoundingBox(loadedObj.positions);\n\n  // create original mesh\n  const originalMesh = createOriginalMesh(device, name, loadedObj);\n\n  // Nanite preprocess: create meshlet LOD hierarchy\n  timerStart = getProfilerTimestamp();\n  const naniteMeshlets = await createNaniteMeshlets(\n    loadedObj,\n    loadedObj.indices,\n    progressCb != undefined ? (p) => progressCb(name, p) : undefined\n  );\n  addTimer('Nanite LOD tree build', timerStart);\n\n  // create impostors\n  const impostors = await createImpostors(\n    params,\n    name,\n    originalMesh,\n    loadedObj\n  );\n\n  // create nanite object\n  await progressCb?.(name, `Uploading '${name}' data to the GPU`);\n  timerStart = getProfilerTimestamp();\n  const naniteObject = createNaniteObject(\n    device,\n    name,\n    originalMesh,\n    loadedObj,\n    naniteMeshlets,\n    instances,\n    impostors\n  );\n  addTimer('Finalize nanite object', timerStart);\n\n  return {\n    originalMesh,\n    parsedMesh: loadedObj,\n    naniteObject,\n  };\n}\n\nexport async function createImpostors(\n  params: ObjectLoaderParams,\n  name: SceneObjectName,\n  originalMesh: GPUOriginalMesh,\n  parsedMesh: ParsedMesh\n) {\n  const { device, impostorRenderer, progressCb, addTimer, diffuseTextureView } =\n    params;\n\n  await progressCb?.(name, `Creating impostors`);\n  const timerStart = getProfilerTimestamp();\n  const impostor = impostorRenderer.createImpostorTexture(device, {\n    name,\n    vertexBuffer: originalMesh.vertexBuffer,\n    normalsBuffer: originalMesh.normalsBuffer,\n    uvBuffer: originalMesh.uvBuffer,\n    indexBuffer: originalMesh.indexBuffer,\n    triangleCount: originalMesh.triangleCount,\n    bounds: parsedMesh.bounds.sphere,\n    texture: diffuseTextureView,\n  });\n  addTimer('Creating impostors', timerStart);\n\n  return impostor;\n}\n\nasync function loadObjectTexture(\n  device: GPUDevice,\n  addTimer: ObjectLoaderParams['addTimer'],\n  fileName: string | undefined\n) {\n  if (!fileName) {\n    return { diffuseTexture: undefined, diffuseTextureView: undefined };\n  }\n\n  const timerStart = getProfilerTimestamp();\n\n  const texturePath = `${MODELS_DIR}/${fileName}`;\n  const usage: GPUTextureUsageFlags =\n    GPUTextureUsage.TEXTURE_BINDING |\n    GPUTextureUsage.COPY_DST |\n    GPUTextureUsage.RENDER_ATTACHMENT;\n\n  const diffuseTexture = await CONFIG.loaders.createTextureFromFile(\n    device,\n    texturePath,\n    'rgba8unorm-srgb',\n    usage\n  );\n  console.log(`Texture: '${texturePath}'`);\n  const diffuseTextureView = diffuseTexture.createView();\n  addTimer('Load texture', timerStart);\n\n  return { diffuseTexture, diffuseTextureView };\n}\n", "import {\n  getProfilerTimestamp,\n  getDeltaFromTimestampMS,\n} from '../../gpuProfiler.ts';\nimport { STATS } from '../../sys_web/stats.ts';\nimport { formatBytes, formatNumber } from '../../utils/index.ts';\nimport { createDebugMeshes } from './createDebugMeshes.ts';\nimport { NaniteObject } from '../naniteObject.ts';\nimport {\n  getSceneObjectDef,\n  SceneName,\n  SceneObjectName,\n  SCENES,\n} from '../sceneFiles.ts';\nimport { NaniteInstancesData, createInstancesData } from '../instancesData.ts';\nimport { ImpostorRenderer } from '../renderImpostors/renderImpostors.ts';\nimport { DebugMeshes, Scene } from '../scene.ts';\nimport { createFallbackTexture, createSampler } from '../../utils/textures.ts';\nimport { DEFAULT_COLOR } from '../../passes/_shaderSnippets/shading.wgsl.ts';\nimport { loadObject } from './loadObject.ts';\nimport { ObjectLoadingProgressCb } from './types.ts';\nimport { CONFIG } from '../../constants.ts';\n\nexport type LoadedObject = Awaited<ReturnType<typeof loadObject>>;\nexport type OnObjectLoadedCb = (\n  a: LoadedObject & {\n    fileName: string;\n  }\n) => Promise<void | undefined>;\n\nexport async function loadScene(\n  device: GPUDevice,\n  sceneName: SceneName,\n  progressCb?: ObjectLoadingProgressCb,\n  objectLoadedCb?: OnObjectLoadedCb\n): Promise<Scene> {\n  const sceneObjectDefs = getSceneDef(device, sceneName);\n\n  // fallback texture\n  const fallbackDiffuseTexture = createFallbackTexture(device, DEFAULT_COLOR);\n  const fallbackDiffuseTextureView = fallbackDiffuseTexture.createView();\n  const samplerNearest = createSampler(device, 'nearest');\n  const samplerLinear = createSampler(device, 'linear');\n  const impostorRenderer = new ImpostorRenderer(\n    device,\n    fallbackDiffuseTextureView\n  );\n\n  let debugMeshes: DebugMeshes | undefined = undefined;\n  const naniteObjects: NaniteObject[] = [];\n  const start = getProfilerTimestamp();\n\n  // enable dev tools profiler\n  const { enableProfiler } = CONFIG.nanite.preprocess;\n  if (enableProfiler) {\n    console.profile('scene-loading');\n  }\n\n  for (let i = 0; i < sceneObjectDefs.length; i++) {\n    const objDef = sceneObjectDefs[i];\n    const obj = await loadObject(\n      device,\n      objDef.model,\n      objDef.instances,\n      impostorRenderer,\n      progressCb\n    );\n    naniteObjects.push(obj.naniteObject);\n    await objectLoadedCb?.({\n      ...obj,\n      fileName: getSceneObjectDef(objDef.model).file,\n    });\n\n    // create debug meshes if needed\n    if (debugMeshes == undefined) {\n      debugMeshes = await createDebugMeshes(\n        device,\n        obj.originalMesh,\n        obj.parsedMesh\n      );\n    }\n  }\n\n  // finish dev tools profiler\n  if (enableProfiler) {\n    console.profileEnd();\n  }\n\n  ensureUniqueNames(naniteObjects);\n\n  // update stats\n  const delta = getDeltaFromTimestampMS(start);\n  STATS.update('Preprocessing', `${delta.toFixed(0)}ms`);\n  const stats = updateSceneStats(naniteObjects);\n\n  return {\n    naniteObjects,\n    debugMeshes: debugMeshes!, // was created from first nanite object\n    fallbackDiffuseTexture,\n    fallbackDiffuseTextureView,\n    samplerNearest,\n    samplerLinear,\n    ...stats,\n  };\n}\n\nfunction updateSceneStats(\n  naniteObjects: NaniteObject[]\n): Pick<\n  Scene,\n  'naiveMeshletCount' | 'naiveTriangleCount' | 'totalInstancesCount'\n> {\n  // geometry\n  let naiveTriangleCount = 0;\n  let naiveMeshletCount = 0;\n  let totalInstancesCount = 0;\n  let maxSimplifiedTriangles = 0;\n  // memory - data\n  let indexBufferBytes = 0;\n  let meshletsDataBytes = 0;\n  let instancesTfxBytes = 0;\n  // memory - drawn ids buffers\n  let drawnInstancesBytes = 0;\n  let drawnImpostorsBytes = 0;\n  let drawnMeshletsBytes = 0;\n\n  for (const naniteObj of naniteObjects) {\n    naiveTriangleCount +=\n      naniteObj.bottomTriangleCount * naniteObj.instancesCount;\n    naiveMeshletCount +=\n      naniteObj.bottomMeshletCount * naniteObj.instancesCount;\n    totalInstancesCount += naniteObj.instancesCount;\n    maxSimplifiedTriangles +=\n      naniteObj.roots.reduce((acc, m) => acc + m.triangleCount, 0) *\n      naniteObj.instancesCount;\n\n    indexBufferBytes += naniteObj.buffers.indexBuffer.size;\n    meshletsDataBytes += naniteObj.buffers.meshletsDataBuffer.size;\n    instancesTfxBytes += naniteObj.instances.transformsBuffer.size;\n    // drawn\n    drawnInstancesBytes += naniteObj.buffers.drawnInstancesBuffer.size;\n    drawnImpostorsBytes += naniteObj.buffers.drawnImpostorsBuffer.size;\n    drawnMeshletsBytes += naniteObj.buffers.drawnMeshletsBuffer.size;\n  }\n\n  // memory\n  STATS.update('Index buffer', formatBytes(indexBufferBytes));\n  STATS.update('Meshlets data', formatBytes(meshletsDataBytes));\n  STATS.update('Instance tfxs', formatBytes(instancesTfxBytes));\n  STATS.update('Drawn instances', formatBytes(drawnInstancesBytes));\n  STATS.update('Drawn impostors', formatBytes(drawnImpostorsBytes));\n  STATS.update('Drawn meshlets', formatBytes(drawnMeshletsBytes));\n  // geometry\n  STATS.update('Scene meshlets', formatNumber(naiveMeshletCount, 1));\n  STATS.update('Scene triangles', formatNumber(naiveTriangleCount, 1));\n\n  const avgSimpl = (100.0 * maxSimplifiedTriangles) / naiveTriangleCount;\n  console.log(`Scene simplification is ${avgSimpl.toFixed(1)}% (${formatNumber(naiveTriangleCount)} -> ${formatNumber(maxSimplifiedTriangles)} triangles)`); // prettier-ignore\n\n  return {\n    naiveTriangleCount,\n    naiveMeshletCount,\n    totalInstancesCount,\n  };\n}\n\nfunction getSceneDef(\n  device: GPUDevice,\n  sceneName: SceneName\n): Array<{ model: SceneObjectName; instances: NaniteInstancesData }> {\n  const sceneObjectDefs = SCENES[sceneName];\n  const errMsg = `Scene '${sceneName}' is empty`;\n  if (!sceneObjectDefs) {\n    throw new Error(`Scene '${sceneName}' is empty`);\n  }\n\n  // each object has own instance grid\n  if (Array.isArray(sceneObjectDefs)) {\n    if (sceneObjectDefs.length < 1) throw new Error(errMsg);\n\n    return sceneObjectDefs.map((objDef) => {\n      const instances = createInstancesData(\n        device,\n        objDef.model,\n        objDef.instances\n      );\n      return {\n        model: objDef.model,\n        instances,\n      };\n    });\n  }\n\n  // shared instances grid between all objects\n  const { models, instances } = sceneObjectDefs;\n  const instancesGPU = createInstancesData(device, sceneName, instances);\n  return models.map((model) => ({ model, instances: instancesGPU }));\n}\n\nfunction ensureUniqueNames(naniteObjs: NaniteObject[]) {\n  const pastNames = new Set<string>();\n\n  naniteObjs.forEach((obj, i) => {\n    while (pastNames.has(obj.name)) {\n      obj.name += i;\n    }\n  });\n}\n", "import { CONFIG } from '../constants.ts';\nimport { SCENES, isValidSceneName } from '../scene/sceneFiles.ts';\nimport { SceneName } from '../scene/sceneFiles.ts';\n\nconst PARAMS = {\n  sceneFile: 'scene_file',\n  softwareRasterizerThreshold: 'softwarerasterizer_threshold',\n  impostorsThreshold: 'impostors_threshold',\n  impostorsTextureSize: 'impostors_texturesize',\n  impostorsForceOnlyBillboards: 'impostors_forceonlybillboards',\n  naniteErrorThreshold: 'nanite_errorthreshold',\n};\n\nexport const INVALID_SEARCH_PARAMS: string[] = [];\n\nexport function applySearchParams(\n  target: typeof CONFIG,\n  defaultScene: SceneName\n): SceneName {\n  const params = new URLSearchParams(window.location.search);\n\n  params.forEach((val, key) => {\n    key = key.toLowerCase();\n    val = val.trim();\n\n    if (key === PARAMS.sceneFile) {\n      if (isValidSceneName(val)) {\n        defaultScene = val;\n      } else {\n        console.warn(`Invalid scene name '${val}', try one of: `, Object.keys(SCENES)); // prettier-ignore\n      }\n    } else if (key === PARAMS.softwareRasterizerThreshold) {\n      const [isOk, value] = parseNumber(val);\n      if (isOk) {\n        if (value === 0) {\n          target.softwareRasterizer.enabled = false;\n        } else {\n          target.softwareRasterizer.threshold = Math.abs(value);\n        }\n      }\n    } else if (key === PARAMS.impostorsThreshold) {\n      const [isOk, value] = parseNumber(val);\n      if (isOk) {\n        target.impostors.billboardThreshold = Math.abs(value);\n      }\n    } else if (key === PARAMS.impostorsTextureSize) {\n      const [isOk, value] = parseNumber(val);\n      if (isOk) {\n        target.impostors.textureSize = Math.abs(value);\n      }\n    } else if (key === PARAMS.naniteErrorThreshold) {\n      const [isOk, value] = parseNumber(val);\n      if (isOk) {\n        target.nanite.render.errorThreshold = Math.abs(value);\n      }\n    } else if (key === PARAMS.impostorsForceOnlyBillboards) {\n      target.impostors.forceOnlyBillboards = true;\n    } else {\n      INVALID_SEARCH_PARAMS.push(key);\n    }\n  });\n\n  if (!CONFIG.isTest) {\n    if (INVALID_SEARCH_PARAMS.length > 0) {\n      const keys = INVALID_SEARCH_PARAMS.join(', ');\n      console.warn(`Unrecognised query params: [${keys}]`);\n    }\n\n    console.log(`Loading scene '${defaultScene}', config: `, target);\n  }\n\n  return defaultScene;\n}\n\nfunction parseNumber(val: unknown): [boolean, number] {\n  if (typeof val !== 'string') return [false, 0];\n  const res = parseFloat(val);\n  const isValid = !isNaN(res) && isFinite(res);\n  return [isValid, res];\n}\n", "import { createGpuDevice } from './utils/webgpu.ts';\nimport { createInputHandler } from './sys_web/input.ts';\nimport { Renderer } from './renderer.ts';\nimport { STATS } from './sys_web/stats.ts';\nimport { initializeGUI, onGpuProfilerResult } from './sys_web/gui.ts';\nimport { GpuProfiler } from './gpuProfiler.ts';\nimport { initCanvasResizeSystem } from './sys_web/cavasResize.ts';\nimport {\n  CONFIG,\n  MILISECONDS_TO_SECONDS,\n  isSoftwareRasterizerEnabled,\n} from './constants.ts';\nimport { createErrorSystem } from './utils/errors.ts';\nimport { downloadDrawnMeshletsBuffer } from './scene/naniteBuffers/drawnMeshletsBuffer.ts';\nimport {\n  showHtmlEl,\n  hideHtmlEl,\n  ensureHtmlElIsVisible,\n} from './utils/index.ts';\nimport { Scene } from './scene/scene.ts';\nimport { loadScene } from './scene/load/loadScene.ts';\nimport { SceneName } from './scene/sceneFiles.ts';\nimport {\n  setNaniteDrawImpostorsStats,\n  setNaniteDrawStats,\n  setNaniteDrawStatsHw_Sw,\n} from './passes/_shared.ts';\nimport { downloadDrawnImpostorsBuffer } from './scene/naniteBuffers/drawnImpostorsBuffer.ts';\nimport { ObjectLoadingProgressCb } from './scene/load/types.ts';\nimport { applySearchParams } from './sys_web/searchParams.ts';\n\n// const SCENE_FILE: SceneName = 'bunnySingle';\n// const SCENE_FILE: SceneName = 'bunnyRow';\n// const SCENE_FILE: SceneName = 'bunny1b';\n// const SCENE_FILE: SceneName = 'bunny';\nconst SCENE_FILE: SceneName = 'jinxCombined'; // jinx\n// const SCENE_FILE: SceneName = 'lucySingleJson';\n// const SCENE_FILE: SceneName = 'lucy1b';\n// const SCENE_FILE: SceneName = 'dragon';\n// const SCENE_FILE: SceneName = 'dragonJson';\n// const SCENE_FILE: SceneName = 'manyObjects';\n// const SCENE_FILE: SceneName = 'manyObjects2';\n// const SCENE_FILE: SceneName = 'planeSubdiv';\n// const SCENE_FILE: SceneName = 'displacedPlane';\n// const SCENE_FILE: SceneName = 'displacedPlaneFlat'; // fails\n// const SCENE_FILE: SceneName = 'cube';\n// const SCENE_FILE: SceneName = 'plane';\n\n(async function () {\n  const sceneFile = applySearchParams(CONFIG, SCENE_FILE);\n\n  // GPUDevice\n  const device = await createGpuDevice();\n  if (!device) {\n    showErrorMessage();\n    return;\n  }\n  const errorSystem = createErrorSystem(device);\n  errorSystem.startErrorScope('init');\n\n  // create canvas\n  const PREFERRED_CANVAS_FORMAT = navigator.gpu.getPreferredCanvasFormat();\n  const [canvas, canvasContext] = getCanvasContext(\n    '#gpuCanvas',\n    device,\n    PREFERRED_CANVAS_FORMAT\n  );\n  const canvasResizeSystem = initCanvasResizeSystem(canvas, canvasContext);\n\n  // input\n  const getInputState = createInputHandler(window, canvas);\n\n  // file load\n  let scene: Scene;\n  let loaderEl: HTMLElement | null = null;\n  try {\n    loaderEl = document.getElementById('loader-wrapper');\n    showHtmlEl(loaderEl);\n    scene = await loadSceneFile(device, sceneFile);\n  } catch (e) {\n    showErrorMessage(e.message);\n    throw e;\n  } finally {\n    hideHtmlEl(loaderEl);\n  }\n\n  // renderer setup\n  const profiler = new GpuProfiler(device);\n  const renderer = new Renderer(\n    device,\n    canvasResizeSystem.getViewportSize(),\n    PREFERRED_CANVAS_FORMAT,\n    profiler\n  );\n  canvasResizeSystem.addListener(renderer.onCanvasResize);\n\n  initializeGUI(profiler, scene, renderer.cameraCtrl);\n  STATS.show();\n  let done = false;\n\n  // init ended, report errors\n  const lastError = await errorSystem.reportErrorScopeAsync();\n  if (lastError) {\n    showErrorMessage(lastError);\n    return;\n  }\n\n  const mainCmdBufDesc: GPUCommandEncoderDescriptor = {\n    label: 'main-frame-cmd-buffer',\n  };\n\n  // frame callback\n  const frame = () => {\n    errorSystem.startErrorScope('frame');\n\n    STATS.onEndFrame();\n    STATS.onBeginFrame();\n    profiler.beginFrame();\n    const deltaTime = STATS.deltaTimeMS * MILISECONDS_TO_SECONDS;\n\n    canvasResizeSystem.revalidateCanvasSize();\n\n    const inputState = getInputState();\n    renderer.updateCamera(deltaTime, inputState);\n\n    // record commands\n    const cmdBuf = device.createCommandEncoder(mainCmdBufDesc);\n    const screenTexture = canvasResizeSystem.getScreenTextureView();\n    renderer.cmdRender(cmdBuf, scene, screenTexture);\n\n    // submit commands\n    profiler.endFrame(cmdBuf);\n    device.queue.submit([cmdBuf.finish()]);\n\n    profiler.scheduleRaportIfNeededAsync(onGpuProfilerResult);\n\n    // download GPU visibility buffer if needed\n    if (CONFIG.nanite.render.nextFrameDebugDrawnMeshletsBuffer) {\n      CONFIG.nanite.render.nextFrameDebugDrawnMeshletsBuffer = false;\n      getGPUStats(device, scene); // not awaited!\n    }\n\n    // frame end\n    if (!done) {\n      errorSystem.reportErrorScopeAsync(onRenderFrameError); // not awaited!\n\n      requestAnimationFrame(frame);\n    }\n  };\n\n  // start rendering\n  requestAnimationFrame(frame);\n\n  function onRenderFrameError(lastError: string): never {\n    showErrorMessage(lastError);\n    done = true;\n    throw new Error(lastError);\n  }\n})();\n\nfunction getCanvasContext(\n  selector: string,\n  device: GPUDevice,\n  canvasFormat: string\n): [HTMLCanvasElement, CanvasRenderingContext2D] {\n  const canvas: HTMLCanvasElement = document.querySelector(selector)!;\n  // deno-lint-ignore no-explicit-any\n  const context: any = canvas.getContext('webgpu')!;\n\n  // const devicePixelRatio = window.devicePixelRatio;\n  // canvas.width = canvas.clientWidth * devicePixelRatio;\n  // canvas.height = canvas.clientHeight * devicePixelRatio;\n\n  context.configure({\n    device,\n    format: canvasFormat,\n    alphaMode: 'premultiplied',\n  });\n  return [canvas, context];\n}\n\nfunction loadSceneFile(device: GPUDevice, sceneName: SceneName) {\n  const reportEl = document.getElementById('loader-text');\n  const setReportText = (msg: string) => {\n    // console.log(msg);\n    if (reportEl != undefined) reportEl.textContent = msg;\n    return new Promise((resolve) => setTimeout(resolve));\n  };\n  let lastReportedPercent = -1;\n  const progCb: ObjectLoadingProgressCb = async (objName, p): Promise<void> => {\n    if (typeof p === 'string') {\n      await setReportText(p);\n    } else {\n      const percent = Math.floor(p * 100);\n      if (percent !== lastReportedPercent && percent % 10 === 0) {\n        lastReportedPercent = percent;\n        await setReportText(`Loading '${objName}': ${percent}%`);\n      }\n    }\n  };\n\n  return loadScene(device, sceneName, progCb);\n}\n\nfunction showErrorMessage(msg?: string) {\n  hideHtmlEl(document.getElementById('gpuCanvas'));\n  showHtmlEl(document.getElementById('no-webgpu'), 'flex');\n  if (msg) {\n    document.getElementById('error-msg')!.textContent = msg;\n  }\n}\n\n/** WARNING: SLOW! */\nfunction getGPUStats(device: GPUDevice, scene: Scene) {\n  getGPUStats_meshlets(device, scene);\n  getGPUStats_impostors(device, scene);\n}\n\nasync function getGPUStats_impostors(device: GPUDevice, scene: Scene) {\n  let allInstances = 0;\n  let drawnImpostors = 0;\n\n  const resultsAsync = scene.naniteObjects.map(async (obj) => {\n    const result = await downloadDrawnImpostorsBuffer(device, obj);\n\n    allInstances += obj.instancesCount;\n    drawnImpostors += result.impostorCount;\n  });\n  await Promise.all(resultsAsync);\n\n  setNaniteDrawImpostorsStats(drawnImpostors, allInstances);\n}\n\nasync function getGPUStats_meshlets(device: GPUDevice, scene: Scene) {\n  let drawnMeshlets = 0;\n  let drawnTriangles = 0;\n  let drawnMeshletsHW = 0;\n  let drawnTrianglesHW = 0;\n  let drawnMeshletsSW = 0;\n  let drawnTrianglesSW = 0;\n\n  const resultsAsync = scene.naniteObjects.map(async (obj) => {\n    const { hardwareRaster, softwareRaster } =\n      await downloadDrawnMeshletsBuffer(device, obj);\n\n    drawnMeshlets += hardwareRaster.meshletCount + softwareRaster.meshletCount;\n    drawnMeshletsHW += hardwareRaster.meshletCount;\n    drawnMeshletsSW += softwareRaster.meshletCount;\n\n    const getTriCnt = (meshletId: number) => {\n      const meshlet = obj.find(meshletId);\n      return meshlet ? meshlet.triangleCount : 0;\n    };\n\n    for (let i = 0; i < hardwareRaster.meshletCount; i++) {\n      const meshletId = hardwareRaster.meshletIds[i].meshletId;\n      const tris = getTriCnt(meshletId);\n      drawnTriangles += tris;\n      drawnTrianglesHW += tris;\n    }\n\n    for (let i = 0; i < softwareRaster.meshletCount; i++) {\n      const meshletId = softwareRaster.meshletIds[i].meshletId;\n      const tris = getTriCnt(meshletId);\n      drawnTriangles += tris;\n      drawnTrianglesSW += tris;\n    }\n  });\n  await Promise.all(resultsAsync);\n\n  setNaniteDrawStats(scene, drawnMeshlets, drawnTriangles);\n  setNaniteDrawStatsHw_Sw(\n    drawnMeshletsHW,\n    drawnTrianglesHW,\n    drawnMeshletsSW,\n    drawnTrianglesSW\n  );\n}\n\n// special check for software rasterizer warning\nsetInterval(checkSoftwareRasterizerState, 1000);\nconst el = document.getElementById('software-rasterizer');\nfunction checkSoftwareRasterizerState() {\n  const shouldBeEnabled = CONFIG.softwareRasterizer.enabled;\n  const isEnabled = isSoftwareRasterizerEnabled();\n  // console.log({ shouldBeEnabled, isEnabled });\n\n  const showWarning = shouldBeEnabled && !isEnabled;\n  ensureHtmlElIsVisible(el, showWarning);\n}\n"],
  "mappings": "0xBAAA,IAAAA,GAAAC,GAAA,oBAAC,SAASC,EAAEC,EAAE,CAAC,GAAa,OAAO,SAAjB,UAAoC,OAAO,QAAjB,SAAwB,OAAO,QAAQA,EAAE,UAAsB,OAAO,QAAnB,YAA2B,OAAO,IAAI,OAAO,CAAC,EAAEA,CAAC,MAAM,CAAC,IAAIC,EAAED,EAAE,EAAE,QAAQE,KAAKD,GAAa,OAAO,SAAjB,SAAyB,QAAQF,GAAGG,CAAC,EAAED,EAAEC,CAAC,CAAC,CAAC,GAAe,OAAO,KAApB,IAAyB,KAAK,QAAM,UAAU,CAAC,OAAO,SAASH,EAAE,CAAC,IAAIC,EAAE,CAAC,EAAE,SAASC,EAAEC,EAAE,CAAC,GAAGF,EAAEE,CAAC,EAAE,OAAOF,EAAEE,CAAC,EAAE,QAAQ,IAAIC,EAAEH,EAAEE,CAAC,EAAE,CAAC,EAAEA,EAAE,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,OAAOH,EAAEG,CAAC,EAAE,KAAKC,EAAE,QAAQA,EAAEA,EAAE,QAAQF,CAAC,EAAEE,EAAE,EAAE,GAAGA,EAAE,OAAO,CAAC,OAAOF,EAAE,EAAEF,EAAEE,EAAE,EAAED,EAAEC,EAAE,EAAE,SAASF,EAAEC,EAAEE,EAAE,CAACD,EAAE,EAAEF,EAAEC,CAAC,GAAG,OAAO,eAAeD,EAAEC,EAAE,CAAC,WAAW,GAAG,IAAIE,CAAC,CAAC,CAAC,EAAED,EAAE,EAAE,SAASF,EAAE,CAAc,OAAO,OAApB,KAA4B,OAAO,aAAa,OAAO,eAAeA,EAAE,OAAO,YAAY,CAAC,MAAM,QAAQ,CAAC,EAAE,OAAO,eAAeA,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAEE,EAAE,EAAE,SAASF,EAAEC,EAAE,CAA+B,GAA3B,EAAEA,IAAID,EAAEE,EAAEF,CAAC,GAAG,EAAEC,GAAc,EAAEA,GAAa,OAAOD,GAAjB,UAAoBA,GAAGA,EAAE,WAAW,OAAOA,EAAE,IAAIG,EAAE,OAAO,OAAO,IAAI,EAAE,GAAGD,EAAE,EAAEC,CAAC,EAAE,OAAO,eAAeA,EAAE,UAAU,CAAC,WAAW,GAAG,MAAMH,CAAC,CAAC,EAAE,EAAEC,GAAa,OAAOD,GAAjB,SAAmB,QAAQI,KAAKJ,EAAEE,EAAE,EAAEC,EAAEC,GAAE,SAASH,EAAE,CAAC,OAAOD,EAAEC,CAAC,CAAC,GAAE,KAAK,KAAKG,CAAC,CAAC,EAAE,OAAOD,CAAC,EAAED,EAAE,EAAE,SAASF,EAAE,CAAC,IAAIC,EAAED,GAAGA,EAAE,WAAW,UAAU,CAAC,OAAOA,EAAE,OAAO,EAAE,UAAU,CAAC,OAAOA,CAAC,EAAE,OAAOE,EAAE,EAAED,EAAE,IAAIA,CAAC,EAAEA,CAAC,EAAEC,EAAE,EAAE,SAASF,EAAEC,EAAE,CAAC,OAAO,OAAO,UAAU,eAAe,KAAKD,EAAEC,CAAC,CAAC,EAAEC,EAAE,EAAE,IAAIA,EAAEA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,iBAI3+B,SAAS,OAAO,oBAAoB,oBAAoB,CAAC,aAAa,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA2/G,CAAC,EAAE,kBAI5rH,SAAS,OAAO,oBAAoB,oBAAoB,CAAC,aAAaomU,CAAC,EAAE,oBAI9sU,SAAS,OAAO,oBAAoB,oBAAoB,CAAC,aAAau7vB,CAAC,EAAE,gBAIvhwB,SAAS,OAAO,oBAAoB,oBAAoB,CAAC,aAAawCAA6xnC,CAAC,EAAE,iBAIhznC,SAAS,OAAO,oBAAoB,oBAAoB,CAAC,aAAayCAAkkb,CAAC,EAAE,EAI7sb,SAAS,OAAO,QAAQ,oBAAoB,CAAC,KAAK;AAAA;AAAA;AAAA,+CAAmL,CAAC,CAAC,CAAC,CAAC,CAAE,ICFlQ,IAAIG,GAAU,KE8Bd,IAAIC,EAAmC,aAOxC,SAAUC,GAAeC,EAA6B,CAC1D,IAAMC,EAAUH,EAChBA,OAAAA,EAAUE,EACHC,CACT,UASgBC,GAAOC,EAAYC,EAAYC,EAAU,CACvD,IAAMC,EAAM,IAAIR,EAAQ,CAAC,EACzB,OAAIK,IAAM,SACRG,EAAI,CAAC,EAAIH,EACLC,IAAM,SACRE,EAAI,CAAC,EAAIF,EACLC,IAAM,SACRC,EAAI,CAAC,EAAID,KAIRC,CACT,CExBA,IAAMC,GAAU,IAAI,IAA6B,CAC/C,CAAC,aAAc,IAAM,IAAI,aAAa,EAAE,CAAC,EACzC,CAAC,aAAc,IAAM,IAAI,aAAa,EAAE,CAAC,EACzC,CAAC,MAAO,IAAM,IAAI,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC,CACpC,CAAA,EACGC,GAAsBD,GAAQ,IAAI,YAAY,EC5B3C,IAAME,GAAaC,GAYpB,SAAUC,GAAIC,EAAWC,EAAWC,EAAWC,EAAU,CAC7D,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIH,EACTG,EAAI,CAAC,EAAIF,EACTE,EAAI,CAAC,EAAID,EAEFC,CACT,CAQgB,SAAAE,GAAKC,EAASH,EAAU,CACtC,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,KAAK,KAAKG,EAAE,CAAC,CAAC,EACvBH,EAAI,CAAC,EAAI,KAAK,KAAKG,EAAE,CAAC,CAAC,EACvBH,EAAI,CAAC,EAAI,KAAK,KAAKG,EAAE,CAAC,CAAC,EAEhBH,CACT,CAQgB,SAAAI,GAAMD,EAASH,EAAU,CACvC,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,KAAK,MAAMG,EAAE,CAAC,CAAC,EACxBH,EAAI,CAAC,EAAI,KAAK,MAAMG,EAAE,CAAC,CAAC,EACxBH,EAAI,CAAC,EAAI,KAAK,MAAMG,EAAE,CAAC,CAAC,EAEjBH,CACT,CAQgB,SAAAK,GAAMF,EAASH,EAAU,CACvC,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,KAAK,MAAMG,EAAE,CAAC,CAAC,EACxBH,EAAI,CAAC,EAAI,KAAK,MAAMG,EAAE,CAAC,CAAC,EACxBH,EAAI,CAAC,EAAI,KAAK,MAAMG,EAAE,CAAC,CAAC,EAEjBH,CACT,CAUgB,SAAAM,GAAMH,EAASI,EAAM,EAAGC,EAAM,EAAGR,EAAU,CACzD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,KAAK,IAAIQ,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAC1CH,EAAI,CAAC,EAAI,KAAK,IAAIQ,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAC1CH,EAAI,CAAC,EAAI,KAAK,IAAIQ,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAEnCH,CACT,UASgBS,GAAIC,EAASC,EAASX,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZX,CACT,CAUM,SAAUY,GAAUF,EAASC,EAASE,EAAeb,EAAU,CACnE,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EACvBb,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EACvBb,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EAEhBb,CACT,CAQgB,SAAAc,GAAMJ,EAASC,EAAO,CACpC,IAAMI,EAAKL,EAAE,CAAC,EACRM,EAAKN,EAAE,CAAC,EACRO,EAAKP,EAAE,CAAC,EACRQ,EAAKP,EAAE,CAAC,EACRQ,EAAKR,EAAE,CAAC,EACRS,EAAKT,EAAE,CAAC,EACRU,EAAO,KAAK,KAAKN,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAC5CK,EAAO,KAAK,KAAKJ,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAC5CG,EAAMF,EAAOC,EACbE,EAASD,GAAOE,GAAIf,EAAGC,CAAC,EAAIY,EAClC,OAAO,KAAK,KAAKC,CAAM,CACzB,UASgBE,GAAShB,EAASC,EAASX,EAAU,CACnD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZX,CACT,CASO,IAAM2B,GAAMD,GAQH,SAAAE,GAAoBlB,EAASC,EAAO,CAClD,OAAO,KAAK,IAAID,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIkB,IACxB,KAAK,IAAInB,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIkB,IACxB,KAAK,IAAInB,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIkB,EACjC,CAQgB,SAAAC,GAAOpB,EAASC,EAAO,CACrC,OAAOD,EAAE,CAAC,IAAMC,EAAE,CAAC,GAAKD,EAAE,CAAC,IAAMC,EAAE,CAAC,GAAKD,EAAE,CAAC,IAAMC,EAAE,CAAC,CACvD,CAYM,SAAUoB,GAAKrB,EAASC,EAAS,EAAWX,EAAU,CAC1D,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAC/BV,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAC/BV,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAExBV,CACT,CAYM,SAAUgC,GAAMtB,EAASC,EAAS,EAASX,EAAU,CACzD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAClCV,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAClCV,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAE3BV,CACT,UAWgBQ,GAAIE,EAASC,EAASX,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,KAAK,IAAIU,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BX,EAAI,CAAC,EAAI,KAAK,IAAIU,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BX,EAAI,CAAC,EAAI,KAAK,IAAIU,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAErBX,CACT,UAWgBO,GAAIG,EAASC,EAASX,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,KAAK,IAAIU,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BX,EAAI,CAAC,EAAI,KAAK,IAAIU,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BX,EAAI,CAAC,EAAI,KAAK,IAAIU,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAErBX,CACT,UASgBiC,GAAU9B,EAAS+B,EAAWlC,EAAU,CACtD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIG,EAAE,CAAC,EAAI+B,EAChBlC,EAAI,CAAC,EAAIG,EAAE,CAAC,EAAI+B,EAChBlC,EAAI,CAAC,EAAIG,EAAE,CAAC,EAAI+B,EAETlC,CACT,CASO,IAAMa,GAAQoB,YASLE,GAAUhC,EAAS+B,EAAWlC,EAAU,CACtD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIG,EAAE,CAAC,EAAI+B,EAChBlC,EAAI,CAAC,EAAIG,EAAE,CAAC,EAAI+B,EAChBlC,EAAI,CAAC,EAAIG,EAAE,CAAC,EAAI+B,EAETlC,CACT,CAQgB,SAAAoC,GAAQjC,EAASH,EAAU,CACzC,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,EAAIG,EAAE,CAAC,EAChBH,EAAI,CAAC,EAAI,EAAIG,EAAE,CAAC,EAChBH,EAAI,CAAC,EAAI,EAAIG,EAAE,CAAC,EAETH,CACT,CAQO,IAAMqC,GAASD,YAUNE,GAAM5B,EAASC,EAASX,EAAU,CAChDA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMsC,EAAK7B,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAIC,EAAE,CAAC,EAC7B6B,EAAK9B,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnC,OAAAX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjCX,EAAI,CAAC,EAAIuC,EACTvC,EAAI,CAAC,EAAIwC,EAEFxC,CACT,CASgB,SAAAyB,GAAIf,EAASC,EAAO,CAClC,OAAQD,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAMD,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAMD,EAAE,CAAC,EAAIC,EAAE,CAAC,CACpD,CAOM,SAAU8B,GAAOtC,EAAO,CAC5B,IAAMuC,EAAKvC,EAAE,CAAC,EACRwC,EAAKxC,EAAE,CAAC,EACRyC,EAAKzC,EAAE,CAAC,EACd,OAAO,KAAK,KAAKuC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,CAC9C,CAOO,IAAMC,GAAMJ,GAOb,SAAUK,GAAS3C,EAAO,CAC9B,IAAMuC,EAAKvC,EAAE,CAAC,EACRwC,EAAKxC,EAAE,CAAC,EACRyC,EAAKzC,EAAE,CAAC,EACd,OAAOuC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAClC,CAOO,IAAMG,GAAQD,GAQL,SAAAE,GAAStC,EAASC,EAAO,CACvC,IAAMsC,EAAKvC,EAAE,CAAC,EAAIC,EAAE,CAAC,EACfuC,EAAKxC,EAAE,CAAC,EAAIC,EAAE,CAAC,EACfwC,EAAKzC,EAAE,CAAC,EAAIC,EAAE,CAAC,EACrB,OAAO,KAAK,KAAKsC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,CAC9C,CAQO,IAAMC,GAAOJ,GAQJ,SAAAK,GAAW3C,EAASC,EAAO,CACzC,IAAMsC,EAAKvC,EAAE,CAAC,EAAIC,EAAE,CAAC,EACfuC,EAAKxC,EAAE,CAAC,EAAIC,EAAE,CAAC,EACfwC,EAAKzC,EAAE,CAAC,EAAIC,EAAE,CAAC,EACrB,OAAOsC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAClC,CAQO,IAAMG,GAASD,GAQN,SAAAE,GAAUpD,EAASH,EAAU,CAC3CA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMyC,EAAKvC,EAAE,CAAC,EACRwC,EAAKxC,EAAE,CAAC,EACRyC,EAAKzC,EAAE,CAAC,EACR0C,EAAM,KAAK,KAAKH,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAEjD,OAAIC,EAAM,MACR7C,EAAI,CAAC,EAAI0C,EAAKG,EACd7C,EAAI,CAAC,EAAI2C,EAAKE,EACd7C,EAAI,CAAC,EAAI4C,EAAKC,IAEd7C,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,GAIJA,CACT,CAQgB,SAAAwD,GAAOrD,EAASH,EAAU,CACxC,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,CAACG,EAAE,CAAC,EACbH,EAAI,CAAC,EAAI,CAACG,EAAE,CAAC,EACbH,EAAI,CAAC,EAAI,CAACG,EAAE,CAAC,EAENH,CACT,CASgB,SAAAyD,GAAKtD,EAASH,EAAU,CACtC,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIG,EAAE,CAAC,EACZH,EAAI,CAAC,EAAIG,EAAE,CAAC,EACZH,EAAI,CAAC,EAAIG,EAAE,CAAC,EAELH,CACT,CASO,IAAM0D,GAAQD,YAULE,GAASjD,EAASC,EAASX,EAAU,CACnD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZX,CACT,CAUO,IAAM4D,GAAMD,YAUHE,GAAOnD,EAASC,EAASX,EAAU,CACjD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIU,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZX,CACT,CAUO,IAAM8D,GAAMD,YAQHE,GAAOlD,EAAQ,EAAGb,EAAU,CAC1CA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMa,EAAQ,KAAK,OAAM,EAAK,EAAI,KAAK,GACjCf,EAAI,KAAK,OAAM,EAAK,EAAI,EACxBiE,EAAS,KAAK,KAAK,EAAIjE,EAAIA,CAAC,EAAIc,EACtC,OAAAb,EAAI,CAAC,EAAI,KAAK,IAAIc,CAAK,EAAIkD,EAC3BhE,EAAI,CAAC,EAAI,KAAK,IAAIc,CAAK,EAAIkD,EAC3BhE,EAAI,CAAC,EAAID,EAAIc,EAENb,CACT,CAOM,SAAUiE,GAAKjE,EAAU,CAC7B,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1BD,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EAEFA,CACT,UAUgBkE,GAAc/D,EAASgE,EAASnE,EAAU,CACxDA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMJ,EAAIM,EAAE,CAAC,EACPL,EAAIK,EAAE,CAAC,EACPJ,EAAII,EAAE,CAAC,EACPiE,EAAKD,EAAE,CAAC,EAAItE,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,EAAE,EAAIpE,EAAIoE,EAAE,EAAE,GAAM,EAEvD,OAAAnE,EAAI,CAAC,GAAKmE,EAAE,CAAC,EAAItE,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,CAAC,EAAIpE,EAAIoE,EAAE,EAAE,GAAKC,EACpDpE,EAAI,CAAC,GAAKmE,EAAE,CAAC,EAAItE,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,CAAC,EAAIpE,EAAIoE,EAAE,EAAE,GAAKC,EACpDpE,EAAI,CAAC,GAAKmE,EAAE,CAAC,EAAItE,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,EAAE,EAAIpE,EAAIoE,EAAE,EAAE,GAAKC,EAE9CpE,CACT,UASgBqE,GAAsBlE,EAASgE,EAASnE,EAAU,CAChEA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMyC,EAAKvC,EAAE,CAAC,EACRwC,EAAKxC,EAAE,CAAC,EACRyC,EAAKzC,EAAE,CAAC,EAEd,OAAAH,EAAI,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAAIxB,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAAIvB,EAAKuB,EAAE,EAAI,EAAI,CAAC,EACjEnE,EAAI,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAAIxB,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAAIvB,EAAKuB,EAAE,EAAI,EAAI,CAAC,EACjEnE,EAAI,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAAIxB,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAAIvB,EAAKuB,EAAE,EAAI,EAAI,CAAC,EAE1DnE,CACT,UAUgBsE,GAAcnE,EAASgE,EAASnE,EAAU,CACxDA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMJ,EAAIM,EAAE,CAAC,EACPL,EAAIK,EAAE,CAAC,EACPJ,EAAII,EAAE,CAAC,EAEb,OAAAH,EAAI,CAAC,EAAIH,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,CAAC,EAAIpE,EAAIoE,EAAE,CAAC,EACtCnE,EAAI,CAAC,EAAIH,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,CAAC,EAAIpE,EAAIoE,EAAE,CAAC,EACtCnE,EAAI,CAAC,EAAIH,EAAIsE,EAAE,CAAC,EAAIrE,EAAIqE,EAAE,CAAC,EAAIpE,EAAIoE,EAAE,EAAE,EAEhCnE,CACT,UASgBuE,GAAcpE,EAASqE,EAASxE,EAAU,CACxDA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAE1B,IAAMwE,EAAKD,EAAE,CAAC,EACRE,EAAKF,EAAE,CAAC,EACRG,EAAKH,EAAE,CAAC,EACRI,EAAKJ,EAAE,CAAC,EAAI,EAEZ3E,EAAIM,EAAE,CAAC,EACPL,EAAIK,EAAE,CAAC,EACPJ,EAAII,EAAE,CAAC,EAEP0E,EAAMH,EAAK3E,EAAI4E,EAAK7E,EACpBgF,EAAMH,EAAK9E,EAAI4E,EAAK1E,EACpBgF,EAAMN,EAAK3E,EAAI4E,EAAK7E,EAE1B,OAAAG,EAAI,CAAC,EAAIH,EAAIgF,EAAMD,GAAMF,EAAKK,EAAMJ,EAAKG,GAAO,EAChD9E,EAAI,CAAC,EAAIF,EAAIgF,EAAMF,GAAMD,EAAKE,EAAMJ,EAAKM,GAAO,EAChD/E,EAAI,CAAC,EAAID,EAAIgF,EAAMH,GAAMH,EAAKK,EAAMJ,EAAKG,GAAO,EAEzC7E,CACT,CASgB,SAAAgF,GAAeb,EAASnE,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1BD,EAAI,CAAC,EAAImE,EAAE,EAAE,EACbnE,EAAI,CAAC,EAAImE,EAAE,EAAE,EACbnE,EAAI,CAAC,EAAImE,EAAE,EAAE,EACNnE,CACX,UAOgBiF,GAAQd,EAASe,EAAclF,EAAU,CACrDA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1B,IAAMkF,EAAMD,EAAO,EACnB,OAAAlF,EAAI,CAAC,EAAImE,EAAEgB,EAAM,CAAC,EAClBnF,EAAI,CAAC,EAAImE,EAAEgB,EAAM,CAAC,EAClBnF,EAAI,CAAC,EAAImE,EAAEgB,EAAM,CAAC,EACXnF,CACX,CAMgB,SAAAoF,GAAWjB,EAASnE,EAAS,CACzCA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1B,IAAMoF,EAAKlB,EAAE,CAAC,EACRmB,EAAKnB,EAAE,CAAC,EACRoB,EAAKpB,EAAE,CAAC,EACRqB,EAAKrB,EAAE,CAAC,EACRsB,EAAKtB,EAAE,CAAC,EACRuB,EAAKvB,EAAE,CAAC,EACRwB,EAAKxB,EAAE,CAAC,EACRyB,EAAKzB,EAAE,CAAC,EACR0B,EAAK1B,EAAE,EAAE,EACf,OAAAnE,EAAI,CAAC,EAAI,KAAK,KAAKqF,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAC9CvF,EAAI,CAAC,EAAI,KAAK,KAAKwF,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAC9C1F,EAAI,CAAC,EAAI,KAAK,KAAK2F,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EACvC7F,CACX,CAWM,SAAU8F,GAAQpF,EAASC,EAASoF,EAAa/F,EAAU,CAC/DA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1B,IAAM+F,EAAI,CAAA,EACJC,EAAI,CAAA,EAGV,OAAAD,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjBqF,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjBqF,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EAGjBsF,EAAE,CAAC,EAAID,EAAE,CAAC,EACVC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAAIC,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EACjDE,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAAIC,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAGjD/F,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EAEZX,CACT,CAWM,SAAUkG,GAAQxF,EAASC,EAASoF,EAAa/F,EAAU,CAC/DA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1B,IAAM+F,EAAI,CAAA,EACJC,EAAI,CAAA,EAGV,OAAAD,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjBqF,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjBqF,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EAGjBsF,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAAIC,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EACjDE,EAAE,CAAC,EAAID,EAAE,CAAC,EACVC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAAIC,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAGjD/F,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EAEZX,CACT,CAWM,SAAUmG,GAAQzF,EAASC,EAASoF,EAAa/F,EAAU,CAC/DA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1B,IAAM+F,EAAI,CAAA,EACJC,EAAI,CAAA,EAGV,OAAAD,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjBqF,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EACjBqF,EAAE,CAAC,EAAItF,EAAE,CAAC,EAAIC,EAAE,CAAC,EAGjBsF,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAAIC,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EACjDE,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EAAIC,EAAE,CAAC,EAAI,KAAK,IAAID,CAAG,EACjDE,EAAE,CAAC,EAAID,EAAE,CAAC,EAGVhG,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EACnBX,EAAI,CAAC,EAAIiG,EAAE,CAAC,EAAItF,EAAE,CAAC,EAEZX,CACT,UASgBoG,GAAU1F,EAASmC,EAAa7C,EAAU,CACxD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAC1BsD,GAAU7C,EAAGV,CAAG,EACTiC,GAAUjC,EAAK6C,EAAK7C,CAAG,CAChC,UASgBqG,GAAS3F,EAAS4F,EAAgBtG,EAAU,CAG1D,OAFAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EAEtBwC,GAAO/B,CAAC,EAAI4F,EACPF,GAAU1F,EAAG4F,EAAQtG,CAAG,EAG1ByD,GAAK/C,EAAGV,CAAG,CACpB,UASgBuG,GAAS7F,EAASC,EAASX,EAAU,CACnD,OAAAA,EAAMA,GAAO,IAAIC,EAAQ,CAAC,EACnB8B,GAAKrB,EAAGC,EAAG,GAAKX,CAAG,CAC5B,ipBC53BIwG,EAAwB,aAOtB,SAAUC,GAAeC,EAA6B,CAC1D,IAAMC,EAAUH,EAChB,OAAAA,EAAUE,EACHC,CACT,CA2CgB,SAAAhH,GACZ+C,EAAaC,EAAaC,EAAagE,EACvCC,EAAaC,EAAaC,EAAaC,EACvCC,EAAaC,EAAaC,EAAcC,EACxCC,EAAcC,EAAcC,EAAcC,EAAY,CACxD,IAAMxH,EAAM,IAAIwG,EAAQ,EAAE,EAC1B,OAAI9D,IAAO,SACT1C,EAAI,CAAC,EAAI0C,EACLC,IAAO,SACT3C,EAAI,CAAC,EAAI2C,EACLC,IAAO,SACT5C,EAAI,CAAC,EAAI4C,EACLgE,IAAO,SACT5G,EAAI,CAAC,EAAI4G,EACLC,IAAO,SACT7G,EAAI,CAAC,EAAI6G,EACLC,IAAO,SACT9G,EAAI,CAAC,EAAI8G,EACLC,IAAO,SACT/G,EAAI,CAAC,EAAI+G,EACLC,IAAO,SACThH,EAAI,CAAC,EAAIgH,EACLC,IAAO,SACTjH,EAAI,CAAC,EAAIiH,EACLC,IAAO,SACTlH,EAAI,CAAC,EAAIkH,EACLC,IAAQ,SACVnH,EAAI,EAAE,EAAImH,EACNC,IAAQ,SACVpH,EAAI,EAAE,EAAIoH,EACNC,IAAQ,SACVrH,EAAI,EAAE,EAAIqH,EACNC,IAAQ,SACVtH,EAAI,EAAE,EAAIsH,EACNC,IAAQ,SACVvH,EAAI,EAAE,EAAIuH,EACNC,IAAQ,SACVxH,EAAI,EAAE,EAAIwH,kBAiBnCxH,CACT,CAyBgB,SAAAJ,GACZ8C,EAAYC,EAAYC,EAAYgE,EACpCC,EAAYC,EAAYC,EAAYC,EACpCC,EAAYC,EAAYC,EAAaC,EACrCC,EAAaC,EAAaC,EAAaC,EACvCxH,EAAU,CACZ,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAI0C,EAAM1C,EAAK,CAAC,EAAI2C,EAAM3C,EAAK,CAAC,EAAI4C,EAAM5C,EAAK,CAAC,EAAI4G,EAC1D5G,EAAK,CAAC,EAAI6G,EAAM7G,EAAK,CAAC,EAAI8G,EAAM9G,EAAK,CAAC,EAAI+G,EAAM/G,EAAK,CAAC,EAAIgH,EAC1DhH,EAAK,CAAC,EAAIiH,EAAMjH,EAAK,CAAC,EAAIkH,EAAMlH,EAAI,EAAE,EAAImH,EAAMnH,EAAI,EAAE,EAAIoH,EAC1DpH,EAAI,EAAE,EAAIqH,EAAMrH,EAAI,EAAE,EAAIsH,EAAMtH,EAAI,EAAE,EAAIuH,EAAMvH,EAAI,EAAE,EAAIwH,EAEnDxH,CACT,CAQgB,SAAAyH,GAASC,EAAU1H,EAAU,CAC3C,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAI0H,EAAG,CAAC,EAAI1H,EAAK,CAAC,EAAI0H,EAAG,CAAC,EAAI1H,EAAK,CAAC,EAAI0H,EAAI,CAAC,EAAI1H,EAAK,CAAC,EAAI,EACjEA,EAAK,CAAC,EAAI0H,EAAG,CAAC,EAAI1H,EAAK,CAAC,EAAI0H,EAAG,CAAC,EAAI1H,EAAK,CAAC,EAAI0H,EAAI,CAAC,EAAI1H,EAAK,CAAC,EAAI,EACjEA,EAAK,CAAC,EAAI0H,EAAG,CAAC,EAAI1H,EAAK,CAAC,EAAI0H,EAAG,CAAC,EAAI1H,EAAI,EAAE,EAAI0H,EAAG,EAAE,EAAI1H,EAAI,EAAE,EAAI,EACjEA,EAAI,EAAE,EAAI,EAAQA,EAAI,EAAE,EAAI,EAAQA,EAAI,EAAE,EAAI,EAASA,EAAI,EAAE,EAAI,EAE1DA,CACT,CAQgB,SAAA2H,GAASnD,EAASxE,EAAU,CAC1CA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM3G,EAAI2E,EAAE,CAAC,EAAS1E,EAAI0E,EAAE,CAAC,EAASzE,EAAIyE,EAAE,CAAC,EAASJ,EAAII,EAAE,CAAC,EACvDoD,EAAK/H,EAAIA,EAASgI,EAAK/H,EAAIA,EAASgI,EAAK/H,EAAIA,EAE7CsF,EAAKxF,EAAI+H,EACTpC,EAAK1F,EAAI8H,EACTnC,EAAK3F,EAAI+H,EACTlC,EAAK5F,EAAI6H,EACThC,EAAK7F,EAAI8H,EACThC,EAAK9F,EAAI+H,EACTC,EAAK3D,EAAIwD,EACTI,EAAK5D,EAAIyD,EACTI,EAAK7D,EAAI0D,EAEf,OAAA9H,EAAK,CAAC,EAAI,EAAIyF,EAAKI,EAAK7F,EAAK,CAAC,EAAIwF,EAAKyC,EAASjI,EAAK,CAAC,EAAI2F,EAAKqC,EAAShI,EAAK,CAAC,EAAI,EAClFA,EAAK,CAAC,EAAIwF,EAAKyC,EAASjI,EAAK,CAAC,EAAI,EAAIqF,EAAKQ,EAAK7F,EAAK,CAAC,EAAI4F,EAAKmC,EAAS/H,EAAK,CAAC,EAAI,EAClFA,EAAK,CAAC,EAAI2F,EAAKqC,EAAShI,EAAK,CAAC,EAAI4F,EAAKmC,EAAS/H,EAAI,EAAE,EAAI,EAAIqF,EAAKI,EAAKzF,EAAI,EAAE,EAAI,EAClFA,EAAI,EAAE,EAAI,EAAcA,EAAI,EAAE,EAAI,EAAcA,EAAI,EAAE,EAAI,EAAcA,EAAI,EAAE,EAAI,EAE3EA,CACT,CAQgB,SAAAwD,GAAOW,EAASnE,EAAU,CACxC,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EACxEnE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EACxEnE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAI,CAACmE,EAAG,CAAC,EAAInE,EAAI,EAAE,EAAI,CAACmE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAI,CAACmE,EAAE,EAAE,EACxEnE,EAAI,EAAE,EAAI,CAACmE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAI,CAACmE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAI,CAACmE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAI,CAACmE,EAAE,EAAE,EAEjEnE,CACT,CASgB,SAAAyD,GAAKU,EAASnE,EAAU,CACtC,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACpEnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACpEnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAK,CAAC,EAAImE,EAAG,CAAC,EAAInE,EAAI,EAAE,EAAImE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACpEnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAImE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAImE,EAAE,EAAE,EAAInE,EAAI,EAAE,EAAImE,EAAE,EAAE,EAE7DnE,CACT,CASO,IAAM0D,GAAQD,GAQL,SAAA7B,GAAoBlB,EAASC,EAAO,CAClD,OAAO,KAAK,IAAID,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAG,CAAC,EAAIC,EAAG,CAAC,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAE,EAAE,EAAIC,EAAE,EAAE,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAE,EAAE,EAAIC,EAAE,EAAE,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAE,EAAE,EAAIC,EAAE,EAAE,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAE,EAAE,EAAIC,EAAE,EAAE,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAE,EAAE,EAAIC,EAAE,EAAE,CAAC,EAAIkB,IAC1B,KAAK,IAAInB,EAAE,EAAE,EAAIC,EAAE,EAAE,CAAC,EAAIkB,EACnC,CAQgB,SAAAC,GAAOpB,EAASC,EAAO,CACrC,OAAOD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAG,CAAC,IAAMC,EAAG,CAAC,GACdD,EAAE,EAAE,IAAMC,EAAE,EAAE,GACdD,EAAE,EAAE,IAAMC,EAAE,EAAE,GACdD,EAAE,EAAE,IAAMC,EAAE,EAAE,GACdD,EAAE,EAAE,IAAMC,EAAE,EAAE,GACdD,EAAE,EAAE,IAAMC,EAAE,EAAE,GACdD,EAAE,EAAE,IAAMC,EAAE,EAAE,CACvB,CAQM,SAAUuH,GAASlI,EAAU,CACjC,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACpDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACpDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EACpDA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAE7CA,CACT,CAQgB,SAAAmI,GAAUhE,EAASnE,EAAU,CAE3C,GADAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EACvBxG,IAAQmE,EAAG,CACb,IAAIiE,EAEJ,OAAAA,EAAIjE,EAAE,CAAC,EACPA,EAAE,CAAC,EAAIA,EAAE,CAAC,EACVA,EAAE,CAAC,EAAIiE,EAEPA,EAAIjE,EAAE,CAAC,EACPA,EAAE,CAAC,EAAIA,EAAE,CAAC,EACVA,EAAE,CAAC,EAAIiE,EAEPA,EAAIjE,EAAE,CAAC,EACPA,EAAE,CAAC,EAAIA,EAAE,EAAE,EACXA,EAAE,EAAE,EAAIiE,EAERA,EAAIjE,EAAE,CAAC,EACPA,EAAE,CAAC,EAAIA,EAAE,CAAC,EACVA,EAAE,CAAC,EAAIiE,EAEPA,EAAIjE,EAAE,CAAC,EACPA,EAAE,CAAC,EAAIA,EAAE,EAAE,EACXA,EAAE,EAAE,EAAIiE,EAERA,EAAIjE,EAAE,EAAE,EACRA,EAAE,EAAE,EAAIA,EAAE,EAAE,EACZA,EAAE,EAAE,EAAIiE,EACDpI,EAGT,IAAMqI,EAAMlE,EAAE,EAAI,EAAI,CAAC,EACjBmE,EAAMnE,EAAE,EAAI,EAAI,CAAC,EACjBoE,EAAMpE,EAAE,EAAI,EAAI,CAAC,EACjBqE,EAAMrE,EAAE,EAAI,EAAI,CAAC,EACjBsE,EAAMtE,EAAE,EAAI,EAAI,CAAC,EACjBuE,EAAMvE,EAAE,EAAI,EAAI,CAAC,EACjBwE,EAAMxE,EAAE,EAAI,EAAI,CAAC,EACjByE,EAAMzE,EAAE,EAAI,EAAI,CAAC,EACjB0E,EAAM1E,EAAE,EAAI,EAAI,CAAC,EACjB2E,EAAM3E,EAAE,EAAI,EAAI,CAAC,EACjB4E,EAAM5E,EAAE,EAAI,EAAI,CAAC,EACjB6E,EAAM7E,EAAE,EAAI,EAAI,CAAC,EACjB8E,EAAM9E,EAAE,EAAI,EAAI,CAAC,EACjB+E,EAAM/E,EAAE,EAAI,EAAI,CAAC,EACjBgF,EAAMhF,EAAE,EAAI,EAAI,CAAC,EACjBiF,EAAMjF,EAAE,EAAI,EAAI,CAAC,EAEvB,OAAAnE,EAAK,CAAC,EAAIqI,EAAMrI,EAAK,CAAC,EAAIyI,EAAMzI,EAAK,CAAC,EAAI6I,EAAM7I,EAAK,CAAC,EAAIiJ,EAC1DjJ,EAAK,CAAC,EAAIsI,EAAMtI,EAAK,CAAC,EAAI0I,EAAM1I,EAAK,CAAC,EAAI8I,EAAM9I,EAAK,CAAC,EAAIkJ,EAC1DlJ,EAAK,CAAC,EAAIuI,EAAMvI,EAAK,CAAC,EAAI2I,EAAM3I,EAAI,EAAE,EAAI+I,EAAM/I,EAAI,EAAE,EAAImJ,EAC1DnJ,EAAI,EAAE,EAAIwI,EAAMxI,EAAI,EAAE,EAAI4I,EAAM5I,EAAI,EAAE,EAAIgJ,EAAMhJ,EAAI,EAAE,EAAIoJ,EAEnDpJ,CACT,CAQgB,SAAAoC,GAAQ+B,EAASnE,EAAU,CACzCA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM6B,EAAMlE,EAAE,EAAI,EAAI,CAAC,EACjBmE,EAAMnE,EAAE,EAAI,EAAI,CAAC,EACjBoE,EAAMpE,EAAE,EAAI,EAAI,CAAC,EACjBqE,EAAMrE,EAAE,EAAI,EAAI,CAAC,EACjBsE,EAAMtE,EAAE,EAAI,EAAI,CAAC,EACjBuE,EAAMvE,EAAE,EAAI,EAAI,CAAC,EACjBwE,EAAMxE,EAAE,EAAI,EAAI,CAAC,EACjByE,EAAMzE,EAAE,EAAI,EAAI,CAAC,EACjB0E,EAAM1E,EAAE,EAAI,EAAI,CAAC,EACjB2E,EAAM3E,EAAE,EAAI,EAAI,CAAC,EACjB4E,EAAM5E,EAAE,EAAI,EAAI,CAAC,EACjB6E,EAAM7E,EAAE,EAAI,EAAI,CAAC,EACjB8E,EAAM9E,EAAE,EAAI,EAAI,CAAC,EACjB+E,EAAM/E,EAAE,EAAI,EAAI,CAAC,EACjBgF,EAAMhF,EAAE,EAAI,EAAI,CAAC,EACjBiF,EAAMjF,EAAE,EAAI,EAAI,CAAC,EACjBkF,EAAQN,EAAMK,EACdE,EAAQH,EAAMH,EACdO,EAAQZ,EAAMS,EACdI,EAAQL,EAAMP,EACda,EAAQd,EAAMK,EACdU,EAAQX,EAAMH,EACde,GAAQpB,EAAMa,EACdQ,GAAQT,EAAMX,EACdqB,EAAQtB,EAAMS,EACdc,GAAQf,EAAMP,EACduB,EAAQxB,EAAMK,EACdoB,GAAQrB,EAAMH,EACdyB,GAAQpB,EAAMK,EACdgB,GAAQjB,EAAMH,EACdqB,EAAQ1B,EAAMS,EACdkB,GAAQnB,EAAMP,EACd2B,GAAQ5B,EAAMK,EACdwB,GAAQzB,EAAMH,EACd6B,GAAQlC,EAAMa,EACdsB,GAAQvB,EAAMX,EACdmC,GAAQpC,EAAMS,EACd4B,GAAQ7B,EAAMP,EACdqC,GAAQtC,EAAMK,EACdkC,GAAQnC,EAAMH,EAEduC,GAAMxB,EAAOX,EAAMc,EAAOV,EAAMW,EAAOP,GACxCI,EAAOZ,EAAMa,EAAOT,EAAMY,EAAOR,GAChC3G,GAAM+G,EAAOhB,EAAMqB,GAAOb,EAAMgB,GAAOZ,GACxCG,EAAOf,EAAMsB,GAAOd,EAAMe,EAAOX,GAChC1G,GAAM+G,EAAOjB,EAAMsB,GAAOlB,EAAMqB,EAAQb,GACzCM,EAAOlB,EAAMqB,GAAOjB,EAAMsB,GAAQd,GACjC4B,GAAMpB,EAAOpB,EAAMuB,EAAOnB,EAAMsB,GAAQlB,GACzCW,EAAOnB,EAAMwB,GAAOpB,EAAMqB,EAAQjB,GAEjCiC,GAAI,GAAK1C,EAAMwC,GAAKpC,EAAMlG,GAAKsG,EAAMrG,GAAKyG,EAAM6B,IAEtD,OAAA9K,EAAK,CAAC,EAAI+K,GAAIF,GACd7K,EAAK,CAAC,EAAI+K,GAAIxI,GACdvC,EAAK,CAAC,EAAI+K,GAAIvI,GACdxC,EAAK,CAAC,EAAI+K,GAAID,GACd9K,EAAK,CAAC,EAAI+K,IAAMzB,EAAOb,EAAMc,EAAOV,EAAMa,EAAOT,GACxCI,EAAOZ,EAAMe,EAAOX,EAAMY,EAAOR,IAC1CjJ,EAAK,CAAC,EAAI+K,IAAM1B,EAAOhB,EAAMuB,GAAOf,EAAMgB,EAAOZ,GACxCK,EAAOjB,EAAMsB,GAAOd,EAAMiB,GAAOb,IAC1CjJ,EAAK,CAAC,EAAI+K,IAAMvB,EAAOnB,EAAMsB,GAAOlB,EAAMuB,GAAQf,GACzCM,EAAOlB,EAAMuB,GAAOnB,EAAMsB,EAAQd,IAC3CjJ,EAAK,CAAC,EAAI+K,IAAMtB,EAAOpB,EAAMyB,GAAOrB,EAAMsB,EAAQlB,GACzCa,EAAOrB,EAAMwB,EAAOpB,EAAMuB,GAAQnB,IAC3C7I,EAAK,CAAC,EAAI+K,IAAMd,GAAQrB,EAAMwB,GAAQpB,EAAMqB,GAAQjB,GAC3Cc,GAAQtB,EAAMuB,EAAQnB,EAAMsB,GAAQlB,IAC7CpJ,EAAK,CAAC,EAAI+K,IAAMb,GAAQ1B,EAAM+B,GAAQvB,EAAM0B,GAAQtB,GAC3Ca,GAAQzB,EAAMgC,GAAQxB,EAAMyB,GAAQrB,IAC7CpJ,EAAI,EAAE,EAAI+K,IAAMZ,EAAQ3B,EAAMgC,GAAQ5B,EAAM+B,GAAQvB,GAC3CgB,GAAQ5B,EAAM+B,GAAQ3B,EAAMgC,GAAQxB,IAC7CpJ,EAAI,EAAE,EAAI+K,IAAMT,GAAQ9B,EAAMiC,GAAQ7B,EAAMgC,GAAQ5B,GAC3CqB,GAAQ7B,EAAMkC,GAAQ9B,EAAM+B,GAAQ3B,IAC7ChJ,EAAI,EAAE,EAAI+K,IAAMZ,EAAQpB,EAAMuB,GAAQnB,EAAMe,GAAQvB,GAC3C0B,GAAQlB,EAAMc,GAAQtB,EAAMyB,GAAQrB,IAC7C/I,EAAI,EAAE,EAAI+K,IAAMN,GAAQtB,EAAMc,GAAQ1B,EAAMiC,GAAQzB,GAC3CwB,GAAQxB,EAAM2B,GAAQvB,EAAMe,GAAQ3B,IAC7CvI,EAAI,EAAE,EAAI+K,IAAMR,GAAQ5B,EAAMiC,GAAQzB,EAAMiB,GAAQ7B,GAC3CoC,GAAQxB,EAAMgB,EAAQ5B,EAAMiC,GAAQ7B,IAC7C3I,EAAI,EAAE,EAAI+K,IAAMJ,GAAQ5B,EAAMsB,GAAQ9B,EAAMmC,GAAQ/B,GAC3C8B,GAAQ9B,EAAMiC,GAAQ7B,EAAMuB,GAAQ/B,IAEtCvI,CACT,CAOM,SAAUgL,GAAY7G,EAAO,CACjC,IAAMkE,EAAMlE,EAAE,CAAS,EACjBmE,EAAMnE,EAAE,EAAI,EAAI,CAAC,EACjBoE,EAAMpE,EAAE,EAAI,EAAI,CAAC,EACjBqE,EAAMrE,EAAE,EAAI,EAAI,CAAC,EACjBsE,EAAMtE,EAAE,EAAI,EAAI,CAAC,EACjBuE,EAAMvE,EAAE,EAAI,EAAI,CAAC,EACjBwE,EAAMxE,EAAE,EAAI,EAAI,CAAC,EACjByE,EAAMzE,EAAE,EAAI,EAAI,CAAC,EACjB0E,EAAM1E,EAAE,EAAI,EAAI,CAAC,EACjB2E,EAAM3E,EAAE,EAAI,EAAI,CAAC,EACjB4E,EAAM5E,EAAE,EAAI,EAAI,CAAC,EACjB6E,EAAM7E,EAAE,EAAI,EAAI,CAAC,EACjB8E,EAAM9E,EAAE,EAAI,EAAI,CAAC,EACjB+E,EAAM/E,EAAE,EAAI,EAAI,CAAC,EACjBgF,EAAMhF,EAAE,EAAI,EAAI,CAAC,EACjBiF,EAAMjF,EAAE,EAAI,EAAI,CAAC,EAEjBkF,EAAQN,EAAMK,EACdE,EAAQH,EAAMH,EACdO,EAAQZ,EAAMS,EACdI,EAAQL,EAAMP,EACda,EAAQd,EAAMK,EACdU,EAAQX,EAAMH,EACde,EAAQpB,EAAMa,EACdQ,GAAQT,EAAMX,EACdqB,GAAQtB,EAAMS,EACdc,EAAQf,EAAMP,EACduB,GAAQxB,EAAMK,EACdoB,EAAQrB,EAAMH,EAEdqC,GAAMxB,EAAOX,EAAMc,EAAOV,EAAMW,EAAOP,GACjCI,EAAOZ,EAAMa,EAAOT,EAAMY,EAAOR,GACvC3G,GAAM+G,EAAOhB,EAAMqB,EAAOb,EAAMgB,EAAOZ,GACjCG,EAAOf,EAAMsB,GAAOd,EAAMe,GAAOX,GACvC1G,GAAM+G,EAAOjB,EAAMsB,GAAOlB,EAAMqB,GAAQb,GAClCM,EAAOlB,EAAMqB,EAAOjB,EAAMsB,EAAQd,GACxC4B,EAAMpB,EAAOpB,EAAMuB,GAAOnB,EAAMsB,EAAQlB,GAClCW,EAAOnB,EAAMwB,EAAOpB,EAAMqB,GAAQjB,GAE9C,OAAOT,EAAMwC,GAAKpC,EAAMlG,GAAKsG,EAAMrG,GAAKyG,EAAM6B,CAChD,CAQO,IAAMzI,GAASD,YASNuB,GAASjD,EAASC,EAASX,EAAU,CACnDA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAMyE,EAAMvK,EAAE,CAAC,EACTwK,EAAMxK,EAAE,CAAC,EACTyK,EAAMzK,EAAE,CAAC,EACT0K,EAAM1K,EAAE,CAAC,EACT2K,EAAM3K,EAAG,CAAK,EACd4K,EAAM5K,EAAG,CAAK,EACd6K,EAAM7K,EAAG,CAAK,EACd8K,EAAM9K,EAAG,CAAK,EACd+K,EAAM/K,EAAG,CAAK,EACdgL,EAAMhL,EAAG,CAAK,EACdiL,EAAMjL,EAAG,EAAK,EACdkL,EAAMlL,EAAG,EAAK,EACdmL,EAAMnL,EAAE,EAAM,EACdoL,EAAMpL,EAAE,EAAM,EACdqL,EAAMrL,EAAE,EAAM,EACdsL,EAAMtL,EAAE,EAAM,EACduL,EAAMtL,EAAE,CAAC,EACTuL,EAAMvL,EAAE,CAAC,EACTwL,EAAMxL,EAAE,CAAC,EACTyL,EAAMzL,EAAE,CAAC,EACT0L,EAAM1L,EAAG,CAAK,EACd2L,GAAM3L,EAAG,CAAK,EACd4L,GAAM5L,EAAG,CAAK,EACd6L,EAAM7L,EAAG,CAAK,EACd8L,GAAM9L,EAAG,CAAK,EACd+L,EAAM/L,EAAG,CAAK,EACdgM,GAAMhM,EAAG,EAAK,EACdiM,GAAMjM,EAAG,EAAK,EACdkM,GAAMlM,EAAE,EAAM,EACdmM,EAAMnM,EAAE,EAAM,EACdoM,GAAMpM,EAAE,EAAM,EACdqM,GAAMrM,EAAE,EAAM,EAEpB,OAAAX,EAAK,CAAC,EAAIiL,EAAMgB,EAAMZ,EAAMa,EAAMT,EAAMU,EAAMN,EAAMO,EACpDpM,EAAK,CAAC,EAAIkL,EAAMe,EAAMX,EAAMY,EAAMR,EAAMS,EAAML,EAAMM,EACpDpM,EAAK,CAAC,EAAImL,EAAMc,EAAMV,EAAMW,EAAMP,EAAMQ,EAAMJ,EAAMK,EACpDpM,EAAK,CAAC,EAAIoL,EAAMa,EAAMT,EAAMU,EAAMN,EAAMO,EAAMH,EAAMI,EACpDpM,EAAK,CAAC,EAAIiL,EAAMoB,EAAMhB,EAAMiB,GAAMb,EAAMc,GAAMV,EAAMW,EACpDxM,EAAK,CAAC,EAAIkL,EAAMmB,EAAMf,EAAMgB,GAAMZ,EAAMa,GAAMT,EAAMU,EACpDxM,EAAK,CAAC,EAAImL,EAAMkB,EAAMd,EAAMe,GAAMX,EAAMY,GAAMR,EAAMS,EACpDxM,EAAK,CAAC,EAAIoL,EAAMiB,EAAMb,EAAMc,GAAMV,EAAMW,GAAMP,EAAMQ,EACpDxM,EAAK,CAAC,EAAIiL,EAAMwB,GAAMpB,EAAMqB,EAAMjB,EAAMkB,GAAMd,EAAMe,GACpD5M,EAAK,CAAC,EAAIkL,EAAMuB,GAAMnB,EAAMoB,EAAMhB,EAAMiB,GAAMb,EAAMc,GACpD5M,EAAI,EAAE,EAAImL,EAAMsB,GAAMlB,EAAMmB,EAAMf,EAAMgB,GAAMZ,EAAMa,GACpD5M,EAAI,EAAE,EAAIoL,EAAMqB,GAAMjB,EAAMkB,EAAMd,EAAMe,GAAMX,EAAMY,GACpD5M,EAAI,EAAE,EAAIiL,EAAM4B,GAAMxB,EAAMyB,EAAMrB,EAAMsB,GAAMlB,EAAMmB,GACpDhN,EAAI,EAAE,EAAIkL,EAAM2B,GAAMvB,EAAMwB,EAAMpB,EAAMqB,GAAMjB,EAAMkB,GACpDhN,EAAI,EAAE,EAAImL,EAAM0B,GAAMtB,EAAMuB,EAAMnB,EAAMoB,GAAMhB,EAAMiB,GACpDhN,EAAI,EAAE,EAAIoL,EAAMyB,GAAMrB,EAAMsB,EAAMlB,EAAMmB,GAAMf,EAAMgB,GAE7ChN,CACT,CASO,IAAM4D,GAAMD,YAUHsJ,GAAevM,EAASP,EAASH,EAAU,CACzD,OAAAA,EAAMA,GAAOkI,GAAQ,EACjBxH,IAAMV,IACRA,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAK,CAAC,EAAIU,EAAG,CAAC,EACdV,EAAI,EAAE,EAAIU,EAAE,EAAE,EACdV,EAAI,EAAE,EAAIU,EAAE,EAAE,GAEhBV,EAAI,EAAE,EAAIG,EAAE,CAAC,EACbH,EAAI,EAAE,EAAIG,EAAE,CAAC,EACbH,EAAI,EAAE,EAAIG,EAAE,CAAC,EACbH,EAAI,EAAE,EAAI,EACHA,CACT,CASgB,SAAAgF,GAAeb,EAASnE,EAAU,CAChD,OAAAA,EAAMA,GAAOkN,GAAW,EACxBlN,EAAI,CAAC,EAAImE,EAAE,EAAE,EACbnE,EAAI,CAAC,EAAImE,EAAE,EAAE,EACbnE,EAAI,CAAC,EAAImE,EAAE,EAAE,EACNnE,CACT,UAQgBiF,GAAQd,EAASe,EAAclF,EAAU,CACvDA,EAAMA,GAAOkN,GAAW,EACxB,IAAM/H,EAAMD,EAAO,EACnB,OAAAlF,EAAI,CAAC,EAAImE,EAAEgB,EAAM,CAAC,EAClBnF,EAAI,CAAC,EAAImE,EAAEgB,EAAM,CAAC,EAClBnF,EAAI,CAAC,EAAImE,EAAEgB,EAAM,CAAC,EACXnF,CACT,CAUM,SAAUmN,GAAQhJ,EAAShE,EAAS+E,EAAclF,EAAS,CAC3DA,IAAQmE,IACVnE,EAAMyD,GAAKU,EAAGnE,CAAG,GAEnB,IAAMmF,EAAMD,EAAO,EACnB,OAAAlF,EAAImF,EAAM,CAAC,EAAIhF,EAAE,CAAC,EAClBH,EAAImF,EAAM,CAAC,EAAIhF,EAAE,CAAC,EAClBH,EAAImF,EAAM,CAAC,EAAIhF,EAAE,CAAC,EACXH,CACT,CAOgB,SAAAoF,GAAWjB,EAASnE,EAAU,CAC5CA,EAAMA,GAAOkN,GAAW,EAExB,IAAM7H,EAAKlB,EAAE,CAAC,EACRmB,EAAKnB,EAAE,CAAC,EACRoB,EAAKpB,EAAE,CAAC,EACRqB,EAAKrB,EAAE,CAAC,EACRsB,EAAKtB,EAAE,CAAC,EACRuB,EAAKvB,EAAE,CAAC,EACRwB,EAAKxB,EAAE,CAAC,EACRyB,EAAKzB,EAAE,CAAC,EACR0B,EAAK1B,EAAE,EAAE,EAEf,OAAAnE,EAAI,CAAC,EAAI,KAAK,KAAKqF,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAC9CvF,EAAI,CAAC,EAAI,KAAK,KAAKwF,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAC9C1F,EAAI,CAAC,EAAI,KAAK,KAAK2F,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAEvC7F,CACT,CA2BM,SAAUoN,GAAYC,EAA+BC,EAAgBC,EAAeC,EAAcxN,EAAU,CAChHA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAMiH,EAAI,KAAK,IAAI,KAAK,GAAK,GAAM,GAAMJ,CAAqB,EAoB9D,GAlBArN,EAAI,CAAC,EAAKyN,EAAIH,EACdtN,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EAEVA,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAKyN,EACVzN,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EAEVA,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EACVA,EAAI,EAAE,EAAI,GAEVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EAEN,OAAO,SAASwN,CAAI,EAAG,CACzB,IAAME,EAAW,GAAKH,EAAQC,GAC9BxN,EAAI,EAAE,EAAIwN,EAAOE,EACjB1N,EAAI,EAAE,EAAIwN,EAAOD,EAAQG,OAEzB1N,EAAI,EAAE,EAAI,GACVA,EAAI,EAAE,EAAI,CAACuN,EAGb,OAAOvN,CACT,CAsBS,SAAU2N,GAAoBN,EAA+BC,EAAgBC,EAAeC,EAAO,IAAUxN,EAAU,CAC9HA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAMiH,EAAI,EAAI,KAAK,IAAIJ,EAAwB,EAAG,EAoBlD,GAlBArN,EAAK,CAAC,EAAIyN,EAAIH,EACdtN,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EAEVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAIyN,EACVzN,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EAEVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAI,EAAE,EAAI,GAEVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EAENwN,IAAS,IACXxN,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAIuN,MACL,CACL,IAAMG,EAAW,GAAKF,EAAOD,GAC7BvN,EAAI,EAAE,EAAIuN,EAAQG,EAClB1N,EAAI,EAAE,EAAIwN,EAAOD,EAAQG,EAG3B,OAAO1N,CACT,CAiBgB,SAAA4N,GAAMC,EAAcC,EAAeC,EAAgBC,EAAaC,EAAcC,EAAalO,EAAU,CACnH,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAI,CAAC,EAAK,GAAK8N,EAAQD,GACvB7N,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EAEVA,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,GAAKgO,EAAMD,GACrB/N,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EAEVA,EAAI,CAAC,EAAK,EACVA,EAAI,CAAC,EAAK,EACVA,EAAI,EAAE,EAAI,GAAKiO,EAAOC,GACtBlO,EAAI,EAAE,EAAI,EAEVA,EAAI,EAAE,GAAK8N,EAAQD,IAASA,EAAOC,GACnC9N,EAAI,EAAE,GAAKgO,EAAMD,IAAWA,EAASC,GACrChO,EAAI,EAAE,EAAIiO,GAAQA,EAAOC,GACzBlO,EAAI,EAAE,EAAI,EAEHA,CACT,CAoBgB,SAAAmO,GAAQN,EAAcC,EAAeC,EAAgBC,EAAaC,EAAcC,EAAalO,EAAU,CACrHA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAMvD,EAAM6K,EAAQD,EACd3K,EAAM8K,EAAMD,EACZ5K,EAAM8K,EAAOC,EAEnB,OAAAlO,EAAK,CAAC,EAAI,EAAIiO,EAAOhL,EACrBjD,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EAAIiO,EAAO/K,EACrBlD,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,GAAK6N,EAAOC,GAAS7K,EAC3BjD,EAAK,CAAC,GAAKgO,EAAMD,GAAU7K,EAC3BlD,EAAI,EAAE,EAAIkO,EAAM/K,EAChBnD,EAAI,EAAE,EAAI,GACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAIiO,EAAOC,EAAM/K,EACvBnD,EAAI,EAAE,EAAI,EAEHA,CACT,UAoBgBoO,GAAgBP,EAAcC,EAAeC,EAAgBC,EAAaC,EAAcC,EAAM,IAAUlO,EAAU,CAChIA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAMvD,EAAM6K,EAAQD,EACd3K,EAAM8K,EAAMD,EAiBlB,GAfA/N,EAAK,CAAC,EAAI,EAAIiO,EAAOhL,EACrBjD,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EAAIiO,EAAO/K,EACrBlD,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,GAAK6N,EAAOC,GAAS7K,EAC3BjD,EAAK,CAAC,GAAKgO,EAAMD,GAAU7K,EAC3BlD,EAAI,EAAE,EAAI,GACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EAENkO,IAAQ,IACVlO,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAIiO,MACL,CACL,IAAMP,EAAW,GAAKQ,EAAMD,GAC5BjO,EAAI,EAAE,EAAIiO,EAAOP,EACjB1N,EAAI,EAAE,EAAIkO,EAAMD,EAAOP,EAGzB,OAAO1N,CACT,CAEA,IAAIqO,GACAC,GACAC,GAgBE,SAAUC,GAAIC,EAAgBC,EAAcC,EAAU3O,EAAU,CACpE,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B6H,GAAQA,IAASnB,GAAW,EAC5BoB,GAAQA,IAASpB,GAAW,EAC5BqB,GAAQA,IAASrB,GAAW,EAE5B0B,GAAeC,GAAcH,EAAQD,EAAUF,EAAK,EAAGA,EAAK,EAC5DK,GAAeE,GAAWH,EAAIJ,GAAOF,EAAK,EAAGA,EAAK,EAClDO,GAAeE,GAAWP,GAAOF,GAAOC,EAAK,EAAGA,EAAK,EAErDtO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAOrO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAOrO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAOrO,EAAK,CAAC,EAAI,EAClFA,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAOtO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAOtO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAOtO,EAAK,CAAC,EAAI,EAClFA,EAAK,CAAC,EAAIuO,GAAM,CAAC,EAAOvO,EAAK,CAAC,EAAIuO,GAAM,CAAC,EAAOvO,EAAI,EAAE,EAAIuO,GAAM,CAAC,EAAOvO,EAAI,EAAE,EAAI,EAClFA,EAAI,EAAE,EAAIyO,EAAS,CAAC,EAAIzO,EAAI,EAAE,EAAIyO,EAAS,CAAC,EAAIzO,EAAI,EAAE,EAAIyO,EAAS,CAAC,EAAIzO,EAAI,EAAE,EAAI,EAE3EA,CACT,CAgBM,SAAU+O,GAAUC,EAAWN,EAAcC,EAAU3O,EAAU,CACrE,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B6H,GAAQA,IAASnB,GAAW,EAC5BoB,GAAQA,IAASpB,GAAW,EAC5BqB,GAAQA,IAASrB,GAAW,EAE5B0B,GAAeC,GAAcG,EAAKN,EAAQH,EAAK,EAAGA,EAAK,EACvDK,GAAeE,GAAWH,EAAIJ,GAAOF,EAAK,EAAGA,EAAK,EAClDO,GAAeE,GAAWP,GAAOF,GAAOC,EAAK,EAAGA,EAAK,EAErDtO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAOrO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAOrO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAOrO,EAAK,CAAC,EAAI,EAClFA,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAOtO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAOtO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAOtO,EAAK,CAAC,EAAI,EAClFA,EAAK,CAAC,EAAIuO,GAAM,CAAC,EAAOvO,EAAK,CAAC,EAAIuO,GAAM,CAAC,EAAOvO,EAAI,EAAE,EAAIuO,GAAM,CAAC,EAAOvO,EAAI,EAAE,EAAI,EAClFA,EAAI,EAAE,EAAIgP,EAAI,CAAC,EAAIhP,EAAI,EAAE,EAAIgP,EAAI,CAAC,EAAIhP,EAAI,EAAE,EAAIgP,EAAI,CAAC,EAAIhP,EAAI,EAAE,EAAI,EAE5DA,CACT,CAcM,SAAUiP,GAAOD,EAAWN,EAAcC,EAAU3O,EAAU,CAClE,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B6H,GAAQA,IAASnB,GAAW,EAC5BoB,GAAQA,IAASpB,GAAW,EAC5BqB,GAAQA,IAASrB,GAAW,EAE5B0B,GAAeC,GAAcG,EAAKN,EAAQH,EAAK,EAAGA,EAAK,EACvDK,GAAeE,GAAWH,EAAIJ,GAAOF,EAAK,EAAGA,EAAK,EAClDO,GAAeE,GAAWP,GAAOF,GAAOC,EAAK,EAAGA,EAAK,EAErDtO,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAIrO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAItO,EAAK,CAAC,EAAIuO,GAAM,CAAC,EAAIvO,EAAK,CAAC,EAAI,EACzEA,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAIrO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAItO,EAAK,CAAC,EAAIuO,GAAM,CAAC,EAAIvO,EAAK,CAAC,EAAI,EACzEA,EAAK,CAAC,EAAIqO,GAAM,CAAC,EAAIrO,EAAK,CAAC,EAAIsO,GAAM,CAAC,EAAItO,EAAI,EAAE,EAAIuO,GAAM,CAAC,EAAIvO,EAAI,EAAE,EAAI,EAEzEA,EAAI,EAAE,EAAI,EAAEqO,GAAM,CAAC,EAAIW,EAAI,CAAC,EAAIX,GAAM,CAAC,EAAIW,EAAI,CAAC,EAAIX,GAAM,CAAC,EAAIW,EAAI,CAAC,GACpEhP,EAAI,EAAE,EAAI,EAAEsO,GAAM,CAAC,EAAIU,EAAI,CAAC,EAAIV,GAAM,CAAC,EAAIU,EAAI,CAAC,EAAIV,GAAM,CAAC,EAAIU,EAAI,CAAC,GACpEhP,EAAI,EAAE,EAAI,EAAEuO,GAAM,CAAC,EAAIS,EAAI,CAAC,EAAIT,GAAM,CAAC,EAAIS,EAAI,CAAC,EAAIT,GAAM,CAAC,EAAIS,EAAI,CAAC,GACpEhP,EAAI,EAAE,EAAI,EAEHA,CACT,CASgB,SAAAkP,GAAY/O,EAASH,EAAU,CAC7C,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAC7DA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAC7DA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAI,EAAE,EAAI,EAAOA,EAAI,EAAE,EAAI,EAC7DA,EAAI,EAAE,EAAIG,EAAE,CAAC,EAAIH,EAAI,EAAE,EAAIG,EAAE,CAAC,EAAIH,EAAI,EAAE,EAAIG,EAAE,CAAC,EAAIH,EAAI,EAAE,EAAI,EAEtDA,CACT,UAUgBmP,GAAUhL,EAAShE,EAASH,EAAU,CACpDA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM9D,EAAKvC,EAAE,CAAC,EACRwC,EAAKxC,EAAE,CAAC,EACRyC,EAAKzC,EAAE,CAAC,EACRkI,EAAMlE,EAAE,CAAC,EACTmE,EAAMnE,EAAE,CAAC,EACToE,EAAMpE,EAAE,CAAC,EACTqE,EAAMrE,EAAE,CAAC,EACTsE,EAAMtE,EAAE,EAAI,EAAI,CAAC,EACjBuE,EAAMvE,EAAE,EAAI,EAAI,CAAC,EACjBwE,EAAMxE,EAAE,EAAI,EAAI,CAAC,EACjByE,EAAMzE,EAAE,EAAI,EAAI,CAAC,EACjB0E,EAAM1E,EAAE,EAAI,EAAI,CAAC,EACjB2E,EAAM3E,EAAE,EAAI,EAAI,CAAC,EACjB4E,EAAM5E,EAAE,EAAI,EAAI,CAAC,EACjB6E,EAAM7E,EAAE,EAAI,EAAI,CAAC,EACjB8E,EAAM9E,EAAE,EAAI,EAAI,CAAC,EACjB+E,EAAM/E,EAAE,EAAI,EAAI,CAAC,EACjBgF,EAAMhF,EAAE,EAAI,EAAI,CAAC,EACjBiF,EAAMjF,EAAE,EAAI,EAAI,CAAC,EAEvB,OAAIA,IAAMnE,IACRA,EAAK,CAAC,EAAIqI,EACVrI,EAAK,CAAC,EAAIsI,EACVtI,EAAK,CAAC,EAAIuI,EACVvI,EAAK,CAAC,EAAIwI,EACVxI,EAAK,CAAC,EAAIyI,EACVzI,EAAK,CAAC,EAAI0I,EACV1I,EAAK,CAAC,EAAI2I,EACV3I,EAAK,CAAC,EAAI4I,EACV5I,EAAK,CAAC,EAAI6I,EACV7I,EAAK,CAAC,EAAI8I,EACV9I,EAAI,EAAE,EAAI+I,EACV/I,EAAI,EAAE,EAAIgJ,GAGZhJ,EAAI,EAAE,EAAIqI,EAAM3F,EAAK+F,EAAM9F,EAAKkG,EAAMjG,EAAKqG,EAC3CjJ,EAAI,EAAE,EAAIsI,EAAM5F,EAAKgG,EAAM/F,EAAKmG,EAAMlG,EAAKsG,EAC3ClJ,EAAI,EAAE,EAAIuI,EAAM7F,EAAKiG,EAAMhG,EAAKoG,EAAMnG,EAAKuG,EAC3CnJ,EAAI,EAAE,EAAIwI,EAAM9F,EAAKkG,EAAMjG,EAAKqG,EAAMpG,EAAKwG,EAEpCpJ,CACT,CAQgB,SAAAoP,GAAUC,EAAwBrP,EAAU,CAC1DA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM8I,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAEjC,OAAArP,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAK,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACrDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAKsP,EAAItP,EAAK,CAAC,EAAIuP,EAAIvP,EAAK,CAAC,EAAI,EACrDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,CAACuP,EAAIvP,EAAI,EAAE,EAAIsP,EAAItP,EAAI,EAAE,EAAI,EACrDA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAK,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAE9CA,CACT,UAUgB8F,GAAQ3B,EAASkL,EAAwBrP,EAAU,CACjEA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAMiC,EAAMtE,EAAE,CAAC,EACTuE,EAAMvE,EAAE,CAAC,EACTwE,EAAMxE,EAAE,CAAC,EACTyE,EAAMzE,EAAE,CAAC,EACT0E,EAAM1E,EAAE,CAAC,EACT2E,EAAM3E,EAAE,CAAC,EACT4E,EAAM5E,EAAE,EAAE,EACV6E,EAAM7E,EAAE,EAAE,EACVmL,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAEjC,OAAArP,EAAI,CAAC,EAAKsP,EAAI7G,EAAM8G,EAAI1G,EACxB7I,EAAI,CAAC,EAAKsP,EAAI5G,EAAM6G,EAAIzG,EACxB9I,EAAI,CAAC,EAAKsP,EAAI3G,EAAM4G,EAAIxG,EACxB/I,EAAI,CAAC,EAAKsP,EAAI1G,EAAM2G,EAAIvG,EACxBhJ,EAAI,CAAC,EAAKsP,EAAIzG,EAAM0G,EAAI9G,EACxBzI,EAAI,CAAC,EAAKsP,EAAIxG,EAAMyG,EAAI7G,EACxB1I,EAAI,EAAE,EAAIsP,EAAIvG,EAAMwG,EAAI5G,EACxB3I,EAAI,EAAE,EAAIsP,EAAItG,EAAMuG,EAAI3G,EAEpBzE,IAAMnE,IACRA,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,GAGTnE,CACT,CAQgB,SAAAwP,GAAUH,EAAwBrP,EAAU,CAC1DA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM8I,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAEjC,OAAArP,EAAK,CAAC,EAAIsP,EAAItP,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,CAACuP,EAAIvP,EAAK,CAAC,EAAI,EACrDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAK,EAAIA,EAAK,CAAC,EAAI,EACrDA,EAAK,CAAC,EAAIuP,EAAIvP,EAAK,CAAC,EAAI,EAAIA,EAAI,EAAE,EAAKsP,EAAItP,EAAI,EAAE,EAAI,EACrDA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAK,EAAIA,EAAI,EAAE,EAAI,EAE9CA,CACT,UAUgBkG,GAAQ/B,EAASkL,EAAwBrP,EAAU,CACjEA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM6B,EAAMlE,EAAE,EAAI,EAAI,CAAC,EACjBmE,EAAMnE,EAAE,EAAI,EAAI,CAAC,EACjBoE,EAAMpE,EAAE,EAAI,EAAI,CAAC,EACjBqE,EAAMrE,EAAE,EAAI,EAAI,CAAC,EACjB0E,EAAM1E,EAAE,EAAI,EAAI,CAAC,EACjB2E,EAAM3E,EAAE,EAAI,EAAI,CAAC,EACjB4E,EAAM5E,EAAE,EAAI,EAAI,CAAC,EACjB6E,EAAM7E,EAAE,EAAI,EAAI,CAAC,EACjBmL,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAEjC,OAAArP,EAAK,CAAC,EAAIsP,EAAIjH,EAAMkH,EAAI1G,EACxB7I,EAAK,CAAC,EAAIsP,EAAIhH,EAAMiH,EAAIzG,EACxB9I,EAAK,CAAC,EAAIsP,EAAI/G,EAAMgH,EAAIxG,EACxB/I,EAAK,CAAC,EAAIsP,EAAI9G,EAAM+G,EAAIvG,EACxBhJ,EAAK,CAAC,EAAIsP,EAAIzG,EAAM0G,EAAIlH,EACxBrI,EAAK,CAAC,EAAIsP,EAAIxG,EAAMyG,EAAIjH,EACxBtI,EAAI,EAAE,EAAIsP,EAAIvG,EAAMwG,EAAIhH,EACxBvI,EAAI,EAAE,EAAIsP,EAAItG,EAAMuG,EAAI/G,EAEpBrE,IAAMnE,IACRA,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,GAGTnE,CACT,CAQgB,SAAAyP,GAAUJ,EAAwBrP,EAAU,CAC1DA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM8I,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAEjC,OAAArP,EAAK,CAAC,EAAKsP,EAAItP,EAAK,CAAC,EAAIuP,EAAIvP,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACrDA,EAAK,CAAC,EAAI,CAACuP,EAAIvP,EAAK,CAAC,EAAIsP,EAAItP,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACrDA,EAAK,CAAC,EAAK,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EACrDA,EAAI,EAAE,EAAK,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAE9CA,CACT,UAUgBmG,GAAQhC,EAASkL,EAAwBrP,EAAU,CACjEA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM6B,EAAMlE,EAAE,EAAI,EAAI,CAAC,EACjBmE,EAAMnE,EAAE,EAAI,EAAI,CAAC,EACjBoE,EAAMpE,EAAE,EAAI,EAAI,CAAC,EACjBqE,EAAMrE,EAAE,EAAI,EAAI,CAAC,EACjBsE,EAAMtE,EAAE,EAAI,EAAI,CAAC,EACjBuE,EAAMvE,EAAE,EAAI,EAAI,CAAC,EACjBwE,EAAMxE,EAAE,EAAI,EAAI,CAAC,EACjByE,EAAMzE,EAAE,EAAI,EAAI,CAAC,EACjBmL,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAEjC,OAAArP,EAAK,CAAC,EAAIsP,EAAIjH,EAAMkH,EAAI9G,EACxBzI,EAAK,CAAC,EAAIsP,EAAIhH,EAAMiH,EAAI7G,EACxB1I,EAAK,CAAC,EAAIsP,EAAI/G,EAAMgH,EAAI5G,EACxB3I,EAAK,CAAC,EAAIsP,EAAI9G,EAAM+G,EAAI3G,EACxB5I,EAAK,CAAC,EAAIsP,EAAI7G,EAAM8G,EAAIlH,EACxBrI,EAAK,CAAC,EAAIsP,EAAI5G,EAAM6G,EAAIjH,EACxBtI,EAAK,CAAC,EAAIsP,EAAI3G,EAAM4G,EAAIhH,EACxBvI,EAAK,CAAC,EAAIsP,EAAI1G,EAAM2G,EAAI/G,EAEpBrE,IAAMnE,IACRA,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAK,CAAC,EAAImE,EAAG,CAAC,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,GAGTnE,CACT,UAYgB0P,GAAaxK,EAAYmK,EAAwBrP,EAAU,CACzEA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAI3G,EAAIqF,EAAK,CAAC,EACVpF,EAAIoF,EAAK,CAAC,EACVnF,EAAImF,EAAK,CAAC,EACRyK,EAAI,KAAK,KAAK9P,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAAC,EACzCF,GAAK8P,EACL7P,GAAK6P,EACL5P,GAAK4P,EACL,IAAMtK,EAAKxF,EAAIA,EACT4F,EAAK3F,EAAIA,EACT+F,EAAK9F,EAAIA,EACTuP,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAC3BO,EAAiB,EAAIN,EAE3B,OAAAtP,EAAK,CAAC,EAAIqF,GAAM,EAAIA,GAAMiK,EAC1BtP,EAAK,CAAC,EAAIH,EAAIC,EAAI8P,EAAiB7P,EAAIwP,EACvCvP,EAAK,CAAC,EAAIH,EAAIE,EAAI6P,EAAiB9P,EAAIyP,EACvCvP,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAIH,EAAIC,EAAI8P,EAAiB7P,EAAIwP,EACvCvP,EAAK,CAAC,EAAIyF,GAAM,EAAIA,GAAM6J,EAC1BtP,EAAK,CAAC,EAAIF,EAAIC,EAAI6P,EAAiB/P,EAAI0P,EACvCvP,EAAK,CAAC,EAAI,EACVA,EAAK,CAAC,EAAIH,EAAIE,EAAI6P,EAAiB9P,EAAIyP,EACvCvP,EAAK,CAAC,EAAIF,EAAIC,EAAI6P,EAAiB/P,EAAI0P,EACvCvP,EAAI,EAAE,EAAI6F,GAAM,EAAIA,GAAMyJ,EAC1BtP,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EACVA,EAAI,EAAE,EAAI,EAEHA,CACT,CAYO,IAAM6P,GAAWH,GAYlB,SAAUI,GAAW3L,EAASe,EAAYmK,EAAwBrP,EAAU,CAChFA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAI3G,EAAIqF,EAAK,CAAC,EACVpF,EAAIoF,EAAK,CAAC,EACVnF,EAAImF,EAAK,CAAC,EACRyK,EAAI,KAAK,KAAK9P,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAAC,EACzCF,GAAK8P,EACL7P,GAAK6P,EACL5P,GAAK4P,EACL,IAAMtK,EAAKxF,EAAIA,EACT4F,EAAK3F,EAAIA,EACT+F,EAAK9F,EAAIA,EACTuP,EAAI,KAAK,IAAID,CAAc,EAC3BE,EAAI,KAAK,IAAIF,CAAc,EAC3BO,EAAiB,EAAIN,EAErBS,EAAM1K,GAAM,EAAIA,GAAMiK,EACtBU,EAAMnQ,EAAIC,EAAI8P,EAAiB7P,EAAIwP,EACnCU,EAAMpQ,EAAIE,EAAI6P,EAAiB9P,EAAIyP,EACnCW,EAAMrQ,EAAIC,EAAI8P,EAAiB7P,EAAIwP,EACnCY,EAAM1K,GAAM,EAAIA,GAAM6J,EACtBc,EAAMtQ,EAAIC,EAAI6P,EAAiB/P,EAAI0P,EACnCc,EAAMxQ,EAAIE,EAAI6P,EAAiB9P,EAAIyP,EACnCe,EAAMxQ,EAAIC,EAAI6P,EAAiB/P,EAAI0P,EACnCgB,EAAM1K,GAAM,EAAIA,GAAMyJ,EAEtBjH,EAAMlE,EAAE,CAAC,EACTmE,GAAMnE,EAAE,CAAC,EACToE,GAAMpE,EAAE,CAAC,EACTqE,EAAMrE,EAAE,CAAC,EACTsE,GAAMtE,EAAE,CAAC,EACTuE,EAAMvE,EAAE,CAAC,EACTwE,GAAMxE,EAAE,CAAC,EACTyE,GAAMzE,EAAE,CAAC,EACT0E,GAAM1E,EAAE,CAAC,EACT2E,EAAM3E,EAAE,CAAC,EACT4E,GAAM5E,EAAE,EAAE,EACV6E,GAAM7E,EAAE,EAAE,EAEhB,OAAAnE,EAAK,CAAC,EAAI+P,EAAM1H,EAAM2H,EAAMvH,GAAMwH,EAAMpH,GACxC7I,EAAK,CAAC,EAAI+P,EAAMzH,GAAM0H,EAAMtH,EAAMuH,EAAMnH,EACxC9I,EAAK,CAAC,EAAI+P,EAAMxH,GAAMyH,EAAMrH,GAAMsH,EAAMlH,GACxC/I,EAAK,CAAC,EAAI+P,EAAMvH,EAAMwH,EAAMpH,GAAMqH,EAAMjH,GACxChJ,EAAK,CAAC,EAAIkQ,EAAM7H,EAAM8H,EAAM1H,GAAM2H,EAAMvH,GACxC7I,EAAK,CAAC,EAAIkQ,EAAM5H,GAAM6H,EAAMzH,EAAM0H,EAAMtH,EACxC9I,EAAK,CAAC,EAAIkQ,EAAM3H,GAAM4H,EAAMxH,GAAMyH,EAAMrH,GACxC/I,EAAK,CAAC,EAAIkQ,EAAM1H,EAAM2H,EAAMvH,GAAMwH,EAAMpH,GACxChJ,EAAK,CAAC,EAAIqQ,EAAMhI,EAAMiI,EAAM7H,GAAM8H,EAAM1H,GACxC7I,EAAK,CAAC,EAAIqQ,EAAM/H,GAAMgI,EAAM5H,EAAM6H,EAAMzH,EACxC9I,EAAI,EAAE,EAAIqQ,EAAM9H,GAAM+H,EAAM3H,GAAM4H,EAAMxH,GACxC/I,EAAI,EAAE,EAAIqQ,EAAM7H,EAAM8H,EAAM1H,GAAM2H,EAAMvH,GAEpC7E,IAAMnE,IACRA,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,GAGTnE,CACT,CAYO,IAAMwQ,GAASV,GAWN,SAAAW,GAAQtQ,EAASH,EAAU,CACzC,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAIG,EAAE,CAAC,EAAIH,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAC7DA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAIG,EAAE,CAAC,EAAIH,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAC7DA,EAAK,CAAC,EAAI,EAAOA,EAAK,CAAC,EAAI,EAAOA,EAAI,EAAE,EAAIG,EAAE,CAAC,EAAIH,EAAI,EAAE,EAAI,EAC7DA,EAAI,EAAE,EAAI,EAAOA,EAAI,EAAE,EAAI,EAAOA,EAAI,EAAE,EAAI,EAAOA,EAAI,EAAE,EAAI,EAEtDA,CACT,UAYgBa,GAAMsD,EAAShE,EAASH,EAAU,CAChDA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3B,IAAM9D,EAAKvC,EAAE,CAAC,EACRwC,EAAKxC,EAAE,CAAC,EACRyC,EAAKzC,EAAE,CAAC,EAEd,OAAAH,EAAK,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI0C,EAAKyB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI2C,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI2C,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI2C,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI2C,EAAKwB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI4C,EAAKuB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAK,CAAC,EAAI4C,EAAKuB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAI,EAAE,EAAI4C,EAAKuB,EAAE,EAAI,EAAI,CAAC,EAC1BnE,EAAI,EAAE,EAAI4C,EAAKuB,EAAE,EAAI,EAAI,CAAC,EAEtBA,IAAMnE,IACRA,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,GAGTnE,CACT,CAQgB,SAAA0Q,GAAenB,EAAWvP,EAAU,CAClD,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAIuP,EAAIvP,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACpDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAIuP,EAAIvP,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EACpDA,EAAK,CAAC,EAAI,EAAIA,EAAK,CAAC,EAAI,EAAIA,EAAI,EAAE,EAAIuP,EAAIvP,EAAI,EAAE,EAAI,EACpDA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAAIA,EAAI,EAAE,EAAI,EAE7CA,CACT,UASgB2Q,GAAaxM,EAASoL,EAAWvP,EAAU,CACzD,OAAAA,EAAMA,GAAO,IAAIwG,EAAQ,EAAE,EAE3BxG,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAK,CAAC,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAI,EAAE,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EACzBnE,EAAI,EAAE,EAAIuP,EAAIpL,EAAE,EAAI,EAAI,CAAC,EAErBA,IAAMnE,IACRA,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,EACdnE,EAAI,EAAE,EAAImE,EAAE,EAAE,GAGTnE,CACT,imBGlhDO,IAAI4Q,GAAmC,aAOxC,SAAUC,GAAeC,EAA6B,CAC1D,IAAMC,EAAUH,GAChB,OAAAA,GAAUE,EACHC,CACT,CAUM,SAAUC,GAAOC,EAAYC,EAAYC,EAAYC,EAAU,CACnE,IAAMC,EAAM,IAAIT,GAAQ,CAAC,EACzB,OAAIK,IAAM,SACRI,EAAI,CAAC,EAAIJ,EACLC,IAAM,SACRG,EAAI,CAAC,EAAIH,EACLC,IAAM,SACRE,EAAI,CAAC,EAAIF,EACLC,IAAM,SACRC,EAAI,CAAC,EAAID,MAKVC,CACT,CCpDO,IAAMC,GAAaN,GAapB,SAAUO,GAAIN,EAAWC,EAAWC,EAAWC,EAAWC,EAAU,CACxE,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIJ,EACTI,EAAI,CAAC,EAAIH,EACTG,EAAI,CAAC,EAAIF,EACTE,EAAI,CAAC,EAAID,EAEFC,CACT,CAQgB,SAAAG,GAAKC,EAASJ,EAAU,CACtC,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,KAAK,KAAKI,EAAE,CAAC,CAAC,EACvBJ,EAAI,CAAC,EAAI,KAAK,KAAKI,EAAE,CAAC,CAAC,EACvBJ,EAAI,CAAC,EAAI,KAAK,KAAKI,EAAE,CAAC,CAAC,EACvBJ,EAAI,CAAC,EAAI,KAAK,KAAKI,EAAE,CAAC,CAAC,EAEhBJ,CACT,CAQgB,SAAAK,GAAMD,EAASJ,EAAU,CACvC,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EACxBJ,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EACxBJ,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EACxBJ,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EAEjBJ,CACT,CAQgB,SAAAM,GAAMF,EAASJ,EAAU,CACvC,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EACxBJ,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EACxBJ,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EACxBJ,EAAI,CAAC,EAAI,KAAK,MAAMI,EAAE,CAAC,CAAC,EAEjBJ,CACT,CAUgB,SAAAO,GAAMH,EAASI,EAAM,EAAGC,EAAM,EAAGT,EAAU,CACzD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,KAAK,IAAIS,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAC1CJ,EAAI,CAAC,EAAI,KAAK,IAAIS,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAC1CJ,EAAI,CAAC,EAAI,KAAK,IAAIS,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAC1CJ,EAAI,CAAC,EAAI,KAAK,IAAIS,EAAK,KAAK,IAAID,EAAKJ,EAAE,CAAC,CAAC,CAAC,EAEnCJ,CACT,UASgBU,GAAIC,EAASC,EAASZ,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZZ,CACT,CAUM,SAAUa,GAAUF,EAASC,EAASE,EAAed,EAAU,CACnE,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EACvBd,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EACvBd,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EACvBd,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAIE,EAEhBd,CACT,UASgBe,GAASJ,EAASC,EAASZ,EAAU,CACnD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZZ,CACT,CASO,IAAMgB,GAAMD,GAQH,SAAAE,GAAoBN,EAASC,EAAO,CAClD,OAAO,KAAK,IAAID,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIM,IACxB,KAAK,IAAIP,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIM,IACxB,KAAK,IAAIP,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIM,IACxB,KAAK,IAAIP,EAAE,CAAC,EAAIC,EAAE,CAAC,CAAC,EAAIM,EACjC,CAQgB,SAAAC,GAAOR,EAASC,EAAO,CACrC,OAAOD,EAAE,CAAC,IAAMC,EAAE,CAAC,GAAKD,EAAE,CAAC,IAAMC,EAAE,CAAC,GAAKD,EAAE,CAAC,IAAMC,EAAE,CAAC,GAAKD,EAAE,CAAC,IAAMC,EAAE,CAAC,CACxE,CAYM,SAAUQ,GAAKT,EAASC,EAAS,EAAWZ,EAAU,CAC1D,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAC/BX,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAC/BX,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAC/BX,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAExBX,CACT,CAYM,SAAUqB,GAAMV,EAASC,EAAS,EAASZ,EAAU,CACzD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAClCX,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAClCX,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAClCX,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAI,EAAE,CAAC,GAAKC,EAAE,CAAC,EAAID,EAAE,CAAC,GAE3BX,CACT,UAWgBS,GAAIE,EAASC,EAASZ,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BZ,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BZ,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BZ,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAErBZ,CACT,UAWgBQ,GAAIG,EAASC,EAASZ,EAAU,CAC9C,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BZ,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BZ,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAC5BZ,EAAI,CAAC,EAAI,KAAK,IAAIW,EAAE,CAAC,EAAGC,EAAE,CAAC,CAAC,EAErBZ,CACT,UASgBsB,GAAUlB,EAASmB,EAAWvB,EAAU,CACtD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAChBvB,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAChBvB,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAChBvB,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAETvB,CACT,CASO,IAAMc,GAAQQ,YASLE,GAAUpB,EAASmB,EAAWvB,EAAU,CACtD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAChBvB,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAChBvB,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAChBvB,EAAI,CAAC,EAAII,EAAE,CAAC,EAAImB,EAETvB,CACT,CAQgB,SAAAyB,GAAQrB,EAASJ,EAAU,CACzC,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,EAAII,EAAE,CAAC,EAChBJ,EAAI,CAAC,EAAI,EAAII,EAAE,CAAC,EAChBJ,EAAI,CAAC,EAAI,EAAII,EAAE,CAAC,EAChBJ,EAAI,CAAC,EAAI,EAAII,EAAE,CAAC,EAETJ,CACT,CAQO,IAAM0B,GAASD,GAQN,SAAAE,GAAIhB,EAASC,EAAO,CAClC,OAAQD,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAMD,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAMD,EAAE,CAAC,EAAIC,EAAE,CAAC,EAAMD,EAAE,CAAC,EAAIC,EAAE,CAAC,CACpE,CAOM,SAAUgB,GAAOxB,EAAO,CAC5B,IAAMyB,EAAKzB,EAAE,CAAC,EACR0B,EAAK1B,EAAE,CAAC,EACR2B,EAAK3B,EAAE,CAAC,EACR4B,EAAK5B,EAAE,CAAC,EACd,OAAO,KAAK,KAAKyB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,CACxD,CAOO,IAAMC,GAAML,GAOb,SAAUM,GAAS9B,EAAO,CAC9B,IAAMyB,EAAKzB,EAAE,CAAC,EACR0B,EAAK1B,EAAE,CAAC,EACR2B,EAAK3B,EAAE,CAAC,EACR4B,EAAK5B,EAAE,CAAC,EACd,OAAOyB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAC5C,CAOO,IAAMG,GAAQD,GAQL,SAAAE,GAASzB,EAASC,EAAO,CACvC,IAAMyB,EAAK1B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACf0B,EAAK3B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACf2B,EAAK5B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACf4B,EAAK7B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACrB,OAAO,KAAK,KAAKyB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,CACxD,CAQO,IAAMC,GAAOL,GAQJ,SAAAM,GAAW/B,EAASC,EAAO,CACzC,IAAMyB,EAAK1B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACf0B,EAAK3B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACf2B,EAAK5B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACf4B,EAAK7B,EAAE,CAAC,EAAIC,EAAE,CAAC,EACrB,OAAOyB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAC5C,CAQO,IAAMG,GAASD,GAQN,SAAAE,GAAUxC,EAASJ,EAAU,CAC3CA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1B,IAAMsC,EAAKzB,EAAE,CAAC,EACR0B,EAAK1B,EAAE,CAAC,EACR2B,EAAK3B,EAAE,CAAC,EACR4B,EAAK5B,EAAE,CAAC,EACR6B,EAAM,KAAK,KAAKJ,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,CAAE,EAE3D,OAAIC,EAAM,MACRjC,EAAI,CAAC,EAAI6B,EAAKI,EACdjC,EAAI,CAAC,EAAI8B,EAAKG,EACdjC,EAAI,CAAC,EAAI+B,EAAKE,EACdjC,EAAI,CAAC,EAAIgC,EAAKC,IAEdjC,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,GAGJA,CACT,CAQgB,SAAA6C,GAAOzC,EAASJ,EAAU,CACxC,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,CAACI,EAAE,CAAC,EACbJ,EAAI,CAAC,EAAI,CAACI,EAAE,CAAC,EACbJ,EAAI,CAAC,EAAI,CAACI,EAAE,CAAC,EACbJ,EAAI,CAAC,EAAI,CAACI,EAAE,CAAC,EAENJ,CACT,CASgB,SAAA8C,GAAK1C,EAASJ,EAAU,CACtC,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAII,EAAE,CAAC,EACZJ,EAAI,CAAC,EAAII,EAAE,CAAC,EACZJ,EAAI,CAAC,EAAII,EAAE,CAAC,EACZJ,EAAI,CAAC,EAAII,EAAE,CAAC,EAELJ,CACT,CASO,IAAM+C,GAAQD,YAULE,GAASrC,EAASC,EAASZ,EAAU,CACnD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZZ,CACT,CAUO,IAAMiD,GAAMD,YAUHE,GAAOvC,EAASC,EAASZ,EAAU,CACjD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EACnBZ,EAAI,CAAC,EAAIW,EAAE,CAAC,EAAIC,EAAE,CAAC,EAEZZ,CACT,CAUO,IAAMmD,GAAMD,GAOb,SAAUE,GAAKpD,EAAU,CAC7B,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1BS,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EACTA,EAAI,CAAC,EAAI,EAEFA,CACT,UAUgBqD,GAAcjD,EAASkD,EAAStD,EAAU,CACxDA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAE1B,IAAMK,EAAIQ,EAAE,CAAC,EACPP,EAAIO,EAAE,CAAC,EACPN,EAAIM,EAAE,CAAC,EACPL,EAAIK,EAAE,CAAC,EAEb,OAAAJ,EAAI,CAAC,EAAIsD,EAAE,CAAC,EAAI1D,EAAI0D,EAAE,CAAC,EAAIzD,EAAIyD,EAAG,CAAC,EAAIxD,EAAIwD,EAAE,EAAE,EAAIvD,EACnDC,EAAI,CAAC,EAAIsD,EAAE,CAAC,EAAI1D,EAAI0D,EAAE,CAAC,EAAIzD,EAAIyD,EAAG,CAAC,EAAIxD,EAAIwD,EAAE,EAAE,EAAIvD,EACnDC,EAAI,CAAC,EAAIsD,EAAE,CAAC,EAAI1D,EAAI0D,EAAE,CAAC,EAAIzD,EAAIyD,EAAE,EAAE,EAAIxD,EAAIwD,EAAE,EAAE,EAAIvD,EACnDC,EAAI,CAAC,EAAIsD,EAAE,CAAC,EAAI1D,EAAI0D,EAAE,CAAC,EAAIzD,EAAIyD,EAAE,EAAE,EAAIxD,EAAIwD,EAAE,EAAE,EAAIvD,EAE5CC,CACT,UAUgBuD,GAAU5C,EAASsB,EAAajC,EAAU,CACxD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAC1BqD,GAAUjC,EAAGX,CAAG,EACTsB,GAAUtB,EAAKiC,EAAKjC,CAAG,CAChC,UASgBwD,GAAS7C,EAAS8C,EAAgBzD,EAAU,CAG1D,OAFAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EAEtBqC,GAAOjB,CAAC,EAAI8C,EACPF,GAAU5C,EAAG8C,EAAQzD,CAAG,EAG1B8C,GAAKnC,EAAGX,CAAG,CACpB,UASgB0D,GAAS/C,EAASC,EAASZ,EAAU,CACnD,OAAAA,EAAMA,GAAO,IAAIT,GAAQ,CAAC,EACnB6B,GAAKT,EAAGC,EAAG,GAAKZ,CAAG,CAC5B,+eE9pBO,IAAM2D,GAAqC,MAAOC,GAAqB,CAC5E,IAAMC,EAAc,MAAM,MAAMD,CAAQ,EACxC,GAAI,CAACC,EAAY,GACf,KAAM,iCAAiCD,CAAQ,IAEjD,OAAOC,EAAY,KAAK,CAC1B,EAEaC,GAAyC,MACpDF,IAEiB,MAAM,MAAMA,CAAQ,GACrB,YAAY,EAIjBG,GAA2C,MACtDC,EACAC,EACAC,EACAC,IACG,CACH,IAAMC,EAAW,MAAM,MAAMH,CAAI,EAC3BI,EAAc,MAAM,kBAAkB,MAAMD,EAAS,KAAK,CAAC,EAE3DE,EAAUN,EAAO,cAAc,CACnC,MAAOC,EACP,UAAW,KACX,KAAM,CAACI,EAAY,MAAOA,EAAY,OAAQ,CAAC,EAC/C,OAAAH,EACA,MAAAC,CACF,CAAC,EAED,OAACH,EAAO,MAAc,2BACpB,CAAE,OAAQK,CAAY,EACtB,CAAE,QAASC,CAAQ,EACnB,CAACD,EAAY,MAAOA,EAAY,MAAM,CACxC,EAEOC,CACT,ECxCO,IAAMC,GAAa,CAExB,SAAU,CACR,SAAU,CAAC,IAAK,IAAK,GAAG,EACxB,SAAU,CAAC,IAAM,EAAG,CAGtB,EAEA,OAAQ,GACR,KAAM,IACN,IAAK,GACP,EAOaC,GAAW,EACXC,GAAY,EACZC,EAAY,EACZC,GAAY,EACZC,GAAaH,GAAY,EACzBI,GAAaJ,GAAY,EACzBK,GAAaL,GAAY,EACzBM,GAAcL,EAAY,EAC1BM,GAAcN,EAAY,EAC1BO,GAAgBT,GAAW,EAC3BU,GAAaT,GAAY,GAEzBU,GAAsB,KACtBC,GAAyB,KAGzBC,GAAU,OAAO,OAAS,OAEhC,IAAMC,GAAUC,GAEVC,GAAaD,GAAU,gBAAkB,SAEzCE,GAAiC,cACjCC,GAA0CH,GACnD,cACA,cAGSI,GAAwB,EAExBC,GAA4B,EAU5BC,GAAmB,EACnBC,GAAwB,EACxBC,GAAuB,EACvBC,GAAyB,EACzBC,GAAuB,EACvBC,GAA8B,EAE9BC,EAAS,CAEpB,OAAQ,GAER,YAAa,GACb,eAAgB,yCAChB,eAAgB,wCAEhB,QAAS,CACP,eAAgBC,GAChB,iBAAkBC,GAClB,sBAAuBC,EACzB,EAKA,WAAY,CAAC,GAAK,GAAK,GAAK,CAAG,EAE/B,cAAe,CAAC,IAAM,IAAM,GAAK,CAAG,EAEpC,yBAA0B,GAG1B,YAAa,EAEb,sBAAuB,GACvB,WAAY,GAKZ,cAAe,EAEf,cAAe,EAEf,oBAAqB,GAKrB,YAAa,SAEb,yBAA0B,EAE1B,kBAAmB,EAEnB,qBAAsB,EAItB,OAAQ,CACN,MAAO,IACP,eAAgB,EAChB,SAAU,GACZ,EAIA,iBAAkB,CAChB,QAAS,GACT,eAAgB,GAChB,iBAAkB,EACpB,EAIA,UAAW,CACT,MAAO,GAEP,YAAa,GAKb,mBAAoB,IAEpB,oBAAqB,GACrB,eAAgB,EAClB,EAIA,gBAAiB,CACf,eAAgB,GAChB,iBAAkB,EASpB,EAIA,mBAAoB,CAClB,QAAS,GAET,UAAW,IACb,EAIA,OAAQ,CACN,WAAY,CACV,mBAAoB,GACpB,oBAAqB,IACrB,iCAAkC,EAElC,6BAA8B,EAO9B,gCAAiC,IAOjC,6CAA8C,IAE9C,0BAA2B,IAE3B,oCAAqC,IAKrC,QAAS,GAET,0BAA2B,GAE3B,eAAgB,EAClB,EACA,OAAQ,CACN,aAAc,MAKd,eAAgB,GAEhB,uBAAwB,GAExB,oBAAqB,GAErB,kCAAmC,GACnC,YAAaT,GACb,8BAA+B,GAC/B,iCAAkC,EAElC,qBAAsB,GAKtB,0BAA2B,EAC7B,CACF,CACF,EAEO,SAASU,IAA8B,CAC5C,IAAMC,EAAML,EAAO,mBACbM,EAAUD,EAAI,QACdE,EAAsBF,EAAI,UAAY,EAItCG,EAAuBR,EAAO,OAAO,OAAO,oBAK5CS,EAAKT,EAAO,iBACZU,EACJD,EAAG,UAAYA,EAAG,gBAAkBA,EAAG,kBACnCE,EAAKX,EAAO,gBACZY,EAAcD,EAAG,gBAAkBA,EAAG,iBAG5C,OACEL,GAAWC,GAAuB,CAACC,IAHfE,GAAmBE,EAK3C,CClPO,IAAMC,GAAWC,GAAiBA,EAAM,KAAK,GAAM,IAEnD,SAASC,GAA0BC,EAAgC,CACxE,IAAMC,EAAcD,EAAa,MAAQA,EAAa,OAEtD,OAAOE,GAAK,YACVL,GAAQM,GAAW,MAAM,EACzBF,EACAE,GAAW,KACXA,GAAW,GACb,CACF,CAEO,SAASC,GACdC,EACAC,EACAC,EACM,CACN,OAAOL,GAAK,SAASI,EAASD,EAASE,CAAM,CAC/C,CAEO,SAASC,GACdC,EACAJ,EACAC,EACAC,EACM,CACN,OAAAA,EAASL,GAAK,SAASG,EAASI,EAAUF,CAAM,EAChDA,EAASL,GAAK,SAASI,EAASC,EAAQA,CAAM,EACvCA,CACT,CAEO,SAASG,GAAaC,EAAiBC,EAAgBL,EAAe,CAC3E,IAAIM,EACJ,GAAID,EAAE,SAAW,EAAG,CAClB,GAAIA,EAAE,CAAC,IAAM,EAAG,MAAM,IAAI,MAAM,0DAA0D,EAC1FC,EAAID,CACN,MACEC,EAAIC,GAAK,OAAOF,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAG,CAAC,EAErC,OAAOE,GAAK,cAAcD,EAAGF,EAAWJ,CAAM,CAChD,CAcO,SAASQ,GAAaC,EAAW,CAEtC,OAAQA,EAAU,YAAY,IAChC,CAGO,SAASC,GAAYD,EAAQ,CAClC,OAAI,MAAM,QAAQA,CAAC,EAAU,QACzB,OAAOA,GAAM,SAAiBD,GAAaC,CAAC,EACzC,OAAOA,CAChB,CAEO,IAAME,GAAeC,GAAgB,MAAMA,CAAG,EAAE,KAAK,CAAC,EAItD,SAASC,GACdC,EACAC,EACG,CACH,IAAMC,EAAS,IAAIF,EAAgBC,EAAK,MAAM,EAC9C,OAAAA,EAAK,QAAQ,CAACE,EAAGC,IAASF,EAAOE,CAAG,EAAID,CAAE,EACnCD,CACT,CAEO,SAASG,GACdL,EACAC,EACG,CACH,OAAIA,aAAgBD,EACXC,EAGAF,GAAiBC,EAAiBC,CAAW,CAExD,CAEO,IAAMK,GAAO,CAACX,EAAWY,EAAWC,KACzCA,EAAM,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAG,CAAC,EAC3Bb,GAAK,EAAIa,GAAOD,EAAIC,GAGhBC,GAAoBC,GAC/B,OAAOA,GAAY,SACfA,EAAUC,GACVD,EAAQ,OAASC,GAEVC,GAAkBC,GAC7B,OAAOA,GAAU,SACbA,EAAQC,GACRD,EAAM,OAASC,GAERC,GAAwBC,GACnCA,EAASL,GAAoBM,EAMxB,SAASC,GAAYC,EAAeC,EAAW,EAAG,CACvD,GAAID,GAAS,EAAG,MAAO,UAGvB,IAAME,EAAQ,CAAC,QAAS,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACxEC,EAAI,KACJC,EAAI,KAAK,MAAM,KAAK,IAAIJ,CAAK,EAAI,KAAK,IAAIG,CAAC,CAAC,EAElD,MAAO,IADIH,EAAQ,KAAK,IAAIG,EAAGC,CAAC,GAAG,QAAQH,CAAQ,CACxC,IAAIC,EAAME,CAAC,CAAC,EACzB,CAEO,SAASC,GAAaC,EAAaL,EAAW,EAAG,CACtD,GAAIK,IAAQ,EAAG,MAAO,IACtB,IAAMC,EAAOD,EAAM,EAAI,IAAM,GAC7BA,EAAM,KAAK,IAAIA,CAAG,EAElB,IAAMJ,EAAQ,CAAC,GAAI,IAAK,IAAK,GAAG,EAC1BC,EAAI,IACJ,EAAI,KAAK,MAAM,KAAK,IAAIG,CAAG,EAAI,KAAK,IAAIH,CAAC,CAAC,EAC1CK,GAAKF,EAAM,KAAK,IAAIH,EAAG,CAAC,GAAG,QAAQF,CAAQ,EACjD,MAAO,GAAGM,CAAI,GAAGC,CAAC,GAAGN,EAAM,CAAC,CAAC,EAC/B,CAGO,SAASO,GAAuBC,EAAgBC,EAAe,CACpE,IAAMC,EAAUD,EAAQ,EAAKD,EAASC,EAAS,IAAQ,EACvD,MAAO,GAAGN,GAAaK,CAAM,CAAC,KAAKE,EAAQ,QAAQ,CAAC,CAAC,IACvD,CAaO,IAAMC,GAAmBC,GACvBA,GAAMA,EAAG,MAAM,UAAY,OAGvBC,GAAa,CACxBD,EACAE,EAA4B,UACzB,CACCF,IAAIA,EAAG,MAAM,QAAUE,EAC7B,EAEaC,GAAcH,GAA2B,CAChDA,IAAIA,EAAG,MAAM,QAAU,OAC7B,EAEaI,GAAwB,CACnCJ,EACAK,IACG,CACeN,GAAgBC,CAAE,IAClBK,IAGdA,EACFJ,GAAWD,CAAE,EAEbG,GAAWH,CAAE,EAEjB,EAEaM,GAAgB,CAACC,EAAeC,IACpCC,GAAKF,EAAOC,EAAK,KAAK,OAAO,CAAC,EAGhC,SAASE,GAAMC,EAAWC,EAAaC,EAAqB,CACjE,OAAO,KAAK,IAAI,KAAK,IAAIF,EAAGC,CAAG,EAAGC,CAAG,CACvC,CAEO,SAASC,GACdC,EACAC,EACA,CACA,IAAIC,EAEJ,MAAO,IAAIC,IAAkB,CAC3B,aAAaD,CAAK,EAClBA,EAAQ,WAAW,IAAMF,EAAS,GAAGG,CAAI,EAAGF,CAAI,CAClD,CACF,CAKO,SAASG,GAAeC,EAAkBC,EAAiB,CAChE,IAAMC,EAAMF,EAAS,SAAS,GAAG,EAC7BA,EAAS,YAAY,GAAG,EACxBA,EAAS,OACPG,EAAWH,EAAS,UAAU,EAAGE,CAAG,EAC1C,OAAAD,EAAUA,EAAQ,WAAW,GAAG,EAAIA,EAAU,IAAIA,CAAO,GAClD,GAAGE,CAAQ,GAAGF,CAAO,EAC9B,CCjOO,IAAMG,GAA6B,IAE1C,eAAsBC,IAAkB,CACtC,GAAI,CACF,IAAMC,EAAU,MAAM,UAAU,IAAI,eAAe,CACjD,gBAAiB,kBACnB,CAAC,EACKC,EAAWC,GACf,QAAQ,MAAM,uBAAuBA,CAAG,GAAG,EAE7C,GAAI,CAACF,EAAS,CAEZC,EAAQ,mDAAmD,EAC3D,MACF,CAEA,IAAME,EAAeH,EAAQ,SAAS,IAAI,iBAAiB,EACrDI,EAAqC,CAAC,oBAAoB,EAC5DD,GACFC,EAAiB,KAAK,iBAAiB,EAGzC,IAAMC,EAAS,MAAML,GAAS,cAAc,CAAE,iBAAAI,CAAiB,CAAC,EAChE,GAAI,CAACC,EAAQ,CACXJ,EAAQ,2CAA2C,EACnD,MACF,CAEA,OAAOI,CACT,OAASC,EAAG,CACV,QAAQ,MAAMA,CAAC,EACf,MACF,CACF,CAEO,IAAMC,GACX,eAAe,QAAU,eAAe,SAEnC,SAASC,GACdH,EACAI,EACAC,EACAC,EACA,CACA,IAAMC,EAAYP,EAAO,aAAa,CACpC,MAAAI,EACA,KAAME,EAAK,WACX,MAAAD,CACF,CAAC,EAOD,OAAAL,EAAO,MAAM,YAAYO,EAAW,EAAGD,CAAI,EACpCC,CACT,CAEO,SAASC,GACdR,EACAI,EACAE,EACAG,EAA6B,EAC7B,CACA,IAAMC,EAAeC,GAAiB,aAAcL,CAAI,EACxD,OAAOH,GACLH,EACAI,EACA,eAAe,OAAS,eAAe,SAAYK,EACnDC,CACF,CACF,CAEO,SAASE,GACdZ,EACAI,EACAE,EACA,CACA,IAAMI,EAAeC,GAAiB,YAAaL,CAAI,EACvD,OAAOH,GACLH,EACAI,EACA,eAAe,MAAQ,eAAe,SACtCM,CACF,CACF,CAoBO,SAASG,GACdC,EACAC,EACAC,EACAC,EACA,CAEA,IAAMC,EAAuBD,EAC7BH,EAAO,MAAM,YAAYC,EAAWC,EAAaE,EAAO,OAAQ,CAAC,CACnE,CAEO,IAAMC,GAAoB,CAACC,EAAeC,IAC/C,KAAK,KAAKD,EAAQC,CAAO,EAKpB,SAASC,GAAqBR,EAAmBS,EAAsB,CAC5E,OAAOT,EAAO,aAAa,CACzB,MAAO,GAAGS,CAAS,mBACnB,KAAMA,EAAU,KAChB,MAAO,eAAe,SAAW,eAAe,QAClD,CAAC,CACH,CAEO,SAASC,GACdC,EACAF,EACAG,EACA,CACAD,EAAO,mBAAmBF,EAAW,EAAGG,EAAgB,EAAGH,EAAU,IAAI,CAC3E,CAEA,eAAsBI,GACpBC,EACAC,EACY,CACZ,MAAMA,EAAO,SAAS,WAAW,IAAI,EACrC,IAAMC,EAAkBD,EAAO,eAAe,EAExCE,EAAa,IAAIH,EAAgBE,EAAgB,MAAM,CAAC,CAAC,EAC/D,OAAAD,EAAO,MAAM,EACNE,CACT,CAEA,eAAsBC,GACpBlB,EACAc,EACAL,EACA,CACKU,EAAO,QACV,QAAQ,KAAK,YAAYV,EAAU,KAAK,qCAAqC,EAG/E,IAAIG,EACJ,GAAI,CACFA,EAAiBJ,GAAqBR,EAAQS,CAAS,EAGvD,IAAME,EAASX,EAAO,qBAAqB,CACzC,MAAO,GAAGS,EAAU,KAAK,WAC3B,CAAC,EACD,OAAAC,GAAwBC,EAAQF,EAAWG,CAAc,EACzDZ,EAAO,MAAM,OAAO,CAACW,EAAO,OAAO,CAAC,CAAC,EAGtB,MAAME,GAAgBC,EAAiBF,CAAc,CAGtE,OAASQ,EAAG,CACV,MAAMA,CACR,QAAE,CACIR,GAEFA,EAAe,QAAQ,CAE3B,CACF,CA0DO,IAAMS,GAAoBC,GAC/B,OAAOA,GAAiB,UACxBC,GAAaD,CAAY,IAAM,eAAe,KAInCE,GAA0BF,GAAsB,CAC3D,GAAI,CAACD,GAAiBC,CAAY,EAChC,MAAM,IAAI,MACR,YAAY,eAAe,IAAI,SAASG,GAAYH,CAAY,CAAC,EACnE,CAEJ,0KCzPe,SAAAI,GAASC,EAAOC,EAAa,KACpCC,EAAcF,EAAMG,QAAQC,eAAeC,SAA7B,EAEdC,EAAIC,KAAKC,MAAMR,EAAMM,CAAjB,EACJG,EAAIF,KAAKC,MAAMR,EAAMS,CAAjB,EACJC,EAAIH,KAAKC,MAAMR,EAAMU,CAAjB,EACJC,EAAIX,EAAMW,EACVC,EAAIL,KAAKC,MAAMR,EAAMY,CAAjB,EACJC,EAAIb,EAAMa,EAAEC,QAAQ,CAAhB,EACJC,EAAIf,EAAMe,EAAED,QAAQ,CAAhB,KAENb,GAAgBC,IAAgB,kBAAsBA,IAAgB,eAAiB,SACrFc,EAAMhB,EAAMiB,IAAIZ,SAAS,EAAnB,EACHW,EAAIE,OAAS,KACZ,IAAMF,QAEP,IAAMA,MACR,IAAId,IAAgB,gBAClB,OAASI,EAAI,IAAMG,EAAI,IAAMC,EAAI,IACnC,GAAIR,IAAgB,iBAClB,QAAUI,EAAI,IAAMG,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAC9C,GAAIT,IAAgB,YAClB,KAAOF,EAAMiB,IAAIZ,SAAS,EAAnB,EACT,GAAIH,IAAgB,kBAClB,IAAMI,EAAI,IAAMG,EAAI,IAAMC,EAAI,IAChC,GAAIR,IAAgB,mBAClB,IAAMI,EAAI,IAAMG,EAAI,IAAMC,EAAI,IAAMC,EAAI,IAC1C,GAAIT,IAAgB,gBAClB,MAAQI,EAAI,MAAQG,EAAI,MAAQC,EAAI,IACtC,GAAIR,IAAgB,iBAClB,MAAQI,EAAI,MAAQG,EAAI,MAAQC,EAAI,MAAQC,EAAI,IAClD,GAAIT,IAAgB,gBAClB,MAAQU,EAAI,MAAQC,EAAI,MAAQE,EAAI,IACtC,GAAIb,IAAgB,iBAClB,MAAQU,EAAI,MAAQC,EAAI,MAAQE,EAAI,MAAQJ,EAAI,UAGlD,iBCrCT,IAAMQ,GAAWC,MAAMC,UAAUC,QAC3BC,GAAYH,MAAMC,UAAUG,MAQ5BC,EAAS,OACN,CAAA,SAEC,SAASC,EAAQ,aAClBC,KAAKJ,GAAUK,KAAKC,UAAW,CAA1B,EAA8B,SAASC,EAAK,KAC9CC,EAAO,KAAKC,SAASF,CAAd,EAAqBG,OAAOF,KAAKD,CAAZ,EAAmB,CAAA,IAChDR,SAAQ,SAASY,EAAK,CACpB,KAAKC,YAAYL,EAAII,CAAJ,CAAjB,MACIA,CAAP,EAAcJ,EAAII,CAAJ,KAEhBE,KAAK,IAJM,CAAb,GAKC,IAPH,EASOV,YAGC,SAASA,EAAQ,aACpBC,KAAKJ,GAAUK,KAAKC,UAAW,CAA1B,EAA8B,SAASC,EAAK,KAC9CC,EAAO,KAAKC,SAASF,CAAd,EAAqBG,OAAOF,KAAKD,CAAZ,EAAmB,CAAA,IAChDR,SAAQ,SAASY,EAAK,CACrB,KAAKC,YAAYT,EAAOQ,CAAP,CAAjB,MACKA,CAAP,EAAcJ,EAAII,CAAJ,KAEhBE,KAAK,IAJM,CAAb,GAKC,IAPH,EASOV,WAGA,UAAW,KACZW,EAASd,GAAUK,KAAKC,SAAf,SACR,UAAW,SACZS,EAAOf,GAAUK,KAAKC,SAAf,EACFU,EAAIF,EAAOnB,OAAS,EAAGqB,GAAK,EAAGA,MAC/B,CAACF,EAAOE,CAAP,EAAUC,MAAM,KAAMF,CAAtB,CAAD,SAEFA,EAAK,CAAL,SAIL,SAASR,EAAKW,EAAKC,EAAO,IACzBZ,MAIDX,IAAYW,EAAIR,SAAWQ,EAAIR,UAAYH,KACzCG,QAAQmB,EAAKC,CAAjB,UACSZ,EAAIZ,SAAWY,EAAIZ,OAAS,EAAG,KACpCgB,EAAAA,OACAS,EAAAA,WACCT,EAAM,EAAGS,EAAIb,EAAIZ,OAAQgB,EAAMS,EAAGT,OACjCA,KAAOJ,GAAOW,EAAIb,KAAKc,EAAOZ,EAAII,CAAJ,EAAUA,CAA1B,IAAmC,KAAKU,0BAKjDV,KAAOJ,KACZW,EAAIb,KAAKc,EAAOZ,EAAII,CAAJ,EAAUA,CAA1B,IAAmC,KAAKU,qBAO3C,SAASC,EAAK,YACRA,EAAK,CAAhB,YAIQ,SAASC,EAAMC,EAAWC,EAAiB,KAC/CC,EAAAA,cAEG,UAAW,KACVnB,EAAM,KACNQ,EAAOT,mBACJqB,GAAU,GACP,KACLF,GAAiBF,EAAKN,MAAMV,EAAKQ,CAAhB,MAGlBa,EAAUH,GAAmB,CAACC,eAEvBA,CAAb,IACUG,WAAWF,EAASH,CAApB,EAENI,KACGX,MAAMV,EAAKQ,CAAhB,YAKG,SAASR,EAAK,QACjBA,EAAIuB,QAAgBvB,EAAIuB,QAAJ,EACjB9B,GAAUK,KAAKE,CAAf,eAGI,SAASA,EAAK,QAClBA,IAAQwB,eAGT,SAASxB,EAAK,QACbA,IAAQ,0HAGV,SAASA,EAAK,QACZyB,MAAMzB,CAAN,EADT,UAISV,MAAMoC,SAAW,SAAS1B,EAAK,QAC/BA,EAAI2B,cAAgBrC,gBAGnB,SAASU,EAAK,QACfA,IAAQG,OAAOH,CAAP,YAGP,SAASA,EAAK,QACfA,IAAQA,EAAM,YAGb,SAASA,EAAK,QACfA,IAAQA,EAAM,cAGZ,SAASA,EAAK,QAChBA,IAAQ,IAASA,IAAQ,eAGtB,SAASA,EAAK,QACjBA,aAAe4B,WCvIpBC,GAAkB,CAEtB,QACUC,EAAOC,qBACF,gBACK,MACR,SAASC,EAAU,KACjBC,EAAOD,EAASE,MAAM,oCAAf,SACTD,IAAS,KACJ,GAGF,OACE,UACFE,SACH,KACAF,EAAK,CAAL,EAAQ1D,SAAR,EAAqB0D,EAAK,CAAL,EAAQ1D,SAAR,EACrB0D,EAAK,CAAL,EAAQ1D,SAAR,EAAqB0D,EAAK,CAAL,EAAQ1D,SAAR,EACrB0D,EAAK,CAAL,EAAQ1D,SAAR,EAAqB0D,EAAK,CAAL,EAAQ1D,SAAR,EAAoB,CAJtC,UASFA,iBAGK,MACN,SAASyD,EAAU,KACjBC,EAAOD,EAASE,MAAM,mBAAf,SACTD,IAAS,KACJ,GAGF,OACE,UACFE,SAAS,KAAOF,EAAK,CAAL,EAAQ1D,SAAR,EAAoB,CAApC,UAIFA,YAGA,MACD,SAASyD,EAAU,KACjBC,EAAOD,EAASE,MAAM,6CAAf,SACTD,IAAS,KACJ,GAGF,OACE,QACJG,WAAWH,EAAK,CAAL,CAAX,IACAG,WAAWH,EAAK,CAAL,CAAX,IACAG,WAAWH,EAAK,CAAL,CAAX,UAIA1D,aAGC,MACF,SAASyD,EAAU,KACjBC,EAAOD,EAASE,MAAM,0DAAf,SACTD,IAAS,KACJ,GAGF,OACE,QACJG,WAAWH,EAAK,CAAL,CAAX,IACAG,WAAWH,EAAK,CAAL,CAAX,IACAG,WAAWH,EAAK,CAAL,CAAX,IACAG,WAAWH,EAAK,CAAL,CAAX,UAIA1D,MAMb,QACUuD,EAAOO,qBAEF,KAEN,MACG,SAASL,EAAU,OAChB,OACE,UACFA,iBACW,cAIb,SAAS9D,EAAO,QACdA,EAAMiB,QASrB,QACU2C,EAAOJ,oBACF,WACA,MACH,SAASM,EAAU,QACnBA,EAAS5C,SAAW,EACf,GAGF,OACE,QACJ4C,EAAS,CAAT,IACAA,EAAS,CAAT,IACAA,EAAS,CAAT,UAIA,SAAS9D,EAAO,OACd,CAACA,EAAMM,EAAGN,EAAMS,EAAGT,EAAMU,CAAzB,eAIC,MACJ,SAASoD,EAAU,QACnBA,EAAS5C,SAAW,EAAU,GAC3B,OACE,QACJ4C,EAAS,CAAT,IACAA,EAAS,CAAT,IACAA,EAAS,CAAT,IACAA,EAAS,CAAT,UAIA,SAAS9D,EAAO,OACd,CAACA,EAAMM,EAAGN,EAAMS,EAAGT,EAAMU,EAAGV,EAAMW,CAAlC,MAOf,QACUiD,EAAO5B,qBACF,UAED,MACF,SAAS8B,EAAU,QACnBF,EAAOO,SAASL,EAASxD,CAAzB,GACFsD,EAAOO,SAASL,EAASrD,CAAzB,GACAmD,EAAOO,SAASL,EAASpD,CAAzB,GACAkD,EAAOO,SAASL,EAASnD,CAAzB,EACO,OACE,QACJmD,EAASxD,IACTwD,EAASrD,IACTqD,EAASpD,IACToD,EAASnD,GAGT,UAGF,SAASX,EAAO,OACd,GACFA,EAAMM,IACNN,EAAMS,IACNT,EAAMU,IACNV,EAAMW,aAKN,MACD,SAASmD,EAAU,QACnBF,EAAOO,SAASL,EAASxD,CAAzB,GACFsD,EAAOO,SAASL,EAASrD,CAAzB,GACAmD,EAAOO,SAASL,EAASpD,CAAzB,EACO,OACE,QACJoD,EAASxD,IACTwD,EAASrD,IACTqD,EAASpD,GAGT,UAGF,SAASV,EAAO,OACd,GACFA,EAAMM,IACNN,EAAMS,IACNT,EAAMU,cAKL,MACF,SAASoD,EAAU,QACnBF,EAAOO,SAASL,EAASlD,CAAzB,GACFgD,EAAOO,SAASL,EAASjD,CAAzB,GACA+C,EAAOO,SAASL,EAAS/C,CAAzB,GACA6C,EAAOO,SAASL,EAASnD,CAAzB,EACO,OACE,QACJmD,EAASlD,IACTkD,EAASjD,IACTiD,EAAS/C,IACT+C,EAASnD,GAGT,UAGF,SAASX,EAAO,OACd,GACFA,EAAMY,IACNZ,EAAMa,IACNb,EAAMe,IACNf,EAAMW,aAKN,MACD,SAASmD,EAAU,QACnBF,EAAOO,SAASL,EAASlD,CAAzB,GACFgD,EAAOO,SAASL,EAASjD,CAAzB,GACA+C,EAAOO,SAASL,EAAS/C,CAAzB,EACO,OACE,QACJ+C,EAASlD,IACTkD,EAASjD,IACTiD,EAAS/C,GAGT,UAGF,SAASf,EAAO,OACd,GACFA,EAAMY,IACNZ,EAAMa,IACNb,EAAMe,MAzPG,EAiQpBqD,GAAAA,OACAC,GAAAA,OAEEC,GAAY,UAAW,IAChB,OAELR,EAAWjC,UAAUX,OAAS,EAAI0C,EAAOP,QAAQxB,SAAf,EAA4BA,UAAU,CAAV,WAC7DF,KAAKgC,GAAiB,SAASY,EAAQ,IACxCA,EAAOC,OAAOV,CAAd,WACKnC,KAAK4C,EAAOE,YAAa,SAASC,EAAYtE,EAAgB,OAC1DsE,EAAWC,KAAKb,CAAhB,EAELO,KAAa,IAASD,KAAW,aACxBA,MACJhE,eAAiBA,KACjBsE,WAAaA,EACbd,EAAOhB,MAPlB,EAWOgB,EAAOhB,MAblB,EAiBOyB,IC5RLO,GAAAA,OAEEC,GAAY,YACJ,SAASjE,EAAGC,EAAGE,EAAG,KACtB+D,EAAKvE,KAAKwE,MAAMnE,EAAI,EAAf,EAAqB,EAE1BoE,EAAIpE,EAAI,GAAKL,KAAKwE,MAAMnE,EAAI,EAAf,EACbqE,EAAIlE,GAAK,EAAMF,GACfqE,EAAInE,GAAK,EAAOiE,EAAInE,GACpBsE,EAAIpE,GAAK,GAAQ,EAAMiE,GAAKnE,GAE5BuE,EAAI,CACR,CAACrE,EAAGoE,EAAGF,CAAP,EACA,CAACC,EAAGnE,EAAGkE,CAAP,EACA,CAACA,EAAGlE,EAAGoE,CAAP,EACA,CAACF,EAAGC,EAAGnE,CAAP,EACA,CAACoE,EAAGF,EAAGlE,CAAP,EACA,CAACA,EAAGkE,EAAGC,CAAP,CANQ,EAORJ,CAPQ,QASH,GACFM,EAAE,CAAF,EAAO,MACPA,EAAE,CAAF,EAAO,MACPA,EAAE,CAAF,EAAO,iBAIF,SAAS9E,EAAGG,EAAGC,EAAG,KACtB2E,EAAM9E,KAAK8E,IAAI/E,EAAGG,EAAGC,CAAf,EACN4E,EAAM/E,KAAK+E,IAAIhF,EAAGG,EAAGC,CAAf,EACN6E,EAAQD,EAAMD,EAChBzE,EAAAA,OACAC,EAAAA,UAEAyE,IAAQ,IACNC,EAAQD,aAEL,GACFE,MACA,IACA,UAIHlF,IAAMgF,KACH7E,EAAIC,GAAK6E,EACL9E,IAAM6E,IACX,GAAK5E,EAAIJ,GAAKiF,IAEd,GAAKjF,EAAIG,GAAK8E,KAEf,EACD3E,EAAI,OACD,GAGA,GACFA,EAAI,MACJC,IACAyE,EAAM,iBAID,SAAShF,EAAGG,EAAGC,EAAG,KACxBO,EAAM,KAAKwE,mBAAmB,EAAG,EAAGnF,CAA9B,WACJ,KAAKmF,mBAAmBxE,EAAK,EAAGR,CAAhC,IACA,KAAKgF,mBAAmBxE,EAAK,EAAGP,CAAhC,EACCO,sBAGW,SAASA,EAAKyE,EAAgB,QACxCzE,GAAQyE,EAAiB,EAAM,wBAGrB,SAASzE,EAAKyE,EAAgBC,EAAO,QAChDA,IAAUf,GAAec,EAAiB,GAAMzE,EAAM,EAAE,KAAQ2D,gxCCtErEgB,GAAAA,UAAAA,aACU,oBACPzF,QAAUmE,GAAU9B,MAAM,KAAMX,SAAtB,EAEX,KAAK1B,UAAY,SACb,IAAI0F,MAAM,qCAAV,OAGH1F,QAAQQ,EAAI,KAAKR,QAAQQ,GAAK,+CAG1B,QACFZ,GAAc,IAAd,uCAGK,QACLA,GAAc,KAAM,EAApB,sCAGI,QACJ,KAAKI,QAAQuE,WAAWoB,MAAM,IAA9B,WAIX,SAASC,GAAmBrE,EAAQsE,EAAWC,EAAmB,QACzDC,eAAexE,EAAQsE,EAAW,KAClC,UAAW,QACV,KAAK7F,QAAQgG,QAAU,MAClB,KAAKhG,QAAQ6F,CAAb,MAGHI,eAAe,KAAMJ,EAAWC,CAAtC,EAEO,KAAK9F,QAAQ6F,CAAb,QAGJ,SAASjF,EAAG,CACX,KAAKZ,QAAQgG,QAAU,WACnBC,eAAe,KAAMJ,EAAWC,CAAtC,OACK9F,QAAQgG,MAAQ,YAGlBhG,QAAQ6F,CAAb,EAA0BjF,GAjB9B,EAsBF,SAASsF,GAAmB3E,EAAQsE,EAAW,QACtCE,eAAexE,EAAQsE,EAAW,KAClC,UAAW,QACV,KAAK7F,QAAQgG,QAAU,MAClB,KAAKhG,QAAQ6F,CAAb,MAGHM,eAAe,IAArB,EAEO,KAAKnG,QAAQ6F,CAAb,QAGJ,SAASjF,EAAG,CACX,KAAKZ,QAAQgG,QAAU,WACnBG,eAAe,IAArB,OACKnG,QAAQgG,MAAQ,YAGlBhG,QAAQ6F,CAAb,EAA0BjF,GAjB9B,EAuBF6E,GAAMQ,eAAiB,SAASpG,EAAOgG,EAAWC,EAAmB,IAC/DjG,EAAMG,QAAQgG,QAAU,QACpBhG,QAAQ6F,CAAd,EAA2BO,GAAKC,mBAAmBxG,EAAMG,QAAQc,IAAKgF,CAA3C,UAClBjG,EAAMG,QAAQgG,QAAU,QAC1BM,OAAOzG,EAAMG,QAASoG,GAAKG,WAAW1G,EAAMG,QAAQS,EAAGZ,EAAMG,QAAQU,EAAGb,EAAMG,QAAQY,CAAhE,CAA7B,aAEM,IAAI8E,MAAM,uBAAV,GAIVD,GAAMU,eAAiB,SAAStG,EAAO,KAC/BoE,EAASmC,GAAKI,WAAW3G,EAAMM,EAAGN,EAAMS,EAAGT,EAAMU,CAAxC,IAER+F,OAAOzG,EAAMG,QAClB,GACKiE,EAAOvD,IACPuD,EAAOrD,EAHd,EAMK6C,EAAOL,MAAMa,EAAOxD,CAApB,EAEMgD,EAAOzB,YAAYnC,EAAMG,QAAQS,CAAjC,MACHT,QAAQS,EAAI,KAFZT,QAAQS,EAAIwD,EAAOxD,GAM7BgF,GAAMgB,WAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,GAAtC,EAEnBb,GAAmBH,GAAMvE,UAAW,IAAK,CAAzC,EACA0E,GAAmBH,GAAMvE,UAAW,IAAK,CAAzC,EACA0E,GAAmBH,GAAMvE,UAAW,IAAK,CAAzC,EAEAgF,GAAmBT,GAAMvE,UAAW,GAApC,EACAgF,GAAmBT,GAAMvE,UAAW,GAApC,EACAgF,GAAmBT,GAAMvE,UAAW,GAApC,EAEAY,OAAOiE,eAAeN,GAAMvE,UAAW,IAAK,KACrC,UAAW,QACP,KAAKlB,QAAQQ,OAGjB,SAASI,EAAG,MACVZ,QAAQQ,EAAII,GANrB,EAUAkB,OAAOiE,eAAeN,GAAMvE,UAAW,MAAO,KACvC,UAAW,QACV,KAAKlB,QAAQgG,QAAU,aACpBhG,QAAQc,IAAMsF,GAAKM,WAAW,KAAKvG,EAAG,KAAKG,EAAG,KAAKC,CAArC,OACdP,QAAQgG,MAAQ,OAGhB,KAAKhG,QAAQc,SAGjB,SAASF,EAAG,MACVZ,QAAQgG,MAAQ,WAChBhG,QAAQc,IAAMF,GAZvB,MCpHM+F,GAAAA,UAAAA,YACQC,EAAQC,EAAU,iBACvBC,aAAeF,EAAOC,CAAP,OAMfE,WAAaC,SAASC,cAAc,KAAvB,OAMbL,OAASA,OAMTC,SAAWA,OAOXK,WAAa/D,YAObgE,iBAAmBhE,mDAWjBT,EAAK,aACPwE,WAAaxE,EACX,4CAYMA,EAAK,aACbyE,iBAAmBzE,EACjB,sCAQA0E,EAAU,aACZR,OAAO,KAAKC,QAAjB,EAA6BO,EACzB,KAAKF,iBACFA,WAAWzF,KAAK,KAAM2F,CAA3B,OAGGC,cAAL,EACO,uCAQE,QACF,KAAKT,OAAO,KAAKC,QAAjB,yCAQO,QACP,yCAMI,QACJ,KAAKC,eAAiB,KAAKQ,SAAL,WCzG3BC,GAAY,YACJ,CAAC,QAAD,cACC,CAAC,QAAS,YAAa,YAAa,UAAW,WAA/C,iBACG,CAAC,SAAD,GAGZC,GAAgB,CAAA,EACtB/D,EAAOjC,KAAK+F,GAAW,SAAS3G,EAAG6G,EAAG,GAC7BjG,KAAKZ,EAAG,SAAS8G,EAAG,IACXA,CAAd,EAAmBD,EADrB,EADF,EAMA,IAAME,GAAmB,kBAEzB,SAASC,GAAiBC,EAAK,IACzBA,IAAQ,KAAOpE,EAAOzB,YAAY6F,CAAnB,QACV,OAGHhE,EAAQgE,EAAIhE,MAAM8D,EAAV,SAETlE,EAAOqE,OAAOjE,CAAd,EAME,EALEE,WAAWF,EAAM,CAAN,CAAX,EAYX,IAAMkE,EAAM,gBAOM,SAASC,EAAMC,EAAY,CACrCD,IAAS7E,QAAa6E,EAAKE,QAAU/E,WAEpCgF,cAAgBF,EAAa,UAAW,OACpC,IACL,UAAW,CAAA,IAGVC,MAAME,cAAgBH,EAAa,OAAS,SAC5CC,MAAMG,gBAAkBJ,EAAa,OAAS,SAC9CK,aAAeL,EAAa,KAAO,uBAS1B,SAASD,EAAMO,EAAKC,EAAM,KACpCC,EAAWD,EACXE,EAAaH,EAEb9E,EAAOzB,YAAY0G,CAAnB,MACW,IAGXjF,EAAOzB,YAAYyG,CAAnB,MACS,MAGRP,MAAMS,SAAW,WAElBD,MACGR,MAAMU,KAAO,IACbV,MAAMW,MAAQ,GAEjBJ,MACGP,MAAMY,IAAM,IACZZ,MAAMa,OAAS,cAUb,SAASf,EAAMgB,EAAWC,EAAMC,EAAK,KACxCC,EAASF,GAAQ,CAAA,EACjBG,EAAY5B,GAAcwB,CAAd,KACd,CAACI,QACG,IAAI1D,MAAM,cAAgBsD,EAAY,iBAAtC,MAEFK,EAAMrC,SAASsC,YAAYF,CAArB,SACJA,EAAR,KACO,mBAEGG,EAAUJ,EAAOK,GAAKL,EAAOI,SAAW,EACxCE,EAAUN,EAAOO,GAAKP,EAAOM,SAAW,IAC1CE,eAAeX,EAAWG,EAAOS,SAAW,GAC9CT,EAAOU,YAAc,GAAMC,OAAQX,EAAOY,YAAc,EACxD,WAIO,GAAO,GAAO,GAAO,EAAG,IANjC,YASG,sBAEGC,EAAOX,EAAIY,mBAAqBZ,EAAIa,eACnCC,SAAShB,EAAQ,YACV,WACH,UACD,YACE,WACD,WACAhG,gBACCA,OAPZ,IASK6F,EAAWG,EAAOS,SAAW,GAChCT,EAAOU,WAAYC,OACnBX,EAAOiB,QAASjB,EAAOkB,OACvBlB,EAAOmB,SAAUnB,EAAOoB,QACxBpB,EAAOqB,QAASrB,EAAOsB,QAJzB,mBASIC,UAAU1B,EAAWG,EAAOS,SAAW,GAAOT,EAAOU,YAAc,EAAvE,WAIGM,SAASd,EAAKH,CAArB,IACKyB,cAActB,CAAnB,QAUI,SAASrB,EAAM4C,EAAOjI,EAAMkI,EAAS,KACnCC,EAAOD,GAAW,UACpB7C,EAAK+C,mBACFA,iBAAiBH,EAAOjI,EAAMmI,CAAnC,EACS9C,EAAKgD,eACTA,YAAY,KAAOJ,EAAOjI,CAA/B,EAEKoF,UAUD,SAASC,EAAM4C,EAAOjI,EAAMkI,EAAS,KACrCC,EAAOD,GAAW,UACpB7C,EAAKiD,sBACFA,oBAAoBL,EAAOjI,EAAMmI,CAAtC,EACS9C,EAAKkD,eACTA,YAAY,KAAON,EAAOjI,CAA/B,EAEKoF,YAQC,SAASC,EAAMoB,EAAW,IAC9BpB,EAAKoB,YAAcjG,SAChBiG,UAAYA,UACRpB,EAAKoB,YAAcA,EAAW,KACjC+B,EAAUnD,EAAKoB,UAAUgC,MAAM,IAArB,EACZD,EAAQE,QAAQjC,CAAhB,IAA+B,OACzBkC,KAAKlC,CAAb,IACKA,UAAY+B,EAAQI,KAAK,GAAb,EAAkBC,QAAQ,OAAQ,EAAlC,EAAsCA,QAAQ,OAAQ,EAAtD,UAGdzD,eAQI,SAASC,EAAMoB,EAAW,IACjCA,KACEpB,EAAKoB,YAAcA,IAChBqC,gBAAgB,OAArB,MACK,KACCN,EAAUnD,EAAKoB,UAAUgC,MAAM,IAArB,EACVM,EAAQP,EAAQE,QAAQjC,CAAhB,EACVsC,IAAU,OACJC,OAAOD,EAAO,CAAtB,IACKtC,UAAY+B,EAAQI,KAAK,GAAb,UAIhBnC,UAAYjG,cAEZ4E,YAGC,SAASC,EAAMoB,EAAW,QAC3B,IAAIwC,OAAO,aAAexC,EAAY,YAAtC,EAAoDxF,KAAKoE,EAAKoB,SAA9D,GAA4E,aAO3E,SAASpB,EAAM,KACjBE,EAAQ2D,iBAAiB7D,CAAjB,SAEPJ,GAAiBM,EAAM,mBAAN,CAAjB,EACLN,GAAiBM,EAAM,oBAAN,CAAjB,EACAN,GAAiBM,EAAM,cAAN,CAAjB,EACAN,GAAiBM,EAAM,eAAN,CAAjB,EACAN,GAAiBM,EAAM4D,KAAvB,aAOO,SAAS9D,EAAM,KAClBE,EAAQ2D,iBAAiB7D,CAAjB,SAEPJ,GAAiBM,EAAM,kBAAN,CAAjB,EACLN,GAAiBM,EAAM,qBAAN,CAAjB,EACAN,GAAiBM,EAAM,aAAN,CAAjB,EACAN,GAAiBM,EAAM,gBAAN,CAAjB,EACAN,GAAiBM,EAAM6D,MAAvB,aAOO,SAASC,EAAI,KAClBhE,EAAOgE,EACLC,EAAS,CAAErD,KAAM,EAAGE,IAAK,CAAhB,KACXd,EAAKkE,kBAEEtD,MAAQZ,EAAKmE,aACbrD,KAAOd,EAAKoE,YACZpE,EAAKkE,mBACLlE,UAEJiE,YAQC,SAASjE,EAAM,QAChBA,IAAShB,SAASqF,gBAAkBrE,EAAKsE,MAAQtE,EAAKuE,QCtQ3DC,GAAAA,SAAAA,EAAAA,oBACQ5F,EAAQC,EAAU,4EACtBD,EAAQC,CADc,CAAA,EAGtB4F,EAAAA,IACDC,OAASC,EAAKrF,SAAL,IAETsF,WAAa5F,SAASC,cAAc,OAAvB,IACb2F,WAAWC,aAAa,OAAQ,UAArC,WAESC,GAAW,GACZC,SAAS,CAACN,EAAMC,MAAtB,WAGEzK,KAAK0K,EAAKC,WAAY,SAAUE,EAAU,EAA9C,IAEK/F,WAAWiG,YAAYL,EAAKC,UAAjC,IAGKvF,cAAL,gDAGOzG,EAAG,KACJsD,EAAAA,GAAAA,EAAAA,UAAAA,WAAAA,OAAAA,eAAAA,EAAAA,SAAAA,EAAAA,WAAAA,IAAAA,EAAAA,KAAAA,KAA0BtD,CAA1B,SACF,KAAKuG,uBACFA,iBAAiB1F,KAAK,KAAM,KAAK6F,SAAL,CAAjC,OAEGoF,OAAS,KAAKpF,SAAL,EACPpD,yCAGO,QACV,KAAKoD,SAAL,IAAoB,SACjBsF,WAAWC,aAAa,UAAW,SAAxC,OACKD,WAAWK,QAAU,QACrBP,OAAS,UAETE,WAAWK,QAAU,QACrBP,OAAS,yGAtCY/F,EAAAA,ECI1BuG,GAAAA,SAAAA,EAAAA,oBACQtG,EAAQC,EAAUsG,EAAM,4EAC5BvG,EAAQC,CADoB,CAAA,EAG9BuG,EAAUD,EAERV,EAAAA,OAMDY,SAAWrG,SAASC,cAAc,QAAvB,EAEZxD,EAAOJ,QAAQ+J,CAAf,EAAyB,KACrBE,EAAM,CAAA,IACL9L,KAAK4L,EAAS,SAASG,EAAS,GACjCA,CAAJ,EAAeA,EADjB,IAGUD,WAGL9L,KAAK4L,EAAS,SAAS5H,EAAOzD,EAAK,KAClCyL,EAAMxG,SAASC,cAAc,QAAvB,IACRwG,UAAY1L,IACZ8K,aAAa,QAASrH,CAA1B,IACM6H,SAASL,YAAYQ,CAA3B,EAJF,IAQKnG,cAAL,IAEIpF,KAAK0K,EAAKU,SAAU,SAAU,UAAW,KACrCK,EAAe,KAAKN,QAAQ,KAAKO,aAAlB,EAAiCnI,QAChDuH,SAASW,CAAf,EAFF,IAKK3G,WAAWiG,YAAYL,EAAKU,QAAjC,gDAGOzM,EAAG,KACJsD,EAAAA,GAAAA,EAAAA,UAAAA,WAAAA,OAAAA,eAAAA,EAAAA,SAAAA,EAAAA,WAAAA,IAAAA,EAAAA,KAAAA,KAA0BtD,CAA1B,SAEF,KAAKuG,uBACFA,iBAAiB1F,KAAK,KAAM,KAAK6F,SAAL,CAAjC,EAEKpD,yCAGO,QACV6D,EAAI6F,SAAS,KAAKP,QAAlB,EAAoC,WACnCA,SAAS7H,MAAQ,KAAK8B,SAAL,wGAnDKX,EAAAA,ECJzBkH,GAAAA,SAAAA,EAAAA,oBACQjH,EAAQC,EAAU,4EACtBD,EAAQC,CADc,CAAA,EAGtB4F,EAAAA,WAEGK,GAAW,GACZC,SAASN,EAAMqB,QAAQtI,KAA7B,WAGOuI,GAAS,CACZtB,EAAMtF,oBACFA,iBAAiB1F,KAAKgL,EAAOA,EAAMnF,SAAN,CAAnC,WAICwG,QAAU9G,SAASC,cAAc,OAAvB,IACV6G,QAAQjB,aAAa,OAAQ,MAAlC,IAEI5K,KAAK0K,EAAKmB,QAAS,QAAShB,CAAhC,IACI7K,KAAK0K,EAAKmB,QAAS,SAAUhB,CAAjC,IACI7K,KAAK0K,EAAKmB,QAAS,OAAQC,CAA/B,IACI9L,KAAK0K,EAAKmB,QAAS,UAAW,SAASpG,EAAG,CACxCA,EAAE8C,UAAY,SACXwD,KAAL,EAFJ,IAMK3G,cAAL,IAEKN,WAAWiG,YAAYL,EAAKmB,OAAjC,sDAGc,QAGT/F,EAAI6F,SAAS,KAAKE,OAAlB,SACEA,QAAQtI,MAAQ,KAAK8B,SAAL,wGArCIX,EAAAA,ECR/B,SAASsH,GAAYzE,EAAG,KAChB0E,EAAK1E,EAAEtJ,SAAF,SACPgO,EAAG7C,QAAQ,GAAX,EAAkB,GACb6C,EAAGnN,OAASmN,EAAG7C,QAAQ,GAAX,EAAkB,EAGhC,MAeH8C,GAAAA,SAAAA,EAAAA,oBACQvH,EAAQC,EAAUsC,EAAQ,4EAC9BvC,EAAQC,CADsB,CAAA,EAG9BuH,EAAUjF,GAAU,CAAA,WAErBkF,MAAQD,EAAQlJ,MAChBoJ,MAAQF,EAAQjJ,MAChBoJ,OAASH,EAAQI,KAElB/K,EAAOzB,YAAYyK,EAAK8B,MAAxB,EACE9B,EAAK3F,eAAiB,IACnB2H,cAAgB,IAGhBA,cAAgBrO,KAAKsO,IAAI,GAAItO,KAAKwE,MAAMxE,KAAKuO,IAAIvO,KAAKwO,IAAInC,EAAK3F,YAAd,CAAT,EAAwC1G,KAAKyO,IAAxD,CAAb,EAA8E,KAGhGJ,cAAgBhC,EAAK8B,SAGvBO,YAAcb,GAAYxB,EAAKgC,aAAjB,gDAGZ7N,EAAG,KACNmO,EAAKnO,SAEL,KAAKyN,QAAUlL,QAAa4L,EAAK,KAAKV,QACnC,KAAKA,MACD,KAAKC,QAAUnL,QAAa4L,EAAK,KAAKT,UAC1C,KAAKA,OAGR,KAAKC,SAAWpL,QAAa4L,EAAK,KAAKR,SAAW,MAC/CnO,KAAKC,MAAM0O,EAAK,KAAKR,MAArB,EAA+B,KAAKA,gGAGrBQ,CAAtB,8BAUEC,EAAU,aACPX,MAAQW,EACN,iCAULC,EAAU,aACPX,MAAQW,EACN,kCAaJC,EAAW,aACTX,OAASW,OACTT,cAAgBS,OAChBJ,YAAcb,GAAYiB,CAAZ,EACZ,YA9EoBvI,EAAAA,ECpB/B,SAASwI,GAAe3J,EAAO4J,EAAU,KACjCC,EAAQjP,KAAKsO,IAAI,GAAIU,CAAb,SACPhP,KAAKC,MAAMmF,EAAQ6J,CAAnB,EAA4BA,MAiB/BC,GAAAA,SAAAA,EAAAA,oBACQ1I,EAAQC,EAAUsC,EAAQ,4EAC9BvC,EAAQC,EAAUsC,CADY,CAAA,IAG/BoG,sBAAwB,OAEvB9C,EAAAA,EAMF+C,EAAAA,gBAEK1C,GAAW,KACZ2C,EAAY1L,WAAW0I,EAAMqB,QAAQtI,KAAzB,EACb/B,EAAOL,MAAMqM,CAAb,KACG1C,SAAS0C,CAAf,WAIKC,GAAW,CACdjD,EAAMtF,oBACFA,iBAAiB1F,KAAKgL,EAAOA,EAAMnF,SAAN,CAAnC,WAIKyG,GAAS,cAIT4B,EAAYjI,EAAG,KAChBkI,EAAOJ,EAAQ9H,EAAE+B,UACjBsD,SAASN,EAAMnF,SAAN,EAAmBsI,EAAOnD,EAAMgC,aAA/C,IAEQ/G,EAAE+B,iBAGHoG,GAAY,GACfC,OAAOhG,OAAQ,YAAa6F,CAAhC,IACIG,OAAOhG,OAAQ,UAAW+F,CAA9B,eAIOE,EAAYrI,EAAG,GAClBzF,KAAK6H,OAAQ,YAAa6F,CAA9B,IACI1N,KAAK6H,OAAQ,UAAW+F,CAA5B,IACQnI,EAAE+B,iBAGPqE,QAAU9G,SAASC,cAAc,OAAvB,IACV6G,QAAQjB,aAAa,OAAQ,MAAlC,IAII5K,KAAK0K,EAAKmB,QAAS,SAAUhB,CAAjC,IACI7K,KAAK0K,EAAKmB,QAAS,OAAQC,CAA/B,IACI9L,KAAK0K,EAAKmB,QAAS,YAAaiC,CAApC,IACI9N,KAAK0K,EAAKmB,QAAS,UAAW,SAASpG,EAAG,CAExCA,EAAE8C,UAAY,OACV+E,sBAAwB,QACzBvB,KAAL,IACMuB,sBAAwB,QALlC,IAUKlI,cAAL,IAEKN,WAAWiG,YAAYL,EAAKmB,OAAjC,sDAGc,aACTA,QAAQtI,MAAQ,KAAK+J,sBAAwB,KAAKjI,SAAL,EAAkB6H,GAAe,KAAK7H,SAAL,EAAiB,KAAKwH,WAArC,uGA1EtCX,EAAAA,ECpBlC,SAASb,GAAI1M,EAAGoP,EAAIC,EAAIC,EAAIC,EAAI,QACvBD,GAAMC,EAAKD,KAAQtP,EAAIoP,IAAOC,EAAKD,QAmBtCI,GAAAA,SAAAA,EAAAA,oBACQxJ,EAAQC,EAAU3B,EAAKC,EAAKqJ,EAAM,4EACtC5H,EAAQC,EAAU,CAAE3B,IAAKA,EAAKC,IAAKA,EAAKqJ,KAAMA,CAA5B,CADoB,CAAA,EAGtC/B,EAAAA,IAED4D,aAAerJ,SAASC,cAAc,KAAvB,IACfqJ,aAAetJ,SAASC,cAAc,KAAvB,IAEhBhF,KAAK0K,EAAK0D,aAAc,YAAaN,CAAzC,IACI9N,KAAK0K,EAAK0D,aAAc,aAAcE,CAA1C,IAEIC,SAAS7D,EAAK0D,aAAc,QAAhC,IACIG,SAAS7D,EAAK2D,aAAc,WAAhC,WAESP,EAAYrI,EAAG,UACb2E,cAAc2B,KAAvB,IAEI/L,KAAK6H,OAAQ,YAAa6F,CAA9B,IACI1N,KAAK6H,OAAQ,UAAW+F,CAA5B,IAEYnI,CAAZ,WAGOiI,EAAYjI,EAAG,GACpB+I,eAAF,MAEMC,EAASjE,EAAM4D,aAAaM,sBAAnB,WAET5D,SACJO,GAAI5F,EAAE6B,QAASmH,EAAO9H,KAAM8H,EAAO7H,MAAO4D,EAAM4B,MAAO5B,EAAM6B,KAA7D,CADF,EAIO,YAGAuB,GAAY,GACfC,OAAOhG,OAAQ,YAAa6F,CAAhC,IACIG,OAAOhG,OAAQ,UAAW+F,CAA9B,EACIpD,EAAMtF,oBACFA,iBAAiB1F,KAAKgL,EAAOA,EAAMnF,SAAN,CAAnC,WAIKiJ,EAAa7I,EAAG,CACnBA,EAAEkJ,QAAQ7P,SAAW,MACrBkB,KAAK6H,OAAQ,YAAa+G,CAA9B,IACI5O,KAAK6H,OAAQ,WAAYgH,CAA7B,IACYpJ,CAAZ,YAGOmJ,EAAYnJ,EAAG,KAChB6B,EAAU7B,EAAEkJ,QAAQ,CAAV,EAAarH,QACvBmH,EAASjE,EAAM4D,aAAaM,sBAAnB,IAET5D,SACJO,GAAI/D,EAASmH,EAAO9H,KAAM8H,EAAO7H,MAAO4D,EAAM4B,MAAO5B,EAAM6B,KAA3D,CADF,WAKOwC,GAAa,GAChBhB,OAAOhG,OAAQ,YAAa+G,CAAhC,IACIf,OAAOhG,OAAQ,WAAYgH,CAA/B,EACIrE,EAAMtF,oBACFA,iBAAiB1F,KAAKgL,EAAOA,EAAMnF,SAAN,CAAnC,WAICD,cAAL,IAEKgJ,aAAarD,YAAYL,EAAK2D,YAAnC,IACKvJ,WAAWiG,YAAYL,EAAK0D,YAAjC,sDAGc,KACRU,GAAO,KAAKzJ,SAAL,EAAkB,KAAK+G,QAAU,KAAKC,MAAQ,KAAKD,mBAC3DiC,aAAapI,MAAM4D,MAAQiF,EAAM,IAAM,yGA5EX5C,EAAAA,ECZ/B6C,GAAAA,SAAAA,EAAAA,oBACQpK,EAAQC,EAAUoK,EAAM,4EAC5BrK,EAAQC,CADoB,CAAA,EAG5B4F,EAAAA,WAEDyE,SAAWlK,SAASC,cAAc,KAAvB,IACXiK,SAASzD,UAAYwD,IAAS9N,OAAY,OAAS8N,IAEpDhP,KAAK0K,EAAKuE,SAAU,QAAS,SAASxJ,EAAG,UACzC+I,eAAF,IACMU,KAAN,EACO,GAHT,IAMIX,SAAS7D,EAAKuE,SAAU,QAA5B,IAEKnK,WAAWiG,YAAYL,EAAKuE,QAAjC,6CAGK,CACD,KAAKhK,iBACFA,WAAWzF,KAAK,IAArB,OAEG6F,SAAL,EAAgB7F,KAAK,KAAKmF,MAA1B,EACI,KAAKO,uBACFA,iBAAiB1F,KAAK,KAAM,KAAK6F,SAAL,CAAjC,SA1B2BX,EAAAA,ECA3ByK,GAAAA,SAAAA,EAAAA,oBACQxK,EAAQC,EAAU,4EACtBD,EAAQC,CADc,CAAA,IAGvBwK,QAAU,IAAI5L,GAAMkH,EAAKrF,SAAL,CAAV,IACVgK,OAAS,IAAI7L,GAAM,CAAV,MAERgH,EAAAA,IAED1F,WAAaC,SAASC,cAAc,KAAvB,IAEdsK,eAAe5E,EAAK5F,WAAY,EAApC,IAEKyK,WAAaxK,SAASC,cAAc,KAAvB,IACbuK,WAAWpI,UAAY,aAEvBqI,mBAAqBzK,SAASC,cAAc,KAAvB,IACrBwK,mBAAmBrI,UAAY,qBAE/BsI,aAAe1K,SAASC,cAAc,KAAvB,IACfyK,aAAatI,UAAY,eACzBuI,oBAAsB,eAEtBC,WAAa5K,SAASC,cAAc,KAAvB,IACb2K,WAAWxI,UAAY,aAEvByI,YAAc7K,SAASC,cAAc,KAAvB,IACd4K,YAAYzI,UAAY,cAExB0E,QAAU9G,SAASC,cAAc,OAAvB,IACV6G,QAAQxB,KAAO,SACfwF,mBAAqB,eAEtB7P,KAAK0K,EAAKmB,QAAS,UAAW,SAASpG,EAAG,CACxCA,EAAE8C,UAAY,MACT/I,KAAK,IAAZ,EAFJ,IAMIQ,KAAK0K,EAAKmB,QAAS,OAAQC,CAA/B,IAEI9L,KAAK0K,EAAK6E,WAAY,YAAa,UAAkB,GAEpDhB,SAAS,KAAM,MADlB,EAEGvO,KAAK6H,OAAQ,UAAW,UAAkB,GACrCiI,YAAYtF,EAAM+E,WAAY,MAAlC,EAHJ,EADF,IAQIvP,KAAK0K,EAAK6E,WAAY,aAAc,UAAkB,GAErDhB,SAAS,KAAM,MADlB,EAEGvO,KAAK6H,OAAQ,WAAY,UAAkB,GACtCiI,YAAYtF,EAAM+E,WAAY,MAAlC,EAHJ,EADF,MAQMQ,EAAahL,SAASC,cAAc,KAAvB,IAEZX,OAAOqG,EAAK6E,WAAWtJ,MAAO,OAC5B,eACC,gBACC,sBACQ,iBACN,8BALb,IAQO5B,OAAOqG,EAAK+E,aAAaxJ,MAAO,UAC3B,iBACH,cACC,cACAyE,EAAKgF,qBAAuBhF,EAAK0E,QAAQzQ,EAAI,GAAM,OAAS,kBACzD,2CACG,cACN,EAPV,IAUO0F,OAAOqG,EAAKiF,WAAW1J,MAAO,UACzB,iBACH,cACC,kBACK,wBACL,EALV,IAQO5B,OAAOqG,EAAK8E,mBAAmBvJ,MAAO,OACpC,eACC,eACA,6BACK,cACJ,sBACD,UANV,IASO5B,OAAO0L,EAAW9J,MAAO,OACvB,cACC,kBACI,OAHd,KAMe8J,EAAY,MAAO,gBAAiB,MAAnD,IAEO1L,OAAOqG,EAAKkF,YAAY3J,MAAO,OAC7B,cACC,eACA,wBACA,qBACE,eACL,YACE,MAPT,KAUYyE,EAAKkF,WAAjB,IAEOvL,OAAOqG,EAAKmB,QAAQ5F,MAAO,SACvB,iBAEE,eAGJ,cACC,aACI,kBACAyE,EAAKmF,mBAAqB,kBATxC,IAYI7P,KAAK0K,EAAK8E,mBAAoB,YAAaQ,CAA/C,IACIhQ,KAAK0K,EAAK8E,mBAAoB,aAAcQ,CAAhD,IAEIhQ,KAAK0K,EAAK+E,aAAc,YAAaO,CAAzC,IACIhQ,KAAK0K,EAAK+E,aAAc,aAAcO,CAA1C,IAEIhQ,KAAK0K,EAAKkF,YAAa,YAAaK,CAAxC,IACIjQ,KAAK0K,EAAKkF,YAAa,aAAcK,CAAzC,WAESD,EAAUvK,EAAG,GACdA,CAAN,IACIzF,KAAK6H,OAAQ,YAAaqI,CAA9B,IACIlQ,KAAK6H,OAAQ,YAAaqI,CAA9B,IACIlQ,KAAK6H,OAAQ,UAAWsI,CAA5B,IACInQ,KAAK6H,OAAQ,WAAYsI,CAA7B,WAGOF,EAAWxK,EAAG,GAChBA,CAAL,IACIzF,KAAK6H,OAAQ,YAAauI,CAA9B,IACIpQ,KAAK6H,OAAQ,YAAauI,CAA9B,IACIpQ,KAAK6H,OAAQ,UAAWwI,CAA5B,IACIrQ,KAAK6H,OAAQ,WAAYwI,CAA7B,WAGOF,GAAY,GACftC,OAAOhG,OAAQ,YAAaqI,CAAhC,IACIrC,OAAOhG,OAAQ,YAAaqI,CAAhC,IACIrC,OAAOhG,OAAQ,UAAWsI,CAA9B,IACItC,OAAOhG,OAAQ,WAAYsI,CAA/B,eAIOE,GAAW,GACdxC,OAAOhG,OAAQ,YAAauI,CAAhC,IACIvC,OAAOhG,OAAQ,YAAauI,CAAhC,IACIvC,OAAOhG,OAAQ,UAAWwI,CAA9B,IACIxC,OAAOhG,OAAQ,WAAYwI,CAA/B,eAIOvE,GAAS,KACV3L,EAAI+B,GAAU,KAAKqB,KAAf,EACNpD,IAAM,MACFiP,QAAQrR,QAAUoC,IAClB2K,SAASN,EAAM4E,QAAQkB,WAAd,CAAf,QAEK/M,MAAQiH,EAAM4E,QAAQnR,SAAd,WAIRwP,GAAW,CACdjD,EAAMtF,oBACFA,iBAAiB1F,KAAKgL,EAAOA,EAAM4E,QAAQkB,WAAd,CAAnC,IAICd,mBAAmBzE,YAAYgF,CAApC,IACKR,WAAWxE,YAAYL,EAAK+E,YAAjC,IACKF,WAAWxE,YAAYL,EAAK8E,kBAAjC,IACKD,WAAWxE,YAAYL,EAAKkF,WAAjC,IACKA,YAAY7E,YAAYL,EAAKiF,UAAlC,IAEK7K,WAAWiG,YAAYL,EAAKmB,OAAjC,IACK/G,WAAWiG,YAAYL,EAAK6E,UAAjC,IAEKnK,cAAL,WAES8K,EAAMzK,EAAG,CACZA,EAAE4E,KAAKjB,QAAQ,OAAf,IAA4B,MAAQoF,eAAF,MAEhC+B,EAAY/F,EAAMgF,mBAAmBd,sBAAzB,IACYjJ,EAAEkJ,SAAWlJ,EAAEkJ,QAAQ,CAAV,GAAiBlJ,EAApD6B,EAJQkJ,EAIRlJ,QAASE,EAJDgJ,EAIChJ,QACb/I,GAAK6I,EAAUiJ,EAAU5J,OAAS4J,EAAU3J,MAAQ2J,EAAU5J,MAC9DhI,EAAI,GAAK6I,EAAU+I,EAAU1J,MAAQ0J,EAAUzJ,OAASyJ,EAAU1J,YAElElI,EAAI,IACF,EACKA,EAAI,MACT,GAGFF,EAAI,IACF,EACKA,EAAI,MACT,KAGA2Q,QAAQzQ,EAAIA,IACZyQ,QAAQ3Q,EAAIA,IAEZqM,SAASN,EAAM4E,QAAQkB,WAAd,CAAf,EAGO,YAGAF,EAAK3K,EAAG,CACXA,EAAE4E,KAAKjB,QAAQ,OAAf,IAA4B,MAAQoF,eAAF,MAEhC+B,EAAY/F,EAAMoF,YAAYlB,sBAAlB,IACGjJ,EAAEkJ,SAAWlJ,EAAEkJ,QAAQ,CAAV,GAAiBlJ,EAA3C+B,EAJOiJ,EAIPjJ,QACJhJ,EAAI,GAAKgJ,EAAU+I,EAAU1J,MAAQ0J,EAAUzJ,OAASyJ,EAAU1J,YAElErI,EAAI,IACF,EACKA,EAAI,MACT,KAGA4Q,QAAQ5Q,EAAIA,EAAI,MAEhBsM,SAASN,EAAM4E,QAAQkB,WAAd,CAAf,EAEO,8DAIK,KACRnQ,EAAI+B,GAAU,KAAKmD,SAAL,CAAV,KAENlF,IAAM,GAAO,KACXuQ,EAAW,KAIRnR,KAAKiE,GAAMgB,WAAY,SAASZ,EAAW,IAC5C,CAACpC,EAAOzB,YAAYI,EAAEyD,CAAF,CAAnB,GAAoC,CAACpC,EAAOzB,YAAY,KAAKqP,QAAQrR,QAAQ6F,CAArB,CAAnB,GACxCzD,EAAEyD,CAAF,IAAiB,KAAKwL,QAAQrR,QAAQ6F,CAArB,WACN,GACJ,CAAA,GAER,IANH,EAUI8M,KACKrM,OAAO,KAAK+K,QAAQrR,QAASoC,CAApC,IAIGkE,OAAO,KAAKgL,OAAOtR,QAAS,KAAKqR,QAAQrR,OAAhD,OAEKsR,OAAO9Q,EAAI,MAEVoS,EAAQ,KAAKvB,QAAQzQ,EAAI,IAAO,KAAKyQ,QAAQ3Q,EAAI,GAAO,IAAM,EAC9DmS,EAAQ,IAAMD,IAEbtM,OAAO,KAAKoL,aAAaxJ,MAAO,YACzB,IAAM,KAAKmJ,QAAQ3Q,EAAI,EAAI,eAC5B,KAAO,EAAI,KAAK2Q,QAAQzQ,GAAK,EAAI,qBAC3B,KAAK0Q,OAAOwB,YAAZ,SACT,KAAKnB,oBAAsB,OAASiB,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAJ/E,OAOKhB,WAAW1J,MAAM6K,WAAa,EAAI,KAAK1B,QAAQ5Q,EAAI,KAAO,IAAM,UAEhE6Q,OAAO5Q,EAAI,OACX4Q,OAAO1Q,EAAI,KAED,KAAK6Q,mBAAoB,OAAQ,OAAQ,KAAKH,OAAOwB,YAAZ,CAAxD,OAEKhF,QAAQtI,MAAQ,KAAK6L,QAAQnR,SAAb,IAEdoG,OAAO,KAAKwH,QAAQ5F,MAAO,iBACf,KAAKmJ,QAAQyB,YAAb,QACV,OAASF,EAAO,IAAMA,EAAO,IAAMA,EAAO,eACrC,KAAKd,mBAAqB,QAAUe,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,OAHtF,SAlS0BlM,EAAAA,EA0SxBqM,GAAU,CAAC,QAAS,MAAO,WAAY,OAAQ,EAArC,EAEhB,SAASC,GAAejL,EAAMwB,EAAGhJ,EAAGD,EAAG,GAChC2H,MAAMgL,WAAa,KACjB1R,KAAKwR,GAAS,SAASG,EAAQ,GAC/BjL,MAAMkL,SAAW,eAAiBD,EAAS,mBAAqB3J,EAAI,KAAOhJ,EAAI,QAAUD,EAAI,WADpG,EAKF,SAAS8S,GAAYrL,EAAM,GACpBE,MAAMgL,WAAa,KACnBhL,MAAMkL,SAAW,uIACjBlL,MAAMkL,SAAW,oIACjBlL,MAAMkL,SAAW,+HACjBlL,MAAMkL,SAAW,gIACjBlL,MAAMkL,SAAW,0HCpUxB,IAAME,GAAM,MACJ,SAASC,EAAKC,EAAO,KACnBC,EAAMD,GAASxM,SACf0M,EAAOD,EAAIxM,cAAc,MAAlB,IACRqF,KAAO,aACPqH,IAAM,eACNpH,KAAOgH,IACRK,qBAAqB,MAAzB,EAAiC,CAAjC,EAAoC5G,YAAY0G,CAAhD,UAGM,SAASG,EAAYL,EAAO,KAC5BC,EAAMD,GAASxM,SACf8M,EAAW9M,SAASC,cAAc,OAAvB,IACRqF,KAAO,aACPmB,UAAYoG,MACfE,EAAON,EAAIG,qBAAqB,MAAzB,EAAiC,CAAjC,KACT,GACG5G,YAAY8G,CAAjB,OACU,KC/BVE,GAAAA;;;;;;;;;;;;;;;;;;;;QCqBAC,GAAoB,SAASrN,EAAQC,EAAU,KAC7CC,EAAeF,EAAOC,CAAP,SAGjBpD,EAAOJ,QAAQ3B,UAAU,CAAV,CAAf,GAAgC+B,EAAO5B,SAASH,UAAU,CAAV,CAAhB,EAC3B,IAAIwL,GAAiBtG,EAAQC,EAAUnF,UAAU,CAAV,CAAvC,EAIL+B,EAAOO,SAAS8C,CAAhB,EAEErD,EAAOO,SAAStC,UAAU,CAAV,CAAhB,GAAiC+B,EAAOO,SAAStC,UAAU,CAAV,CAAhB,EAE/B+B,EAAOO,SAAStC,UAAU,CAAV,CAAhB,EACK,IAAI0O,GAAuBxJ,EAAQC,EACxCnF,UAAU,CAAV,EAAcA,UAAU,CAAV,EAAcA,UAAU,CAAV,CADvB,EAIF,IAAI0O,GAAuBxJ,EAAQC,EAAUnF,UAAU,CAAV,EAAcA,UAAU,CAAV,CAA3D,EAIL+B,EAAOO,SAAStC,UAAU,CAAV,CAAhB,EACK,IAAI4N,GAAoB1I,EAAQC,EACrC,CAAE3B,IAAKxD,UAAU,CAAV,EAAcyD,IAAKzD,UAAU,CAAV,EAAc8M,KAAM9M,UAAU,CAAV,CAA9C,CADK,EAGF,IAAI4N,GAAoB1I,EAAQC,EAAU,CAAE3B,IAAKxD,UAAU,CAAV,EAAcyD,IAAKzD,UAAU,CAAV,CAA1B,CAA1C,EAGL+B,EAAOC,SAASoD,CAAhB,EACK,IAAI+G,GAAiBjH,EAAQC,CAA7B,EAGLpD,EAAOyQ,WAAWpN,CAAlB,EACK,IAAIkK,GAAmBpK,EAAQC,EAAU,EAAzC,EAGLpD,EAAO0Q,UAAUrN,CAAjB,EACK,IAAI0F,GAAkB5F,EAAQC,CAA9B,EAGF,MCjDT,SAASuN,GAAsBC,EAAU,YAC5BA,EAAU,IAAO,EAA5B,EAGF,IAAAC,GAAexK,OAAOsK,uBAClBtK,OAAOyK,6BACPzK,OAAO0K,0BACP1K,OAAO2K,wBACP3K,OAAO4K,yBACPN,GCNEO,GAAAA,UAAAA,aACU,iBACPC,kBAAoB5N,SAASC,cAAc,KAAvB,IAClBX,OAAO,KAAKsO,kBAAkB1M,MAAO,iBACzB,sBACZ,OACC,UACG,cACD,eACC,mBACS,iCACN,sBARd,IAWI2M,eAAe,KAAKD,iBAAxB,OACKA,kBAAkB1M,MAAMS,SAAW,aAEnC5B,WAAaC,SAASC,cAAc,KAAvB,IACXX,OAAO,KAAKS,WAAWmB,MAAO,UACzB,gBACD,cACD,eACC,mBACS,kEACN,+CANd,WAUS4M,KAAK9H,YAAY,KAAK4H,iBAA/B,WACSE,KAAK9H,YAAY,KAAKjG,UAA/B,MAEM0F,EAAQ,OACVxK,KAAK,KAAK2S,kBAAmB,QAAS,UAAW,GAC7CG,KAAN,EADF,2CAKK,KACCtI,EAAQ,UAETmI,kBAAkB1M,MAAM8M,QAAU,aAElCjO,WAAWmB,MAAM8M,QAAU,aAC3BjO,WAAWmB,MAAM+M,QAAU,OAE3BlO,WAAWmB,MAAMgN,gBAAkB,kBAEnCC,OAAL,IAEOC,MAAM,UAAW,GAChBR,kBAAkB1M,MAAM+M,QAAU,IAClClO,WAAWmB,MAAM+M,QAAU,IAC3BlO,WAAWmB,MAAMgN,gBAAkB,WAH3C,gCAUK,KACCzI,EAAQ,KAERsI,EAAO,SAAPA,GAAkB,GAChBhO,WAAWmB,MAAM8M,QAAU,SAC3BJ,kBAAkB1M,MAAM8M,QAAU,SAEpClF,OAAOrD,EAAM1F,WAAY,sBAAuBgO,CAApD,IACIjF,OAAOrD,EAAM1F,WAAY,gBAAiBgO,CAA9C,IACIjF,OAAOrD,EAAM1F,WAAY,iBAAkBgO,CAA/C,KAGE9S,KAAK,KAAK8E,WAAY,sBAAuBgO,CAAjD,IACI9S,KAAK,KAAK8E,WAAY,gBAAiBgO,CAA3C,IACI9S,KAAK,KAAK8E,WAAY,iBAAkBgO,CAA5C,OAEKH,kBAAkB1M,MAAM+M,QAAU,OAElClO,WAAWmB,MAAM+M,QAAU,OAC3BlO,WAAWmB,MAAMgN,gBAAkB,6CAGjC,MACFnO,WAAWmB,MAAMU,KAAOkB,OAAOuL,WAAa,EAAItN,EAAIuN,SAAS,KAAKvO,UAAlB,EAAgC,EAAI,UACpFA,WAAWmB,MAAMY,IAAMgB,OAAOyL,YAAc,EAAIxN,EAAIyN,UAAU,KAAKzO,UAAnB,EAAiC,EAAI;GCtE9FuM,GAAImC,OAAOC,EAAX,EAGA,IAAMC,GAAgB,KAEhBC,GAAgB,GAGhBC,GAAsB,GAEtBC,GAA8B,UAE9BC,GAA0B,UAAW,IACrC,OACK,CAAC,CAACjM,OAAOkM,kBACN,OACH,KAJqB,EAQ5BC,GAAAA,OAGAC,GAAkB,GAGlBC,GAAAA,OAGApB,GAAO,GAGLqB,GAAe,CAAA,EA2BfC,GAAM,SAANA,EAAepN,EAAM,KACnBwD,EAAQ,KAEVtD,EAASF,GAAQ,CAAA,OAMhBlC,WAAaC,SAASC,cAAc,KAAvB,OACbqP,KAAOtP,SAASC,cAAc,IAAvB,OACPF,WAAWiG,YAAY,KAAKsJ,IAAjC,IAEI9F,SAAS,KAAKzJ,WAAY4O,EAA9B,OAMKY,UAAY,CAAA,OAEZC,cAAgB,CAAA,OAMhBC,oBAAsB,CAAA,OAoBtBC,uCAAyC,CAAA,OAEzCC,YAAc,CAAA,IAGVlT,EAAO0G,SAAShB,EAAQ,YACnB,aACD,SACJkN,EAAIO,cAHJ,IAMAnT,EAAO0G,SAAShB,EAAQ,WACpBA,EAAO0N,mBACR1N,EAAO0N,UAFV,EAKJpT,EAAOzB,YAAYmH,EAAO2N,IAA1B,IAMIA,KAAO,CAAEC,OAAQjB,EAAV,EAJV3M,EAAO4N,WACFD,KAAKC,OAAS5N,EAAO4N,QAM5BtT,EAAOzB,YAAYmH,EAAO6N,MAA1B,GAAqC7N,EAAO8N,aACjC3L,KAAK,IAAlB,IAIK4L,UAAYzT,EAAOzB,YAAYmH,EAAO6N,MAA1B,GAAqC7N,EAAO+N,UAE3D/N,EAAO0N,WAAapT,EAAOzB,YAAYmH,EAAOgO,UAA1B,MACfA,WAAa,QAMlBC,EACFrB,IACAC,aAAaqB,QAAQC,GAAoB,KAAM,SAA1B,CAArB,IAA+D,OAE7DC,EAAAA,OACAC,EAAAA,iBAEGC,iBAAiB,aAOZ,KACD,UAAW,QACPtO,EAAO6N,oBAIN,KACL,UAAW,QACP7N,EAAOgO,uBAQP,KACJ,UAAW,QACPhO,EAAO0N,uBAQN,KACL,UAAW,QACP1N,EAAOuO,oBAQV,KACD,UAAW,QACVjL,EAAMuK,OACDvK,EAAMkL,QAAN,EAAgBZ,OAGlB5N,EAAO2N,KAAKC,YAGhB,SAASnW,EAAG,CACX6L,EAAMuK,SACFW,QAAN,EAAgBZ,OAASnW,IAElBkW,KAAKC,OAASnW,KAEF,IAArB,IACMgX,OAAN,UAQG,KACA,UAAW,QACPzO,EAAO2C,WAEX,SAASlL,EAAG,GACRkL,MAAQlL,KACN6L,EAAO7L,CAAhB,SASE,KACC,UAAW,QACPuI,EAAO0O,UAEX,SAASjX,EAAG,GAERiX,KAAOjX,EACV4W,MACO/J,UAAYtE,EAAO0O,eAS1B,KACD,UAAW,QACP1O,EAAO2O,YAEX,SAASlX,EAAG,GACRkX,OAASlX,EACZuI,EAAO2O,SACLtH,SAAS/D,EAAM6J,KAAMD,EAAI0B,YAA7B,IAEIhG,YAAYtF,EAAM6J,KAAMD,EAAI0B,YAAhC,OAKGC,SAAL,EAEIvL,EAAMwL,kBACFA,cAAcxK,UAAY7M,EAAIyV,EAAI6B,UAAY7B,EAAI8B,oBASxD,KACC,UAAW,QACPhP,EAAO2N,uBASD,KAEV,UAAW,QACPM,OAEJ,SAAStM,EAAM,CACdiL,OACgBjL,EACdA,IACE7I,KAAK6H,OAAQ,SAAUyN,CAA3B,IAEIzH,OAAOhG,OAAQ,SAAUyN,CAA7B,eAEWa,QAAQd,GAAoB7K,EAAO,SAA3B,EAAuC3B,CAA5D,KArJV,EA4JIrH,EAAOzB,YAAYmH,EAAO6N,MAA1B,EAAmC,SAChCc,OAAS3O,EAAO2O,QAAU,KAE3BtH,SAAS,KAAKzJ,WAAYsP,EAAIgC,UAAlC,IACI9G,eAAe,KAAKxK,WAAY,EAApC,EAGIgP,IACEqB,EAAiB,GACbA,gBAAkB,OAElBkB,EAAWtC,aAAaqB,QAAQC,GAAoB,KAAM,KAA1B,CAArB,EAEbgB,MACKxB,KAAOyB,KAAKC,MAAMF,CAAX,QAKfL,cAAgBjR,SAASC,cAAc,KAAvB,OAChBgR,cAAcxK,UAAY4I,EAAI8B,cAC/B3H,SAAS,KAAKyH,cAAe5B,EAAIoC,kBAArC,EACItP,EAAOuO,cACLlH,SAAS,KAAKyH,cAAe5B,EAAIqC,eAArC,OACK3R,WAAW4R,aAAa,KAAKV,cAAe,KAAKlR,WAAW6R,WAAW,CAA3B,CAAjD,MAEIpI,SAAS,KAAKyH,cAAe5B,EAAIwC,kBAArC,OACK9R,WAAWiG,YAAY,KAAKiL,aAAjC,KAGEhW,KAAK,KAAKgW,cAAe,QAAS,UAAW,GACzCH,OAAS,CAACrL,EAAMqL,OADxB,MAIK,CACD3O,EAAO2O,SAAW3U,WACb2U,OAAS,QAGZgB,EAAe9R,SAAS+R,eAAe5P,EAAO0O,IAA/B,IACjBrH,SAASsI,EAAc,iBAA3B,IAEWE,GAAOvM,EAAOqM,CAAd,MAELG,EAAe,SAASvR,EAAG,UAC7B+I,eAAF,IACMqH,OAAS,CAACrL,EAAMqL,OACf,MAGLtH,SAAS,KAAK8F,KAAMD,EAAI0B,YAA5B,IAEIvH,SAASgH,EAAU,OAAvB,IACIvV,KAAKuV,EAAU,QAASyB,CAA5B,EAEK9P,EAAO2O,cACLA,OAAS,IAId3O,EAAO0N,YACLpT,EAAOzB,YAAYmH,EAAO6N,MAA1B,IACEd,QACmBlP,SAASC,cAAc,KAAvB,IACjBuJ,SAAS2F,GAAoBR,EAAjC,IACInF,SAAS2F,GAAoBE,EAAI6C,0BAArC,WACSpE,KAAK9H,YAAYmJ,EAA1B,KACkB,OAIDnJ,YAAY,KAAKjG,UAApC,IAGIyJ,SAAS,KAAKzJ,WAAYsP,EAAI8C,gBAAlC,GAKG,KAAKnC,WACCvK,EAAOtD,EAAO2C,KAAvB,QAICsN,gBAAkB,UAAW,GAC1BC,kBAAN,KAGEpX,KAAK6H,OAAQ,SAAU,KAAKsP,eAAhC,IACInX,KAAK,KAAKqU,KAAM,sBAAuB,KAAK8C,eAAhD,IACInX,KAAK,KAAKqU,KAAM,gBAAiB,KAAK8C,eAA1C,IACInX,KAAK,KAAKqU,KAAM,iBAAkB,KAAK8C,eAA3C,OACKpB,SAAL,EAEI7O,EAAO+N,cACO,IAAhB,IAGmB,UAAW,CAC1BnB,IAA0BC,aAAaqB,QAAQC,GAAoB7K,EAAO,SAA3B,CAArB,IAAgE,qBAC/E2L,QAAQd,GAAoB7K,EAAO,KAA3B,EAAmC8L,KAAKe,UAAU7M,EAAM8M,cAAN,CAAf,CAAxD,QAKCC,6BAA+BjC,WAE3BkC,GAAa,KACdC,EAAOjN,EAAMkL,QAAN,IACR7L,OAAS,IACPsJ,MAAM,UAAW,GACjBtJ,OAAS,EADhB,EAKG3C,EAAO6N,aAKdX,GAAIsD,WAAa,UAAW,IACnB,CAAC5E,KACDvT,KAAK4U,GAAc,SAASwD,EAAK,GAClC7S,WAAWmB,MAAM8M,QAAUD,GAAO,OAAS,GADjD,GAKFsB,GAAI8C,iBAAmB,IACvB9C,GAAI6C,2BAA6B,KACjC7C,GAAIgC,WAAa,OACjBhC,GAAIwD,qBAAuB,KAC3BxD,GAAIyD,eAAiB,qBACrBzD,GAAI0B,aAAe,SACnB1B,GAAIoC,mBAAqB,eACzBpC,GAAIqC,gBAAkB,YACtBrC,GAAIwC,mBAAqB,eACzBxC,GAAI0D,WAAa,OAEjB1D,GAAIO,cAAgB,IACpBP,GAAI8B,YAAc,iBAClB9B,GAAI6B,UAAY,gBAEhB7B,GAAI2D,gBAAkB,SAAStS,EAAG,CAC5BV,SAASqF,cAAcC,OAAS,SACjC5E,EAAEuS,QAAUrE,IAAiBlO,EAAE8C,UAAYoL,QACxC+D,WAAJ,GAGJ5R,EAAI9F,KAAK6H,OAAQ,UAAWuM,GAAI2D,gBAAiB,EAAjD,EAEAvW,EAAO6C,OACL+P,GAAInV,UAGJ,KAyBO,SAAS0F,EAAQC,EAAU,QACvBqT,GACL,KACAtT,EACAC,EACA,aACe5F,MAAMC,UAAUG,MAAMI,KAAKC,UAAW,CAAtC,EALV,YA8BC,SAASkF,EAAQC,EAAU,QAC5BqT,GACL,KACAtT,EACAC,EACA,OACS,GALJ,UAeD,SAASsT,EAAY,MAEtB7D,KAAK8D,YAAYD,EAAWE,IAAjC,OACK7D,cAAc7K,OAAO,KAAK6K,cAAcnL,QAAQ8O,CAA3B,EAAwC,CAAlE,MACM1N,EAAQ,OACP2I,MAAM,UAAW,GAChB4C,SAAN,EADF,WAUO,UAAW,IACd,KAAKhB,aACD,IAAItR,MACR,4GADI,EAMJ,KAAKmR,cACYuD,YAAY,KAAKrT,UAApC,MAGI0F,EAAQ,OACPjL,KAAK,KAAK+U,UAAW,SAAS+D,EAAW,GACxCC,aAAaD,CAAnB,EADF,IAIIxK,OAAOhG,OAAQ,UAAWuM,GAAI2D,gBAAiB,EAAnD,KAEgB,IAAhB,aAWS,SAASnC,EAAM,IAGpB,KAAKtB,UAAUsB,CAAf,IAAyB1U,aACrB,IAAIuC,MAAM,sDACFmS,EAAO,GADf,MAIF2C,EAAe,CAAE3C,KAAMA,EAAMb,OAAQ,IAAtB,IAKRH,UAAY,KAAKA,UAG1B,KAAKC,WACFA,KAAK2D,cACL3D,KAAK2D,QAAQ5C,CAAlB,MAEaC,OAAS,KAAKhB,KAAK2D,QAAQ5C,CAAlB,EAAwBC,SAGjChB,KAAO,KAAKA,KAAK2D,QAAQ5C,CAAlB,OAGhB+B,EAAM,IAAIvD,GAAImE,CAAR,OACPjE,UAAUsB,CAAf,EAAuB+B,MAEjBc,EAAK1B,GAAO,KAAMY,EAAI7S,UAAjB,WACPyJ,SAASkK,EAAI,QAAjB,EACOd,gBAQK,SAASe,EAAQ,MACxBrE,KAAK8D,YAAYO,EAAO5T,WAAW6T,aAAxC,SAEO,KAAKrE,UAAUoE,EAAO9C,IAAtB,EAGH,KAAKf,WACFA,KAAK2D,cACL3D,KAAK2D,QAAQE,EAAO9C,IAAzB,UACO,KAAKf,KAAK2D,QAAQE,EAAO9C,IAAzB,KAGO8C,CAAhB,MAEMlO,EAAQ,OAEPjL,KAAKmZ,EAAOpE,UAAW,SAAS+D,EAAW,GACzCC,aAAaD,CAApB,EADF,IAIOlF,MAAM,UAAW,GAChB4C,SAAN,EADF,QAQI,UAAW,MACVF,OAAS,UAMT,UAAW,MACXA,OAAS,SAMV,UAAW,MACV/Q,WAAWmB,MAAM8M,QAAU,aAM5B,UAAW,MACVjO,WAAWmB,MAAM8M,QAAU,aAIxB,UAAW,KAEb0E,EAAO,KAAK/B,QAAL,KACT+B,EAAKvC,WAAY,KACbrO,EAAMf,EAAI8S,UAAUnB,EAAKpD,IAAnB,EAAyBxN,IACjCrI,EAAI,IAEDe,KAAKkY,EAAKpD,KAAKsC,WAAY,SAASkC,EAAM,CACzCpB,EAAK7C,WAAaiE,IAASpB,EAAKqB,gBAC/BhT,EAAIyN,UAAUsF,CAAd,GAFT,EAMIhR,OAAOyL,YAAczM,EAAM+M,GAAsBpV,KAC/C+P,SAASkJ,EAAK3S,WAAYsP,GAAIyD,cAAlC,IACKxD,KAAKpO,MAAM6D,OAASjC,OAAOyL,YAAczM,EAAM+M,GAAsB,SAEtE9D,YAAY2H,EAAK3S,WAAYsP,GAAIyD,cAArC,IACKxD,KAAKpO,MAAM6D,OAAS,QAIzB2N,EAAKsB,mBACA5F,MAAM,UAAW,GACjB4F,gBAAgB9S,MAAM6D,OAAS2N,EAAKpD,KAAK2E,aAAe,KAD/D,EAKEvB,EAAKzB,kBACFA,cAAc/P,MAAM4D,MAAQ4N,EAAK5N,MAAQ,yBAI/BrI,EAAOyX,SAAS,UAAW,MAAOlD,SAAL,GAAoB,EAAjD,WAYT,UAAW,IACfvU,EAAOzB,YAAYiU,EAAnB,OACc,IAAItB,MACN5N,WAAW0G,UAAY0N,IAGnC,KAAKnE,aACD,IAAItR,MAAM,gDAAV,MAGF+G,EAAQ,OAEPjL,KAAKP,MAAMC,UAAUG,MAAMI,KAAKC,SAA3B,EAAuC,SAASkF,EAAQ,CAC9D6F,EAAMgK,oBAAoB1V,SAAW,MAC3B0L,CAAZ,EAEEA,EAAMgK,oBAAoBpL,QAAQzE,CAAlC,IAA8C,MAC1C6P,oBAAoBnL,KAAK1E,CAA/B,EALJ,EASI,KAAKiQ,cAEE,KAAM,KAAK/K,KAApB,WAQK,UAAW,SACd8N,EAAM,KACHA,EAAI5C,UACH4C,EAAI5C,cAEL4C,iBAQM,UAAW,KAClB1V,EAAW,KAAK4S,cACbgB,OAAS,KAAKA,OAGnB,KAAKrB,oBAAoB1V,OAAS,MAC3BgW,OAAS,KAAKA,OAElB7S,EAASkX,eACHA,WAAa,CAAA,KAGfA,WAAW,KAAKrE,MAAzB,EAAmCsE,GAAiB,IAAjB,KAG5BZ,QAAU,CAAA,IACZjZ,KAAK,KAAK+U,UAAW,SAAShJ,EAASxL,EAAK,GACxC0Y,QAAQ1Y,CAAjB,EAAwBwL,EAAQgM,cAAR,EAD1B,EAIOrV,QAGH,UAAW,CACV,KAAK4S,KAAKsE,kBACRtE,KAAKsE,WAAa,CAAA,QAGpBtE,KAAKsE,WAAW,KAAKrE,MAA1B,EAAoCsE,GAAiB,IAAjB,KACjB,KAAM,EAAzB,OACK7B,6BAAL,UAGM,SAAS8B,EAAY,CACtB,KAAKxE,KAAKsE,kBAERtE,KAAKsE,WAAa,CAAA,OAClBtE,KAAKsE,WAAWtF,EAArB,EAAoDuF,GAAiB,KAAM,EAAvB,QAGjDvE,KAAKsE,WAAWE,CAArB,EAAmCD,GAAiB,IAAjB,OAC9BtE,OAASuE,KACE,KAAMA,EAAY,EAAlC,OACK9B,6BAAL,UAGM,SAASI,EAAK,GACbpY,KAAK,KAAKgV,cAAe,SAAS2D,EAAY,CAE9C,KAAKxC,QAAL,EAAeb,KAAKsE,cAGNxB,GAAO,KAAKjC,QAAL,EAAgBwC,CAAxC,IAFWpN,SAASoN,EAAWrT,YAA/B,EAMEqT,EAAWhT,oBACFA,iBAAiB1F,KAAK0Y,EAAYA,EAAW7S,SAAX,CAA7C,GAED,IAZH,IAcO9F,KAAK,KAAK+U,UAAW,SAASoE,EAAQ,GACpC/C,OAAO+C,CAAd,EADF,EAIKf,MACgB,KAAKjC,QAAL,EAAgB,EAAnC,UAII,SAASwC,EAAY,KACrBnQ,EAAO,KAAK2M,YAAY5V,SAAW,OACpC4V,YAAYrL,KAAK6O,CAAtB,EACInQ,MACa,KAAK2M,WAApB,iBAIW,UAAW,GACjBnV,KAAK,KAAKgV,cAAe,SAAS2D,EAAY,GACxC9S,cAAX,EADF,IAGO7F,KAAK,KAAK+U,UAAW,SAASoE,EAAQ,GACpCtT,cAAP,EADF,GAjYN,EAiZA,SAAS2R,GAAOY,EAAK2B,EAAQC,EAAU,KAC/Bd,EAAK1T,SAASC,cAAc,IAAvB,SACPsU,KACCvO,YAAYuO,CAAf,EAGEC,IACElF,KAAKqC,aAAa+B,EAAIc,CAA1B,IAEIlF,KAAKtJ,YAAY0N,CAArB,IAEE1C,SAAJ,EACO0C,EAGT,SAASe,GAAgB7B,EAAK,GACxB9J,OAAOhG,OAAQ,SAAU8P,EAAIR,eAAjC,EAEIQ,EAAIJ,gCACF1J,OAAOhG,OAAQ,SAAU8P,EAAIJ,4BAAjC,EAIJ,SAASkC,GAAmB9B,EAAK+B,EAAU,KACnCnO,EAAMoM,EAAIgC,gBAAgBhC,EAAIgC,gBAAgBjO,aAAxC,EAERgO,IACElO,UAAYD,EAAIhI,MAAQ,MAExBiI,UAAYD,EAAIhI,MAIxB,SAASqW,GAAkBjC,EAAKc,EAAIP,EAAY,MACnCE,KAAOK,IACPoB,MAAQlC,IAEZtT,OAAO6T,EAA+C,SAKlD,SAAS/M,EAAS,IACrB1L,UAAUX,OAAS,EAAG,KAClBgb,EAAc5B,EAAWE,KAAK2B,4BACzBC,OAAX,EAEO/B,GACLN,EACAO,EAAWvT,OACXuT,EAAWtT,SACX,QACUkV,cACK,CAACtY,EAAOP,QAAQxB,SAAf,CAAD,EANV,KAWL+B,EAAOJ,QAAQ+J,CAAf,GAA2B3J,EAAO5B,SAASuL,CAAhB,EAA0B,KACjD2O,EAAc5B,EAAWE,KAAK2B,4BACzBC,OAAX,EAEO/B,GACLN,EACAO,EAAWvT,OACXuT,EAAWtT,SACX,QACUkV,cACK,CAAC3O,CAAD,EANV,SAiBL,SAASyK,EAAM,UACRwC,KAAK6B,kBAAkBA,kBAAkBzO,UAAYoK,EACzDsC,UAOD,UAAW,UACN2B,MAAMK,OAAOhC,CAAxB,EACOA,UAOD,UAAW,UACN2B,MAAMG,OAAO9B,CAAxB,EACOA,GA9DX,EAmEIA,aAAsB/J,GAAwB,KAC1CgM,EAAM,IAAI9M,GAAoB6K,EAAWvT,OAAQuT,EAAWtT,SAChE,CAAE3B,IAAKiV,EAAW9L,MAAOlJ,IAAKgV,EAAW7L,MAAOE,KAAM2L,EAAW5L,MAAjE,CADU,IAGL/M,KAAK,CAAC,gBAAiB,WAAY,iBAAkB,OAAQ,MAAO,KAA/D,EAAuE,SAAS6a,EAAQ,KAC5FC,EAAKnC,EAAWkC,CAAX,EACLE,EAAKH,EAAIC,CAAJ,IACAA,CAAX,EAAqBD,EAAIC,CAAJ,EAAc,UAAW,KACtCla,EAAOlB,MAAMC,UAAUG,MAAMI,KAAKC,SAA3B,WACVW,MAAM+Z,EAAKja,CAAd,EACOma,EAAGja,MAAM8X,EAAYhY,CAArB,GANX,IAUIqO,SAASkK,EAAI,YAAjB,IACW3T,WAAW4R,aAAayD,EAAIrV,WAAYoT,EAAWpT,WAAWmV,iBAAzE,UACS/B,aAAsB7K,GAAqB,KAC9CnP,EAAI,SAASqc,EAAU,IAEvB/Y,EAAOO,SAASmW,EAAW9L,KAA3B,GAAqC5K,EAAOO,SAASmW,EAAW7L,KAA3B,EAAmC,KAIpEmO,EAAUtC,EAAWE,KAAK6B,kBAAkBA,kBAAkBzO,UAC9DiP,EAAevC,EAAW2B,MAAMnF,YAAYtL,QAAQ8O,CAArC,EAAmD,KAE7D8B,OAAX,MACMU,EAAgBzC,GACpBN,EACAO,EAAWvT,OACXuT,EAAWtT,SACX,QACUsT,EAAWE,KAAK2B,+BACX,CAAC7B,EAAW9L,MAAO8L,EAAW7L,MAAO6L,EAAW5L,MAAhD,EANK,WAURsJ,KAAK4E,CAAnB,EACIC,GAAcC,EAAcR,OAAd,EAEXQ,SAGFH,KAGEtX,IAAMzB,EAAOmZ,QAAQzc,EAAGga,EAAWjV,GAA7B,IACNC,IAAM1B,EAAOmZ,QAAQzc,EAAGga,EAAWhV,GAA7B,OACRgV,aAAsB3N,MAC3BvK,KAAKyY,EAAI,QAAS,UAAW,GAC3BmC,UAAU1C,EAAWvN,WAAY,OAArC,EADF,IAII3K,KAAKkY,EAAWvN,WAAY,QAAS,SAASlF,EAAG,GACjDoV,gBAAF,EADF,GAGS3C,aAAsBnJ,MAC3B/O,KAAKyY,EAAI,QAAS,UAAW,GAC3BmC,UAAU1C,EAAWjJ,SAAU,OAAnC,EADF,IAIIjP,KAAKyY,EAAI,YAAa,UAAW,GAC/BlK,SAAS2J,EAAWjJ,SAAU,OAAlC,EADF,IAIIjP,KAAKyY,EAAI,WAAY,UAAW,GAC9B3I,YAAYoI,EAAWjJ,SAAU,OAArC,EADF,GAGSiJ,aAAsB/I,OAC3BZ,SAASkK,EAAI,OAAjB,IACWrT,cAAgB5D,EAAOmZ,QAAQ,SAAS/U,EAAK,UACnDK,MAAM6U,gBAAkB5C,EAAW9I,QAAQnR,SAAnB,EACpB2H,GACNsS,EAAW9S,aAHa,IAKhBA,cAAX,KAGS0F,SAAWtJ,EAAOmZ,QAAQ,SAAS/U,EAAK,QAC7C+R,EAAIjC,QAAJ,EAAciE,iBAAmBzB,EAAW6C,WAAX,MAChBpD,EAAIjC,QAAJ,EAAe,EAAlC,EAGK9P,GACNsS,EAAWpN,QANQ,EASxB,SAASkQ,GAAiBrD,EAAKO,EAAY,KAEnCT,EAAOE,EAAIjC,QAAJ,EAIPuF,EAAexD,EAAKjD,oBAAoBpL,QAAQ8O,EAAWvT,MAA5C,KAGjBsW,IAAiB,GAAI,KAEnBC,EAAgBzD,EAAKhD,uCAAuCwG,CAA5C,KAIhBC,IAAkBha,WACJ,CAAA,IACXuT,uCAAuCwG,CAA5C,EACEC,KAIUhD,EAAWtT,QAAzB,EAAqCsT,EAGjCT,EAAK5C,MAAQ4C,EAAK5C,KAAKsE,WAAY,KAC/BgC,EAAY1D,EAAK5C,KAAKsE,WAGxBrE,EAAAA,UAEAqG,EAAUxD,EAAI7C,MAAd,IACOqG,EAAUxD,EAAI7C,MAAd,UACAqG,EAAUtH,EAAV,IAEAsH,EAAUtH,EAAV,iBAOPiB,EAAOmG,CAAP,GAAwBnG,EAAOmG,CAAP,EAAqB/C,EAAWtT,QAAhC,IAA8C1D,OAAW,KAE7EqC,EAAQuR,EAAOmG,CAAP,EAAqB/C,EAAWtT,QAAhC,IAGHC,aAAetB,IACfuH,SAASvH,CAApB,KAMR,SAAS0U,GAAIN,EAAKhT,EAAQC,EAAUsC,EAAQ,IACtCvC,EAAOC,CAAP,IAAqB1D,aACjB,IAAIuC,MAAJ,WAAqBkB,EAArB,sBAAiDC,EAAjD,GAAA,MAGJsT,EAAAA,UAEAhR,EAAOtJ,QACI,IAAIuR,GAAgBxK,EAAQC,CAA5B,MACR,KACCwW,EAAc,CAACzW,EAAQC,CAAT,EAAmByW,OAAOnU,EAAOkU,WAAjC,IACPpJ,GAAkB5R,MAAMuX,EAAKyD,CAA7B,EAGXlU,EAAOoU,kBAAkB5W,OACpB4W,OAASpU,EAAOoU,OAAOlD,SAGfT,EAAKO,CAAtB,IAEI3J,SAAS2J,EAAWpT,WAAY,GAApC,MAEM8Q,EAAO7Q,SAASC,cAAc,MAAvB,IACTuJ,SAASqH,EAAM,eAAnB,IACKpK,UAAY0M,EAAWtT,aAEtB2W,EAAYxW,SAASC,cAAc,KAAvB,IACR+F,YAAY6K,CAAtB,IACU7K,YAAYmN,EAAWpT,UAAjC,MAEM2T,EAAK1B,GAAOY,EAAK4D,EAAWrU,EAAOoU,MAA9B,WAEP/M,SAASkK,EAAIrE,GAAIwD,oBAArB,EACIM,aAAsB/I,KACpBZ,SAASkK,EAAI,OAAjB,IAEIlK,SAASkK,EAAb+C,GAAwBtD,EAAW7S,SAAX,CAAxB,CAAA,KAGgBsS,EAAKc,EAAIP,CAA3B,IAEI3D,cAAclL,KAAK6O,CAAvB,EAEOA,EAGT,SAAS7C,GAAoBsC,EAAK7X,EAAK,QAE9BiF,SAAS0W,SAASnR,KAAO,IAAMxK,EAGxC,SAAS4b,GAAgB/D,EAAK/B,EAAM+F,EAAa,KACzCpQ,EAAMxG,SAASC,cAAc,QAAvB,IACRwG,UAAYoK,IACZrS,MAAQqS,IACR+D,gBAAgB5O,YAAYQ,CAAhC,EACIoQ,MACEhC,gBAAgBjO,cAAgBiM,EAAIgC,gBAAgB7a,OAAS,GAIrE,SAAS8c,GAAgBjE,EAAKkE,EAAS,GAC7B5V,MAAM8M,QAAU4E,EAAIxC,gBAAkB,QAAU,OAG1D,SAAS2G,GAAYnE,EAAK,KAClBoE,EAAMpE,EAAImB,WAAa/T,SAASC,cAAc,IAAvB,IAEzBuJ,SAASoJ,EAAI7S,WAAY,UAA7B,IAEIuP,KAAKqC,aAAaqF,EAAKpE,EAAItD,KAAK2H,UAApC,IAEIzN,SAASwN,EAAK,UAAlB,MAEME,EAAQlX,SAASC,cAAc,MAAvB,IACRwG,UAAY,WACd+C,SAAS0N,EAAO,cAApB,MAGMC,EAASnX,SAASC,cAAc,MAAvB,IACRwG,UAAY,SACf+C,SAAS2N,EAAQ,QAArB,IACI3N,SAAS2N,EAAQ,MAArB,MAEMC,EAAUpX,SAASC,cAAc,MAAvB,IACRwG,UAAY,QAChB+C,SAAS4N,EAAS,QAAtB,IACI5N,SAAS4N,EAAS,SAAtB,MAEMC,EAAUrX,SAASC,cAAc,MAAvB,IACRwG,UAAY,WAChB+C,SAAS6N,EAAS,QAAtB,IACI7N,SAAS6N,EAAS,QAAtB,MAEMC,EAAS1E,EAAIgC,gBAAkB5U,SAASC,cAAc,QAAvB,KAEjC2S,EAAI9C,MAAQ8C,EAAI9C,KAAKsE,aAChB5Z,KAAKoY,EAAI9C,KAAKsE,WAAY,SAAS5V,EAAOzD,EAAK,IACpC6X,EAAK7X,EAAKA,IAAQ6X,EAAI7C,MAAtC,EADF,KAIgB6C,EAAK9D,GAA6B,EAAlD,IAGE7T,KAAKqc,EAAQ,SAAU,UAAW,SAC3B5S,EAAQ,EAAGA,EAAQkO,EAAIgC,gBAAgB7a,OAAQ2K,MAClDkQ,gBAAgBlQ,CAApB,EAA2B+B,UAAYmM,EAAIgC,gBAAgBlQ,CAApB,EAA2BlG,QAGhEuR,OAAS,KAAKvR,MALpB,IAQIwH,YAAYsR,CAAhB,IACItR,YAAYkR,CAAhB,IACIlR,YAAYmR,CAAhB,IACInR,YAAYoR,CAAhB,IACIpR,YAAYqR,CAAhB,EAEItI,GAAwB,KACpB+H,EAAU9W,SAASuX,eAAe,kBAAxB,EACVC,EAAuBxX,SAASuX,eAAe,kBAAxB,EACvBE,EAAczX,SAASuX,eAAe,iBAAxB,IAERrW,MAAM8M,QAAU,QAExBgB,aAAaqB,QAAQC,GAAoBsC,EAAK,SAAzB,CAArB,IAA8D,UAC3C/M,aAAa,UAAW,SAA7C,KAGc+M,EAAKkE,CAArB,IAGI7b,KAAKuc,EAAsB,SAAU,UAAW,GAC9CpH,gBAAkB,CAACwC,EAAIxC,mBACXwC,EAAKkE,CAArB,EAFF,MAMIY,EAAyB1X,SAASuX,eAAe,oBAAxB,IAE3Btc,KAAKyc,EAAwB,UAAW,SAAShX,EAAG,CAClDA,EAAE6C,UAAY7C,EAAEuS,QAAU,IAAMvS,EAAE8C,UAAY,QAClCuK,KAAd,EAFJ,IAMI9S,KAAKic,EAAO,QAAS,UAAW,GACXzQ,UAAY8K,KAAKe,UAAUM,EAAIL,cAAJ,EAAqBpW,OAAW,CAA/C,KACrBwb,KAAd,IACuBC,MAAvB,IACuBN,OAAvB,EAJF,IAOIrc,KAAKkc,EAAQ,QAAS,UAAW,GAC/BU,KAAJ,EADF,IAII5c,KAAKmc,EAAS,QAAS,UAAW,KAC9B9C,EAAawD,OAAO,0BAAP,EACfxD,KACEyD,OAAOzD,CAAX,EAHJ,IAOIrZ,KAAKoc,EAAS,QAAS,UAAW,GAChCzG,OAAJ,EADF,EAOF,SAASoH,GAAgBpF,EAAK,KACxBqF,EAAAA,SAEAjE,gBAAkBhU,SAASC,cAAc,KAAvB,IAEfX,OAAOsT,EAAIoB,gBAAgB9S,MAAO,OAEhC,iBACK,cACJ,eACA,qBACE,WANZ,WAWSgX,EAAKxX,EAAG,UACb+I,eAAF,IAEI3E,OAASmT,EAAUvX,EAAE6B,UACrByO,SAAJ,IACUtQ,EAAE6B,QAEL,YAGA4V,GAAW,GACdpN,YAAY6H,EAAI3B,cAAe5B,GAAI0D,UAAvC,IACIjK,OAAOhG,OAAQ,YAAaoV,CAAhC,IACIpP,OAAOhG,OAAQ,UAAWqV,CAA9B,WAGOC,EAAU1X,EAAG,UAClB+I,eAAF,IAEU/I,EAAE6B,UAERiH,SAASoJ,EAAI3B,cAAe5B,GAAI0D,UAApC,IACI9X,KAAK6H,OAAQ,YAAaoV,CAA9B,IACIjd,KAAK6H,OAAQ,UAAWqV,CAA5B,EAEO,KAGLld,KAAK2X,EAAIoB,gBAAiB,YAAaoE,CAA3C,IACInd,KAAK2X,EAAI3B,cAAe,YAAamH,CAAzC,IAEIrY,WAAW4R,aAAaiB,EAAIoB,gBAAiBpB,EAAI7S,WAAWmV,iBAAhE,EAGF,SAASmD,GAASzF,EAAK0F,EAAG,GACpBvY,WAAWmB,MAAM4D,MAAQwT,EAAI,KAG7B1F,EAAImB,YAAcnB,EAAI/C,cACpBkE,WAAW7S,MAAM4D,MAAQwT,EAAI,MAE/B1F,EAAI3B,kBACFA,cAAc/P,MAAM4D,MAAQwT,EAAI,MAIxC,SAASjE,GAAiBzB,EAAK2F,EAAkB,KACzCrb,EAAW,CAAA,WAGV1C,KAAKoY,EAAInD,oBAAqB,SAAS5O,EAAK6D,EAAO,KAClD8T,EAAc,CAAA,EAGdrC,EACJvD,EAAIlD,uCAAuChL,CAA3C,IAGKlK,KAAK2b,EAAe,SAAShD,EAAYtT,EAAU,GAC5CA,CAAZ,EAAwB0Y,EAAmBpF,EAAWrT,aAAeqT,EAAW7S,SAAX,EADvE,IAKSoE,CAAT,EAAkB8T,EAbpB,EAgBOtb,EAGT,SAASub,GAAqB7F,EAAK,SACxBlO,EAAQ,EAAGA,EAAQkO,EAAIgC,gBAAgB7a,OAAQ2K,IAClDkO,EAAIgC,gBAAgBlQ,CAApB,EAA2BlG,QAAUoU,EAAI7C,WACvC6E,gBAAgBjO,cAAgBjC,GAK1C,SAASgU,GAAeC,EAAiB,CACnCA,EAAgB5e,SAAW,MACPU,KAAKqI,OAAQ,UAAW,IAC7B6V,CAAf,EADF,IAKKne,KAAKme,EAAiB,SAAS1a,EAAG,GACrCoC,cAAF,EADF,ECx0CK,IAAMuY,GAAMC,GC9BZ,SAASC,GAAmBC,EAA2C,CAC5E,MAAO,CAACA,EAAM,YAAaA,EAAM,cAAc,CAAC,CAAC,CACnD,CAEO,IAAMC,GAAoB,CAACD,EAAcE,IAC9CA,EAAa,oBAAsBF,EAAM,2BCxB3C,IAAMG,GAAkB,KAElBC,GAAmB,EACnBC,GAAoBF,GAAkBC,GAO/BE,GAAuB,IAAM,YAAY,IAAI,EAE7CC,GAA2BC,GAC1BF,GAAqB,EACpBE,EAQFC,GAAN,KAAkB,CACf,kBAAoB,GACX,mBACA,UACA,sBACA,cAET,mBAA6D,CAAC,EAEtE,IAAI,SAAU,CACZ,OAAO,KAAK,mBAAqB,KAAK,kBACxC,CAEA,YAAYC,EAAmB,CAE7B,GADA,KAAK,mBAAqBA,EAAO,SAAS,IAAI,iBAAiB,EAC3D,CAAC,KAAK,mBAAoB,CAE5B,KAAK,UAAY,OACjB,KAAK,sBAAwB,OAC7B,KAAK,cAAgB,OACrB,MACF,CAEA,KAAK,UAAYA,EAAO,eAAe,CACrC,KAAM,YACN,MAAOL,EACT,CAAC,EAED,KAAK,sBAAwBK,EAAO,aAAa,CAC/C,MAAO,uBACP,KAAM,KAAK,UAAU,MAAQC,GAC7B,MAAO,eAAe,cAAgB,eAAe,QACvD,CAAC,EACD,KAAK,cAAgBD,EAAO,aAAa,CACvC,MAAO,mBACP,KAAM,KAAK,sBAAsB,KACjC,MAAO,eAAe,SAAW,eAAe,QAClD,CAAC,CACH,CAEA,iBAAiBE,EAAkB,CACjC,KAAK,kBAAoBA,CAC3B,CAEA,YAAa,CACX,KAAO,KAAK,mBAAmB,OAAS,GACtC,KAAK,mBAAmB,IAAI,CAEhC,CAEA,SAASC,EAA2B,CAClC,GAAI,CAAC,KAAK,QACR,OAGF,IAAMC,EAAa,KAAK,mBAAmB,OAASV,GACpDS,EAAO,gBACL,KAAK,UACL,EACAC,EACA,KAAK,sBACL,CACF,EACI,KAAK,cAAc,WAAa,YAClCD,EAAO,mBACL,KAAK,sBACL,EACA,KAAK,cACL,EACA,KAAK,cAAc,IACrB,CAEJ,CAEA,MAAM,4BAA4BE,EAA2C,CAC3E,GAAI,CAAC,KAAK,SAAW,KAAK,mBAAmB,QAAU,EAAG,CACxD,KAAK,kBAAoB,GACzB,MACF,CAEA,KAAK,kBAAoB,GACzB,IAAMC,EAAa,KAAK,mBAAmB,MAAM,EAEjD,GAAI,KAAK,cAAc,WAAa,WAAY,CAC9C,MAAM,KAAK,cAAc,SAAS,WAAW,IAAI,EACjD,IAAMC,EAAQ,IAAI,cAAc,KAAK,cAAc,eAAe,CAAC,EAC7DC,EAASF,EAAW,IACxB,CAAC,CAACG,EAAMC,EAAMC,CAAO,EAAGC,IAA+B,CACrD,IAAIC,EAAO,EACX,GAAIH,IAAS,MAAO,CAClB,IAAMZ,EAAQS,EAAMK,EAAMlB,EAAgB,EACpCoB,EAAMP,EAAMK,EAAMlB,GAAmB,CAAC,EAC5CmB,EAAO,OAAOC,EAAMhB,CAAK,EAAIiB,EAC/B,MACEF,EAAOF,EAET,MAAO,CAACF,EAAMI,CAAI,CACpB,CACF,EACA,KAAK,cAAc,MAAM,EAEzBR,IAAWG,CAAM,CACnB,CACF,CAGA,eAAeC,EAAwD,CACrE,GAAI,CAAC,KAAK,QACR,OAGF,IAAMO,EAAU,KAAK,mBAAmB,OACxC,YAAK,mBAAmB,KAAK,CAACP,EAAM,MAAO,CAAC,CAAC,EAEtC,CACL,SAAU,KAAK,UACf,0BAA2BO,EAAUtB,GACrC,oBAAqBsB,EAAUtB,GAAmB,CACpD,CACF,CAyBA,eAAee,EAAgC,CAC7C,GAAI,CAAC,KAAK,QACR,OAGF,IAAMO,EAAU,KAAK,mBAAmB,OAClCC,EAAM,YAAY,IAAI,EAC5B,YAAK,mBAAmB,KAAK,CAACR,EAAM,MAAOQ,CAAG,CAAC,EACxCD,CACT,CAEA,aAAaE,EAAyB,CACpC,GAAI,CAAC,KAAK,SAAWA,IAAU,OAAW,OAE1C,IAAMC,EAAK,KAAK,mBAAmBD,CAAK,EACxC,GAAIC,EAAI,CACN,GAAM,CAACC,EAAGC,EAAIvB,CAAK,EAAIqB,EACvBA,EAAG,CAAC,EAAItB,GAAwBC,CAAK,CACvC,CACF,CACF,EC/KA,IAAMwB,GAAiB,CACrB,IAAK,CAAE,UAAW,EAAK,EACvB,GAAI,CAAE,UAAW,EAAK,EACtB,gBAAiB,CAAC,EAClB,aAAc,CAAC,EAEf,GAAI,CAAE,aAAc,QAAS,EAC7B,eAAgB,CAAC,EACjB,gBAAiB,CAAE,iBAAkB,KAAM,EAC3C,gBAAiB,CAAE,iBAAkB,KAAM,EAC3C,kBAAmB,CAAE,iBAAkB,KAAM,EAC7C,kBAAmB,CAAE,iBAAkB,KAAM,EAC7C,iBAAkB,CAAE,iBAAkB,KAAM,EAE5C,GAAI,CAAE,aAAc,UAAW,EAC/B,cAAiB,CAAC,EAClB,iBAAkB,CAAC,EACnB,kBAAmB,CAAC,EACpB,qBAAsB,CAAE,iBAAkB,KAAM,EAChD,oBAAqB,CAAC,EACtB,qBAAsB,CAAC,EACvB,wBAAyB,CAAE,iBAAkB,KAAM,EACnD,yBAA0B,CAAE,iBAAkB,KAAM,EACpD,wBAAyB,CAAE,iBAAkB,KAAM,EACnD,yBAA0B,CAAE,iBAAkB,KAAM,CACtD,EAGMC,GAAkB,IAClBC,GAAiB,IAEjBC,GAAN,KAAY,CAEF,OAA4C,CAAC,EAC7C,mBAAsD,CAAC,EAEvD,WAAqB,EACtB,YAAc,EACb,kBAAwC,OAExC,SACA,cAAwB,EAEhC,aAAc,CAER,QAAU,OAAO,UACnB,KAAK,SAAW,OAAO,SAAS,eAAe,cAAc,EAC7D,KAAK,WAAaC,GAAqB,EACvC,KAAK,cAAgB,KAAK,YAE1B,KAAK,SAAW,MAEpB,CAEA,OAAOC,EAAgBC,EAAmB,CACxC,KAAK,OAAOD,CAAI,EAAIC,CACtB,CAEA,KAAO,IAAMC,GAAW,KAAK,QAAQ,EAErC,aAAe,IAAM,CACnB,KAAK,WAAaH,GAAqB,CACzC,EAEA,WAAa,IAAM,CACjB,IAAMI,EAAWJ,GAAqB,EACtC,KAAK,YAAcI,EAAW,KAAK,WAE/B,KAAK,oBAAsB,OAC7B,KAAK,kBAAoB,KAAK,YAG9B,KAAK,kBACH,KAAK,kBAAoBP,GACzB,KAAK,aAAe,EAAMA,IAG9B,IAAMQ,EAAO,EAAM,KAAK,YAAe,IACvC,KAAK,OAAO,MAAO,GAAGA,EAAI,QAAQ,CAAC,CAAC,MAAM,EAC1C,KAAK,OAAO,KAAM,GAAG,KAAK,YAAY,QAAQ,CAAC,CAAC,IAAI,EAEhDD,EAAW,KAAK,cAAgBN,KAClC,KAAK,cAAgBM,EACrB,WAAW,KAAK,YAAa,CAAC,EAElC,EAEQ,YAAc,IAAM,CAC1B,IAAME,EAAkC,MAAM,KAC5C,KAAK,SAAS,QAEhB,EAEA,OAAO,QAAQV,EAAc,EAAE,QAAQ,CAAC,CAACW,EAAOC,CAAI,IAAM,CAExD,IAAMP,EAAiBM,EACjBE,EAAK,KAAK,eAAeH,EAAkBL,EAAMO,CAAI,EAE3D,GAAIA,EAAK,aAAc,CACjBC,EAAG,cAAgBD,EAAK,eAC1BC,EAAG,UAAYD,EAAK,cACtBC,EAAG,UAAU,IAAI,qBAAqB,EACtC,MACF,CAGA,GAAI,CAAC,KAAK,gBAAgBD,EAAMC,CAAE,EAAG,OAGrC,IAAMP,EAAQ,KAAK,OAAOD,CAAI,EACxBS,EAAa,KAAK,mBAAmBT,CAAI,EAE/C,GAAIC,GAASQ,EAAY,OAEzB,IAAIC,EAAO,GAAGV,CAAI,KAAKC,CAAK,GACxBM,EAAK,YACPG,EAAO,OAAOT,CAAK,GAErBO,EAAG,UAAYE,CACjB,CAAC,EAED,KAAK,mBAAqB,CAAE,GAAG,KAAK,MAAO,CAC7C,EAEQ,eAAiB,CACvBC,EACAX,EACAO,IACgB,CAChB,IAAMK,EAAa,kBAEnB,GAAIL,EAAK,GAAI,OAAOA,EAAK,GACzB,IAAIC,EAAKG,EAAI,KACVH,GAAoBA,EAAG,aAAaI,CAAU,IAAMZ,CACvD,EAEA,OAAKQ,IACHA,EAAK,SAAS,cAAc,GAAG,EAC/BA,EAAG,aAAaI,EAAYZ,CAAI,EAChC,KAAK,SAAS,YAAYQ,CAAE,GAE9BD,EAAK,GAAKC,EACHA,CACT,EAEQ,gBAAgBD,EAAgBC,EAAiB,CACvD,GAAI,CAACD,EAAK,iBAAkB,MAAO,GAEnC,IAAMM,EACJN,EAAK,mBAAqBO,EAAO,OAAO,OAAO,aACjD,YAAK,aAAaN,EAAIK,CAAW,EAC1BA,CACT,CAEA,aAAaL,EAAiBK,EAAsB,CAC9CA,GAAe,CAACE,GAAgBP,CAAE,IAEpCN,GAAWM,CAAE,EACb,KAAK,mBAAqB,CAAC,GAEzB,CAACK,GAAeE,GAAgBP,CAAE,IAEpCQ,GAAWR,CAAE,EACb,KAAK,mBAAqB,CAAC,EAE/B,CACF,EAEaS,GAAQ,IAAInB,GC/KlB,IAAMoB,GAAc,CAACC,EAAiBC,EAAO,KAClD,GAAGD,EAAK,IAAI,GAAGC,EAAO,IAAMA,EAAO,EAAE,GAE1BC,GAAeF,GAAoB,GAAGA,EAAK,IAAI,UAC/CG,GAAgB,CAACH,EAAiBC,EAAO,KACpD,GAAGF,GAAYC,EAAMC,CAAI,CAAC,YACfG,GAAuB,CAACJ,EAAiBC,EAAO,KAC3D,GAAGF,GAAYC,EAAMC,CAAI,CAAC,YAEfI,GAAoB,IAC/BC,EAAO,yBAA2BA,EAAO,cAAgBA,EAAO,WAErDC,GAAsD,CACjE,SAAUD,EAAO,OAAO,OAAO,0BAA4B,OAAS,OACpE,SAAU,gBACV,iBAAkB,MACpB,EAEaE,GAAkD,CAC7D,kBAAmB,GACnB,aAAc,OACd,OAAQC,EACV,EAEaC,GAA6B,CACxCV,EACAC,EACAU,EACAC,EACAC,IACG,CACH,IAAMC,EAAiBF,EAAS,mBAAmB,CAAC,EACpD,OAAOD,EAAO,gBAAgB,CAC5B,MAAOP,GAAqBJ,EAAMC,CAAI,EACtC,OAAQa,EACR,QAAAD,CACF,CAAC,CACH,EAEaE,GAA4B,CACvCf,EACAW,EACAC,EACAC,IAEOH,GAA2BV,EAAM,GAAIW,EAAQC,EAAUC,CAAO,EAG1DG,GAAqB,CAChCC,EACAC,EACAC,EAAoB,WACc,CAClC,KAAMF,EACN,OAAAE,EACA,QAAS,QACT,WAAY,CACVD,EAAW,CAAC,EACZA,EAAW,CAAC,EACZA,EAAW,CAAC,EACZA,EAAW,CAAC,IAAM,OAAY,EAAIA,EAAW,CAAC,CAChD,CACF,GAEaE,GAA4B,CACvCC,EACAC,EAAyB,WACgB,CACzC,KAAMD,EACN,gBAAiB,EACjB,YAAAC,EACA,aAAc,OAChB,GAEaC,GAAN,KAAoB,CACjB,MAAkD,CAAC,EAE3D,YAAYC,EAAaC,EAA2C,CAClE,IAAMC,EAAY,KAAK,MAAMF,CAAG,EAChC,GAAIE,EACF,OAAOA,EAGT,IAAMC,EAAMF,EAAQ,EACpB,YAAK,MAAMD,CAAG,EAAIG,EACXA,CACT,CAEA,OAAQ,CAIN,KAAK,MAAQ,CAAC,CAChB,CACF,EAEO,SAASC,IAAmB,CACjCC,GAAM,OAAO,oBAAqB,GAAG,EACrCA,GAAM,OAAO,qBAAsB,GAAG,EACtCA,GAAM,OAAO,wBAAyB,GAAG,EACzCA,GAAM,OAAO,yBAA0B,GAAG,EAC1CA,GAAM,OAAO,wBAAyB,GAAG,EACzCA,GAAM,OAAO,yBAA0B,GAAG,EAC1CA,GAAM,OAAO,qBAAsB,GAAG,CACxC,CAEO,SAASC,GACdC,EACAC,EACAC,EACA,CACAJ,GAAM,OACJ,oBACAK,GAAuBF,EAAoBD,EAAM,iBAAiB,CACpE,EAEAF,GAAM,OACJ,qBACAK,GAAuBD,EAAoBF,EAAM,kBAAkB,CACrE,CACF,CAEO,SAASI,GACdC,EACAC,EACAC,EACAC,EACA,CACA,IAAMC,EAAgBJ,EAAkBE,EAClCG,EAAYJ,EAAmBE,EAErCV,GAAM,OACJ,wBACAK,GAAuBE,EAAiBI,CAAa,CACvD,EACAX,GAAM,OACJ,yBACAK,GAAuBG,EAAkBI,CAAS,CACpD,EAEAZ,GAAM,OACJ,wBACAK,GAAuBI,EAAiBE,CAAa,CACvD,EACAX,GAAM,OACJ,yBACAK,GAAuBK,EAAkBE,CAAS,CACpD,CACF,CAEO,SAASC,GACdC,EACAC,EACA,CACAf,GAAM,OACJ,qBACAK,GAAuBS,EAAgBC,CAAY,CACrD,CACF,CChJA,IAAMC,GAA0B,GAErBC,GAKJ,SAASC,GACdC,EACAC,EACAC,EACA,CAEA,IAAIC,EAEAC,EACAC,EAEEC,EAAM,IAAQC,GAEdC,EAAc,CAClB,WAAY,IAAM,CAChB,OAAO,SAAS,KAAOC,EAAO,cAChC,EACA,QAAS,IAAM,CACbT,EAAS,iBAAiB,EAAI,CAChC,EACA,YAAa,IAAM,CACjBE,EAAO,cAAc,CACvB,EACA,gBAAiB,IAAM,CACrBO,EAAO,OAAO,OAAO,kCAAoC,EAC3D,EACA,kBAAmB,IAAM,CACvB,MACE,qOACF,CACF,CACF,EAGAH,EAAI,IAAIE,EAAa,YAAY,EAAE,KAAK,QAAQ,EAGhDF,EAAI,IAAIE,EAAa,SAAS,EAAE,KAAK,SAAS,EAG9C,IAAME,EAAkBJ,EACrB,IAAIE,EAAa,iBAAiB,EAClC,KAAK,eAAe,EAEvBG,EAAgB,EAChBC,EAAyB,EACzBC,EAAwB,EACxBC,EAAa,EACbC,EAAa,EAGbC,EAAsB,EAEtB,SAASA,GAAwB,CAC/B,IAAMC,EAAaR,EAAO,OAAO,OAAO,aAExCS,GAAiB,EAGjBC,GAAWT,EAAiBO,GAAc,KAAK,EAC/CE,GAAWhB,EAAwBc,GAAc,KAAK,EACtDE,GAAWd,EAA4BY,GAAc,KAAK,CAK5D,CAKA,SAASN,GAAkB,CACzB,IAAMS,EAAMd,EAAI,UAAU,QAAQ,EAClCc,EAAI,KAAK,EAIT,IAAMC,EAAoBC,GAAYb,EAAO,OAAO,OAAQ,eAAgB,CAC1E,CAAE,MAAO,MAAO,MAAO,KAAM,EAC7B,CAAE,MAAO,MAAO,MAAO,KAAM,CAC/B,CAAC,EAEDW,EACG,IAAIC,EAAmB,eAAgBA,EAAkB,MAAM,EAC/D,KAAK,eAAe,EACpB,eAAeL,CAAqB,EAGvCI,EACG,IAAIX,EAAO,OAAO,OAAQ,iBAAkB,EAAG,EAAE,EACjD,KAAK,iBAAiB,EASzB,IAAMc,EAAeD,GAAYb,EAAO,OAAO,OAAQ,cAAe,CACpE,CAAE,MAAO,SAAU,MAAOe,EAAiB,EAC3C,CAAE,MAAO,UAAW,MAAOC,EAAqB,EAChD,CAAE,MAAO,YAAa,MAAOC,EAAsB,EACnD,CAAE,MAAO,WAAY,MAAOC,EAAqB,EACjD,CAAE,MAAO,aAAc,MAAOC,EAAuB,EACrD,CAAE,MAAO,iBAAkB,MAAOC,EAA4B,CAChE,CAAC,EAEDzB,EAAkBgB,EACf,IAAIG,EAAc,cAAeA,EAAa,MAAM,EACpD,KAAK,cAAc,EAGtBpB,EAAyBiB,EACtB,IAAIX,EAAO,OAAO,OAAQ,qBAAqB,EAC/C,KAAK,gBAAgB,EAExBW,EACG,IAAIZ,EAAa,mBAAmB,EACpC,KAAK,8BAA8B,EAEtC,IAAMsB,EAAQrB,EAAO,mBACrBW,EAAI,IAAIU,EAAO,SAAS,EAAE,KAAK,uBAAuB,EACtDzB,EAA6Be,EAC1B,IAAIU,EAAO,YAAa,EAAK,IAAM,EACnC,KAAK,+BAA+B,CACzC,CAEA,SAASlB,GAA2B,CAClC,IAAMQ,EAAMd,EAAI,UAAU,mBAAmB,EAC7Cc,EAAI,KAAK,EACT,IAAMW,EAAMtB,EAAO,iBACbuB,EAAMvB,EAAO,UAEnBW,EAAI,IAAIW,EAAK,SAAS,EAAE,KAAK,SAAS,EACtCX,EAAI,IAAIW,EAAK,gBAAgB,EAAE,KAAK,iBAAiB,EACrDX,EAAI,IAAIW,EAAK,kBAAkB,EAAE,KAAK,mBAAmB,EACzDX,EACG,IAAIY,EAAK,qBAAsB,EAAK,GAAM,EAC1C,KAAK,0BAA0B,EAClCZ,EAAI,IAAIY,EAAK,qBAAqB,EAAE,KAAK,kBAAkB,EAC3DZ,EAAI,IAAIY,EAAK,iBAAkB,EAAK,CAAG,EAAE,KAAK,kBAAkB,CAClE,CAEA,SAASnB,GAA0B,CACjC,IAAMO,EAAMd,EAAI,UAAU,iBAAiB,EAC3Cc,EAAI,KAAK,EACT,IAAMW,EAAMtB,EAAO,gBACbwB,EAAYxB,EAAO,OAAO,OAGhCW,EAAI,IAAIW,EAAK,gBAAgB,EAAE,KAAK,iBAAiB,EAGrDX,EAAI,IAAIW,EAAK,kBAAkB,EAAE,KAAK,mBAAmB,EACzDX,EAAI,IAAIa,EAAW,+BAA+B,EAAE,KAAK,aAAa,EACtEb,EACG,IACCa,EACA,mCACA,EACApC,EACF,EACC,KAAK,CAAC,EACN,KAAK,gBAAgB,CAM1B,CAEA,SAASiB,GAAe,CACtB,IAAMM,EAAMd,EAAI,UAAU,YAAY,EAChCyB,EAAMtB,EAAO,OAEnBW,EAAI,IAAIW,EAAK,QAAS,EAAK,CAAG,EAAE,KAAK,OAAO,EAC5CX,EAAI,IAAIW,EAAK,WAAY,EAAK,CAAG,EAAE,KAAK,UAAU,EAClDX,EAAI,IAAIW,EAAK,iBAAkB,EAAK,CAAG,EAAE,KAAK,WAAW,CAC3D,CAEA,SAAShB,GAAe,CACtB,IAAMK,EAAMd,EAAI,UAAU,OAAO,EACjCc,EAAI,KAAK,EAGTc,EAAmBd,EAAKX,EAAQ,aAAc,UAAU,EACxDW,EAAI,IAAIX,EAAQ,0BAA0B,EAAE,KAAK,SAAS,EAC1DW,EAAI,IAAIX,EAAQ,YAAY,EAAE,KAAK,aAAa,EAGhD,IAAM0B,EAAYb,GAAYb,EAAQ,cAAe,CACnD,CAAE,MAAO,SAAU,MAAO,QAAS,EACnC,CAAE,MAAO,WAAY,MAAO,SAAU,EACtC,CAAE,MAAO,oBAAqB,MAAO,kBAAmB,EACxD,CAAE,MAAO,uBAAwB,MAAO,qBAAsB,EAC9D,CAAE,MAAO,qBAAsB,MAAO,mBAAoB,CAC5D,CAAC,EACK2B,EAAWhB,EACd,IAAIe,EAAW,cAAeA,EAAU,MAAM,EAC9C,KAAK,cAAc,EACtBrC,GAAkBuC,GAAM,CACtB5B,EAAO,YAAc4B,EAEpBD,EAAiB,iBAAiB,EACnCA,EAAS,cAAc,CACzB,EAEA,GAAM,CAACE,EAAaC,CAAY,EAAIC,GAAmBvC,CAAK,EACxDwC,EAASH,EAAY,kBAAkB,OAAS,EAC9CI,EAAUtB,EACb,IAAIX,EAAQ,2BAA4B,EAAGgC,CAAM,EACjD,KAAK,CAAC,EACN,KAAK,WAAW,EAEnBA,EAASF,EAAa,cAAgB,EACtC,IAAMI,EAAgBvB,EACnB,IAAIX,EAAQ,oBAAqB,EAAGgC,CAAM,EAC1C,KAAK,CAAC,EACN,KAAK,YAAY,EAEdG,GAAwBxB,EAC3B,IAAIX,EAAQ,uBAAwB,EAAGZ,EAAuB,EAC9D,KAAK,CAAC,EACN,KAAK,eAAe,EAEvBuC,EAAS,eAAeS,EAAmB,EAG3CzB,EAAI,IAAIZ,EAAa,aAAa,EAAE,KAAK,cAAc,EAGvDqC,GAAoB,EAEpB,SAASA,IAAsB,CAG7BpC,EAAO,OAAO,OAAO,qBAAuB,GAE5C,IAAMqC,EAAOrC,EAAO,YACdsC,GAAU,CAAC,UAAW,kBAAkB,EAAE,SAASD,CAAI,EAC7D3B,GAAWuB,EAASK,EAAO,EAC3B5B,GAAWwB,EAAeG,IAAS,qBAAqB,EACxD3B,GAAWyB,GAAuBE,IAAS,mBAAmB,CAChE,CACF,CAIA,SAASZ,EACPd,EACA4B,EACAC,EACAC,EACA,CACA,IAAMC,EAAQ,CACZ,MAAO,CAAC,CACV,EAEA,OAAO,eAAeA,EAAO,QAAS,CACpC,WAAY,GACZ,IAAK,IAAM,CAET,IAAMC,EAAIJ,EAAIC,CAAI,EAClB,MAAO,CAACG,EAAE,CAAC,EAAI,IAAKA,EAAE,CAAC,EAAI,IAAKA,EAAE,CAAC,EAAI,GAAG,CAC5C,EACA,IAAMA,GAAgB,CAEpB,IAAMC,EAAIL,EAAIC,CAAI,EAClBI,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,IACdC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,IACdC,EAAE,CAAC,EAAID,EAAE,CAAC,EAAI,GAChB,CACF,CAAC,EAEDhC,EAAI,SAAS+B,EAAO,OAAO,EAAE,KAAKD,CAAI,CACxC,CACF,CAEA,SAAS/B,GAAWmC,EAAeC,EAAoB,CACrD,GAAI,CAACD,EAAM,CAET,QAAQ,MAAM,uCAAuC,EACrD,MACF,CAGA,IAAME,EAAyBF,EAAa,KAExCC,EACFC,EAAS,MAAM,QAAU,GAEzBA,EAAS,MAAM,QAAU,MAE7B,CAQA,IAAMlC,GAAc,CAClB0B,EACAS,EACAC,IAC6C,CAC7C,IAAMP,EAAQ,CACZ,OAAQO,EAAK,IAAK,GAAM,EAAE,KAAK,CACjC,EAEA,cAAO,eAAeP,EAAOM,EAAK,CAChC,WAAY,GACZ,IAAK,IAAM,CACT,IAAML,EAAIJ,EAAIS,CAAG,EAEjB,OADYC,EAAK,KAAMrB,GAAMA,EAAE,QAAUe,CAAC,GAAKM,EAAK,CAAC,GAC1C,KACb,EACA,IAAMC,GAA0B,CAC9B,IAAMC,EAAMF,EAAK,KAAMrB,GAAMA,EAAE,QAAUsB,CAAa,GAAKD,EAAK,CAAC,EACjEV,EAAIS,CAAG,EAAIG,EAAI,KACjB,CACF,CAAC,EAIMT,CACT,EAEO,SAASU,GAAoBC,EAA2B,CAC7D,QAAQ,IAAI,YAAaA,CAAM,EAC/B,IAAMN,EAAW,SAAS,eAAe,kBAAkB,EAC3DA,EAAS,UAAY,GAErBO,GAAWP,EAAS,UAAiB,EAErC,IAAMQ,EAAsC,CAAC,EACvCC,EAAQ,IAAI,IAClBH,EAAO,QAAQ,CAAC,CAACZ,EAAMgB,CAAM,IAAM,CACjC,IAAMC,EAAIH,EAAYd,CAAI,GAAK,EAC/Bc,EAAYd,CAAI,EAAIiB,EAAID,EACxBD,EAAM,IAAIf,CAAI,CAChB,CAAC,EAEDe,EAAM,QAASf,GAAS,CACtB,IAAMgB,EAASF,EAAYd,CAAI,EACzBkB,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAY,GAAGlB,CAAI,KAAKgB,EAAO,QAAQ,CAAC,CAAC,KAC5CV,EAAS,YAAYY,CAAE,CACzB,CAAC,CACH,CC/WA,IAAMC,GAAM,CACV,eAAgB,IAChB,YAAa,IACb,YAAa,IACb,aAAc,IACd,UAAW,IACX,YAAa,IACb,iBAAkB,QAClB,YAAa,GACf,EAuBaC,GAAuB,KAAc,CAChD,WAAY,CACV,QAAS,GACT,SAAU,GACV,KAAM,GACN,MAAO,GACP,GAAI,GACJ,KAAM,GACN,SAAU,EACZ,EACA,MAAO,CACL,EAAG,EACH,EAAG,EACH,KAAM,EACN,SAAU,EACZ,CACF,GAMO,SAASC,GACdC,EACAC,EACc,CACd,GAAM,CAAE,WAAAC,EAAY,MAAAC,CAAM,EAAIL,GAAqB,EAE7CM,EAAa,CAACC,EAAkBC,IAAmB,CACvD,OAAQD,EAAE,IAAI,YAAY,EAAG,CAC3B,KAAKR,GAAI,eACPK,EAAW,QAAUI,EACrBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,YACPK,EAAW,SAAWI,EACtBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,YACPK,EAAW,KAAOI,EAClBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,aACPK,EAAW,MAAQI,EACnBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,UACPK,EAAW,GAAKI,EAChBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,YACPK,EAAW,KAAOI,EAClBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,iBACPK,EAAW,SAAWI,EACtBD,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,MACF,KAAKR,GAAI,YAAa,CACfS,GAEHC,KACEC,EAAO,cAAgB,oBACnB,SACA,mBACN,EAEFH,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAClB,KACF,CACF,CACF,EAEA,OAAAL,EAAO,iBAAiB,UAAYK,GAAMD,EAAWC,EAAG,EAAI,CAAC,EAC7DL,EAAO,iBAAiB,QAAUK,GAAMD,EAAWC,EAAG,EAAK,CAAC,EAE5DJ,EAAO,MAAM,YAAc,aAC3BA,EAAO,iBAAiB,cAAe,IAAM,CAC3CE,EAAM,SAAW,EACnB,CAAC,EACDF,EAAO,iBAAiB,YAAa,IAAM,CACzCE,EAAM,SAAW,EACnB,CAAC,EACDF,EAAO,iBAAiB,cAAgBI,GAAoB,CAC1DF,EAAM,SAAWE,EAAE,aAAe,SAAWA,EAAE,QAAU,KAAO,EAAI,GAChEF,EAAM,WACRA,EAAM,GAAKE,EAAE,UACbF,EAAM,GAAKE,EAAE,UAEjB,CAAC,EACDJ,EAAO,iBACL,QACCI,GAAkB,CACjBF,EAAM,UAAYE,EAAE,QAAU,KAAO,EACjCF,EAAM,WACRA,EAAM,MAAQ,KAAK,KAAKE,EAAE,MAAM,EAChCA,EAAE,eAAe,EACjBA,EAAE,gBAAgB,EAEtB,EACA,CAAE,QAAS,EAAM,CACnB,EAEO,IAAM,CACX,IAAMI,EAAa,CACjB,WAAY,CAAE,GAAGP,CAAW,EAC5B,MAAO,CAAE,GAAGC,CAAM,CACpB,EAEA,OAAAA,EAAM,EAAI,EACVA,EAAM,EAAI,EACVA,EAAM,KAAO,EACNM,CACT,CACF,CC5IO,SAASC,GACdC,EACAC,EACAC,EACAC,EACQ,CAER,GAAI,CAACC,GAAqBJ,EAAI,cAAeE,EAAUC,EAAa,MAAM,EACxE,MAAO,GAGT,IAAME,EAAkB,CAAC,GAAGF,EAAa,KAAK,EACxCG,EAAmBH,EAAa,0BACtCG,EAAiB,eAAe,EAChC,IAAMC,EAAoBC,GACxBR,EACAC,EACAK,EACAJ,CACF,EAEA,KAAOG,EAAgB,OAAS,GAAG,CAGjC,IAAMI,EAAUJ,EAAgB,IAAI,EACpCC,EAAiB,WAAWG,EAAQ,EAAE,EAOtC,IAAMC,EAASC,GAAoBJ,EAAmBE,CAAO,EAE7D,GAAIC,IAAW,EAEbJ,EAAiB,SAASG,CAAO,UACxBC,IAAW,EAEpB,QAASE,EAAI,EAAGA,EAAIH,EAAQ,YAAY,OAAQG,IAAK,CACnD,IAAMC,EAAIJ,EAAQ,YAAYG,CAAC,EAC3BC,GAAK,CAACP,EAAiB,WAAWO,EAAE,EAAE,IACxCP,EAAiB,WAAWG,EAAQ,EAAE,EACtCJ,EAAgB,KAAKQ,CAAC,EAE1B,CAEJ,CAGA,OAAOP,EAAiB,kBAC1B,CAEA,IAAMQ,GAAkBC,GAAK,OAAO,EAEpC,SAASX,GACPY,EACAd,EACAe,EACS,CACT,GAAI,CAACC,EAAO,gBAAgB,eAAgB,MAAO,GAEnDJ,GAAgB,CAAC,EAAIG,EAAO,OAAO,OAAO,CAAC,EAC3CH,GAAgB,CAAC,EAAIG,EAAO,OAAO,OAAO,CAAC,EAC3CH,GAAgB,CAAC,EAAIG,EAAO,OAAO,OAAO,CAAC,EAC3CH,GAAgB,CAAC,EAAI,EACrB,IAAMK,EAAmBC,GACvBlB,EACAY,GACAA,EACF,EACA,OAAAK,EAAiB,CAAC,EAAIF,EAAO,OAAO,OAC7BD,EAAQ,SAASG,CAAgB,CAC1C,CA6CO,SAASR,GACdJ,EACAE,EACwB,CAExB,IAAMY,EAAed,EAAkBE,EAAQ,qBAAsBA,EAAQ,gBAAgB,EAEvFa,EAAcf,EAAkBE,EAAQ,aAAcA,EAAQ,WAAW,EAEzEc,EAAYL,EAAO,OAAO,OAAO,eAOvC,OAJEI,EAAcC,GAAaF,GAAgBE,EAKzC,EACA,CACN,CAWO,SAASf,GACdR,EACAC,EACAK,EACAJ,EACA,CACA,IAAMsB,EAAYC,GAChBvB,EACAF,EAAI,WACJA,EAAI,WACJM,EAAiB,SACnB,EACMoB,EAAe1B,EAAI,SAAS,OAElC,OAAO,SACLiB,EACAU,EACA,CAEA,GAAIA,IAAoB,KAAYV,GAAU,KAC5C,MAAO,KAKT,IAAMW,EAAKC,GAAYL,EAAWP,EAAO,MAAM,EACzCa,EAAIH,EAWV,OAVoB1B,EAAa6B,EAAK,KAAK,KAAKF,EAAKE,EAAIA,CAAC,EAUrCJ,EAAgB,CACvC,CACF,CAEO,IAAMK,GAAiB,CAACC,EAASC,GAAW,SAAW,CAC5D,IAAMC,EAASC,GAAQH,CAAM,EAC7B,MAAO,GAAM,KAAK,IAAIE,EAAS,CAAG,CACpC,EAEA,SAASL,GAAYhB,EAASuB,EAAiB,CAE7C,IAAMC,EAAIxB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,EAAE,EAClDyB,EAAIzB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,EAAE,EAClD0B,EAAI1B,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,CAAC,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,EAAE,EAAIuB,EAAE,CAAC,EAAIvB,EAAE,EAAE,EAEzD,OAAOwB,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAC7B,CCtNA,IAAMC,GAAuB,EACvBC,GAAyB,EACzBC,GAAiC,GACjCC,GAAmC,GACnCC,GAAwB,MAEjBC,GAAN,MAAMC,CAAqB,CAChC,OAAc,eAAkBC,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAmCtCA,CAAK;AAAA;AAAA;AAAA;AAAA,yEAI2CP,EAAoB;AAAA,2EAClBC,EAAsB;AAAA,kFACfC,EAA8B;AAAA,oFAC5BC,EAAgC;AAAA,0EAC1CC,EAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkB7F,OAAc,YACZI,GACAA,GACAA,GACAA,GACAC,GACAA,GACA,EAAIA,GACJ,EAAIC,EACJD,GAEe,UACA,KAAO,IAAI,YAAYH,EAAqB,WAAW,EACvD,UACA,UAEjB,YAAYK,EAAmB,CAC7B,KAAK,UAAYA,EAAO,aAAa,CACnC,MAAO,yBACP,KAAML,EAAqB,YAC3B,MAAOM,EACT,CAAC,EACD,KAAK,UAAY,IAAI,aAAa,KAAK,IAAI,EAC3C,KAAK,UAAY,IAAI,YAAY,KAAK,IAAI,CAC5C,CAEA,kBAAqBC,IAA2C,CAC9D,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,SAAU,CACrC,GAEA,OAAOC,EAAc,CACnB,GAAM,CACJ,OAAAH,EACA,SAAAI,EACA,WAAAC,EACA,WAAAC,EACA,SAAAC,EACA,cAAAC,EACA,yBAAAC,EACA,0BAAAC,CACF,EAAIP,EACEQ,EAAIC,EACJC,EAASF,EAAE,OAAO,OAClBG,EAAMH,EAAE,UACRI,EAAMJ,EAAE,OACRK,EAAML,EAAE,mBAEVM,EAAc,EAClBA,EAAc,KAAK,UAAUA,EAAab,CAAQ,EAClDa,EAAc,KAAK,UAAUA,EAAaC,GAAK,OAAOd,CAAQ,CAAC,EAC/Da,EAAc,KAAK,UAAUA,EAAaZ,CAAU,EACpDY,EAAc,KAAK,UAAUA,EAAaX,CAAU,EAEpDW,EAAc,KAAK,SAASA,EAAaV,EAAS,KAAK,EACvDU,EAAc,KAAK,SAASA,EAAaV,EAAS,MAAM,EACxDU,EAAc,KAAK,SAASA,EAAaJ,EAAO,cAAc,EAC9DI,EAAc,KAAK,SAASA,EAAaE,GAAe,CAAC,EAEzD,IAAMC,EAASX,EACfQ,EAAc,KAAK,SAASA,EAAaG,EAAO,CAAC,CAAC,EAClDH,EAAc,KAAK,SAASA,EAAaG,EAAO,CAAC,CAAC,EAClDH,EAAc,KAAK,SAASA,EAAaG,EAAO,CAAC,CAAC,EAClDH,EAAc,KAAK,SAASA,EAAa,CAAG,EAE5C,QAASI,EAAI,EAAGA,EAAIb,EAAc,OAAO,OAAQa,IAC/CJ,EAAc,KAAK,SAASA,EAAaT,EAAc,OAAOa,CAAC,CAAC,EAGlEJ,EAAc,KAAK,SAASA,EAAa,KAAK,YAAY,CAAC,EAC3DA,EAAc,KAAK,SAASA,EAAaH,EAAI,kBAAkB,EAC/D,IAAMQ,EAAeZ,EAA4BM,EAAI,UAAY,EAWjE,GAVAC,EAAc,KAAK,SAASA,EAAaK,CAAY,EAErDL,GAAe,EAAIlB,EAEnBkB,EAAc,KAAK,SAASA,EAAaF,EAAI,KAAK,EAClDE,EAAc,KAAK,SAASA,EAAaF,EAAI,QAAQ,EACrDE,EAAc,KAAK,SAASA,EAAaF,EAAI,cAAc,EAC3DE,GAAeM,GAGXN,IAAgBtB,EAAqB,YACvC,MAAM,IAAI,MAAM,qDAAqDA,EAAqB,WAAW,6BAA6BsB,CAAW,SAAS,EAExJjB,EAAO,MAAM,YAAY,KAAK,UAAW,EAAG,KAAK,KAAM,EAAGiB,CAAW,CACvE,CAEQ,UAAUA,EAAqBO,EAAW,CAChD,IAAMC,EAASR,EAAcM,GAC7B,QAASF,EAAI,EAAGA,EAAI,GAAIA,IACtB,KAAK,UAAUI,EAASJ,CAAC,EAAIG,EAAIH,CAAC,EAEpC,OAAOJ,EAAcpB,EACvB,CAEQ,SAASoB,EAAqBS,EAAW,CAC/C,IAAMD,EAASR,EAAcM,GAC7B,YAAK,UAAUE,CAAM,EAAIC,EAClBT,EAAcM,EACvB,CAEQ,SAASN,EAAqBS,EAAW,CAC/C,IAAMD,EAASR,EAAclB,EAC7B,YAAK,UAAU0B,CAAM,EAAI,KAAK,MAAMC,CAAC,EAC9BT,EAAclB,CACvB,CAEQ,aAAc,CACpB,IAAM4B,EAAYf,EAAO,OAAO,OAC1BgB,EAAKhB,EAAO,iBACZiB,EAAKjB,EAAO,gBACZE,EAAMF,EAAO,UAEfkB,EAAQ,EACNC,EAAU,CAACC,EAAaC,IAAe,CAC3CH,EAAQA,GAASG,EAAID,EAAM,EAC7B,EAGAD,EAAQ1C,GAAsBwC,EAAG,cAAc,EAG/C,IAAIK,EAAWP,EAAU,sBAAwBE,EAAG,iBACpDE,EAAQzC,GAAwB4C,CAAQ,EAGxC,IAAIC,EAAOR,EAAU,YAAc,EACnC,OAAAG,EAAQA,EAASK,GAAQ,EAGzBD,EAAWP,EAAU,sBAAwBC,EAAG,iBAChDG,EAAQxC,GAAgCqC,EAAG,cAAc,EACzDG,EAAQvC,GAAkC0C,CAAQ,EAGlDC,EAAOvB,EAAO,qBAAuB,GACrCkB,EAAQA,EAASK,GAAQ,EAGzBA,EAAOR,EAAU,8BACbA,EAAU,iCAAmC,GAC7C,GACJG,EAAQA,EAASK,GAAQ,GAGzBJ,EAAQtC,GAAuBqB,EAAI,mBAAmB,EACtDqB,EAAO,KAAK,MAAMrB,EAAI,eAAiB,EAAE,EACzCgB,EAAQA,EAASK,GAAQ,GAElBL,CACT,CACF,ECpOO,IAAMM,GAAoBC,GAAkC;AAAA;AAAA,qBAE9CA,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECLxB,IAAMC,GAAivC,IAAMC,GAA6B,CACxCC,EACAC,EACAC,EACAC,IACG,CACH,IAAMC,EAAiB,CAACC,EAAYC,IAAc,CAChD,IAAMC,EAAW,GAAGP,CAAY,IAAIM,CAAC,KAC/BE,EAAYF,GAAK,EAAI,YAAc,GACzC,MAAkB,QAAQA,CAAC,KAAKE,CAAS,OAAOL,EAAOI,CAAQ,CAAC,IAClE,EAEA,MAAkB;AAAA,YACRL,CAAO;AAAA,QACXO,GAAYR,CAAQ,EAAE,IAAIG,CAAc,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA,IAE5D,EASaM,GAA4B,CACvCC,EACAX,EACAC,EACAC,IACG,CACH,GAAM,CAACU,EAASC,CAAO,EAAIF,EAAW,MAAM,GAAG,EAAE,IAAKG,GAAMA,GAAG,KAAK,CAAC,EACrE,GAAIF,GAAW,MAAaC,GAAW,KACrC,MAAM,IAAI,MAAM,oHAAoHF,CAAU,kBAAkBC,CAAO,WAAWC,CAAO,EAAE,EAG7L,GAAI,CAACE,GACH,MAAO,OAAOJ,CAAU,MAAMX,CAAY,IAAIE,CAAO,KAGvD,IAAMc,EAAajB,GACjBC,EACAC,EACAC,EACCY,GAAM,GAAGF,CAAO,MAAME,CAAC,GAC1B,EACA,MAAO,OAAOH,CAAU;AAAA,IACtBK,CAAU,EACd,ECrDA,IAAMC,GAAO,cAGAC,GAAyB;AAAA,0BACZD,EAAI,cAAcA,EAAI,cAAcA,EAAI,QAAQA,EAAI;AAAA;AAAA;AAAA;AAAA,EAMjEE,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxCC,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAa9BC,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqBvCC,GACA,eACA,SACA,GACA,mBACF,CAAC;AAAA;AAAA;AAAA,EAKUC,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA,EAOjCC,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiD3BC,GAAmB;AAAA;AAAA;AAAA;AAAA;ECvHhC,IAAMC,GAAcC,EAAO,YAEdC,GAA0C,CAAC,GAAK,GAAK,EAAG,EAGxDC,GAA6B;AAAA;AAAA,sBAEpBH,EAAW;AAAA,kBACf,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAkCAA,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA6CLE,GAAc,CAAC,CAAC,KAAKA,GAAc,CAAC,CAAC,KAAKA,GAAc,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;EClFlF,IAAME,GAAgB,CAC3B,SAAU,CACR,eAAgB,EAChB,oBAAqB,EACrB,eAAgB,EAChB,QAAS,CACX,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1BC,EAAW;AAAA,EACXC,EAAgB;AAAA,EAChBC,EAA0B;AAAA,EAC1BC,EAAa;AAAA,EAC7BC,EAAmB;AAAA,EACnBC,EAAe;AAAA;AAAA,EAEfC,GAAqB,eAAeR,GAAE,cAAc,CAAC;AAAA,EACrDS,GAAiBT,GAAE,mBAAmB,CAAC;AAAA;AAAA,qBAEpBA,GAAE,cAAc;AAAA;AAAA;AAAA,qBAGhBA,GAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4CPU,EAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECpEpC,IAAMC,GAAmD,CAC9D,WAAY,CACV,CACE,eAAgB,EAChB,OAAQ,EACR,OAAQ,WACV,CACF,EACA,YAAaC,GACb,SAAU,QACZ,EAEaC,GAA6C,CACxDF,GACA,CACE,WAAY,CACV,CACE,eAAgB,EAChB,OAAQ,EACR,OAAQ,WACV,CACF,EACA,YAAaC,GACb,SAAU,QACZ,EACA,CACE,WAAY,CACV,CACE,eAAgB,EAChB,OAAQ,EACR,OAAQ,WACV,CACF,EACA,YAAaE,GACb,SAAU,QACZ,CACF,ECxBO,IAAMC,GAAN,MAAMC,CAAgB,CAC3B,OAAc,KAAe,kBAEZ,eACA,cAAgB,IAAIC,GAG7B,mBAAqB,EACrB,mBAAqB,EACrB,qBAAuB,EAE/B,YAAYC,EAAmBC,EAAoC,CACjE,KAAK,eAAiBH,EAAgB,qBACpCE,EACAC,CACF,CACF,CAEA,OAAe,qBACbD,EACAC,EACA,CACA,IAAMC,EAAeF,EAAO,mBAAmB,CAC7C,MAAOG,GAAYL,CAAe,EAClC,KAAMM,GAAY,CACpB,CAAC,EAED,OAAOJ,EAAO,qBAAqB,CACjC,MAAOK,GAAcP,CAAe,EACpC,OAAQ,OACR,OAAQ,CACN,OAAQI,EACR,WAAY,UACZ,QAASI,EACX,EACA,SAAU,CACR,OAAQJ,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQD,CAAiB,CAAC,CACxC,EACA,UAAWM,GACX,aAAcC,EAChB,CAAC,CACH,CAEA,gBAAiB,CACf,KAAK,mBAAqB,EAC1B,KAAK,mBAAqB,EAC1B,KAAK,qBAAuB,CAC9B,CAEA,iBAAiB,CAAE,MAAAC,CAAM,EAAY,CACnCC,GAAmBD,EAAO,KAAK,mBAAoB,KAAK,kBAAkB,CAC5E,CAEA,KAAKE,EAAcC,EAA4BC,EAAmB,CAChE,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,EAAc,iBAAAC,CAAiB,EAAIN,EAGvDO,EAA0BH,GAAU,eAAe,oBAAoB,EAGvEI,EAAaL,EAAO,gBAAgB,CACxC,MAAOhB,EAAgB,KACvB,iBAAkB,CAChBsB,GAAmBH,EAAkBI,GAAkB,EAAGR,CAAM,CAClE,EACA,uBAAwBS,GAA0BN,EAAcH,CAAM,EACtE,gBAAiBE,GAAU,eAAejB,EAAgB,IAAI,CAChE,CAAC,EAGDqB,EAAW,YAAY,KAAK,cAAc,EAG1C,KAAK,mBAAmBR,EAAKQ,EAAYP,CAAY,EAGrDG,GAAU,aAAaG,CAAuB,EAC9CC,EAAW,IAAI,CACjB,CAEQ,mBACNR,EACAQ,EACAP,EACA,CACA,IAAMW,EAAYX,EAAa,UAAU,WACnCY,EAAW,KAAK,cAAc,YAAYZ,EAAa,KAAM,IACjE,KAAK,eAAeD,EAAKC,CAAY,CACvC,EAEAO,EAAW,aAAa,EAAGK,CAAQ,EACnCL,EAAW,gBAAgB,EAAGP,EAAa,aAAa,YAAY,EACpEO,EAAW,gBAAgB,EAAGP,EAAa,aAAa,aAAa,EACrEO,EAAW,gBAAgB,EAAGP,EAAa,aAAa,QAAQ,EAChEO,EAAW,eAAeP,EAAa,QAAQ,YAAa,QAAQ,EAEpE,IAAMa,EAAaC,GAAe,EAElC,QAASC,EAAc,EAAGA,EAAcJ,EAAU,OAAQI,IAAe,CACvE,IAAMC,EAAmBL,EAAUI,CAAW,EACxCE,EAAcC,GAClBnB,EACAc,EACAG,EACAhB,CACF,EACA,GAAIiB,IAAgB,EAAG,CACrB,KAAK,sBAAwB,EAC7B,QACF,CACA,KAAK,oBAAsBA,EAE3B,QAASE,EAAO,EAAGA,EAAOF,EAAaE,IAAQ,CAC7C,IAAMC,EAAIpB,EAAa,0BAA0B,cAAcmB,CAAI,EAC7DE,EAAgBD,EAAE,cAClBE,EAAcD,EAAgBE,GAIpChB,EAAW,YACTe,EACA,EACAF,EAAE,iBACF,EACAL,CACF,EACA,KAAK,oBAAsBM,CAC7B,CACF,CACF,CAEQ,eAAiB,CACvB,CAAE,OAAAjC,EAAQ,eAAAoC,EAAgB,MAAA3B,CAAM,EAChCG,IACiB,CACjB,IAAMyB,EAAIC,GAAc,SAClBC,EAAqBC,GAAkB/B,EAAOG,CAAY,EAChE,OAAA6B,GAAuBF,CAAkB,EAElCG,GACL5C,EACAc,EAAa,KACbZ,EACA,KAAK,eACL,CACEoC,EAAe,kBAAkBC,EAAE,cAAc,EACjD,CACE,QAASA,EAAE,oBACX,SAAU,CAAE,OAAQzB,EAAa,UAAU,gBAAiB,CAC9D,EACA,CAAE,QAASyB,EAAE,eAAgB,SAAUE,CAAmB,EAC1D,CAAE,QAASF,EAAE,QAAS,SAAU5B,EAAM,aAAc,CACtD,CACF,CACF,CACF,EC/KA,IAAMkC,GAAsB,KAAK,GAAK,EAChCC,GAAgB,EAChBC,GAAmB,EAGZC,GAAN,KAAa,CACD,YAAcC,GAAK,SAAS,EAC5B,WAAaA,GAAK,SAAS,EAE3B,QAA4B,CAAC,EAAG,CAAC,EAEjC,UAAsC,CAAC,EAAG,EAAG,CAAC,EAE/D,YAAYC,EAAsBC,GAAW,SAAU,CACrD,KAAK,cAAcD,CAAO,CAC5B,CAEA,IAAI,oBAAqB,CACvB,OAAO,KAAK,SACd,CAEA,cAAgB,CAACA,EAAsBC,GAAW,WAAa,CACzDD,EAAQ,UAAU,SAAW,IAC/B,KAAK,UAAU,CAAC,EAAIA,EAAQ,SAAS,CAAC,EACtC,KAAK,UAAU,CAAC,EAAIA,EAAQ,SAAS,CAAC,EACtC,KAAK,UAAU,CAAC,EAAIA,EAAQ,SAAS,CAAC,GAEpCA,EAAQ,UAAU,SAAW,IAC/B,KAAK,QAAQJ,EAAa,EAAII,EAAQ,SAAS,CAAC,EAChD,KAAK,QAAQH,EAAgB,EAAIG,EAAQ,SAAS,CAAC,EAEvD,EAEA,OAAOE,EAAmBC,EAAoB,CAC5C,KAAK,cAAcD,EAAWC,CAAK,EACnC,KAAK,cAAcD,EAAWC,CAAK,EACnC,KAAK,iBAAiB,CACxB,CAEQ,cAAcD,EAAmBC,EAAc,CACrD,IAAMC,EAAO,CAACC,EAAmBC,KAC9BD,EAAW,EAAI,IAAMC,EAAW,EAAI,GAEjCC,EAAUJ,EAAM,WAChBK,EACJN,GACCK,EAAQ,SAAWE,EAAO,oBAAsBA,EAAO,eACpDC,EAA4C,CAAC,EAAG,EAAG,EAAG,CAAC,EAC7DA,EAAQ,CAAC,EAAIF,EAAIJ,EAAKG,EAAQ,MAAOA,EAAQ,IAAI,EACjDG,EAAQ,CAAC,EAAIF,EAAIJ,EAAKG,EAAQ,GAAIA,EAAQ,IAAI,EAC9CG,EAAQ,CAAC,EAAIF,EAAIJ,EAAKG,EAAQ,SAAUA,EAAQ,OAAO,EAEvD,IAAMI,EAAeZ,GAAK,UAAU,KAAK,eAAe,EAAG,KAAK,UAAU,EACpEa,EAAeC,GAAaF,EAAcD,EAASA,CAAO,EAChEI,EAAK,IAAI,KAAK,UAAWF,EAAc,KAAK,SAAS,CACvD,CAEQ,cAAcV,EAAmBC,EAAc,CACrD,IAAMY,EAAMZ,EAAM,MAAM,EAAID,EAAYO,EAAO,cACzCO,EAAQb,EAAM,MAAM,EAAID,EAAYO,EAAO,cAEjD,KAAK,QAAQZ,EAAgB,GAAKkB,EAClC,KAAK,QAAQnB,EAAa,GAAKoB,EAC/B,IAAMC,EAAYtB,GAAsB,IACxC,KAAK,QAAQC,EAAa,EAAIsB,GAC5B,KAAK,QAAQtB,EAAa,EAC1B,CAACqB,EACDA,CACF,CACF,CAEQ,kBAAmB,CACzB,IAAME,EAAOC,GAAcA,EAAE,QAAQ,CAAC,EAChCC,EAAI,KAAK,UACT,EAAI,KAAK,QACfC,GAAM,OAAO,gBAAiB,IAAIH,EAAIE,EAAE,CAAC,CAAC,CAAC,KAAKF,EAAIE,EAAE,CAAC,CAAC,CAAC,KAAKF,EAAIE,EAAE,CAAC,CAAC,CAAC,GAAG,EAC1EC,GAAM,OACJ,aACA,IAAIH,EAAI,EAAEtB,EAAgB,CAAC,CAAC,KAAKsB,EAAI,EAAEvB,EAAa,CAAC,CAAC,GACxD,CACF,CAEQ,gBAAuB,CAC7B,IAAM2B,EAAS,KAAK,QACdC,EAASzB,GAAK,SAAS,KAAK,UAAU,EAC5C,OAAAA,GAAK,QAAQyB,EAAQD,EAAO3B,EAAa,EAAG4B,CAAM,EAClDzB,GAAK,QAAQyB,EAAQD,EAAO1B,EAAgB,EAAG2B,CAAM,EAC9CA,CACT,CAEA,IAAI,YAAmB,CACrB,IAAMC,EAAS,KAAK,eAAe,EAC7BC,EAAM,KAAK,UAIjB,OAAO3B,GAAK,UACV0B,EACA,CAAC,CAACC,EAAI,CAAC,EAAG,CAACA,EAAI,CAAC,EAAG,CAACA,EAAI,CAAC,CAAC,EAC1B,KAAK,WACP,CACF,CACF,ECzGO,IAAMC,GAAgB,CAC3B,SAAU,CACR,eAAgB,CAClB,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1CC,GAAqB,eAAeF,GAAE,cAAc,CAAC;AAAA,EACrCG,EAAgB;AAAA,EAChBC,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECDrC,IAAMC,GAAN,MAAMC,CAAqB,CAChC,OAAc,KAAe,uBAEZ,eACA,iBAEjB,YACEC,EACAC,EACAC,EACA,CACA,KAAK,eAAiBH,EAAqB,qBACzCC,EACAC,CACF,EACA,KAAK,iBAAmBE,GACtBJ,EACAC,EACA,KAAK,eACL,CAACE,EAAS,kBAAkB,CAAC,CAAC,CAChC,CACF,CAEA,OAAe,qBACbF,EACAC,EACA,CACA,IAAMG,EAAeJ,EAAO,mBAAmB,CAC7C,MAAOK,GAAYN,CAAoB,EACvC,KAAMO,GAAY,CACpB,CAAC,EAED,OAAON,EAAO,qBAAqB,CACjC,MAAOO,GAAcR,CAAoB,EACzC,OAAQ,OACR,OAAQ,CACN,OAAQK,EACR,WAAY,UACZ,QAAS,CAACI,EAAyB,CACrC,EACA,SAAU,CACR,OAAQJ,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQH,CAAiB,CAAC,CACxC,EACA,UAAWQ,GACX,aAAcC,EAChB,CAAC,CACH,CAEA,KAAKC,EAAc,CACjB,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,EAAc,iBAAAC,EAAkB,MAAAC,CAAM,EAAIL,EAG9DM,EAAaL,EAAO,gBAAgB,CACxC,MAAOb,EAAqB,KAC5B,iBAAkB,CAChBmB,GAAmBH,EAAkBI,GAAkB,CAAC,CAC1D,EACA,uBAAwBC,GAA0BN,CAAY,EAC9D,gBAAiBD,GAAU,eAAed,EAAqB,IAAI,CACrE,CAAC,EAGDkB,EAAW,YAAY,KAAK,cAAc,EAC1CA,EAAW,aAAa,EAAG,KAAK,gBAAgB,EAGhD,GAAM,CAACI,EAAaC,CAAO,EAAIC,GAAmBP,CAAK,EACjDQ,EAAOH,EAAY,kBAAkBI,EAAO,wBAAwB,EAC1ER,EAAW,gBAAgB,EAAGO,EAAK,YAAY,EAC/CP,EAAW,eAAeO,EAAK,YAAa,QAAQ,EACpD,IAAME,EAAcF,EAAK,cAAgBG,GACzCV,EAAW,YAAYS,EAAa,EAAG,EAAG,EAAG,CAAC,EAG9CT,EAAW,IAAI,CACjB,CACF,EC5FO,IAAMW,GAAgB,CAC3B,SAAU,CACR,eAAgB,CAClB,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1CC,GAAqB,eAAeF,GAAE,cAAc,CAAC;AAAA,EACrCG,EAAgB;AAAA,EAChBC,EAAgB;AAAA,EAChBC,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECCrC,IAAMC,GAAN,MAAMC,CAA6B,CACxC,OAAc,KAAe,+BAEZ,eACA,iBAEjB,YACEC,EACAC,EACAC,EACA,CACA,KAAK,eAAiBH,EAA6B,qBACjDC,EACAC,CACF,EACA,KAAK,iBAAmBE,GACtBJ,EACAC,EACA,KAAK,eACL,CAACE,EAAS,kBAAkBE,GAAc,SAAS,cAAc,CAAC,CACpE,CACF,CAEA,OAAe,qBACbJ,EACAC,EACA,CACA,IAAMI,EAAeL,EAAO,mBAAmB,CAC7C,MAAOM,GAAYP,CAA4B,EAC/C,KAAMQ,GAAY,CACpB,CAAC,EAED,OAAOP,EAAO,qBAAqB,CACjC,MAAOQ,GAAcT,CAA4B,EACjD,OAAQ,OACR,OAAQ,CACN,OAAQM,EACR,WAAY,UACZ,QAAS,CAACI,EAAyB,CACrC,EACA,SAAU,CACR,OAAQJ,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQJ,CAAiB,CAAC,CACxC,EACA,UAAWS,GACX,aAAcC,EAChB,CAAC,CACH,CAEA,KAAKC,EAAc,CACjB,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,EAAc,iBAAAC,EAAkB,MAAAC,CAAM,EAAIL,EAG9DM,EAAaL,EAAO,gBAAgB,CACxC,MAAOd,EAA6B,KACpC,iBAAkB,CAChBoB,GAAmBH,EAAkBI,GAAkB,CAAC,CAC1D,EACA,uBAAwBC,GAA0BN,CAAY,EAC9D,gBAAiBD,GAAU,eACzBf,EAA6B,IAC/B,CACF,CAAC,EAGDmB,EAAW,YAAY,KAAK,cAAc,EAC1CA,EAAW,aAAa,EAAG,KAAK,gBAAgB,EAG5CI,EAAO,cAAgB,sBACzB,KAAK,cAAcJ,EAAYD,CAAK,EAEpC,KAAK,6BAA6BC,EAAYD,CAAK,EAIrDC,EAAW,IAAI,CACjB,CAEQ,6BACNA,EACAD,EACA,CACA,GAAM,CAACM,EAAaC,CAAO,EAAIC,GAAmBR,CAAK,EACjDS,EACJH,EAAY,yBAAyBD,EAAO,wBAAwB,EAEtEJ,EAAW,gBAAgB,EAAGQ,EAAS,YAAY,EACnDR,EAAW,eAAeQ,EAAS,YAAa,QAAQ,EACxD,IAAIC,EAAU,EACdD,EAAS,SAAS,QAAQ,CAACE,EAAGC,IAAkB,CAC9C,IAAMC,EAAcF,EAAE,cAAgBG,GAChCC,EAAaL,EACnBT,EAAW,YAAYY,EAAa,EAAGE,EAAY,EAAGH,CAAa,EACnEF,GAAWG,CACb,CAAC,CACH,CAEQ,cAAcZ,EAAkCD,EAAc,CACpE,GAAM,CAACgB,EAAcC,CAAM,EAAIT,GAAmBR,CAAK,EACvDC,EAAW,gBAAgB,EAAGgB,EAAO,aAAa,YAAY,EAC9DhB,EAAW,eAAegB,EAAO,QAAQ,YAAa,QAAQ,EAExCA,EAAO,YAAY,OACtCN,GAAMA,EAAE,WAAaN,EAAO,iBAC/B,EACc,QAAQ,CAACM,EAAGO,IAAe,CACvC,IAAML,EAAcF,EAAE,cAAgBG,GACtCb,EAAW,YACTY,EACA,EACAF,EAAE,iBACF,EACAO,CACF,CACF,CAAC,CACH,CACF,ECnIO,IAAMC,GAAuBC,GAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAWjDA,CAAU;AAAA;AAAA,EAIzBC,GAAyB,EAAIC,GAAaC,GAMzC,SAASC,GACdC,EACAC,EACAC,EACW,CACX,OAAOF,EAAO,aAAa,CACzB,MAAO,GAAGC,CAAI,mBACd,KAAMC,EAAeN,GACrB,MAAO,eAAe,SAAW,eAAe,OAClD,CAAC,CACH,CAGO,SAASO,GACdH,EACAI,EACAC,EACA,CACA,IAAMH,EAAeG,EAAY,OAC3BC,EAAaJ,EAAeN,GAClC,GAAIU,IAAeF,EAAe,KAEhC,MAAM,IAAI,MAAM,iCAAiCA,EAAe,IAAI,eAAeE,CAAU,WAAWJ,CAAY,eAAeN,EAAsB,cAAc,EAGzK,IAAIW,EAAc,EACZC,EAAO,IAAI,YAAYZ,EAAsB,EAC7Ca,EAAY,IAAI,aAAaD,CAAI,EACjCE,EAAY,IAAI,YAAYF,CAAI,EACtCH,EAAY,QAASM,GAAM,CACzBF,EAAU,CAAC,EAAIE,EAAE,qBAAqB,OAAO,CAAC,EAC9CF,EAAU,CAAC,EAAIE,EAAE,qBAAqB,OAAO,CAAC,EAC9CF,EAAU,CAAC,EAAIE,EAAE,qBAAqB,OAAO,CAAC,EAC9CF,EAAU,CAAC,EAAIE,EAAE,iBACjBF,EAAU,CAAC,EAAIE,EAAE,cAAc,OAAO,CAAC,GAAK,EAC5CF,EAAU,CAAC,EAAIE,EAAE,cAAc,OAAO,CAAC,GAAK,EAC5CF,EAAU,CAAC,EAAIE,EAAE,cAAc,OAAO,CAAC,GAAK,EAC5CF,EAAU,CAAC,EAAIE,EAAE,cAAgB,IAAW,QAAYA,EAAE,YAE1D,IAAMC,EAAcD,EAAE,UAAU,OAChCF,EAAU,CAAC,EAAIG,EAAY,OAAO,CAAC,EACnCH,EAAU,CAAC,EAAIG,EAAY,OAAO,CAAC,EACnCH,EAAU,EAAE,EAAIG,EAAY,OAAO,CAAC,EACpCH,EAAU,EAAE,EAAIG,EAAY,OAE5BF,EAAU,EAAE,EAAIC,EAAE,cAClBD,EAAU,EAAE,EAAIC,EAAE,iBAClBD,EAAU,EAAE,EAAIC,EAAE,SAGlBX,EAAO,MAAM,YACXI,EACAG,EACAC,EACA,EACAZ,EACF,EACAW,GAAeX,EACjB,CAAC,CACH,CC7EO,IAAMiB,GAAN,KAAgC,CAC9B,gBAA6B,CAAC,EAC9B,cAAyC,CAAC,EAC1C,mBAAqB,EACrB,UAAkBC,GAAK,SAAS,EAEvC,WAAWC,EAAsB,CAC/B,KAAK,gBAAkB,MAAMA,CAAY,EACzC,KAAK,cAAgB,MAAMA,CAAY,CACzC,CAEA,gBAAiB,CAEf,QAASC,EAAI,EAAGA,EAAI,KAAK,gBAAgB,OAAQA,IAC/C,KAAK,gBAAgBA,CAAC,EAAI,GAE5B,KAAK,mBAAqB,CAC5B,CAEA,WAAcC,GAA2B,KAAK,gBAAgBA,CAAE,EAChE,WAAcA,GAAkB,CAC9B,KAAK,gBAAgBA,CAAE,EAAI,EAC7B,EAEA,SAAYC,GAA6B,CACvC,KAAK,cAAc,KAAK,kBAAkB,EAAIA,EAC9C,KAAK,oBAAsB,CAC7B,CACF,ECVO,IAAMC,GAAoB,EAEpBC,GAAN,KAAmB,CASxB,YACSC,EACSC,EACAC,EACAC,EACAC,EACAC,EAChB,CANO,UAAAL,EACS,YAAAC,EACA,kBAAAC,EACA,aAAAC,EACA,cAAAC,EACA,eAAAC,CACf,CAfa,YAA4C,CAAC,EAC7C,0BAA4B,IAAIC,GACzC,eAAyC,OACzC,mBAAiD,OACjD,MAAiC,CAAC,EAElC,cAAgB,EAWvB,KAAQC,GAAkB,KAAK,YAAY,KAAMC,GAAMA,EAAE,KAAOD,CAAE,EAElE,SAAYA,GAAkB,KAAK,KAAKA,CAAE,IAAM,OAEhD,IAAI,oBAAqB,CACvB,OAAO,KAAK,YAAY,OAAO,CAACE,EAAKD,IAAMC,EAAMD,EAAE,cAAe,CAAC,CACrE,CAEA,IAAI,mBAAoB,CACtB,OAAOE,GAAoB,KAAK,kBAClC,CAEA,IAAI,cAAe,CACjB,OAAO,KAAK,YAAY,MAC1B,CAEA,IAAI,gBAAiB,CACnB,OAAO,KAAK,UAAU,WAAW,MACnC,CAGA,IAAI,qBAAsB,CACxB,OAAO,KAAK,YAAY,OAAO,CAACD,EAAKD,IAC5BA,EAAE,WAAaV,GAAoBW,EAAMD,EAAE,cAAgBC,EACjE,CAAC,CACN,CAGA,IAAI,oBAAqB,CACvB,OAAO,KAAK,YAAY,OAAO,CAACA,EAAKD,IAC5BA,EAAE,WAAaV,GAAoBW,EAAM,EAAIA,EACnD,CAAC,CACN,CAEA,uBAA0BE,IAA2C,CACnE,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,UAAU,gBAAiB,CACtD,GAEA,qBAAqBC,EAAmB,CACtC,KAAK,0BAA0B,WAAW,KAAK,YAAY,EAE3DC,GACED,EACA,KAAK,QAAQ,mBACb,KAAK,WACP,CACF,CAGA,WACEE,EACAN,EACAO,EACAC,EACA,CACA,IAAMC,EAAW,KAAK,KAAKT,EAAE,EAAE,EAC/B,GAAIS,EACF,OAAOA,EAGT,IAAMC,EAA8B,CAClC,GAAIV,EAAE,GACN,SAAUA,EAAE,SACZ,qBAAsBA,EAAE,qBACxB,iBAAkBA,EAAE,iBACpB,aAAcA,EAAE,aAChB,YAAaA,EAAE,YACf,iBAAAO,EACA,cAAeI,GAAiBX,EAAE,OAAO,EACzC,YAAa,CAAC,EACd,UAAAQ,CACF,EAEA,YAAK,YAAY,KAAKE,CAAI,EAC1B,KAAK,cAAgB,KAAK,IAAI,KAAK,cAAeA,EAAK,SAAW,CAAC,EAE/DJ,EACFA,EAAO,YAAY,KAAKI,CAAI,EAE5B,KAAK,MAAM,KAAKA,CAAI,EAGfA,CACT,CAEA,YAAa,CACNE,KAEH,QAAQ,IAAI,gBAAiB,KAAK,WAAW,EAC7C,QAAQ,IAAI,iBAAkB,KAAK,KAAK,GAG1C,IAAMC,EAAkB,KAAK,oBACvBC,EAAiB,KAAK,MAAM,OAChC,CAACb,EAAKD,IAAMC,EAAMD,EAAE,cACpB,CACF,EACMe,EAAcD,EAAiBD,EAAmB,IAExD,QAAQ,IAAI,WAAW,KAAK,aAAa,sBAAsB,KAAK,YAAY,YAAY,EAC5F,QAAQ,IAAI,aAAa,KAAK,kBAAkB,+BAA+BA,CAAe,aAAa,EAC3G,QAAQ,IAAI,aAAa,KAAK,MAAM,MAAM,uBAAuBC,CAAc,+BAA+BC,EAAW,QAAQ,CAAC,CAAC,IAAI,CACzI,CACF,ECrIO,IAAMC,GAA+B,CAC1CC,EACAC,IACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASKD,CAAU;AAAA,eAChBC,CAAM;AAAA,EAERC,GAA8B,KAAK,IAC9CC,GACA,EAAIC,CACN,EAGaC,GAAkC,CAC7CL,EACAC,IACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMCA,IAAW,OAAS,MAAQ,aAAa;AAAA;AAAA;AAAA,2BAG/BA,IAAW,OAAS,MAAQ,aAAa;AAAA;AAAA,qBAE/CD,CAAU;AAAA,eAChBC,CAAM;AAAA,EAERK,GAAiC,KAAK,IACjDH,GACA,EAAIC,CACN,EAEMG,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY1BC,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlBC,GAA6B,CACxCT,EACAC,IACc;AAAA;AAAA,qBAEKD,CAAU;AAAA,eAChBC,CAAM;AAAA;AAAA;AAAA,EAGnBA,GAAU,OAASO,GAAcD,EAAY;AAAA,EAOxC,SAASG,GACdC,EACAC,EACAC,EACAC,EACW,CAIX,IAAMC,EAHqBF,EAAe,OACvCG,GAAMA,EAAE,WAAaC,EACxB,EAAE,OACoCH,EAAgBI,GAEtD,OAAOP,EAAO,aAAa,CACzB,MAAO,GAAGC,CAAI,yBACd,KACEV,GAA8BI,GAAiCS,EACjE,MACE,eAAe,QACf,eAAe,SACf,eAAe,SACf,eAAe,QACnB,CAAC,CACH,CAOA,eAAsBI,GACpBR,EACAS,EACA,CACA,IAAMC,EAAYD,EAAa,QAAQ,oBAEjCE,EAAO,MAAMC,GAAeZ,EAAQ,YAAaU,CAAS,EAC1DG,EAASC,GAAyBH,CAAI,EAE5C,eAAQ,IAAI,IAAIF,EAAa,IAAI,0BAA2BI,CAAM,EAC3DA,CACT,CAEO,SAASC,GAAyBH,EAAmB,CAE1D,IAAMI,GACHxB,GAA8BI,IAAkCF,EAM7DuB,EAAgBC,IAAiB,CACrC,YAAaN,EAAKI,EAAe,EAAIE,CAAG,EACxC,UAAWN,EAAKI,EAAe,EAAIE,EAAM,CAAC,CAC5C,GAGMC,EAAeP,EAAK,MAAM,EAAG,CAAC,EAC9BQ,EAAeD,EAAa,CAAC,EAC7BE,EAAaC,GAAYF,CAAY,EAAE,IAAI,CAAC,EAAGG,IAAMN,EAAaM,CAAC,CAAC,EAGpEC,EAAWhC,GAA8BE,EACzC+B,EAAmBb,EAAK,MAAMY,EAAUA,EAAW,CAAC,EACpDE,EAAwBD,EAAiB,CAAC,EAC1CE,GAAWf,EAAK,OAASI,GAAgB,EACzCY,EAAeN,GAAYI,CAAqB,EAAE,IAAI,CAAC,EAAGH,IAC9DN,EAAaU,EAAU,EAAIJ,CAAC,CAC9B,EAEA,MAAO,CACL,eAAgB,CACd,YAAaJ,EAAa,CAAC,EAC3B,aAAAC,EACA,YAAaD,EAAa,CAAC,EAC3B,cAAeA,EAAa,CAAC,EAC7B,WAAAE,CACF,EACA,eAAgB,CACd,YAAaI,EAAiB,CAAC,EAC/B,YAAaA,EAAiB,CAAC,EAC/B,YAAaA,EAAiB,CAAC,EAC/B,aAAcC,EACd,WAAYE,CACd,CACF,CACF,CCnLO,SAASC,GACdC,EACAC,EACU,CACV,IAAMC,EAAMD,EACRE,GAAqBH,EAAUC,CAAO,EACtCG,GAAgBJ,CAAQ,EAC5B,MAAO,CAAE,IAAAE,EAAK,OAAQG,GAAmBH,CAAG,CAAE,CAChD,CAOA,SAASI,GACPN,EACAO,EAASC,GACTC,EACA,CACA,IAAMC,EAAYV,EAAS,OAASO,EAC9BI,EAA8B,CAAC,EAAG,EAAG,CAAC,EAE5C,QAAS,EAAI,EAAG,EAAID,EAAW,IAAK,CAClC,IAAME,EAAS,EAAIL,EACnBI,EAAE,CAAC,EAAIX,EAASY,CAAM,EACtBD,EAAE,CAAC,EAAIX,EAASY,EAAS,CAAC,EAC1BD,EAAE,CAAC,EAAIX,EAASY,EAAS,CAAC,EAC1BH,EAAGE,CAAC,CACN,CACF,CAEA,SAASE,GACPb,EACAC,EACAQ,EACA,CACA,IAAME,EAA8B,CAAC,EAAG,EAAG,CAAC,EAE5C,QAASG,EAAI,EAAGA,EAAIb,EAAQ,OAAQa,IAAK,CACvC,IAAMF,EAASX,EAAQa,CAAC,EAAIC,GAC5BJ,EAAE,CAAC,EAAIX,EAASY,CAAM,EACtBD,EAAE,CAAC,EAAIX,EAASY,EAAS,CAAC,EAC1BD,EAAE,CAAC,EAAIX,EAASY,EAAS,CAAC,EAC1BH,EAAGE,CAAC,CACN,CACF,CAEO,SAASK,IAA4C,CAC1D,IAAMC,EAA0B,CAAC,OAAY,OAAY,MAAU,EAC7DC,EAA0B,CAAC,OAAY,OAAY,MAAU,EAOnE,MAAO,CAAC,CAACA,EAAOD,CAAK,EANCN,GAAM,CAC1B,QAASQ,EAAK,EAAGA,EAAK,EAAGA,IACvBF,EAAME,CAAE,EAAIF,EAAME,CAAE,IAAM,OAAY,KAAK,IAAIF,EAAME,CAAE,EAAGR,EAAEQ,CAAE,CAAC,EAAIR,EAAEQ,CAAE,EACvED,EAAMC,CAAE,EAAID,EAAMC,CAAE,IAAM,OAAY,KAAK,IAAID,EAAMC,CAAE,EAAGR,EAAEQ,CAAE,CAAC,EAAIR,EAAEQ,CAAE,CAE3E,CAC0B,CAC5B,CAEO,SAASf,GACdJ,EACAO,EAASC,GACI,CACb,GAAM,CAACY,EAASC,CAAO,EAAIL,GAAiB,EAC5C,OAAAV,GAAcN,EAAUO,EAAQc,CAAO,EAChCD,CACT,CAEO,SAASjB,GACdH,EACAC,EACa,CACb,GAAM,CAACmB,EAASC,CAAO,EAAIL,GAAiB,EAC5C,OAAAH,GAAmBb,EAAUC,EAASoB,CAAO,EACtCD,CACT,CAIO,SAASE,GACdC,EACAC,EACA,CACA,OACED,GAAG,OAAO,CAAC,IAAMC,GAAG,OAAO,CAAC,GAC5BD,GAAG,OAAO,CAAC,IAAMC,GAAG,OAAO,CAAC,GAC5BD,GAAG,OAAO,CAAC,IAAMC,GAAG,OAAO,CAAC,GAC5BD,GAAG,SAAWC,GAAG,MAErB,CAEO,SAASnB,GAAmB,CACjCa,EACAD,CACF,EAAgC,CAC9B,IAAMQ,EAASC,EAAK,SAASR,EAAOD,CAAK,EACnCU,EAASD,EAAK,SAASD,EAAQR,CAAK,EAC1C,MAAO,CAAE,OAAAQ,EAAQ,OAAAE,CAAO,CAC1B,CAEO,SAASC,GACd5B,EACAO,EAASC,GACT,CACA,GAAM,CAACU,EAAOD,CAAK,EAAIb,GAAgBJ,EAAUO,CAAM,EACjDsB,EAAKN,GAAgB,IAAMA,EAAE,IAAKO,GAAMA,EAAE,QAAQ,CAAC,CAAC,EAAE,KAAK,GAAG,EAAI,IACxE,QAAQ,IAAI,oBAAqBD,EAAEX,CAAK,CAAC,EACzC,QAAQ,IAAI,oBAAqBW,EAAEZ,CAAK,CAAC,CAC3C,CCtGO,IAAMc,GACXC,GACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQKA,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgCxB,SAASC,GACdC,EACAC,EACAC,EACW,CACX,IAAMC,EAAcD,EAAS,OAAS,EAKhCE,EAAe,GAAO,GAEtB,CAACC,EAASC,CAAO,EAAIC,GAAgBL,CAAQ,EAC7CM,EAAWC,EAAK,IAAIH,EAASD,CAAO,EAEpCK,EAAcD,EAAK,OACvBL,EAAeI,EAAS,CAAC,EACzBJ,EAAeI,EAAS,CAAC,EACzBJ,EAAeI,EAAS,CAAC,CAC3B,EAEMG,EAAcF,EAAK,IAAIJ,EAASI,EAAK,OAAOC,CAAW,CAAC,EAExDE,EAAYH,EAAK,OAAO,EACxBI,EAAgBC,GAAc,KAAK,MAAM,KAAK,IAAIA,EAAGV,EAAe,CAAC,CAAC,EAEtEW,EAAkB,EAClBC,EAAO,IAAI,YAAYD,EAAkBZ,EAAc,CAAC,EAE9D,QAASc,EAAI,EAAGA,EAAId,EAAac,IAAK,CACpCR,EAAK,IACHP,EAASe,EAAI,CAAC,EACdf,EAASe,EAAI,EAAI,CAAC,EAClBf,EAASe,EAAI,EAAI,CAAC,EAClBL,CACF,EAEAH,EAAK,IAAIG,EAAWF,EAAaE,CAAS,EAC1CH,EAAK,IAAIG,EAAWD,EAAaC,CAAS,EAE1C,IAAMM,EAAkBL,EAAaD,EAAU,CAAC,CAAC,EAC3CO,EAAkBN,EAAaD,EAAU,CAAC,CAAC,EAC3CQ,EAAkBP,EAAaD,EAAU,CAAC,CAAC,EAEjDI,EAAKD,EAAkBE,EAAI,EAAI,CAAC,EAAIC,EACpCF,EAAKD,EAAkBE,EAAI,EAAI,CAAC,IAAME,EAAkB,OAAU,GAClEH,EAAKD,EAAkBE,EAAI,EAAI,CAAC,GAAKE,EAAkB,UAAa,GACpEH,EAAKD,EAAkBE,EAAI,EAAI,CAAC,GAAKG,GAAmB,EAC1D,CAGA,IAAMC,EAAgBZ,EAAK,QAAQC,CAAW,EAExCY,EAAiBb,EAAK,UAAUJ,EAASgB,EAAe,EAAG,EAC3DE,EAAY,IAAI,aAAaP,EAAK,OAAQ,EAAG,CAAC,EACpD,OAAAO,EAAU,CAAC,EAAIF,EAAc,CAAC,EAC9BE,EAAU,CAAC,EAAIF,EAAc,CAAC,EAC9BE,EAAU,CAAC,EAAIF,EAAc,CAAC,EAC9BE,EAAU,CAAC,EAAID,EAAe,CAAC,EAC/BC,EAAU,CAAC,EAAID,EAAe,CAAC,EAC/BC,EAAU,CAAC,EAAID,EAAe,CAAC,EAKxBE,GACLxB,EACA,GAAGC,CAAI,6BACP,eAAe,QAAU,eAAe,SACxCe,CACF,CACF,CCzHA,IAAMS,GAAmBC,EAAO,sBAM1BC,GAAkCC,GAAkC;AAAA;AAAA;AAAA;AAAA,qBAIrDA,CAAU;AAAA;AAAA;AAAA;AAAA,EAMlBC,GAA0BJ,GACnCK,GACAH,GAMJ,SAASI,GACPC,EACAC,EACAC,EACW,CACX,IAAMC,EAAcD,EAAS,OAAS,EAChCE,EAAO,IAAI,aAAaD,EAAc,CAAC,EAC7C,QAAS,EAAI,EAAG,EAAIA,EAAa,IAC/BC,EAAK,EAAI,CAAC,EAAIF,EAAS,EAAI,CAAC,EAC5BE,EAAK,EAAI,EAAI,CAAC,EAAIF,EAAS,EAAI,EAAI,CAAC,EACpCE,EAAK,EAAI,EAAI,CAAC,EAAIF,EAAS,EAAI,EAAI,CAAC,EACpCE,EAAK,EAAI,EAAI,CAAC,EAAI,EAEpB,OAAOC,GACLL,EACA,GAAGC,CAAI,6BACP,eAAe,QAAU,eAAe,SACxCG,CACF,CACF,CAEO,IAAME,GAAoCb,GAC7Cc,GACAR,GC9CG,IAAMS,GAAyBC,GAAkC;AAAA;AAAA,qBAEnDA,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaxB,SAASC,GACdC,EACAC,EACAC,EACW,CACX,IAAMC,EAAcD,EAAQ,OAAS,EAC/BE,EAAO,IAAI,aAAaD,EAAc,CAAC,EACvCE,EAAIC,EAAK,OAAO,EAEtB,QAASC,EAAI,EAAGA,EAAIJ,EAAaI,IAAK,CACpCD,EAAK,IAAIJ,EAAQK,EAAI,CAAC,EAAGL,EAAQK,EAAI,EAAI,CAAC,EAAGL,EAAQK,EAAI,EAAI,CAAC,EAAGF,CAAC,EAClE,IAAMG,EAAI,KAAK,IAAIH,EAAE,CAAC,CAAC,EAAI,KAAK,IAAIA,EAAE,CAAC,CAAC,EAAI,KAAK,IAAIA,EAAE,CAAC,CAAC,EAEzD,GADAC,EAAK,UAAUD,EAAG,EAAIG,EAAGH,CAAC,EACtBA,EAAE,CAAC,EAAI,EAAG,CAEZ,IAAMI,EAAIJ,EAAE,CAAC,EACPK,EAAIL,EAAE,CAAC,EACbA,EAAE,CAAC,GAAK,EAAM,KAAK,IAAIK,CAAC,IAAMD,GAAK,EAAM,EAAM,IAC/CJ,EAAE,CAAC,GAAK,EAAM,KAAK,IAAII,CAAC,IAAMC,GAAK,EAAM,EAAM,GACjD,CACAN,EAAK,EAAIG,CAAC,EAAIF,EAAE,CAAC,EAAI,GAAM,GAC3BD,EAAK,EAAIG,EAAI,CAAC,EAAIF,EAAE,CAAC,EAAI,GAAM,EACjC,CACA,OAAOM,GACLX,EACA,GAAGC,CAAI,6BACP,eAAe,QAAU,eAAe,SACxCG,CACF,CACF,CChDO,IAAMQ,GAAqBC,GAAkC;AAAA;AAAA,qBAE/CA,CAAU;AAAA;AAAA;AAAA;ECKxB,IAAMC,GAAgC,CAC3CC,EACAC,IACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASKD,CAAU;AAAA,eAChBC,CAAM;AAAA,EAGRC,GAA8B,CACzCF,EACAC,IACc;AAAA,qBACKD,CAAU;AAAA,eAChBC,CAAM;AAAA,EAGRE,GAA+B,KAAK,IAC/CC,GACA,EAAIC,CACN,EAMO,SAASC,GACdC,EACAC,EACAC,EACW,CACX,IAAMC,EAAiBL,EAAYI,EAYnC,OAVkBF,EAAO,aAAa,CACpC,MAAO,GAAGC,CAAI,qBACd,KAAML,GAA+BO,EACrC,MACE,eAAe,QACf,eAAe,SACf,eAAe,SACf,eAAe,QACnB,CAAC,CAGH,CAOA,eAAsBC,GACpBJ,EACAK,EACA,CACA,IAAMC,EAAYD,EAAa,QAAQ,qBAGjCE,EAAO,MAAMC,GAAeR,EAAQ,YAAaM,CAAS,EAC1DG,EAAgBF,EAAK,CAAC,EAEtBG,EAAad,GAA+BE,EAC5Ca,EAAUJ,EAAK,MAAMG,EAAYA,EAAaD,CAAa,EAE3DG,EAAS,CACb,YAAaL,EAAK,CAAC,EACnB,cAAAE,EACA,YAAaF,EAAK,CAAC,EACnB,cAAeA,EAAK,CAAC,EACrB,QAAAI,CACF,EAEA,eAAQ,IAAI,IAAIN,EAAa,IAAI,2BAA4BO,CAAM,EAC5DA,CACT,CCpFO,IAAMC,GAAgC,CAC3CC,EACAC,IACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMCA,IAAW,OAAS,MAAQ,aAAa;AAAA;AAAA;AAAA,4BAG9BA,IAAW,OAAS,MAAQ,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKhDD,CAAU;AAAA,eAChBC,CAAM;AAAA,EAGRC,GAA+B,KAAK,IAC/CC,GACA,EAAIC,EACFA,EACAA,EACAC,EACJ,EAEaC,GAA8B,CACzCN,EACAC,IACc;AAAA,qBACKD,CAAU;AAAA,eAChBC,CAAM;AAAA,EAOd,SAASM,GACdC,EACAC,EACAC,EACAC,EACAC,EACW,CACX,IAAMC,EAAWT,EAAYO,EAEvBG,EAAYN,EAAO,aAAa,CACpC,MAAO,GAAGC,CAAI,8BACd,KAAMP,GAA+BW,EACrC,MACE,eAAe,QACf,eAAe,SACf,eAAe,SACf,eAAe,QACnB,CAAC,EAED,OAAAE,GAAcP,EAAQM,EAAWJ,EAAkBE,CAAiB,EAE7DE,CACT,CAEA,SAASC,GACPP,EACAM,EACAJ,EACAE,EACA,CAEA,IAAMI,EAAS,IAAI,YAAYd,EAA4B,EACrDe,EAAY,IAAI,aAAaD,CAAM,EACnCE,EAAY,IAAI,YAAYF,CAAM,EAElCG,EAAU,EAEhBF,EAAUE,EAAU,CAAC,EAAIP,EAAkB,OAAO,CAAC,EACnDK,EAAUE,EAAU,CAAC,EAAIP,EAAkB,OAAO,CAAC,EACnDK,EAAUE,EAAU,CAAC,EAAIP,EAAkB,OAAO,CAAC,EACnDK,EAAUE,EAAU,CAAC,EAAIP,EAAkB,OAE3CM,EAAUC,EAAU,CAAC,EAAIT,EAGzBF,EAAO,MAAM,YACXM,EACA,EACAE,EACA,EACAd,EACF,CACF,CC/EO,IAAMkB,GAAuBC,GAAkC;AAAA;AAAA,qBAEjDA,CAAU;AAAA;AAAA,EAQlBC,GAAN,KAA0B,CAEf,YAAyB,OAGzB,mBAAgC,OAMhC,sBAAmC,OACnC,oBAAiC,OACjC,gBAA6B,OAM7B,qBAAkC,OAElC,qBAAkC,OAOlC,oBAAiC,OAEjD,YACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CAEIC,EAAO,QAAUN,GAAU,OAI/B,KAAK,YAAcO,GAAkBP,EAAQC,EAAMG,CAAc,EACjE,KAAK,sBAAwBI,GAC3BR,EACAC,EACAE,EAAU,SACZ,EACA,KAAK,oBAAsBM,GACzBT,EACAC,EACAE,EAAU,OACZ,EACA,KAAK,gBAAkBD,EAAa,SACpC,KAAK,mBAAqBQ,GACxBV,EACAC,EACAG,EAAe,MACjB,EACA,KAAK,oBAAsBO,GACzBX,EACAC,EACAG,EACAC,CACF,EACA,KAAK,qBAAuBO,GAC1BZ,EACAC,EACAG,EAAe,OACfC,EACAF,EAAU,OAAO,MACnB,EACA,KAAK,qBAAuBU,GAC1Bb,EACAC,EACAI,CACF,EACF,CAEA,gBAAmBP,IAA2C,CAC5D,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,WAAY,CACvC,GAEA,oBAAuBA,IAA2C,CAChE,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,qBAAsB,CACjD,GAEA,kBAAqBA,IAA2C,CAC9D,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,mBAAoB,CAC/C,GAEA,cAAiBA,IAA2C,CAC1D,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,eAAgB,CAC3C,GAEA,gBAAmBA,IAA2C,CAC5D,QAASA,EACT,SAAU,CAAE,OAAQ,KAAK,kBAAmB,CAC9C,GAKA,4BAA4BgB,EAA2B,CACrD,IAAIC,EAAS,EACbD,EAAO,YAAY,KAAK,oBAAqBC,EAAQ,EAAIC,CAAS,EAClED,EAASE,GACTH,EAAO,YAAY,KAAK,oBAAqBC,EAAQ,EAAIC,CAAS,CACpE,CAEA,gCAAgCE,EAAkC,CAChEA,EAAW,aAAa,KAAK,oBAAqB,CAAC,CACrD,CAEA,gCAAgCC,EAAoC,CAClEA,EAAY,2BACV,KAAK,oBACLF,EACF,CACF,CAEA,wBAA2BnB,IAA2C,CACpE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,oBACb,OAAQ,EACR,KAAMmB,EACR,CACF,GAEA,0BAA6BnB,IAA2C,CACtE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,oBACb,OAAQmB,GACR,KAAMG,EACR,CACF,GAEA,sBAAyBtB,IAA2C,CAClE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,oBACb,OAAQmB,GAA8BG,EACxC,CACF,GAEA,yBAAyBpB,EAAmBqB,EAAqB,CAC/DrB,EAAO,MAAM,YACX,KAAK,oBACLiB,GACAI,CACF,CACF,CAEA,sBAAsBrB,EAAmBsB,EAAmB,CAC1D,GAAIA,EAAK,OAAS,IAAM,EACtB,MAAM,IAAI,MAAM,4EAA4E,EAE9FtB,EAAO,MAAM,YACX,KAAK,oBACLiB,GAA8BG,GAC9BE,CACF,CACF,CAKA,qCAAqCR,EAA2B,CAC9DA,EAAO,YAAY,KAAK,qBAAsB,EAAG,EAAIE,CAAS,CAChE,CAEA,yBAA4BlB,IAA2C,CACrE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,qBACb,OAAQ,EACR,KAAMyB,EACR,CACF,GAEA,uBAA0BzB,IAA2C,CACnE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,qBACb,OAAQyB,EACV,CACF,GAKA,6BAA6BT,EAA2B,CACtDA,EAAO,YAAY,KAAK,qBAAsB,EAAG,EAAIE,CAAS,CAChE,CAEA,yBAA4BlB,IAA2C,CACrE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,qBACb,OAAQ,EACR,KAAM0B,EACR,CACF,GAEA,uBAA0B1B,IAA2C,CACnE,QAASA,EACT,SAAU,CACR,OAAQ,KAAK,qBACb,OAAQ0B,EACV,CACF,EACF,EAEA,SAASjB,GACPP,EACAC,EACAwB,EACW,CACX,IAAMC,EAAqBD,EAAS,OAClC,CAACE,EAAKC,IAAMD,EAAME,GAAiBD,EAAE,OAAO,EAC5C,CACF,EACME,EAAkCxB,EAAO,YAC3C,eAAe,SACf,EAEJ,OAAON,EAAO,aAAa,CACzB,MAAO,GAAGC,CAAI,uBACd,KAAM8B,GAAqBL,CAAkB,EAC7C,MACE,eAAe,MACf,eAAe,SACf,eAAe,QACfI,CACJ,CAAC,CACH,CC/PO,IAAME,GAAgB,CAC3B,SAAU,CACR,eAAgB,EAChB,SAAU,EACV,gBAAiB,EACjB,oBAAqB,EACrB,gBAAiB,EACjB,cAAe,EACf,SAAU,EACV,YAAa,EACb,eAAgB,EAChB,QAAS,CACX,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1BC,EAAW;AAAA,EACXC,EAAgB;AAAA,EAChBC,EAAgB;AAAA,EAChBC,EAA0B;AAAA,EAC1BC,EAAa;AAAA,EAC7BC,EAAmB;AAAA,EACnBC,EAAe;AAAA;AAAA,EAEfC,GAAqB,eAAeT,GAAE,cAAc,CAAC;AAAA,EACrDU,GAAoBV,GAAE,QAAQ,CAAC;AAAA,EAC/BW,GAA2BX,GAAE,gBAAiB,MAAM,CAAC;AAAA,EACrDY,GAAwBZ,GAAE,eAAe,CAAC;AAAA,EAC1Ca,GAAsBb,GAAE,aAAa,CAAC;AAAA,EACtCc,GAAkBd,GAAE,QAAQ,CAAC;AAAA,EAC7Be,GAAiBf,GAAE,mBAAmB,CAAC;AAAA,EACvCgB,GAAoBhB,GAAE,WAAW,CAAC;AAAA;AAAA,qBAEfA,GAAE,cAAc;AAAA;AAAA;AAAA,qBAGhBA,GAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA8DPiB,EAAqB;AAAA;AAAA;AAAA,8BAGdC,EAAoB;AAAA;AAAA;AAAA,8BAGpBC,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,8BAKtBC,EAAoB;AAAA;AAAA;AAAA,8BAGpBC,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECxHlD,IAAMC,GAAN,MAAMC,CAAgB,CAC3B,OAAc,KAAe,kBAEZ,eACA,cAAgB,IAAIC,GAErC,YAAYC,EAAmBC,EAAoC,CACjE,KAAK,eAAiBH,EAAgB,qBACpCE,EACAC,CACF,CACF,CAEA,OAAe,qBACbD,EACAC,EACA,CACA,IAAMC,EAAeF,EAAO,mBAAmB,CAC7C,MAAOG,GAAYL,CAAe,EAClC,KAAMM,GAAY,CACpB,CAAC,EAED,OAAOJ,EAAO,qBAAqB,CACjC,MAAOK,GAAcP,CAAe,EACpC,OAAQ,OACR,OAAQ,CACN,OAAQI,EACR,WAAY,UACZ,QAAS,CAAC,CACZ,EACA,SAAU,CACR,OAAQA,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQD,CAAiB,CAAC,CACxC,EACA,UAAWK,GACX,aAAcC,EAChB,CAAC,CACH,CAEA,qBACEC,EACAC,EACAC,EACA,CACA,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,EAAc,iBAAAC,CAAiB,EAAIN,EAGvDO,EAAaJ,EAAO,gBAAgB,CACxC,MAAOb,EAAgB,KACvB,iBAAkB,CAChBkB,GAAmBF,EAAkBG,GAAkB,EAAGP,CAAM,CAClE,EACA,uBAAwBQ,GAA0BL,EAAcH,CAAM,EACtE,gBAAiBE,GAAU,eAAed,EAAgB,IAAI,CAChE,CAAC,EACKqB,EAAW,KAAK,cAAc,YAAYV,EAAa,KAAM,IACjE,KAAK,eAAeD,EAAKC,CAAY,CACvC,EAGAM,EAAW,YAAY,KAAK,cAAc,EAC1CA,EAAW,aAAa,EAAGI,CAAQ,EAGnCV,EAAa,QAAQ,gCAAgCM,CAAU,EAG/DA,EAAW,IAAI,CACjB,CAEQ,eAAiB,CACvB,CAAE,OAAAf,EAAQ,eAAAoB,EAAgB,MAAAC,CAAM,EAChCZ,IACiB,CACjB,IAAMa,EAAIC,GAAc,SAClBC,EAAUf,EAAa,QACvBgB,EAAqBC,GAAkBL,EAAOZ,CAAY,EAChE,OAAAkB,GAAuBF,CAAkB,EAElCG,GACL9B,EACAW,EAAa,KACbT,EACA,KAAK,eACL,CACEoB,EAAe,kBAAkBE,EAAE,cAAc,EACjDE,EAAQ,gBAAgBF,EAAE,QAAQ,EAClCE,EAAQ,sBAAsBF,EAAE,eAAe,EAC/Cb,EAAa,uBAAuBa,EAAE,mBAAmB,EACzDE,EAAQ,oBAAoBF,EAAE,eAAe,EAC7CE,EAAQ,kBAAkBF,EAAE,aAAa,EACzCE,EAAQ,cAAcF,EAAE,QAAQ,EAChCE,EAAQ,gBAAgBF,EAAE,WAAW,EACrC,CAAE,QAASA,EAAE,eAAgB,SAAUG,CAAmB,EAC1D,CAAE,QAASH,EAAE,QAAS,SAAUD,EAAM,aAAc,CACtD,CACF,CACF,CACF,ECjHO,IAAMQ,GAA0B;AAAA;AAAA;AAAA,qBAGlBC,GAAW,IAAI;AAAA,oBAChBA,GAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAoBbA,GAAW,IAAI;AAAA,oBAChBA,GAAW,GAAG;AAAA;AAAA;AAAA;ECxB3B,IAAMC,GAAuC;AAAA;AAAA,EAElDC,EAAmB;AAAA,EACnBC,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA0HOC,GAAW,IAAI;AAAA,+BACLA,GAAW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EClIvC,IAAMC,GAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECA3C,IAAMC,GAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EC2B9C,IAAMC,GAAgB,CAC3B,eAAgB,GAChB,eAAgB,MAChB,SAAU,CACR,eAAgB,EAChB,aAAc,EACd,gBAAiB,EACjB,YAAa,EACb,aAAc,EACd,gBAAiB,EACjB,mBAAoB,EACpB,oBAAqB,EACrB,cAAe,CACjB,CACF,EAEaC,GAAoC,CAC/CC,EACAC,IACc;AAAA;AAAA,qBAEKD,CAAU;AAAA,eAChBC,CAAM,gCACnBA,IAAW,aAAe,qBAAuB,YACnD;AAAA,EAMMC,GAAIJ,GACJK,GAAIL,GAAc,SAEXM,GAAc,IAAiB;AAAA;AAAA,EAE1BC,EAAW;AAAA,EACXC,EAAK;AAAA,EACLC,EAAa;AAAA,EAC7BC,EAAY;AAAA;AAAA,EAEZC,GAAqB,eAAeN,GAAE,cAAc,CAAC;AAAA,EACrDO,GAAoBP,GAAE,YAAY,CAAC;AAAA,EACnCQ,GAAgCR,GAAE,mBAAoB,MAAM,CAAC;AAAA,EAC7DS,GAA2BT,GAAE,gBAAiB,MAAM,CAAC;AAAA,EACrDU,GAAwBV,GAAE,eAAe,CAAC;AAAA,EAC1CW,GAAsBX,GAAE,aAAa,CAAC;AAAA,EACtCY,GAAoBZ,GAAE,WAAW,CAAC;AAAA,EAClCa,GAAiBb,GAAE,mBAAmB,CAAC;AAAA,EACvCJ,GAAkCI,GAAE,aAAc,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAW/CD,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAgBsBA,GAAE,cAAcnFjE,IAAMe,GAAgB,CAC3B,eAAgB,GAChB,eAAgB,MAChB,oBAAqB,GAAGC,EAAO,OAAO,WAAW,mBAAmB,IACpE,SAAU,CACR,eAAgB,EAChB,aAAc,EACd,oBAAqB,EACrB,oBAAqB,EACrB,sBAAuB,EACvB,kBAAmB,EACnB,oBAAqB,EACrB,aAAc,EACd,qBAAsB,EACtB,mBAAoB,CACtB,CACF,EAUMC,GAAIF,GACJG,GAAIH,GAAc,SAEXI,GAAc,IAAiB;AAAA;AAAA,EAE1BC,EAAW;AAAA,EACXC,EAAK;AAAA,EACrBC,EAAyB;AAAA,EACzBC,EAAuB;AAAA,EACvBC,EAA0B;AAAA;AAAA,EAE1BC,GAAqB,eAAeP,GAAE,cAAc,CAAC;AAAA,EACrDQ,GAAoBR,GAAE,YAAY,CAAC;AAAA,EACnCS,GAA6BT,GAAE,oBAAqB,YAAY,CAAC;AAAA,EACjEU,GAAgCV,GAAE,sBAAuB,YAAY,CAAC;AAAA,EACtEW,GAA2BX,GAAE,kBAAmB,YAAY,CAAC;AAAA,EAC7DY,GAAiBZ,GAAE,mBAAmB,CAAC;AAAA;AAAA,qBAEpBA,GAAE,mBAAmB;AAAA;AAAA;AAAA,qBAGrBA,GAAE,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcjBD,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAeGA,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAkBnCA,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAiBoBA,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBpEc,GAA8Bb,GAAE,qBAAsB,MAAM,CAAC;AAAA;AAAA,EAE7Dc,GAA4Bd,GAAE,mBAAoB,MAAM,CAAC;AAAA;AAAA;AAAA,kBAGzCD,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAiBoBA,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA2C7BA,GAAE,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKtDD,EAAO,OAAO,WAAW,mBAAmB;AAAA,QAC5CD,GAA2B,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA+BfA,GAA2B,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EC3OpE,IAAMkB,GAAN,MAAMC,CAAiB,CAC5B,OAAc,KAAe,mBAGZ,kBACA,uBAAyB,IAAIC,GAG7B,cACA,mBAAqB,IAAIA,GAGzB,kBACA,uBAAyB,IAAIA,GAE9C,YAAYC,EAAmB,CAC7B,IAAMC,EAAeD,EAAO,mBAAmB,CAC7C,MAAOE,GAAYJ,CAAgB,EACnC,KAAMK,GAAY,CACpB,CAAC,EAED,KAAK,kBAAoBL,EAAiB,eACxCE,EACAC,EACA,eACF,EACA,KAAK,cAAgBH,EAAiB,eACpCE,EACAC,EACA,WACF,EACA,KAAK,kBAAoBH,EAAiB,eACxCE,EACAC,EACA,eACF,CACF,CAEA,OAAe,eACbD,EACAC,EACAG,EACA,CACA,OAAOJ,EAAO,sBAAsB,CAClC,MAAOK,GAAcP,EAAkBM,CAAM,EAC7C,OAAQ,OACR,QAAS,CACP,OAAQH,EACR,WAAYG,CACd,CACF,CAAC,CACH,CAEA,iBAAmB,IAAM,CACvB,KAAK,uBAAuB,MAAM,EAClC,KAAK,mBAAmB,MAAM,EAC9B,KAAK,uBAAuB,MAAM,CACpC,EAEA,gBAAgBE,EAAcC,EAA4B,CACxD,GAAM,CAAE,OAAAC,EAAQ,SAAAC,CAAS,EAAIH,EAG7BC,EAAa,QAAQ,4BAA4BC,CAAM,EAEvD,IAAME,EAAcF,EAAO,iBAAiB,CAC1C,MAAOV,EAAiB,KACxB,gBAAiBW,GAAU,eAAeX,EAAiB,IAAI,CACjE,CAAC,EAEGa,EAAO,iBAAiB,QAC1B,KAAK,yBAAyBL,EAAKI,EAAaH,CAAY,EACnDI,EAAO,OAAO,OAAO,uBAC9B,KAAK,qBAAqBL,EAAKI,EAAaH,CAAY,EAExD,KAAK,yBAAyBD,EAAKI,EAAaH,CAAY,EAG9DG,EAAY,IAAI,CAClB,CAGQ,yBACNJ,EACAI,EACAH,EACA,CACA,IAAMK,EAAW,KAAK,kBAChBC,EAAW,KAAK,uBAAuB,YAC3CN,EAAa,KACb,IAAM,KAAK,eAAeD,EAAKM,EAAUL,CAAY,CACvD,EAEAG,EAAY,YAAYE,CAAQ,EAChCF,EAAY,aAAa,EAAGG,CAAQ,EAIpC,IAAMC,EAAiBC,GACrBR,EAAa,aACbS,GAAc,cAChB,EAGMC,EAAiB,KAAK,KAC1B,KAAK,IAAIV,EAAa,eAAgBS,GAAc,cAAc,CACpE,EACME,EAAiB,KAAK,KAC1BX,EAAa,eAAiBS,GAAc,cAC9C,EAGAN,EAAY,mBACVI,EACAG,EACAC,CACF,CACF,CAGQ,qBACNZ,EACAI,EACAH,EACA,CACA,IAAMK,EAAW,KAAK,cAChBC,EAAW,KAAK,mBAAmB,YACvCN,EAAa,KACb,IAAM,KAAK,eAAeD,EAAKM,EAAUL,CAAY,CACvD,EAEAG,EAAY,YAAYE,CAAQ,EAChCF,EAAY,aAAa,EAAGG,CAAQ,EAIpC,IAAMC,EAAiBC,GACrBR,EAAa,aACbS,GAAc,cAChB,EAEMC,EAAiB,KAAK,IAC1BV,EAAa,eACbS,GAAc,cAChB,EAKAN,EAAY,mBACVI,EACAG,EALqB,CAOvB,CACF,CAGQ,yBACNX,EACAI,EACAH,EACA,CACA,IAAMK,EAAW,KAAK,kBAChBC,EAAW,KAAK,uBAAuB,YAC3CN,EAAa,KACb,IAAM,KAAK,uBAAuBD,EAAKM,EAAUL,CAAY,CAC/D,EAEAG,EAAY,YAAYE,CAAQ,EAChCF,EAAY,aAAa,EAAGG,CAAQ,EAGpCH,EAAY,2BACVH,EAAa,QAAQ,qBACrB,CACF,CACF,CAGQ,uBACN,CACE,eAAAY,EACA,6BAAAC,EACA,oBAAAC,CACF,EACAd,EACA,CACA,IAAMe,EAAIN,GAAc,SAClBO,EAAUhB,EAAa,QAC7B,OAAAiB,GAAuBJ,CAA4B,EAE5C,CACLD,EAAe,kBAAkBG,EAAE,cAAc,EACjDC,EAAQ,gBAAgBD,EAAE,YAAY,EACtCC,EAAQ,wBAAwBD,EAAE,mBAAmB,EACrDC,EAAQ,sBAAsBD,EAAE,iBAAiB,EACjDC,EAAQ,0BAA0BD,EAAE,qBAAqB,EACzDf,EAAa,uBAAuBe,EAAE,mBAAmB,EACzD,CACE,QAASA,EAAE,oBACX,SAAUF,CACZ,EACA,CAAE,QAASE,EAAE,aAAc,SAAUD,CAAoB,CAC3D,CACF,CAEQ,eAAiB,CACvBf,EACAM,EACAL,IACiB,CACjB,GAAM,CAAE,OAAAP,CAAO,EAAIM,EACbmB,EAAa,KAAK,uBAAuBnB,EAAKC,CAAY,EAEhE,OAAOmB,GACL5B,EACAS,EAAa,KACbP,EACAY,EACAa,CACF,CACF,EAEQ,uBAAyB,CAC/BnB,EACAM,EACAL,IACiB,CACjB,GAAM,CAAE,OAAAP,CAAO,EAAIM,EACbgB,EAAIN,GAAc,SAClBS,EAAa,KAAK,uBAAuBnB,EAAKC,CAAY,EAE1DgB,EAAUhB,EAAa,QAE7B,OAAOmB,GACL5B,EACAS,EAAa,KACbP,EACAY,EACA,CACE,GAAGa,EACHF,EAAQ,yBAAyBD,EAAE,oBAAoB,EACvDC,EAAQ,uBAAuBD,EAAE,kBAAkB,CACrD,CACF,CACF,CACF,ECnQA,IAAMK,GAASC,GAAK,OAAO,EAWdC,GAAN,MAAMC,CAAQ,CACnB,OAAe,YAAc,CAC3B,OACA,QACA,MACA,SACA,OACA,KACF,EACS,OAAS,IAAI,aAAa,EAAE,EAgCrC,OAAOC,EAAgB,CACrB,IAAMC,EAAID,EAGVE,EAAK,IAAI,EAAED,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAI,EAAEA,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAI,EAAEA,EAAE,CAAC,EAAIA,EAAE,EAAE,GAAIL,EAAM,EAChE,IAAIO,EAAID,EAAK,OAAON,EAAM,EAC1B,KAAK,OAAO,CAAC,EAAIA,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,EAAIP,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,EAAIP,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,EAAI,EAAEF,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAKE,EAEpCD,EAAK,IAAID,EAAE,CAAC,EAAIA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAIA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAIA,EAAE,EAAE,EAAGL,EAAM,EACvDO,EAAID,EAAK,OAAON,EAAM,EACtB,KAAK,OAAO,CAAC,EAAIA,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,EAAIP,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,EAAIP,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,GAAKF,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAKE,EAEnCD,EAAK,IAAI,EAAED,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAI,EAAEA,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAI,EAAEA,EAAE,CAAC,EAAIA,EAAE,EAAE,GAAIL,EAAM,EAChEO,EAAID,EAAK,OAAON,EAAM,EACtB,KAAK,OAAO,CAAC,EAAIA,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,CAAC,EAAIP,GAAO,CAAC,EAAIO,EAC7B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAI,EAAEF,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAKE,EAErCD,EAAK,IAAID,EAAE,CAAC,EAAIA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAIA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAIA,EAAE,EAAE,EAAGL,EAAM,EACvDO,EAAID,EAAK,OAAON,EAAM,EACtB,KAAK,OAAO,EAAE,EAAIA,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,GAAKF,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAKE,EAEpCD,EAAK,IAAI,EAAED,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAI,EAAEA,EAAE,CAAC,EAAIA,EAAE,CAAC,GAAI,EAAEA,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAIL,EAAM,EACjEO,EAAID,EAAK,OAAON,EAAM,EACtB,KAAK,OAAO,EAAE,EAAIA,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAI,EAAEF,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAKE,EAErCD,EAAK,IAAID,EAAE,CAAC,EAAIA,EAAE,CAAC,EAAGA,EAAE,CAAC,EAAIA,EAAE,CAAC,EAAGA,EAAE,EAAE,EAAIA,EAAE,EAAE,EAAGL,EAAM,EACxDO,EAAID,EAAK,OAAON,EAAM,EACtB,KAAK,OAAO,EAAE,EAAIA,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,EAAIP,GAAO,CAAC,EAAIO,EAC9B,KAAK,OAAO,EAAE,GAAKF,EAAE,EAAE,EAAIA,EAAE,EAAE,GAAKE,CACtC,CAGA,SAASC,EAAwB,CAC/B,IAAMC,EAAID,EACNE,EAAS,GAEb,QAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAc1B,IAAMC,EAZJH,EAAE,CAAC,EAAI,KAAK,OAAOE,EAAI,CAAC,EACxBF,EAAE,CAAC,EAAI,KAAK,OAAOE,EAAI,EAAI,CAAC,EAC5BF,EAAE,CAAC,EAAI,KAAK,OAAOE,EAAI,EAAI,CAAC,EAC5B,KAAK,OAAOA,EAAI,EAAI,CAAC,GASKF,EAAE,CAAC,EAE/BC,EAASA,GAAUE,CACrB,CAEA,OAAOF,CACT,CAEA,OAAQ,CACN,IAAMG,EAAOF,GAAc,KAAK,OAAOA,CAAC,EAAE,QAAQ,CAAC,EAC7CG,EAASH,GACb,IAAIE,EAAIF,CAAC,CAAC,KAAKE,EAAIF,EAAI,CAAC,CAAC,KAAKE,EAAIF,EAAI,CAAC,CAAC,QAAQE,EAAIF,EAAI,CAAC,CAAC,IAI5D,MAAO;AAAA,EAHIR,EAAQ,YAAY,IAC7B,CAACY,EAAM,IAAM,KAAOA,EAAO,KAAOD,EAAM,EAAI,CAAC,CAC/C,EACyB,KAAK;AAAA,CAAI,CAAC;AAAA,EACrC,CACF,EC1IO,IAAME,GAAgB,CAC3B,eAAgB,EAChB,eAAgB,EAChB,SAAU,CACR,WAAY,EACZ,WAAY,CACd,CACF,EAOMC,GAAID,GACJE,GAAIF,GAAc,SAEXG,GAAc,IAAiB;AAAA;AAAA,qBAEvBD,GAAE,UAAU;AAAA;AAAA;AAAA,qBAGZA,GAAE,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKfD,GAAE,cAAc,KAAKA,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECLvD,IAAMG,GAAcC,GAAc,KAAK,MAAMA,EAAI,CAAC,EAErCC,GAA6BC,GACjCA,EAAO,cAAc,CAC1B,MAAOC,GAAYC,GAAkB,eAAe,EACpD,UAAW,UACX,UAAW,UACX,aAAc,UACd,aAAc,gBACd,aAAc,eAChB,CAAC,EAGUA,GAAN,MAAMC,CAAiB,CAC5B,OAAc,KAAe,mBAEZ,SACT,cAAwC,OACxC,kBAAgD,OAIxC,aAKT,cAAgC,CAAC,EAExC,YAAYH,EAAmB,CAC7B,KAAK,SAAWG,EAAiB,eAAeH,CAAM,EACtD,KAAK,aAAeD,GAA0BC,CAAM,CACtD,CAEA,OAAe,eAAeA,EAAmB,CAC/C,IAAMI,EAAeJ,EAAO,mBAAmB,CAC7C,MAAOK,GAAYF,CAAgB,EACnC,KAAMG,GAAY,CACpB,CAAC,EACD,OAAON,EAAO,sBAAsB,CAClC,MAAOO,GAAcJ,CAAgB,EACrC,OAAQ,OACR,QAAS,CACP,OAAQC,EACR,WAAY,MACd,CACF,CAAC,CACH,CAGA,oBACEJ,EACAQ,EACAC,EACAC,EAAyB,GACK,CAC9BC,GAAuBF,CAAc,EACrC,IAAMG,EAAOf,GAAWW,EAAW,KAAK,EAClCK,EAAOhB,GAAWW,EAAW,MAAM,EAGzC,GACE,KAAK,eAAe,QAAUI,GAC9B,KAAK,eAAe,SAAWC,GAC/B,KAAK,cAAc,OAAS,GAC5B,KAAK,mBAAqB,MAC1B,CAACH,EAED,MAAO,CAAC,KAAK,cAAe,KAAK,iBAAiB,EAIhD,KAAK,eACP,KAAK,cAAc,QAAQ,EAG7B,IAAII,EAAgB,KAAK,KAAK,KAAK,KAAK,KAAK,IAAIF,EAAMC,CAAI,CAAC,CAAC,EAC7D,QAAQ,IAAI,GAAGV,EAAiB,IAAI,2BAA2BS,CAAI,IAAIC,CAAI,SAASC,CAAa,aAAa,EAE9G,KAAK,cAAgBd,EAAO,cAAc,CACxC,MAAOC,GAAYE,EAAkB,UAAUS,CAAI,IAAIC,CAAI,EAAE,EAC7D,UAAW,KACX,KAAM,CAACD,EAAMC,EAAM,CAAC,EACpB,OAAQ,WACR,MACE,gBAAgB,SAChB,gBAAgB,gBAChB,gBAAgB,gBAClB,cAAAC,CACF,CAAC,EACD,KAAK,kBAAoB,KAAK,cAAc,WAAW,CACrD,MAAO,GAAG,KAAK,cAAc,KAAK,OACpC,CAAC,EAGD,KAAK,cAAgB,CAAC,EACtB,IAAIC,EAAWH,EACXI,EAAYH,EACZI,EAAmBR,EAElB,KAAK,+BAA+B,IAEvC,QAAQ,KAAK,4DAA4D,EACzEK,EAAgB,GAGlB,QAASI,EAAe,EAAGA,EAAeJ,EAAeI,IAAgB,CACvE,IAAMC,EAAc,KAAK,cAAc,WAAW,CAChD,MAAOlB,GAAYE,EAAkB,OAAOe,CAAY,EAAE,EAC1D,aAAAA,EACA,cAAe,CACjB,CAAC,EACKE,EAAW,KAAK,eACpBpB,EACA,OAAOkB,CAAY,GACnBD,EACAE,CACF,EAEA,KAAK,cAAc,KAAK,CACtB,MAAOD,EACP,YAAAC,EACA,SAAAC,EACA,MAAOL,EACP,OAAQC,CACV,CAAC,EAIDC,EAAmBE,EACnBJ,EAAWlB,GAAWkB,CAAQ,EAC9BC,EAAYnB,GAAWmB,CAAS,CAClC,CAEA,MAAO,CAAC,KAAK,cAAe,KAAK,iBAAiB,CACpD,CAEQ,gCAAiC,CAMvC,MAAO,EADgBK,IAAW,CAACC,EAAO,OAE5C,CAGA,sBACEC,EACAf,EACAC,EACA,CACA,GAAI,CAAC,KAAK,+BAA+B,EACvC,MAAO,GAGT,GAAM,CAAE,OAAAe,EAAQ,SAAAC,CAAS,EAAIF,EAC7BZ,GAAuBF,CAAc,EAErC,KAAK,oBAAoBc,EAAI,OAAQf,EAAYC,CAAc,EAG/D,IAAMiB,EAAcF,EAAO,iBAAiB,CAC1C,MAAOrB,EAAiB,KACxB,gBAAiBsB,GAAU,eAAetB,EAAiB,IAAI,CACjE,CAAC,EAED,OAAAuB,EAAY,YAAY,KAAK,QAAQ,EAErC,KAAK,cAAc,QAASC,GAC1B,KAAK,qBAAqBD,EAAaC,CAAK,CAC9C,EAEAD,EAAY,IAAI,EACT,EACT,CAEQ,qBACNA,EACAC,EACA,CACAD,EAAY,aAAa,EAAGC,EAAM,QAAQ,EAG1C,IAAMC,EAAiBC,GACrBF,EAAM,MACNG,GAAc,cAChB,EACMC,EAAiBF,GACrBF,EAAM,OACNG,GAAc,cAChB,EAGAJ,EAAY,mBAAmBE,EAAgBG,EAAgB,CAAC,CAElE,CAEQ,eAAiB,CACvB/B,EACAgC,EACAvB,EACAwB,IACiB,CACjBtB,GAAuBF,CAAc,EACrCE,GAAuBsB,CAAc,EACrC,IAAMC,EAAUJ,GAAc,SAE9B,OAAOK,GACLhC,EACA6B,EACAhC,EACA,KAAK,SACL,CACE,CAAE,QAASkC,EAAQ,WAAY,SAAUzB,CAAe,EACxD,CAAE,QAASyB,EAAQ,WAAY,SAAUD,CAAe,CAC1D,CACF,CACF,CACF,ECjPO,IAAMG,GAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAShD,SAASC,GAA0BC,EAAkC,CAC1EA,EAAW,KAAK,CAAC,CACnB,CCMO,IAAMC,GAAgB,CAC3B,SAAU,CACR,eAAgB,EAChB,oBAAqB,CACvB,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1CC,GAAqB,eAAeF,GAAE,cAAc,CAAC;AAAA,qBAClCA,GAAE,mBAAmB;AAAA;AAAA;AAAA,EAGxCG,EAAmB;AAAA,EACnBC,EAA4B;AAAA,EAC5BC,EAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiCDC,GAAN,MAAMC,CAA0B,CACrC,OAAc,KAAe,4BAEZ,eACA,cAAgB,IAAIC,GAErC,YAAYC,EAAmBC,EAAoC,CACjE,KAAK,eAAiBH,EAA0B,qBAC9CE,EACAC,CACF,CACF,CAEA,OAAe,qBACbD,EACAC,EACA,CACA,IAAMC,EAAeF,EAAO,mBAAmB,CAC7C,MAAOG,GAAYL,CAAyB,EAC5C,KAAMN,GAAY,CACpB,CAAC,EAED,OAAOQ,EAAO,qBAAqB,CACjC,MAAOI,GAAcN,CAAyB,EAC9C,OAAQ,OACR,OAAQ,CACN,OAAQI,EACR,WAAY,UACZ,QAAS,CAAC,CACZ,EACA,SAAU,CACR,OAAQA,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQD,CAAiB,CAAC,CACxC,EACA,UAAW,CAAE,SAAU,eAAgB,CACzC,CAAC,CACH,CAEA,iBAAmB,IAAM,KAAK,cAAc,MAAM,EAElD,QAAQI,EAAc,CACpB,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,iBAAAC,EAAkB,aAAAC,CAAa,EAAIJ,EAEvDK,EAAaJ,EAAO,gBAAgB,CACxC,MAAOR,EAA0B,KACjC,iBAAkB,CAChBa,GAAmBH,EAAkBI,GAAkB,CAAC,CAC1D,EACA,gBAAiBL,GAAU,eAAeT,EAA0B,IAAI,CAC1E,CAAC,EAEKe,EAAW,KAAK,cAAc,YAAYJ,EAAa,MAAO,IAClE,KAAK,eAAeJ,CAAG,CACzB,EACAK,EAAW,aAAa,EAAGG,CAAQ,EACnCH,EAAW,YAAY,KAAK,cAAc,EAC1CI,GAA0BJ,CAAU,EACpCA,EAAW,IAAI,CACjB,CAEQ,eAAiB,CAAC,CACxB,OAAAV,EACA,eAAAe,EACA,6BAAAC,CACF,IAA6B,CAC3B,IAAMzB,EAAID,GAAc,SAExB,OAAO2B,GACLnB,EACA,MACAE,EACA,KAAK,eACL,CACEe,EAAe,kBAAkBxB,EAAE,cAAc,EACjD,CACE,QAASA,EAAE,oBACX,SAAUyB,CACZ,CACF,CACF,CACF,CACF,ECxIO,IAAME,GAAgB,CAC3B,eAAgB,GAChB,eAAgB,MAChB,oBAAqB,GAAGC,EAAO,OAAO,WAAW,mBAAmB,IACpE,SAAU,CACR,eAAgB,EAChB,oBAAqB,EACrB,uBAAwB,EACxB,uBAAwB,EACxB,iBAAkB,EAClB,oBAAqB,EACrB,oBAAqB,EACrB,aAAc,CAChB,CACF,EAKMC,GAAIF,GACJG,GAAIH,GAAc,SAEXI,GAAc,IAAiB;AAAA;AAAA,EAE1CC,GAAqB,eAAeF,GAAE,cAAc,CAAC;AAAA,EACrCG,EAAW;AAAA,EACXC,EAAK;AAAA,EACrBC,EAAuB;AAAA,EACvBC,EAAyB;AAAA;AAAA;AAAA,EAGzBC,GAAiBP,GAAE,mBAAmB,CAAC;AAAA;AAAA;AAAA,EAGvCQ,GAA8BR,GAAE,uBAAwB,YAAY,CAAC;AAAA;AAAA,EAErES,GAA4BT,GAAE,uBAAwB,YAAY,CAAC;AAAA;AAAA;AAAA,EAGnEU,GAA8BV,GAAE,iBAAkB,YAAY,CAAC;AAAA;AAAA,EAE/DW,GAA4BX,GAAE,oBAAqB,YAAY,CAAC;AAAA;AAAA;AAAA,qBAG7CA,GAAE,mBAAmB;AAAA;AAAA,qBAErBA,GAAE,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMjBD,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCASFF,GAA4B,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,sDAKpBE,GAAE,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA8E9DF,GAA4B,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECrJ3C,IAAMe,GAAN,MAAMC,CAAkB,CAC7B,OAAc,KAAe,oBAEZ,SACA,cAAgB,IAAIC,GAErC,YAAYC,EAAmB,CAC7B,IAAMC,EAAeD,EAAO,mBAAmB,CAC7C,MAAOE,GAAYJ,CAAiB,EACpC,KAAMK,GAAY,CACpB,CAAC,EAED,KAAK,SAAWH,EAAO,sBAAsB,CAC3C,MAAOI,GAAcN,CAAiB,EACtC,OAAQ,OACR,QAAS,CACP,OAAQG,EACR,WAAY,MACd,CACF,CAAC,CACH,CAEA,iBAAmB,IAAM,CACvB,KAAK,cAAc,MAAM,CAC3B,EAEA,iBAAiBI,EAAcC,EAA4B,CACzD,GAAM,CAAE,OAAAC,EAAQ,SAAAC,CAAS,EAAIH,EAG7BC,EAAa,QAAQ,qCAAqCC,CAAM,EAChED,EAAa,QAAQ,6BAA6BC,CAAM,EAExD,IAAME,EAAcF,EAAO,iBAAiB,CAC1C,MAAOT,EAAkB,KACzB,gBAAiBU,GAAU,eAAeV,EAAkB,IAAI,CAClE,CAAC,EAEKY,EAAW,KAAK,SAChBC,EAAW,KAAK,cAAc,YAAYL,EAAa,KAAM,IACjE,KAAK,eAAeD,EAAKK,EAAUJ,CAAY,CACjD,EAEAG,EAAY,YAAYC,CAAQ,EAChCD,EAAY,aAAa,EAAGE,CAAQ,EAIpC,IAAMC,EAAiB,KAAK,IAC1BN,EAAa,eACbO,GAAc,cAChB,EAMAJ,EAAY,mBACVG,EANqB,EACA,CAQvB,EAEAH,EAAY,IAAI,CAClB,CAEQ,eAAiB,CACvB,CACE,OAAAT,EACA,eAAAc,EACA,6BAAAC,EACA,oBAAAC,CACF,EACAN,EACAJ,IACiB,CACjB,IAAMW,EAAIJ,GAAc,SACxBK,GAAuBH,CAA4B,EAEnD,IAAMI,EAAUb,EAAa,QAE7B,OAAOc,GACLtB,EACAQ,EAAa,KACbN,EACAU,EACA,CACEI,EAAe,kBAAkBG,EAAE,cAAc,EACjDX,EAAa,uBAAuBW,EAAE,mBAAmB,EACzDE,EAAQ,yBAAyBF,EAAE,sBAAsB,EACzDE,EAAQ,uBAAuBF,EAAE,sBAAsB,EACvDE,EAAQ,yBAAyBF,EAAE,gBAAgB,EACnDE,EAAQ,uBAAuBF,EAAE,mBAAmB,EACpD,CACE,QAASA,EAAE,oBACX,SAAUF,CACZ,EACA,CAAE,QAASE,EAAE,aAAc,SAAUD,CAAoB,CAC3D,CACF,CACF,CACF,EC7GO,IAAMK,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA8BRC,GAAU,IAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECjC/C,IAAMC,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECenC,IAAMC,GAAgB,CAC3B,SAAU,CACR,eAAgB,EAChB,oBAAqB,EACrB,oBAAqB,EACrB,oBAAqB,EACrB,gBAAiB,EACjB,QAAS,CACX,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1CC,GAAqB,eAAeF,GAAE,cAAc,CAAC;AAAA,EACrDG,EAAc;AAAA,EACdC,EAAe;AAAA,EACCC,EAAa;AAAA,EAC7BC,EAAmB;AAAA,EACnBC,EAAe;AAAA,EACCC,EAA0B;AAAA;AAAA;AAAA,EAG1CC,GAA8BT,GAAE,oBAAqB,MAAM,CAAC;AAAA;AAAA;AAAA,EAG5DU,GAAiBV,GAAE,mBAAmB,CAAC;AAAA;AAAA;AAAA,EAGvCW,GAA4BX,GAAE,oBAAqB,MAAM,CAAC;AAAA;AAAA,qBAEvCA,GAAE,eAAe;AAAA;AAAA;AAAA,qBAGjuBA8B3CC,EAAoB;AAAA;AAAA;AAAA;AAAA,8BAIbC,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECxJlD,IAAMC,GAAN,MAAMC,CAAoB,CAC/B,OAAc,KAAe,sBAEZ,SACA,cAAgB,IAAIC,GAErC,YAAYC,EAAmBC,EAAoC,CACjE,IAAMC,EAAeF,EAAO,mBAAmB,CAC7C,MAAOG,GAAYL,CAAmB,EACtC,KAAMM,GAAY,CACpB,CAAC,EAED,KAAK,SAAWJ,EAAO,qBAAqB,CAC1C,MAAOK,GAAcP,CAAmB,EACxC,OAAQ,OACR,OAAQ,CACN,OAAQI,EACR,WAAY,UACZ,QAAS,CAAC,CACZ,EACA,SAAU,CACR,OAAQA,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQD,CAAiB,CAAC,CACxC,EACA,UAAW,CACT,SAAU,OACV,SAAU,gBACV,iBAAkB,MACpB,EACA,aAAc,CACZ,kBAAmB,GACnB,aAAc,OACd,OAAQK,EACV,CACF,CAAC,CACH,CAEA,oBACEC,EACAC,EACAC,EACA,CACA,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,EAAc,iBAAAC,CAAiB,EAAIN,EAGvDO,EAAaJ,EAAO,gBAAgB,CACxC,MAAOZ,EAAoB,KAC3B,iBAAkB,CAChBiB,GAAmBF,EAAkBG,GAAkB,EAAGP,CAAM,CAClE,EACA,uBAAwBQ,GAA0BL,EAAcH,CAAM,EACtE,gBAAiBE,GAAU,eAAeb,EAAoB,IAAI,CACpE,CAAC,EACKoB,EAAW,KAAK,cAAc,YAAYV,EAAa,KAAM,IACjE,KAAK,eAAeD,EAAKC,CAAY,CACvC,EAGAM,EAAW,YAAY,KAAK,QAAQ,EACpCA,EAAW,aAAa,EAAGI,CAAQ,EAGnCJ,EAAW,aAAaN,EAAa,QAAQ,qBAAsB,CAAC,EAGpEM,EAAW,IAAI,CACjB,CAEQ,eAAiB,CACvB,CAAE,OAAAd,EAAQ,eAAAmB,EAAgB,MAAAC,CAAM,EAChCZ,IACiB,CACjB,IAAMa,EAAIC,GAAc,SAClBC,EAAUf,EAAa,QAE7B,OAAOgB,GACL1B,EACAU,EAAa,KACbR,EACA,KAAK,SACL,CACEmB,EAAe,kBAAkBE,EAAE,cAAc,EACjDb,EAAa,uBAAuBa,EAAE,mBAAmB,EACzDE,EAAQ,yBAAyBF,EAAE,mBAAmB,EACtDE,EAAQ,uBAAuBF,EAAE,mBAAmB,EACpDb,EAAa,SAAS,KAAKa,EAAE,eAAe,EAE5C,CAAE,QAASA,EAAE,QAAS,SAAUD,EAAM,cAAe,CACvD,CACF,CACF,CACF,ECxGO,IAAMK,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECGhC,IAAMC,GAAgB,CAC3B,SAAU,CACR,eAAgB,EAChB,WAAY,CACd,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1CC,EAA4B;AAAA,EAC5BC,EAAc;AAAA,EACdC,EAAY;AAAA;AAAA,EAEZC,GAAqB,eAAeL,GAAE,cAAc,CAAC;AAAA;AAAA,qBAElCA,GAAE,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAuBVM,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECpChC,IAAMC,GAAN,MAAMC,CAAY,CACvB,OAAc,KAAe,cAEZ,eACA,cAAgB,IAAIC,GAErC,YAAYC,EAAmBC,EAAoC,CACjE,IAAMC,EAAeF,EAAO,mBAAmB,CAC7C,MAAOG,GAAYL,CAAW,EAC9B,KAAMM,GAAY,CACpB,CAAC,EAED,KAAK,eAAiBJ,EAAO,qBAAqB,CAChD,MAAOK,GAAcP,CAAW,EAChC,OAAQ,OACR,OAAQ,CACN,OAAQI,EACR,WAAY,UACZ,QAAS,CAAC,CACZ,EACA,SAAU,CACR,OAAQA,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQD,CAAiB,CAAC,CACxC,EACA,UAAW,CAAE,SAAU,eAAgB,CACzC,CAAC,CACH,CAEA,iBAAmB,IAAM,KAAK,cAAc,MAAM,EAElD,QAAQK,EAAcC,EAA+B,CACnD,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,CAAa,EAAIJ,EAC3CK,GAAuBJ,CAAa,EAEpC,IAAMK,EAAaJ,EAAO,gBAAgB,CACxC,MAAOV,EAAY,KACnB,iBAAkB,CAEhBe,GAAmBN,EAAeO,GAAkB,CAAC,CACvD,EACA,gBAAiBL,GAAU,eAAeX,EAAY,IAAI,CAC5D,CAAC,EAEKiB,EAAW,KAAK,cAAc,YAAYL,EAAa,MAAO,IAClE,KAAK,eAAeJ,CAAG,CACzB,EACAM,EAAW,aAAa,EAAGG,CAAQ,EACnCH,EAAW,YAAY,KAAK,cAAc,EAC1CI,GAA0BJ,CAAU,EACpCA,EAAW,IAAI,CACjB,CAEQ,eAAiB,CAAC,CACxB,OAAAZ,EACA,eAAAiB,EACA,iBAAAC,CACF,IAA6B,CAC3B,IAAMC,EAAIC,GAAc,SAExB,OAAOC,GACLvB,EACA,MACAE,EACA,KAAK,eACL,CACEiB,EAAe,kBAAkBE,EAAE,cAAc,EACjD,CAAE,QAASA,EAAE,WAAY,SAAUD,CAAiB,CACtD,CACF,CACF,CACF,ECxEO,IAAMI,GAAN,MAAMC,CAAgB,CAC3B,OAAc,KAAe,kBAEZ,SACA,cAAgB,IAAIC,GAG9B,aAA0B,OAEjC,YAAYC,EAAmB,CAC7B,IAAMC,EAAeD,EAAO,mBAAmB,CAC7C,MAAOE,GAAYJ,CAAe,EAClC,KAAMK,GAAY,CACpB,CAAC,EACD,KAAK,SAAWH,EAAO,sBAAsB,CAC3C,MAAOI,GAAcN,CAAe,EACpC,OAAQ,OACR,QAAS,CACP,OAAQG,EACR,WAAY,MACd,CACF,CAAC,CACH,CAGA,iBAAiBI,EAAc,CAC7BA,EAAI,OAAO,YAAY,KAAK,aAAc,EAAG,KAAK,aAAa,IAAI,CACrE,CAEA,iBAAmB,CAACL,EAAmBM,IAA6B,CAClE,KAAK,cAAc,MAAM,EAErB,KAAK,cACP,KAAK,aAAa,QAAQ,EAG5B,KAAK,aAAeN,EAAO,aAAa,CACtC,MAAO,eACP,KAAMO,EAAYD,EAAa,MAAQA,EAAa,OACpD,MACE,eAAe,QACf,eAAe,SACf,eAAe,SACf,eAAe,QACnB,CAAC,CACH,EAEA,qBAAqBD,EAAcG,EAA4B,CAC7D,GAAM,CAAE,OAAAC,EAAQ,SAAAC,CAAS,EAAIL,EAGvBM,EAAcF,EAAO,iBAAiB,CAC1C,MAAOX,EAAgB,KACvB,gBAAiBY,GAAU,eAAeZ,EAAgB,IAAI,CAChE,CAAC,EAEKc,EAAW,KAAK,cAAc,YAAYJ,EAAa,KAAM,IACjE,KAAK,eAAeH,EAAK,KAAK,aAAcG,CAAY,CAC1D,EACAG,EAAY,YAAY,KAAK,QAAQ,EACrCA,EAAY,aAAa,EAAGC,CAAQ,EAGpCJ,EAAa,QAAQ,gCAAgCG,CAAW,EAEhEA,EAAY,IAAI,CAClB,CAEQ,eAAiB,CACvB,CAAE,OAAAX,EAAQ,eAAAa,CAAe,EACzBC,EACAN,IACiB,CACjB,IAAMO,EAAIC,GAAc,SAClBC,EAAUT,EAAa,QAE7B,OAAOU,GACLpB,EACAU,EAAa,KACbR,EACA,KAAK,SACL,CACEa,EAAe,kBAAkBE,EAAE,cAAc,EACjD,CAAE,QAASA,EAAE,aAAc,SAAU,CAAE,OAAQD,CAAa,CAAE,EAC9DG,EAAQ,oBAAoBF,EAAE,eAAe,EAC7CE,EAAQ,kBAAkBF,EAAE,aAAa,EACzCE,EAAQ,gBAAgBF,EAAE,WAAW,EACrCE,EAAQ,gBAAgBF,EAAE,YAAY,EACtCE,EAAQ,sBAAsBF,EAAE,eAAe,EAC/CE,EAAQ,0BAA0BF,EAAE,kBAAkB,EACtDP,EAAa,uBAAuBO,EAAE,mBAAmB,CAC3D,CACF,CACF,CACF,EC/FO,IAAMI,GAAgB,CAC3B,SAAU,CACR,eAAgB,EAChB,yBAA0B,CAC5B,CACF,EAMMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,EAE1CC,EAA4B;AAAA,EACZC,EAAa;AAAA,EACbC,EAA0B;AAAA,EAC1CC,EAAmB;AAAA,EACnBC,EAAe;AAAA;AAAA,EAEfC,GAAqB,eAAeP,GAAE,cAAc,CAAC;AAAA,EACrDQ,GAAkCR,GAAE,yBAA0B,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4DhDS,EAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,8BAKbC,EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECnFlD,IAAMC,GAAN,MAAMC,CAAiB,CAC5B,OAAc,KAAe,mBAEZ,SACA,cAAgB,IAAIC,GAErC,YAAYC,EAAmBC,EAAoC,CACjE,IAAMC,EAAeF,EAAO,mBAAmB,CAC7C,MAAOG,GAAYL,CAAgB,EACnC,KAAMM,GAAY,CACpB,CAAC,EAED,KAAK,SAAWJ,EAAO,qBAAqB,CAC1C,MAAOK,GAAcP,CAAgB,EACrC,OAAQ,OACR,OAAQ,CACN,OAAQI,EACR,WAAY,UACZ,QAAS,CAAC,CACZ,EACA,SAAU,CACR,OAAQA,EACR,WAAY,UACZ,QAAS,CACP,CACE,OAAQD,EACR,MAAO,CAGL,MAAO,CACL,UAAW,YACX,UAAW,sBACX,UAAW,KACb,EACA,MAAO,CACL,UAAW,MACX,UAAW,MACX,UAAW,KACb,CACF,CACF,CACF,CACF,EACA,UAAW,CAAE,SAAU,eAAgB,EACvC,aAAcK,EAChB,CAAC,CACH,CAEA,iBAAmB,IAAM,KAAK,cAAc,MAAM,EAElD,wBAAwBC,EAAc,CACpC,GAAM,CACJ,OAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,mBAAAC,EACA,aAAAC,CACF,EAAIL,EACJM,GAAuBH,CAAgB,EAEvC,IAAMI,EAAaN,EAAO,gBAAgB,CACxC,MAAOV,EAAiB,KACxB,iBAAkB,CAEhBiB,GAAmBL,EAAkBM,GAAkB,EAAG,MAAM,CAClE,EACA,uBAAwBC,GAA0BL,EAAc,MAAM,EACtE,gBAAiBH,GAAU,eAAeX,EAAiB,IAAI,CACjE,CAAC,EAEKoB,EAAW,KAAK,cAAc,YAAYN,EAAa,MAAO,IAClE,KAAK,eAAeL,EAAKI,CAAkB,CAC7C,EACAG,EAAW,aAAa,EAAGI,CAAQ,EACnCJ,EAAW,YAAY,KAAK,QAAQ,EACpCK,GAA0BL,CAAU,EACpCA,EAAW,IAAI,CACjB,CAEQ,eAAiB,CACvB,CAAE,OAAAd,EAAQ,eAAAoB,CAAe,EACzBT,IACiB,CACjB,IAAMU,EAAIC,GAAc,SAExB,OAAOC,GACLzB,EACAA,EAAiB,KACjBE,EACA,KAAK,SACL,CACEoB,EAAe,kBAAkBC,EAAE,cAAc,EACjD,CACE,QAASA,EAAE,yBACX,SAAU,CAAE,OAAQV,CAAmB,CACzC,CACF,CACF,CACF,CACF,EChGA,IAAMa,IACFC,GAAW,IAAMA,GAAW,MAAQ,MAAU,IAErCC,GAAgB,CAC3B,SAAU,CACR,eAAgB,CAClB,CACF,EACMC,GAAID,GAAc,SAElBE,GAAc,CAClBC,EACAC,EACAC,IACc;AAAA;AAAA,EAEdC,GAAqB,eAAeL,GAAE,cAAc,CAAC;AAAA;AAAA,YAE3CI,CAAW;AAAA,iBACNF,CAAM;AAAA,eACRC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAiBEN,EAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqCpCS,GAAN,MAAMC,CAAe,CAM1B,YAA6BC,EAAoC,CAApC,sBAAAA,CAAqC,CALlE,OAAc,KAAe,iBAErB,SACS,cAAgB,IAAIC,GAI7B,kBAAkBC,EAAiC,CACzD,GAAI,KAAK,WAAa,OACpB,OAAO,KAAK,SAGd,GAAM,CAAE,OAAAC,CAAO,EAAID,EACb,CAACR,EAAQC,EAAMC,CAAW,EAAIQ,GAAoBF,CAAG,EAErDG,EAAOZ,GAAYC,EAAQC,EAAMC,CAAW,EAC5CU,EAAeH,EAAO,mBAAmB,CAAE,KAAAE,CAAK,CAAC,EAEjDE,EAAiBJ,EAAO,qBAAqB,CACjD,MAAO,gBACP,OAAQ,OACR,OAAQ,CACN,OAAQG,EACR,WAAY,UACZ,QAAS,CAAC,CACZ,EACA,SAAU,CACR,OAAQA,EACR,WAAY,UACZ,QAAS,CACP,CACE,OAAQ,KAAK,iBACb,MAAO,CAIL,MAAO,CACL,UAAW,sBACX,UAAW,YACX,UAAW,KACb,EACA,MAAO,CACL,UAAW,MACX,UAAW,MACX,UAAW,KACb,CACF,CACF,CACF,CACF,EACA,UAAW,CACT,SAAU,OACV,SAAU,iBACV,iBAAkB,MACpB,EACA,aAAcE,EAChB,CAAC,EAED,YAAK,SAAWD,EACTA,CACT,CAEA,cAAcL,EAAcO,EAAmB,CAC7C,GAAM,CAAE,OAAAC,EAAQ,SAAAC,EAAU,aAAAC,EAAc,iBAAAC,CAAiB,EAAIX,EAEvDY,EAAaJ,EAAO,gBAAgB,CACxC,MAAOX,EAAe,KACtB,iBAAkB,CAChBgB,GAAmBF,EAAkBG,GAAkB,EAAGP,CAAM,CAClE,EACA,uBAAwBQ,GAA0BL,EAAcH,CAAM,EACtE,gBAAiBE,GAAU,eAAeZ,EAAe,IAAI,CAC/D,CAAC,EAEKmB,EAAW,KAAK,kBAAkBhB,CAAG,EAErCiB,EAAW,KAAK,cAAc,YAAYpB,EAAe,KAAM,IACnE,KAAK,eAAeG,EAAKgB,CAAQ,CACnC,EAGAJ,EAAW,YAAYI,CAAQ,EAC/BJ,EAAW,aAAa,EAAGK,CAAQ,EACnCL,EAAW,KAAK,EAAG,EAAG,EAAG,CAAC,EAC1BA,EAAW,IAAI,CACjB,CAEQ,eAAiB,CACvB,CAAE,OAAAX,EAAQ,eAAAiB,CAAe,EACzBF,IACiB,CACjB,IAAM1B,EAAID,GAAc,SAExB,OAAO8B,GAA2BtB,EAAgB,GAAII,EAAQe,EAAU,CACtEE,EAAe,kBAAkB5B,EAAE,cAAc,CACnD,CAAC,CACH,CACF,EAEA,SAASY,GAAoB,CAAE,MAAAkB,CAAM,EAAY,CAC/C,GAAM,CAACC,EAAQC,CAAQ,EAAIC,GAAiB,EACtCC,EAAMC,GAAK,OAAO,EAExBL,EAAM,cAAc,QAASM,GAAM,CACjC,IAAMC,EAAOD,EAAE,OAAO,IACtBA,EAAE,UAAU,WAAW,QAASE,GAAW,CACzCN,EAASO,GAAaD,EAAQD,EAAK,CAAC,EAAGH,CAAG,CAAC,EAC3CF,EAASO,GAAaD,EAAQD,EAAK,CAAC,EAAGH,CAAG,CAAC,CAC7C,CAAC,CACH,CAAC,EAED,IAAMhC,EAAS,SAAS6B,EAAO,CAAC,EAAE,CAAC,CAAC,KAAKA,EAAO,CAAC,EAAE,CAAC,CAAC,IAC/CS,EAAS,CAACT,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,EAAGA,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,CAAC,EAClE5B,EAAO,SAASqC,EAAO,CAAC,CAAC,KAAKA,EAAO,CAAC,CAAC,IACvCpC,EAAc,OAAO2B,EAAO,CAAC,EAAE,CAAC,CAAC,IAEvC,MAAO,CAAC7B,EAAQC,EAAMC,CAAW,CACnC,CC/KO,IAAMqC,GAAN,KAAe,CAgCpB,YACmBC,EACjBC,EACAC,EACiBC,EACjB,CAJiB,YAAAH,EAGA,cAAAG,EAEjB,KAAK,oBAAsB,IAAIC,GAAqBJ,CAAM,EAE1D,KAAK,aAAe,IAAIK,GAAgBL,EAAQM,EAAqB,EACrE,KAAK,gBAAkB,IAAIC,GAAgBP,EAAQM,EAAqB,EACxE,KAAK,gBAAkB,IAAIE,GAAgBR,CAAM,EACjD,KAAK,iBAAmB,IAAIS,GAAiBT,CAAM,EACnD,KAAK,kBAAoB,IAAIU,GAAkBV,CAAM,EACrD,KAAK,oBAAsB,IAAIW,GAC7BX,EACAM,EACF,EACA,KAAK,iBAAmB,IAAIM,GAAiBZ,EAAQM,EAAqB,EAC1E,KAAK,iBAAmB,IAAIO,GAAiBb,CAAM,EACnD,KAAK,0BAA4B,IAAIc,GACnCd,EACAM,EACF,EACA,KAAK,eAAiB,IAAIS,GAAeT,EAAqB,EAC9D,KAAK,YAAc,IAAIU,GAAYhB,EAAQE,CAAqB,EAGhE,KAAK,qBAAuB,IAAIe,GAC9BjB,EACAM,GACA,KAAK,mBACP,EACA,KAAK,6BAA+B,IAAIY,GACtClB,EACAM,GACA,KAAK,mBACP,EAEA,KAAK,WAAa,IAAIa,GACtB,KAAK,cAAgBC,GAA0BnB,CAAY,EAE3D,KAAK,qBAAqBA,CAAY,CACxC,CAzEiB,oBACD,WACC,cAAyB,IAAIoB,GACtC,cACS,YAAcC,GAAK,SAAS,EAC5B,aAA2B,CAAE,MAAO,EAAG,OAAQ,CAAE,EAC1D,SAAW,EAGX,aAA2B,OAC3B,iBAAmC,OACnC,iBAA+B,OAC/B,qBAAuC,OAG9B,aACA,gBACA,gBACA,iBACA,kBACA,oBACA,iBACA,eACA,YAEA,iBACA,0BAEA,qBACA,6BA8CjB,aAAaC,EAAmBC,EAAoB,CAClD,KAAK,WAAW,OAAOD,EAAWC,CAAK,CACzC,CAEA,UACEC,EACAC,EACAC,EACA,CACAC,GAAuBD,CAAa,EAEpC,IAAME,EAAa,KAAK,WAAW,WAC7BC,EAAWC,GACfF,EACA,KAAK,cACL,KAAK,WACP,EACA,KAAK,cAAc,OAAOC,CAAQ,EAClC,GAAM,CAACE,EAAkBC,CAAmB,EAC1C,KAAK,iBAAiB,oBACpB,KAAK,OACL,KAAK,aACL,KAAK,gBACP,EACIC,EAAe,CACnB,SAAU,KAAK,SACf,OAAAT,EACA,SAAU,KAAK,aACf,MAAAC,EACA,iBAAkB,KAAK,qBACvB,mBAAoB,KAAK,gBAAgB,aACzC,0BAA2BS,GAA4B,EACvD,OAAQ,KAAK,OACb,SAAU,KAAK,SACf,WAAAN,EACA,SAAAC,EACA,WAAY,KAAK,cACjB,cAAe,KAAK,cACpB,yBAA0B,KAAK,WAAW,mBAC1C,aAAc,KAAK,iBACnB,6BAA8BG,EAC9B,eAAgB,KAAK,oBACrB,oBAAqB,KAAK,iBAAiB,YAC7C,EAEA,KAAK,oBAAoB,OAAOC,CAAG,EAE/BE,EAAO,cAAgB,UACzB,KAAK,qBAAqB,KAAKF,CAAG,EAElCE,EAAO,cAAgB,oBACvBA,EAAO,cAAgB,sBAEvB,KAAK,6BAA6B,KAAKF,CAAG,EAGtCE,EAAO,OAAO,OAAO,eAAiB,MACxC,KAAK,kBAAkBF,CAAG,EAE1B,KAAK,kBAAkBA,CAAG,EAI9B,KAAK,YAAY,QAAQA,EAAKP,CAAa,EAE3C,KAAK,UAAY,CACnB,CAEQ,kBAAkBO,EAAc,CACtC,GAAM,CAAE,cAAAG,CAAc,EAAIH,EAAI,MAE9B,KAAK,aAAa,eAAe,EAGjC,QAASI,EAAI,EAAGA,EAAID,EAAc,OAAQC,IAAK,CAC7C,IAAMC,EAAeF,EAAcC,CAAC,EAC9BE,EAAoBF,GAAK,EAAI,QAAU,OAE7C,KAAK,aAAa,KAAKJ,EAAKK,EAAcC,CAAM,CAClD,CAGIJ,EAAO,YACT,KAAK,eAAe,cAAcF,EAAK,MAAM,EAG/C,KAAK,aAAa,iBAAiBA,CAAG,CACxC,CAEQ,kBAAkBA,EAAc,CACtC,GAAM,CAAE,cAAAG,CAAc,EAAIH,EAAI,MACxBO,EAA2BP,EAAI,0BAEjCO,GACF,KAAK,gBAAgB,iBAAiBP,CAAG,EAI3C,QAAS,EAAI,EAAG,EAAIG,EAAc,OAAQ,IAAK,CAC7C,IAAME,EAAeF,EAAc,CAAC,EAC9BG,EAAoB,GAAK,EAAI,QAAU,OAExCJ,EAAO,OAAO,OAAO,sBACpBA,EAAO,iBAAiB,SAC1B,KAAK,kBAAkB,iBAAiBF,EAAKK,CAAY,EAE3D,KAAK,iBAAiB,gBAAgBL,EAAKK,CAAY,GAIzD,KAAK,gBAAgB,qBAAqBL,EAAKK,EAAcC,CAAM,EAG/DC,GACF,KAAK,gBAAgB,qBAAqBP,EAAKK,CAAY,EAIzDH,EAAO,iBAAiB,SAC1B,KAAK,oBAAoB,oBAAoBF,EAAKK,EAAc,MAAM,CAE1E,CAGIE,GACF,KAAK,iBAAiB,wBAAwBP,CAAG,EAI/CE,EAAO,YACT,KAAK,eAAe,cAAcF,EAAK,MAAM,EAI/C,IAAMQ,EAAY,KAAK,iBAAiB,sBACtCR,EACA,KAAK,aACL,KAAK,gBACP,EACAE,EAAO,OAAO,OAAO,qBAAuBM,EAExCN,EAAO,cAAgB,qBACzB,KAAK,0BAA0B,QAAQF,CAAG,CAE9C,CAEQ,qBAAwBjC,GAA6B,CAC3D,QAAQ,IAAI,kBAAmBA,CAAY,EAC3CmC,EAAO,OAAO,OAAO,qBAAuB,GAE5C,KAAK,aAAa,MAAQnC,EAAa,MACvC,KAAK,aAAa,OAASA,EAAa,OAExC,KAAK,cAAgBmB,GAA0BnB,CAAY,EAEvD,KAAK,cACP,KAAK,aAAa,QAAQ,EAExB,KAAK,kBACP,KAAK,iBAAiB,QAAQ,EAGhC,IAAM0C,EAAQ,GAAG1C,EAAa,KAAK,IAAIA,EAAa,MAAM,GAE1D,KAAK,iBAAmB,KAAK,OAAO,cAAc,CAChD,MAAO,eAAe0C,CAAK,GAC3B,KAAM,CAAC1C,EAAa,MAAOA,EAAa,MAAM,EAC9C,OAAQK,GACR,MACE,gBAAgB,kBAAoB,gBAAgB,eACxD,CAAC,EACD,KAAK,qBAAuB,KAAK,iBAAiB,WAAW,EAE7D,KAAK,aAAe,KAAK,OAAO,cAAc,CAC5C,MAAO,iBAAiBqC,CAAK,GAC7B,KAAM,CAAC1C,EAAa,MAAOA,EAAa,MAAM,EAC9C,OAAQ2C,GACR,MACE,gBAAgB,kBAAoB,gBAAgB,eACxD,CAAC,EACD,KAAK,iBAAmB,KAAK,aAAa,WAAW,EAGrD,KAAK,0BAA0B,iBAAiB,EAChD,KAAK,iBAAiB,iBAAiB,EACvC,KAAK,kBAAkB,iBAAiB,EACxC,KAAK,gBAAgB,iBAAiB,KAAK,OAAQ3C,CAAY,EAC/D,KAAK,iBAAiB,oBACpB,KAAK,OACL,KAAK,aACL,KAAK,iBACL,EACF,EACA,KAAK,iBAAiB,iBAAiB,EACvC,KAAK,YAAY,iBAAiB,CACpC,EAEA,eAAiB4C,GAAS,KAAK,qBAAsB,GAAG,CAC1D,ECjTO,SAASC,GACdC,EACAC,EACA,CACA,IAAMC,EAAUC,EAAgB,EAChCH,EAAO,MAAQE,EAAQ,MACvBF,EAAO,OAASE,EAAQ,OACxB,QAAQ,IAAI,oBAAqBA,CAAO,EAExC,IAAME,EAA6B,CAAC,EAOpC,MAAO,CACL,qBAAAC,EACA,YARmBC,GAAqBF,EAAU,KAAKE,CAAC,EASxD,gBAAAH,EACA,qBAP2B,IAC3BF,EAAc,kBAAkB,EAAE,WAAW,CAO/C,EAEA,SAASI,GAAuB,CAC9B,IAAMH,EAAUC,EAAgB,GAE9BD,EAAQ,QAAUF,EAAO,OAASE,EAAQ,SAAWF,EAAO,SAE5CE,EAAQ,OAASA,EAAQ,QACzCK,EAAYL,CAAO,CAEvB,CAEA,SAASK,EAAYC,EAAe,CAElCR,EAAO,MAAQQ,EAAE,MACjBR,EAAO,OAASQ,EAAE,OAClBJ,EAAU,QAASK,GAAMA,EAAED,CAAC,CAAC,CAC/B,CAEA,SAASL,GAA8B,CAErC,IAAMO,EAAoB,OAAe,kBAAoB,EAC7D,MAAO,CACL,MAAOV,EAAO,YAAcU,EAC5B,OAAQV,EAAO,aAAeU,CAChC,CACF,CACF,CClDO,SAASC,GAAkBC,EAAmB,CACnD,IAAMC,EAAiC,CACrC,WACA,gBACA,YACF,EACMC,EAAmBD,EAAa,WAAW,EAE7CE,EAAmB,IAEvB,MAAO,CACL,gBAAAC,EACA,sBAAAC,CACF,EAEA,SAASD,EAAgBE,EAAoB,IAAK,CAChDH,EAAmBG,EACnBL,EAAa,QAASM,GAAOP,EAAO,eAAeO,CAAE,CAAC,CACxD,CAEA,eAAeF,EAAsBG,EAAc,CACjD,IAAIC,EAEJ,QAAWC,KAAQR,EAAkB,CACnC,IAAMS,EAAM,MAAMX,EAAO,cAAc,EACvC,GAAIW,EAAK,CACP,IAAMC,EAAM,iBAAiBT,CAAgB,KAAKO,CAAI,MAAMC,EAAI,OAAO,GACvEF,EAAYG,EACRJ,EACFA,EAAGI,CAAG,EAEN,QAAQ,MAAMA,CAAG,CAErB,CACF,CAEA,OAAOH,CACT,CACF,CC1BA,IAAMI,GAAc,GAKdC,GAAuB,GAEvBC,GAAc,CAClBC,EACAC,EACAC,IAGO,GADYF,EAAO,wBAA6B,KAAY,QAAU,eACzD,MAAME,EAAI,SAAS,EAAE,CAAC,KAAKD,EAAI,UAAU,WAAWE,GAAYF,CAAG,CAAC,KAAKA,EAAI,MAAM,UAI5FG,GAAU,CAACH,EAAgBI,EAAsB,QAAU,CACtE,IAAAJ,EACA,MAAAI,CACF,GAEA,SAASC,GACPN,EACAO,EACAN,EACA,CACA,IAAMO,EAAW,mBAAoBR,EAAS,iBAAmB,UAC3DS,EAAcT,EAAOQ,CAAQ,EAAEP,EAAI,OAASA,EAAI,iBAAiB,EACvE,OAAAD,EAAOO,CAAI,EAAE,IAAIN,EAAKQ,EAAcR,EAAI,iBAAiB,EACrDJ,IACF,QAAQ,IAAI,SAASE,GAAYC,EAAQC,EAAKQ,CAAW,CAAC,EAAE,EAEvDA,CACT,CAEA,SAASC,GAAwBT,EAAsC,CACrE,GAAIA,aAAe,aAAc,MAAO,UACxC,GAAIA,aAAe,YAAa,MAAO,UACvC,GAAIA,aAAe,WAAY,MAAO,SACtC,GAAIA,aAAe,WAAY,MAAO,QAExC,CAEA,SAASU,GACPX,EACAY,EACAC,EACA,CACA,GAAI,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,UAAYA,IAAQ,KAChE,OAAOA,EAET,IAAMN,EAAOG,GAAwBG,EAAI,GAAG,EAC5C,GAAIN,EACF,OAAOD,GAAeN,EAAQO,EAAMM,EAAI,GAAG,EAG7C,IAAMC,EAAI,KAAK,UAAUD,CAAG,EAC5B,MAAM,IAAI,MAAM,kBAAkBD,CAAM,gCAAgCE,CAAC,EAAE,CAC7E,CAEO,IAAMC,GAAW,CACtBf,EACAgB,EACAJ,EACAK,IACY,CACZ,IAAMC,EAAWD,EAAO,IAAKJ,GAC3BF,GAAqBX,EAAQY,EAAQC,CAAG,CAC1C,EACMM,EAAYF,EAAO,IACtBJ,GAA4B,OAAOA,GAAQ,SAAW,SAAW,QACpE,EAEIO,EACJ,MAAI,UAAWpB,EACboB,EAASpB,EAAO,MAAMY,EAAQI,EAAgBG,EAAWD,CAAQ,EAGjEE,EAAUpB,EAAe,IAAIY,CAAM,EAAE,EAAE,GAAGM,CAAQ,EAGpDD,EAAO,QAAQ,CAACJ,EAAKQ,IAAM,CACzB,IAAMC,EAAcJ,EAASG,CAAC,EAC9B,GACE,OAAOR,GAAQ,UACf,OAAOA,GAAQ,UACf,OAAOS,GAAgB,UACvBT,IAAQ,KAER,OAIF,IAAMN,EAAOG,GAAwBG,EAAI,GAAG,EACtCU,EAAeD,EAAeT,EAAI,IAAI,kBAE5C,GAAIA,EAAI,QAAU,MAAO,CAEvB,IAAMW,EAASX,EAAI,IAAI,OAEvBA,EAAI,IAAI,IAAIb,EAAOO,CAAI,EAAE,SAASgB,EAAcA,EAAeC,CAAM,CAAC,CACxE,CAGI3B,IACF,QAAQ,IAAI,IAAIe,CAAM,gBAAgBb,GAAYC,EAAQa,EAAI,IAAKS,CAAW,CAAC,EAAE,EAE/EtB,EAAO,QAAU,OACnBA,EAAO,MAAMsB,CAAW,EACdxB,IACV,QAAQ,MAAM,gBAAgBc,CAAM,MAAMb,GAAYC,EAAQa,EAAI,IAAKS,CAAW,CAAC,GAAI,CAAE,OAAAtB,EAAQ,OAAAY,CAAO,CAAC,CAE7G,CAAC,EAEMQ,CACT,EAEaK,GAAc,CAIzBzB,EACAgB,EACAJ,EACAK,IAGOF,GAASf,EAAQgB,EAAgBJ,EAAeK,CAAM,EAGlDS,GAAY,CAIvB1B,EACAgB,EACAJ,EACAK,IAGOF,GAASf,EAAQgB,EAAgBJ,EAAeK,CAAM,EC3J/D,IAAAU,GAAA,GACA,IAAIC,IAAU,IAAM,CAClB,IAAIC,EAAcC,GAAY,IAE9B,OACF,SAASC,EAAY,CAAC,EAAG,CACvB,IAAIC,EAEFJ,EAAOG,EAAcE,EAAoBC,EAAuBC,EAAa,IAAI,QAAQ,CAACC,EAAQC,IAAS,CAACJ,EAAoBG,EAAQF,EAAmBG,CAAM,CAAC,EAAE,CAAC,UAAU,QAAQ,8BAA8B,yBAAyB,6BAA6B,oBAAoB,+BAA+B,4BAA4B,6BAA6B,yBAAyB,gCAAgC,UAAU,6BAA6B,sBAAsB,EAAE,QAAQC,GAAM,CAAK,OAAO,yBAAyBH,EAAaG,CAAI,GAAG,OAAO,eAAeH,EAAaG,EAAK,CAAC,IAAI,IAAIC,GAAM,mBAAmBD,EAAK,+IAA+I,EAAE,IAAI,IAAIC,GAAM,mBAAmBD,EAAK,+IAA+I,CAAC,CAAC,CAAE,CAAC,EAAE,IAAIE,EAAmB,GAASC,EAAsB,GAAUC,EAAoB,GAAUC,EAAqB,GAAM,GAAGf,EAAO,YAAgB,MAAM,IAAI,MAAM,kKAAkK,EAAE,IAAIgB,EAAgB,OAAO,OAAO,CAAC,EAAEhB,CAAM,EAAMiB,EAAW,CAAC,EAAMC,EAAY,iBAAqBC,EAAM,CAACC,EAAOC,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAGxB,EAAO,WAAsBA,EAAO,WAAcwB,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,EAAMC,EAAUC,EAAW,GAAGZ,GAAsB,GAAG,OAAO,SAAS,UAAU,OAAOa,IAAU,YAAY,OAAO,QAAQ,UAAU,OAAO,eAAe,WAAW,MAAM,IAAI,MAAM,wLAAwL,UAAUhB,GAAoBC,EAAsB,CAAqX,GAAjXA,EAAuBS,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOrB,IAAaqB,EAAgBrB,GAAeqB,EAAgB,WAAW,OAAO,EAAGA,EAAgB,GAAQA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAK,EAAE,OAAO,QAAQ,UAAU,OAAO,eAAe,YAAY,MAAM,IAAI,MAAM,wLAAwL,EAAGG,EAAMI,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKjB,IAAuBc,EAAWE,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEJ,EAAU,CAACG,EAAIE,EAAOC,IAAU,CAACC,EAAO,CAACC,GAAUL,CAAG,EAAE,2CAA2C,EAAE,MAAMA,EAAI,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKM,GAAcA,EAAS,GAAWA,EAAS,YAAY,EAAS,QAAQ,OAAO,IAAI,MAAMA,EAAS,OAAO,MAAMA,EAAS,GAAG,CAAC,CAAE,EAAE,KAAKJ,EAAOC,CAAO,CAAC,CAAE,KAAM,OAAM,IAAI,MAAM,6BAA6B,EAAE,IAAII,EAAIpC,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAMqC,EAAIrC,EAAO,UAAa,QAAQ,MAAM,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAOgB,CAAe,EAAEA,EAAgB,KAAKsB,GAAuB,EAAKtC,EAAO,YAAaiB,EAAWjB,EAAO,WAAauC,GAAiB,YAAY,YAAY,EAAKvC,EAAO,cAAekB,EAAYlB,EAAO,aAAeuC,GAAiB,cAAc,aAAa,EAAKvC,EAAO,OAAQmB,EAAMnB,EAAO,MAAQuC,GAAiB,OAAO,OAAO,EAAEN,EAAO,OAAOjC,EAAO,2BAA+B,IAAY,qFAAqF,EAAEiC,EAAO,OAAOjC,EAAO,qBAAyB,IAAY,+EAA+E,EAAEiC,EAAO,OAAOjC,EAAO,uBAA2B,IAAY,iFAAiF,EAAEiC,EAAO,OAAOjC,EAAO,qBAAyB,IAAY,+EAA+E,EAAEiC,EAAO,OAAOjC,EAAO,KAAS,IAAY,qDAAqD,EAAEiC,EAAO,OAAOjC,EAAO,UAAc,IAAY,8DAA8D,EAAEiC,EAAO,OAAOjC,EAAO,WAAe,IAAY,gEAAgE,EAAEiC,EAAO,OAAOjC,EAAO,eAAmB,IAAY,qFAAqF,EAAEiC,EAAO,OAAOjC,EAAO,aAAiB,IAAY,4DAA4D,EAAEuC,GAAiB,MAAM,aAAa,EAAEA,GAAiB,OAAO,OAAO,EAAEA,GAAiB,YAAY,WAAW,EAAEA,GAAiB,aAAa,YAAY,EAAEA,GAAiB,iBAAiB,gBAAgB,EAAEN,EAAO,CAACpB,EAAsB,wGAAwG,EAAEoB,EAAO,CAACnB,EAAoB,oGAAoG,EAAEmB,EAAO,CAAClB,EAAqB,sGAAsG,EAAE,IAAIyB,EAAcxC,EAAO,aAAcwC,EAAWxC,EAAO,YAAcuC,GAAiB,aAAa,YAAY,EAAK,OAAO,aAAa,UAAUF,EAAI,iCAAiC,EAAE,IAAII,EAAeC,GAAM,GAAUC,GAAW,SAASV,EAAOW,EAAUC,EAAK,CAAKD,GAAWjC,GAAM,oBAAoBkC,EAAK,KAAKA,EAAK,GAAG,CAAE,CAAC,IAAIC,GAAMC,EAAOC,GAAOC,GAAQC,GAAOC,EAAQC,GAAQC,GAAQ,SAASC,IAAmB,CAAC,IAAIC,EAAEd,EAAW,OAAOzC,EAAO,MAAS8C,GAAM,IAAI,UAAUS,CAAC,EAAEvD,EAAO,OAAUgD,GAAO,IAAI,WAAWO,CAAC,EAAEvD,EAAO,OAAU+C,EAAO,IAAI,WAAWQ,CAAC,EAAEvD,EAAO,QAAWiD,GAAQ,IAAI,YAAYM,CAAC,EAAEvD,EAAO,OAAUkD,GAAO,IAAI,WAAWK,CAAC,EAAEvD,EAAO,QAAWmD,EAAQ,IAAI,YAAYI,CAAC,EAAEvD,EAAO,QAAWoD,GAAQ,IAAI,aAAaG,CAAC,EAAEvD,EAAO,QAAWqD,GAAQ,IAAI,aAAaE,CAAC,CAAC,CAACtB,EAAO,CAACjC,EAAO,WAAc,4EAA4E,EAAEiC,EAAO,OAAO,WAAY,KAAa,OAAO,aAAe,KAAa,WAAW,UAAU,UAAU,MAAW,WAAW,UAAU,KAAK,KAAU,qDAAqD,EAAEA,EAAO,CAACjC,EAAO,WAAc,sFAAsF,EAAEiC,EAAO,CAACjC,EAAO,eAAkB,kGAAkG,EAAE,SAASwD,IAAkB,CAAC,IAAIC,EAAIC,GAA0B,EAAEzB,GAAQwB,EAAI,IAAI,CAAC,EAAKA,GAAK,IAAGA,GAAK,GAAEN,EAAQM,GAAK,CAAC,EAAE,SAASN,EAAQM,EAAI,GAAG,CAAC,EAAE,WAAWN,EAAQ,CAAI,EAAE,UAAU,CAAC,SAASQ,IAAkB,CAAC,GAAG,CAAAjB,GAAa,KAAIe,EAAIC,GAA0B,EAAKD,GAAK,IAAGA,GAAK,GAAE,IAAIG,EAAQT,EAAQM,GAAK,CAAC,EAAMI,EAAQV,EAAQM,EAAI,GAAG,CAAC,GAAKG,GAAS,UAAUC,GAAS,aAAYlD,GAAM,wDAAwDmD,GAAYL,CAAG,CAAC,gEAAgEK,GAAYD,CAAO,CAAC,IAAIC,GAAYF,CAAO,CAAC,EAAE,EAAKT,EAAQ,CAAI,GAAG,YAAYxC,GAAM,mFAAmF,EAAE,EAAE,UAAU,CAAC,IAAIoD,EAAI,IAAI,WAAW,CAAC,EAAMC,EAAG,IAAI,UAAUD,EAAI,MAAM,EAAe,GAAbA,EAAI,CAAC,EAAE,MAASC,EAAG,CAAC,IAAI,KAAKA,EAAG,CAAC,IAAI,GAAG,KAAK,mGAAmG,GAAG,EAAE,IAAIC,GAAa,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAc,CAAC,EAAMC,GAAmB,GAAM,SAASC,IAAQ,CAAC,GAAGrE,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQsE,GAAYtE,EAAO,OAAU,MAAM,CAAC,EAAGuE,GAAqBN,EAAY,CAAC,CAAC,SAASO,IAAa,CAACvC,EAAO,CAACmC,EAAkB,EAAEA,GAAmB,GAAKT,GAAiB,EAAEY,GAAqBL,EAAU,CAAC,CAAC,SAASO,IAAS,CAAoB,GAAnBd,GAAiB,EAAK3D,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQ0E,GAAa1E,EAAO,QAAW,MAAM,CAAC,EAAGuE,GAAqBJ,EAAa,CAAC,CAAC,SAASG,GAAYK,EAAG,CAACV,GAAa,QAAQU,CAAE,CAAC,CAAC,SAASC,GAAUD,EAAG,CAACT,GAAW,QAAQS,CAAE,CAAC,CAAC,SAASD,GAAaC,EAAG,CAACR,GAAc,QAAQQ,CAAE,CAAC,CAAC1C,EAAO,KAAK,KAAK,6HAA6H,EAAEA,EAAO,KAAK,OAAO,+HAA+H,EAAEA,EAAO,KAAK,MAAM,8HAA8H,EAAEA,EAAO,KAAK,MAAM,8HAA8H,EAAE,IAAI4C,GAAgB,EAAMC,GAAqB,KAASC,GAAsB,KAASC,GAAsB,CAAC,EAAE,SAASC,GAAiBC,EAAG,CAACL,KAAkB7E,EAAO,yBAA4B6E,EAAe,EAAKK,GAAIjD,EAAO,CAAC+C,GAAsBE,CAAE,CAAC,EAAEF,GAAsBE,CAAE,EAAE,EAAKJ,KAAuB,MAAM,OAAO,YAAa,MAAaA,GAAqB,YAAY,IAAI,CAAC,GAAGpC,GAAM,CAAC,cAAcoC,EAAoB,EAAEA,GAAqB,KAAK,MAAM,CAAC,IAAIK,EAAM,GAAM,QAAQC,KAAOJ,GAA2BG,IAAOA,EAAM,GAAK9C,EAAI,oCAAoC,GAAEA,EAAI,eAAe+C,CAAG,EAAE,EAAKD,GAAO9C,EAAI,eAAe,CAAE,EAAE,GAAG,IAAQA,EAAI,0CAA0C,CAAE,CAAC,SAASgD,GAAoBH,EAAG,CAAwM,GAAvML,KAAkB7E,EAAO,yBAA4B6E,EAAe,EAAKK,GAAIjD,EAAO+C,GAAsBE,CAAE,CAAC,EAAE,OAAOF,GAAsBE,CAAE,GAAO7C,EAAI,4CAA4C,EAAKwC,IAAiB,IAAMC,KAAuB,OAAM,cAAcA,EAAoB,EAAEA,GAAqB,MAAQC,IAAsB,CAAC,IAAIO,EAASP,GAAsBA,GAAsB,KAAKO,EAAS,CAAC,CAAE,CAAC,SAAS3E,GAAM4E,EAAK,CAACvF,EAAO,UAAauF,CAAI,EAAEA,EAAK,WAAWA,EAAK,IAAIlD,EAAIkD,CAAI,EAAE7C,GAAM,GAAKC,GAAW,EAAE,IAAI6C,EAAE,IAAI,YAAY,aAAaD,CAAI,EAAE,MAAAjF,EAAmBkF,CAAC,EAAQA,CAAC,CAAC,IAAIC,GAAG,CAAC,OAAO,CAAC9E,GAAM,8OAA8O,CAAC,EAAE,MAAM,CAAC8E,GAAG,MAAM,CAAC,EAAE,gBAAgB,CAACA,GAAG,MAAM,CAAC,EAAE,qBAAqB,CAACA,GAAG,MAAM,CAAC,EAAE,gBAAgB,CAACA,GAAG,MAAM,CAAC,EAAE,MAAM,CAACA,GAAG,MAAM,CAAC,EAAE,OAAO,CAACA,GAAG,MAAM,CAAC,EAAE,gBAAgB,CAACA,GAAG,MAAM,CAAC,EAAE,aAAa,CAACA,GAAG,MAAM,CAAC,EAAE,YAAY,CAACA,GAAG,MAAM,CAAC,CAAC,EAAEzF,EAAO,kBAAqByF,GAAG,eAAezF,EAAO,uBAA0ByF,GAAG,oBAAoB,IAAIC,GAAc,wCAA4CC,GAAUC,GAAUA,EAAS,WAAWF,EAAa,EAAMxD,GAAU0D,GAAUA,EAAS,WAAW,SAAS,EAAE,SAASC,GAAoBC,EAAKC,EAAM,CAAC,MAAM,IAAIC,IAAO,CAAC/D,EAAOmC,GAAmB,qBAAqB0B,CAAI,yCAAyC,EAAE,IAAIG,EAAEC,GAAYJ,CAAI,EAAE,OAAA7D,EAAOgE,EAAE,8BAA8BH,CAAI,cAAc,EAAE7D,EAAO+D,EAAK,QAAQD,EAAM,qBAAqBD,CAAI,kBAAkBE,EAAK,MAAM,qBAAqBD,CAAK,EAAE,EAASE,EAAE,GAAGD,CAAI,CAAC,CAAC,CAAC,SAASG,IAAgB,CAAC,GAAGnG,EAAO,WAAc,CAAC,IAAIiG,EAAE,qBAAqB,OAAIN,GAAUM,CAAC,EAA+BA,EAArB1E,EAAW0E,CAAC,CAAU,CAAC,OAAO,IAAI,IAAI,qBAAqB/F,GAAY,GAAG,EAAE,IAAI,CAAC,IAAIkG,GAAe,SAASC,GAAcC,EAAK,CAAC,GAAGA,GAAMF,IAAgB5D,EAAY,OAAO,IAAI,WAAWA,CAAU,EAAE,GAAGb,EAAY,OAAOA,EAAW2E,CAAI,EAAE,KAAK,iDAAiD,CAAC,SAASC,GAAiBC,EAAW,CAAC,OAAIhE,EAAiM,QAAQ,QAAQ,EAAE,KAAK,IAAI6D,GAAcG,CAAU,CAAC,EAAlO,IAAI,QAAQ,CAAChG,EAAQC,IAAS,CAACiB,EAAU8E,EAAWrE,GAAU3B,EAAQ,IAAI,WAAW2B,CAAQ,CAAC,EAAEsE,GAAO,CAAC,GAAG,CAACjG,EAAQ6F,GAAcG,CAAU,CAAC,CAAC,OAAOhB,EAAE,CAAC/E,EAAO+E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA8D,CAAC,SAASkB,GAAuBF,EAAWG,EAAQC,EAAS,CAAC,OAAOL,GAAiBC,CAAU,EAAE,KAAKK,GAAQ,YAAY,YAAYA,EAAOF,CAAO,CAAC,EAAE,KAAKC,EAASE,GAAQ,CAACzE,EAAI,0CAA0CyE,CAAM,EAAE,EAAK5E,GAAUkE,EAAc,GAAG/D,EAAI,qCAAqC+D,EAAc,gMAAgM,EAAEzF,GAAMmG,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAiBF,EAAOL,EAAWG,EAAQrB,EAAS,CAAC,MAAG,CAACuB,GAAQ,OAAO,YAAY,sBAAsB,YAAY,CAAClB,GAAUa,CAAU,GAAG,OAAO,OAAO,WAAmB,MAAMA,EAAW,CAAC,YAAY,aAAa,CAAC,EAAE,KAAKrE,GAAU,CAAC,IAAI6E,EAAO,YAAY,qBAAqB7E,EAASwE,CAAO,EAAE,OAAOK,EAAO,KAAK1B,EAAS,SAASwB,EAAO,CAAC,OAAAzE,EAAI,kCAAkCyE,CAAM,EAAE,EAAEzE,EAAI,2CAA2C,EAASqE,GAAuBF,EAAWG,EAAQrB,CAAQ,CAAC,CAAC,CAAC,CAAC,EAASoB,GAAuBF,EAAWG,EAAQrB,CAAQ,CAAC,CAAC,SAAS2B,IAAgB,CAAC,MAAM,CAAC,IAAIC,GAAY,uBAAuBA,EAAW,CAAC,CAAC,SAASC,GAAY,CAAC,IAAIC,EAAKH,GAAe,EAAE,SAASI,EAAgBC,EAASC,EAAO,CAAC,OAAArB,GAAYoB,EAAS,QAAQ7E,EAAWyD,GAAY,OAAUjE,EAAOQ,EAAW,kCAAkC,EAAEa,GAAkB,EAAEsB,GAAUsB,GAAY,iBAAoB,EAAEb,GAAoB,kBAAkB,EAASa,EAAW,CAACjB,GAAiB,kBAAkB,EAAE,IAAIuC,EAAWxH,EAAO,SAASyH,EAA2BT,EAAO,CAAC/E,EAAOjC,IAASwH,EAAW,kHAAkH,EAAEA,EAAW,KAAKH,EAAgBL,EAAO,QAAW,CAAC,CAAC,GAAGhH,EAAO,gBAAoB,GAAG,CAAC,OAAOA,EAAO,gBAAmBoH,EAAKC,CAAe,CAAC,OAAO7B,EAAE,CAACnD,EAAI,sDAAsDmD,CAAC,EAAE,EAAElF,EAAmBkF,CAAC,CAAC,CAAE,OAAIY,KAAeA,GAAeD,GAAe,GAAEY,GAAiBvE,EAAW4D,GAAegB,EAAKK,CAA0B,EAAE,MAAMnH,CAAkB,EAAQ,CAAC,CAAC,CAAC,SAASiC,GAAiB7B,EAAKgH,EAAQC,EAAS,GAAK,CAAK,OAAO,yBAAyB3H,EAAOU,CAAI,GAAG,OAAO,eAAeV,EAAOU,EAAK,CAAC,aAAa,GAAK,KAAK,CAAC,IAAIkH,EAAMD,EAAS,kIAAkI,GAAGhH,GAAM,YAAYD,CAAI,6BAA6BgH,CAAO,KAAKE,CAAK,CAAC,CAAC,CAAC,CAAE,CAAC,SAASC,GAAkBnH,EAAK,CAAI,OAAO,yBAAyBV,EAAOU,CAAI,GAAGC,GAAM,YAAYD,CAAI,yBAAyBA,CAAI,2CAA2C,CAAE,CAAC,SAASoH,GAA4BhC,EAAK,CAAC,OAAOA,IAAO,iBAAiBA,IAAO,qBAAqBA,IAAO,0BAA0BA,IAAO,aAAaA,IAAO,oBAAoBA,IAAO,qBAAqBA,IAAO,mBAAmBA,IAAO,qBAAqB,CAAC,SAASiC,GAAcC,EAAIC,EAAI,CAAI,OAAO,WAAY,KAAa,OAAO,eAAe,WAAWD,EAAI,CAAC,aAAa,GAAK,KAAK,CAACE,GAAS,KAAKF,CAAG,2CAA2CC,CAAG,EAAE,CAAkB,CAAC,CAAC,CAAE,CAACF,GAAc,SAAS,8CAA8C,EAAEA,GAAc,MAAM,gCAAgC,EAAE,SAASI,GAAqBH,EAAI,CAAI,OAAO,WAAY,KAAa,CAAC,OAAO,yBAAyB,WAAWA,CAAG,GAAG,OAAO,eAAe,WAAWA,EAAI,CAAC,aAAa,GAAK,KAAK,CAAC,IAAIC,EAAI,KAAKD,CAAG,kJAAsJI,EAAcJ,EAAQI,EAAc,WAAW,GAAG,IAAGA,EAAc,IAAIJ,GAAIC,GAAK,8CAA8CG,CAAa,KAAQN,GAA4BE,CAAG,IAAGC,GAAK,4FAA2FC,GAASD,CAAG,CAAkB,CAAC,CAAC,EAAEI,GAAwBL,CAAG,CAAC,CAAC,SAASK,GAAwBL,EAAI,CAAK,OAAO,yBAAyBhI,EAAOgI,CAAG,GAAG,OAAO,eAAehI,EAAOgI,EAAI,CAAC,aAAa,GAAK,KAAK,CAAC,IAAIC,EAAI,IAAID,CAAG,kFAAqFF,GAA4BE,CAAG,IAAGC,GAAK,4FAA2FtH,GAAMsH,CAAG,CAAC,CAAC,CAAC,CAAE,CAAC,IAAI1D,GAAqB+D,GAAW,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAEtI,CAAM,CAAE,EAAMuI,GAAcvI,EAAO,eAAkB,GAAS8D,GAAY0E,IAAMvG,EAAO,OAAOuG,GAAM,QAAQ,EAAEA,KAAO,EAAQ,KAAKA,EAAI,SAAS,EAAE,EAAE,SAAS,EAAE,GAAG,GAAOC,EAAaC,GAAKC,GAA2BD,CAAG,EAAME,GAAU,IAAIC,GAA8B,EAAMX,GAASrF,GAAM,CAACqF,GAAS,QAAQ,CAAC,EAAMA,GAAS,MAAMrF,CAAI,IAAGqF,GAAS,MAAMrF,CAAI,EAAE,EAAER,EAAIQ,CAAI,EAAE,EAAMiG,GAAY,OAAO,YAAa,IAAY,IAAI,YAAY,MAAM,EAAE,OAAcC,GAAkB,CAACC,EAAYC,EAAIC,IAAiB,CAA8C,QAAzCC,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAYI,CAAM,GAAG,EAAEA,GAAQD,IAAQ,EAAEC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAY,QAAQF,GAAa,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAIG,CAAM,CAAC,EAAa,QAAPC,EAAI,GAASJ,EAAIG,GAAO,CAAC,IAAIE,EAAGN,EAAYC,GAAK,EAAE,GAAG,EAAEK,EAAG,KAAK,CAACD,GAAK,OAAO,aAAaC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGP,EAAYC,GAAK,EAAE,GAAG,IAAIK,EAAG,MAAM,IAAI,CAACD,GAAK,OAAO,cAAcC,EAAG,KAAK,EAAEC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGR,EAAYC,GAAK,EAAE,GAA4P,IAArPK,EAAG,MAAM,IAAKA,GAAIA,EAAG,KAAK,GAAGC,GAAI,EAAEC,IAAYF,EAAG,MAAM,KAAIpB,GAAS,8BAA8BpE,GAAYwF,CAAE,EAAE,+EAA+E,EAAEA,GAAIA,EAAG,IAAI,GAAGC,GAAI,GAAGC,GAAI,EAAER,EAAYC,GAAK,EAAE,IAAMK,EAAG,MAAOD,GAAK,OAAO,aAAaC,CAAE,MAAM,CAAC,IAAIG,EAAGH,EAAG,MAAMD,GAAK,OAAO,aAAa,MAAMI,GAAI,GAAG,MAAMA,EAAG,IAAI,CAAC,CAAC,CAAC,OAAOJ,CAAG,EAAMK,GAAa,CAAClB,EAAIU,KAAkBjH,EAAO,OAAOuG,GAAK,SAAS,sCAAsC,OAAOA,CAAG,GAAG,EAASA,EAAIO,GAAkBhG,EAAOyF,EAAIU,CAAc,EAAE,IAAQS,EAAe,CAAC/G,EAAUgD,EAASgE,EAAKC,IAAO,CAAClJ,GAAM,qBAAqB+I,GAAa9G,CAAS,CAAC,SAAS,CAACgD,EAAS8D,GAAa9D,CAAQ,EAAE,mBAAmBgE,EAAKC,EAAKH,GAAaG,CAAI,EAAE,kBAAkB,CAAC,CAAC,EAAMC,GAAW,IAAI,CAACnJ,GAAM,4BAA4B,CAAC,EAAMoJ,EAAuB,CAACC,EAAKC,EAAIC,IAAMnH,EAAO,WAAWiH,EAAKC,EAAIA,EAAIC,CAAG,EAAMC,GAAW,IAAI,WAAeC,GAAWC,GAAM,CAAC,IAAI9G,EAAEd,EAAW,OAAW6H,GAAOD,EAAK9G,EAAE,WAAW,OAAO,MAAM,GAAG,CAAC,OAAAd,EAAW,KAAK6H,CAAK,EAAEhH,GAAkB,EAAS,CAAC,OAAOkC,EAAE,CAACnD,EAAI,2CAA2CkB,EAAE,UAAU,aAAa8G,CAAI,0BAA0B7E,CAAC,EAAE,CAAC,CAAC,EAAM+E,GAAwBC,GAAe,CAAC,IAAIC,EAAQ1H,EAAO,OAAOyH,KAAiB,EAAEvI,EAAOuI,EAAcC,CAAO,EAAE,IAAIC,EAAYP,GAAW,EAAE,GAAGK,EAAcE,EAAa,OAAArI,EAAI,oCAAoCmI,CAAa,4BAA4BE,CAAW,SAAS,EAAS,GAAiE,QAAvDC,EAAQ,CAACC,EAAEC,IAAWD,GAAGC,EAASD,EAAEC,GAAUA,EAAiBC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBN,GAAS,EAAE,GAAGK,GAASC,EAAkB,KAAK,IAAIA,EAAkBP,EAAc,SAAS,EAAE,IAAIQ,EAAQ,KAAK,IAAIN,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,CAAiB,EAAE,KAAK,CAAC,EAAME,EAAYb,GAAWY,CAAO,EAAE,GAAGC,EAAa,MAAO,EAAK,CAAC,OAAA5I,EAAI,gCAAgCoI,CAAO,aAAaO,CAAO,4BAA4B,EAAS,EAAK,EAAME,GAAUC,GAAI,CAACxK,GAAM,qDAAqD,CAAC,EAAMyK,GAA2B,CAACC,EAAGC,KAAMrJ,EAAOoJ,GAAIA,IAAK,GAAGA,IAAKA,EAAG,EAAE,EAAEpJ,EAAOqJ,KAAMA,EAAG,EAAE,EAASA,EAAG,UAAU,EAAE,QAAQ,CAAC,CAACD,GAAIA,IAAK,GAAGC,EAAG,WAAW,KAAK,SAASC,GAASJ,EAAGK,EAAWC,EAAYC,EAAOC,EAAU,CAAC,IAAIC,EAAOR,GAA2BI,EAAWC,CAAW,EAAE,MAAO,GAAE,CAAC,IAAII,GAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAMC,GAAU,CAACC,EAAOC,IAAO,CAAC,IAAIC,EAAOJ,GAAiBE,CAAM,EAAE9J,EAAOgK,CAAM,EAAKD,IAAO,GAAGA,IAAO,KAAKD,IAAS,EAAE3J,EAAIC,GAAK0G,GAAkBkD,EAAO,CAAC,CAAC,EAAEA,EAAO,OAAO,GAAOA,EAAO,KAAKD,CAAI,CAAE,EAAME,GAAoB,IAAI,CAACC,GAAQ,CAAC,EAAKN,GAAiB,CAAC,EAAE,QAAOC,GAAU,EAAE,EAAE,EAAKD,GAAiB,CAAC,EAAE,QAAOC,GAAU,EAAE,EAAE,CAAC,EAAMM,GAAU,CAACjB,EAAGkB,EAAIC,EAAOC,IAAO,CAAW,QAANrC,EAAI,EAAUsC,EAAE,EAAEA,EAAEF,EAAOE,IAAI,CAAC,IAAIhE,EAAIrF,EAAQkJ,GAAK,CAAC,EAAMI,EAAItJ,EAAQkJ,EAAI,GAAG,CAAC,EAAEA,GAAK,EAAE,QAAQK,EAAE,EAAEA,EAAED,EAAIC,IAAKZ,GAAUX,EAAGpI,EAAOyF,EAAIkE,CAAC,CAAC,EAAExC,GAAKuC,CAAG,CAAC,OAAAtJ,EAAQoJ,GAAM,CAAC,EAAErC,EAAW,CAAC,EAAMyC,GAASC,GAAO,CAAC,IAAI/C,EAAK7J,EAAO,IAAI4M,CAAK,EAAE,OAAA3K,EAAO4H,EAAK,gCAAgC+C,EAAM,4BAA4B,EAAS/C,CAAI,EAAMgD,GAAmB,CAACC,EAAMb,IAAS,CAAChK,EAAO6K,EAAM,QAAQ,EAAE,iFAAiF,EAAEhK,GAAM,IAAIgK,EAAMb,CAAM,CAAC,EAAMc,GAAgB1D,GAAK,CAAW,QAANoD,EAAI,EAAUD,EAAE,EAAEA,EAAEnD,EAAI,OAAO,EAAEmD,EAAE,CAAC,IAAIQ,EAAE3D,EAAI,WAAWmD,CAAC,EAAKQ,GAAG,IAAKP,IAAcO,GAAG,KAAMP,GAAK,EAAUO,GAAG,OAAOA,GAAG,OAAOP,GAAK,EAAE,EAAED,GAAOC,GAAK,CAAE,CAAC,OAAOA,CAAG,EAAMQ,GAAkB,CAAC5D,EAAI6D,EAAKC,EAAOC,IAAkB,CAAwF,GAAvFnL,EAAO,OAAOoH,GAAM,SAAS,2CAA2C,OAAOA,CAAG,GAAG,EAAK,EAAE+D,EAAgB,GAAG,MAAO,GAA0D,QAApDC,EAASF,EAAWhE,EAAOgE,EAAOC,EAAgB,EAAUZ,EAAE,EAAEA,EAAEnD,EAAI,OAAO,EAAEmD,EAAE,CAAC,IAAIc,EAAEjE,EAAI,WAAWmD,CAAC,EAAE,GAAGc,GAAG,OAAOA,GAAG,MAAM,CAAC,IAAI/D,EAAGF,EAAI,WAAW,EAAEmD,CAAC,EAAEc,EAAE,QAAQA,EAAE,OAAO,IAAI/D,EAAG,IAAI,CAAC,GAAG+D,GAAG,IAAI,CAAC,GAAGH,GAAQhE,EAAO,MAAM+D,EAAKC,GAAQ,EAAEG,CAAC,SAASA,GAAG,KAAK,CAAC,GAAGH,EAAO,GAAGhE,EAAO,MAAM+D,EAAKC,GAAQ,EAAE,IAAIG,GAAG,EAAEJ,EAAKC,GAAQ,EAAE,IAAIG,EAAE,EAAE,SAASA,GAAG,MAAM,CAAC,GAAGH,EAAO,GAAGhE,EAAO,MAAM+D,EAAKC,GAAQ,EAAE,IAAIG,GAAG,GAAGJ,EAAKC,GAAQ,EAAE,IAAIG,GAAG,EAAE,GAAGJ,EAAKC,GAAQ,EAAE,IAAIG,EAAE,EAAE,KAAK,CAAC,GAAGH,EAAO,GAAGhE,EAAO,MAASmE,EAAE,SAAQpF,GAAS,8BAA8BpE,GAAYwJ,CAAC,EAAE,wIAAwI,EAAEJ,EAAKC,GAAQ,EAAE,IAAIG,GAAG,GAAGJ,EAAKC,GAAQ,EAAE,IAAIG,GAAG,GAAG,GAAGJ,EAAKC,GAAQ,EAAE,IAAIG,GAAG,EAAE,GAAGJ,EAAKC,GAAQ,EAAE,IAAIG,EAAE,EAAE,CAAC,CAAC,OAAAJ,EAAKC,CAAM,EAAE,EAASA,EAAOE,CAAQ,EAAME,GAAa,CAAClE,EAAImE,EAAOJ,KAAmBnL,EAAO,OAAOmL,GAAiB,SAAS,2HAA2H,EAASH,GAAkB5D,EAAItG,EAAOyK,EAAOJ,CAAe,GAAOK,GAAWC,GAAIC,GAAyBD,CAAE,EAAME,GAAoBvE,GAAK,CAAC,IAAIgB,EAAK0C,GAAgB1D,CAAG,EAAE,EAAMwE,EAAIJ,GAAWpD,CAAI,EAAE,OAAAkD,GAAalE,EAAIwE,EAAIxD,CAAI,EAASwD,CAAG,EAAMC,GAAM,CAAClB,EAAMmB,EAAWC,EAAShI,EAAKiI,IAAO,CAAC,IAAIC,EAAI,CAAC,OAAO7E,GAAK,CAAC,IAAIwE,GAAI,EAAE,OAAGxE,GAAM,MAAuBA,IAAM,IAAGwE,GAAID,GAAoBvE,CAAG,GAASwE,EAAG,EAAE,MAAMM,GAAK,CAAC,IAAIN,GAAIJ,GAAWU,EAAI,MAAM,EAAE,OAAAtB,GAAmBsB,EAAIN,EAAG,EAASA,EAAG,CAAC,EAAE,SAASO,EAAmBP,EAAI,CAAC,OAAGE,IAAa,SAAiBrE,GAAamE,CAAG,EAAKE,IAAa,UAAiB,EAAQF,EAAYA,CAAG,CAAC,IAAIhE,EAAK8C,GAASC,CAAK,EAAMyB,EAAM,CAAC,EAAMC,EAAM,EAAoE,GAAlErM,EAAO8L,IAAa,QAAQ,oCAAoC,EAAK/H,EAAM,QAAQwG,EAAE,EAAEA,EAAExG,EAAK,OAAOwG,IAAI,CAAC,IAAI+B,EAAUL,EAAIF,EAASxB,CAAC,CAAC,EAAK+B,GAAcD,IAAQ,IAAEA,EAAM1F,GAAU,GAAEyF,EAAM7B,CAAC,EAAE+B,EAAUvI,EAAKwG,CAAC,CAAC,GAAO6B,EAAM7B,CAAC,EAAExG,EAAKwG,CAAC,CAAE,CAAE,IAAIqB,EAAIhE,EAAK,GAAGwE,CAAK,EAAE,SAASG,EAAOX,EAAI,CAAC,OAAGS,IAAQ,GAAE7F,EAAa6F,CAAK,EAASF,EAAmBP,CAAG,CAAC,CAAC,OAAAA,EAAIW,EAAOX,CAAG,EAASA,CAAG,EAAMY,GAAM,CAAC7B,EAAMmB,EAAWC,EAASC,IAAO,IAAIjI,IAAO8H,GAAMlB,EAAMmB,EAAWC,EAAShI,EAAKiI,CAAI,EAAE,SAAS3L,IAAwB,CAACuF,GAAkB,eAAe,CAAC,CAAC,IAAIX,GAAY,CAAC,cAAcyC,EAAe,UAAUG,GAAW,sBAAsBC,EAAuB,uBAAuBQ,GAAwB,SAASW,GAAU,QAAQK,GAAS,SAASa,EAAS,EAAMlG,GAAYiB,EAAW,EAAMuH,GAAmB7I,GAAoB,oBAAoB,CAAC,EAAM8I,GAA4B3O,EAAO,4BAA+B6F,GAAoB,6BAA6B,CAAC,EAAM+I,GAAuB5O,EAAO,uBAA0B6F,GAAoB,wBAAwB,EAAE,EAAMgJ,GAA2B7O,EAAO,2BAA8B6F,GAAoB,4BAA4B,CAAC,EAAMiJ,GAA8B9O,EAAO,8BAAiC6F,GAAoB,+BAA+B,CAAC,EAAMkJ,GAAkB/O,EAAO,kBAAqB6F,GAAoB,mBAAmB,EAAE,EAAMmJ,GAAuBhP,EAAO,uBAA0B6F,GAAoB,wBAAwB,CAAC,EAAMoJ,GAA6BjP,EAAO,6BAAgC6F,GAAoB,8BAA8B,CAAC,EAAMqJ,GAA2BlP,EAAO,2BAA8B6F,GAAoB,4BAA4B,CAAC,EAAMsJ,GAA0BnP,EAAO,0BAA6B6F,GAAoB,2BAA2B,CAAC,EAAMsG,GAAQtG,GAAoB,SAAS,CAAC,EAAMuJ,GAAQpP,EAAO,QAAW6F,GAAoB,SAAS,CAAC,EAAMwJ,GAAMrP,EAAO,MAAS6F,GAAoB,OAAO,CAAC,EAAMyJ,GAAuB,KAAKA,GAAuBpJ,GAAY,uBAA0B,EAAMqJ,GAA2B,KAAKA,GAA2BrJ,GAAY,2BAA8B,EAAMsJ,GAA2B,KAAKA,GAA2BtJ,GAAY,2BAA8B,EAAMxC,GAA0B,KAAKA,GAA0BwC,GAAY,0BAA6B,EAAMyC,GAA2B8G,IAAK9G,GAA2BzC,GAAY,2BAA8BuJ,CAAE,EAAM9B,GAAyB8B,IAAK9B,GAAyBzH,GAAY,yBAA4BuJ,CAAE,EAAM5G,GAA8B,KAAKA,GAA8B3C,GAAY,8BAAiC,EAAMwJ,GAAa1P,EAAO,aAAgB6F,GAAoB,eAAe,CAAC,EAAE7F,EAAO,MAAS8N,GAAM9N,EAAO,MAASyO,GAAM,IAAIkB,GAAsB,CAAC,gBAAgB,uBAAuB,yBAAyB,uBAAuB,yBAAyB,iBAAiB,iBAAiB,sBAAsB,sBAAsB,cAAc,cAAc,aAAa,SAAS,aAAa,eAAe,WAAW,UAAU,YAAY,YAAY,YAAY,YAAY,eAAe,gBAAgB,iBAAiB,aAAa,gBAAgB,gBAAgB,UAAU,oBAAoB,aAAa,yBAAyB,gBAAgB,eAAe,UAAU,kBAAkB,mBAAmB,uBAAuB,sBAAsB,mBAAmB,YAAY,cAAc,YAAY,cAAc,YAAY,kBAAkB,oBAAoB,aAAa,cAAc,eAAe,aAAa,gBAAgB,iBAAiB,mBAAmB,0BAA0B,oBAAoB,iBAAiB,qBAAqB,cAAc,iBAAiB,iBAAiB,SAAS,SAAS,SAAS,eAAe,qBAAqB,mBAAmB,gBAAgB,gBAAgB,gBAAgB,gBAAgB,mBAAmB,gBAAgB,gBAAgB,mBAAmB,kBAAkB,2BAA2B,yBAAyB,kBAAkB,wBAAwB,qBAAqB,6BAA6B,6BAA6B,0BAA0B,6BAA6B,iCAAiC,yCAAyC,4BAA4B,oCAAoC,oBAAoB,iCAAiC,yCAAyC,gCAAgC,wCAAwC,6BAA6B,qCAAqC,0BAA0B,mCAAmC,wBAAwB,eAAe,wCAAwC,sBAAsB,iCAAiC,yCAAyC,wCAAwC,qBAAqB,gCAAgC,wCAAwC,6BAA6B,uBAAuB,+BAA+B,oCAAoC,uBAAuB,UAAU,+BAA+B,uBAAuB,uBAAuB,eAAe,eAAe,4BAA4B,gBAAgB,iBAAiB,yBAAyB,yBAAyB,uBAAuB,iBAAiB,sBAAsB,wBAAwB,uBAAuB,aAAa,cAAc,gBAAgB,sBAAsB,gBAAgB,oBAAoB,kCAAkC,cAAc,kBAAkB,mBAAmB,yBAAyB,uBAAuB,aAAa,mBAAmB,YAAY,oBAAoB,eAAe,sBAAsB,yBAAyB,oBAAoB,sCAAsC,uCAAuC,kCAAkC,gCAAgC,qBAAqB,gCAAgC,iCAAiC,iCAAiC,4BAA4B,0BAA0B,6CAA6C,uBAAuB,iCAAiC,+BAA+B,eAAe,6BAA6B,qBAAqB,eAAe,cAAc,WAAW,sBAAsB,qBAAqB,WAAW,WAAW,YAAY,EAAEA,GAAsB,QAAQxH,EAAoB,EAAE,IAAIyH,GAAkB,CAAC,MAAM,cAAc,YAAY,eAAe,YAAY,eAAe,mBAAmB,sBAAsB,MAAM,MAAM,WAAW,QAAQ,aAAa,cAAc,mBAAmB,mBAAmB,6BAA6B,YAAY,eAAe,aAAa,cAAc,aAAa,aAAa,MAAM,qBAAqB,kBAAkB,gCAAgC,6BAA6B,cAAc,iBAAiB,MAAM,YAAY,UAAU,SAAS,WAAW,qBAAqB,UAAU,YAAY,gBAAgB,WAAW,mBAAmB,sBAAsB,WAAW,WAAW,OAAO,UAAU,cAAc,oBAAoB,eAAe,oBAAoB,eAAe,kBAAkB,eAAe,sBAAsB,qBAAqB,WAAW,qBAAqB,wBAAwB,4BAA4B,0BAA0B,eAAe,aAAa,sBAAsB,aAAa,yBAAyB,gBAAgB,kBAAkB,UAAU,8BAA8B,OAAO,WAAW,iBAAiB,0BAA0B,gBAAgB,kBAAkB,cAAc,KAAK,oBAAoB,QAAQ,MAAM,SAAS,SAAS,uBAAuB,4BAA4B,0BAA0B,KAAK,KAAK,OAAO,MAAM,OAAO,WAAW,MAAM,UAAU,eAAe,sBAAsB,QAAQ,UAAU,EAAEA,GAAkB,QAAQvH,EAAuB,EAAE,IAAIwH,GAAU9K,GAAsB,SAAS+K,GAAW,CAAKD,IAAUE,EAAI,EAAMF,KAAU9K,GAAsB+K,EAAS,EAAE,SAASE,IAAgB,CAACV,GAAuB,EAAE9L,GAAiB,CAAC,CAAC,SAASuM,GAAK,CAAwD,GAApDlL,GAAgB,IAAUmL,GAAe,EAAE3L,GAAO,EAAKQ,GAAgB,GAAG,OAAO,SAASoL,GAAO,CAAIJ,KAAiBA,GAAU,GAAK7P,EAAO,UAAa,GAAQ,CAAA0C,KAAa8B,GAAY,EAAEnE,EAAoBL,CAAM,EAAKA,EAAO,sBAAwBA,EAAO,qBAAwB,EAAEiC,EAAO,CAACjC,EAAO,MAAS,0GAA0G,EAAEyE,GAAQ,GAAC,CAAIzE,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,UAAU,CAAC,WAAW,UAAU,CAACA,EAAO,UAAa,EAAE,CAAC,EAAE,CAAC,EAAEiQ,EAAM,CAAC,EAAE,CAAC,GAAOA,EAAM,EAAEtM,GAAiB,CAAC,CAAC,GAAG3D,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAI,EAAE,EAAG+P,EAAI,EAAE3P,EAAUG,EAAa,QAAUG,KAAQ,OAAO,KAAKV,CAAM,EAAQU,KAAQP,GAAY,OAAO,eAAeA,EAAUO,EAAK,CAAC,aAAa,GAAK,KAAK,CAACC,GAAM,+BAA+BD,CAAI,kHAAkH,CAAC,CAAC,CAAC,EAG9z/B,OAAON,CACT,CAEA,GAAG,EACI8P,GAAQlQ,GCXR,IAAMmQ,GAAmC,CAC9C,MAAO,MACT,EAEIC,GAEJ,eAAsBC,IAAyB,CAC7C,GAAID,KAAyB,OAAW,OAAOA,GAK/C,IAAME,EAHU,MAAMC,GAAc,CAClC,WAAaC,GAAcL,GAAiC,OAASK,CACvE,CAAC,EAED,OAAAJ,GAAuBE,EAChBA,CACT,CCRO,IAAMG,GACX,EAAIC,GACJA,GACA,EAAIA,GACJ,EAAIA,GACJA,GACA,EACA,EAaWC,GAAyB,ECKtC,eAAsBC,GACpBC,EACAC,EACAC,EAC2B,CAE3B,IAAMC,EAAS,MAAMC,GAAuB,EACtCC,EAAeJ,EAAQ,OAM7BC,EAAK,YAAcA,EAAK,aAAe,GACvCA,EAAK,aAAeA,EAAK,cAAgB,IACzCA,EAAK,WAAaA,EAAK,aAAe,OAAY,EAAIA,EAAK,WAC3DA,EAAK,8CACHA,EAAK,gDAAkD,GAGzD,IAAMI,EAAcC,GAAmBJ,EAAQE,EAAcH,CAAI,EAE3D,CAACM,EAAcC,EAAaC,EAAiBC,CAAgB,EACjEC,GACET,EACAH,EAAK,UACLA,EAAK,YACLA,EAAK,gBACLC,EACAI,EACAH,EACAI,CACF,EAEIO,EAA8B,CAAC,EACrC,QAASC,EAAI,EAAGA,EAAIN,EAAcM,GAAK,EAAG,CACxC,IAAMC,EAAMD,EAAIE,GACVC,EAA2C,CAC/C,aAAcR,EAAYM,EAAM,CAAC,EACjC,eAAgBN,EAAYM,EAAM,CAAC,EACnC,YAAaN,EAAYM,EAAM,CAAC,EAChC,cAAeN,EAAYM,EAAM,CAAC,CACpC,EAWAF,EAAS,KAAKI,CAAO,CACvB,CAEA,IAAMC,EAAcL,EAAS,GAAG,EAAE,EAC5BM,EAAgBD,EAAY,aAAeA,EAAY,YACvDE,EACJF,EAAY,gBAAmBA,EAAY,cAAgB,EAAI,EAAK,IAGlEG,EAAsB,IAAI,YAAYD,CAAe,EACzD,QAASN,EAAI,EAAGA,EAAIM,EAAiBN,IACnCO,EAAoBP,CAAC,EAAIH,EAAiBG,CAAC,EAI7C,GAAIZ,EAAK,8CAA+C,CACtD,IAAMoB,EAAcC,GAClBV,EACAH,EACAW,CACF,EACAA,EAAsBG,GAAiB,YAAaF,CAAW,CACjE,MACE,QAAQ,KACN,mIACF,EAGF,MAAO,CACL,SAAAT,EACA,gBAAiBH,EAAgB,MAAM,EAAGS,CAAa,EACvD,iBAAkBE,CACpB,CACF,CAEA,SAAST,GACPT,EACAsB,EACAC,EACAC,EACA1B,EACAI,EACAH,EACAI,EACgD,CAGhD,IAAMO,EAAW,IAAI,YAAYP,EAAcU,EAAsB,EAG/DN,EAAkB,IAAI,YAAYJ,EAAcJ,EAAK,WAAY,EAGjES,EAAmB,IAAI,WAAWL,EAAcJ,EAAK,aAAgB,CAAC,EAe5E,MAAO,CAbc0B,GAAYzB,EAAQ,SAAU,wBAAyB,CAC1E0B,GAAQhB,EAAU,KAAK,EACvBgB,GAAQnB,EAAiB,KAAK,EAC9BmB,GAAQlB,EAAkB,KAAK,EAC/BkB,GAAQ5B,CAAO,EACfI,EACAwB,GAAQJ,CAAQ,EAChBC,EACAC,EACAzB,EAAK,YACLA,EAAK,aACLA,EAAK,UACP,CAAC,EACqBW,EAAUH,EAAiBC,CAAgB,CACnE,CAEA,SAASJ,GACPJ,EACAE,EACAH,EACQ,CAKR,OAAO0B,GAAYzB,EAAQ,SAAU,6BAA8B,CACjEE,EACAH,EAAK,YACLA,EAAK,YACP,CAAC,CACH,CAGA,SAASqB,GACPV,EACAH,EACAC,EACA,CACA,IAAMmB,EAA2B,CAAC,EAClC,QAAShB,EAAI,EAAGA,EAAID,EAAS,OAAQC,IAAK,CACxC,IAAMG,EAAUJ,EAASC,CAAC,EAE1B,QAASiB,EAAI,EAAGA,EAAId,EAAQ,cAAgBe,GAAmBD,IAAK,CAClE,IAAME,EAAIhB,EAAQ,eAAiBc,EAC7BG,EAAyBvB,EAAiBsB,CAAC,EAC3CE,EACJzB,EAAgBO,EAAQ,aAAeiB,CAAsB,EAC/DJ,EAAe,KAAKK,CAAO,CAC7B,CACF,CAEA,OAAOL,CACT,CAEO,SAASM,GAAwBvB,EAA4B,CAClE,IAAIwB,EAAU,EACd,OAAOxB,EAAS,SAAS,IAAKyB,GAAM,CAClC,IAAMZ,EAAcY,EAAE,cAAgBN,GAChCO,EAAaF,EACbG,EAAM3B,EAAS,iBAAiB,MACpC0B,EACAA,EAAab,CACf,EACA,OAAAW,GAAWX,EACJc,CACT,CAAC,CACH,CCnMA,IAAMC,GAA+B,EAS/BC,GAAsBC,GAAc,KAAK,MAAMA,EAAI,CAAC,EAAI,EAEjDC,GAA4B,CACvCC,EACAC,IAEOJ,GAAmBG,EAAgBC,CAAc,EAQ1D,eAAsBC,GACpBC,EACAC,EACAC,EACA,CACA,IAAMC,EAAS,MAAMC,GAAuB,EACtCC,EAAeJ,EAAQ,OAE7BC,EAAK,iBAAmBR,GAAmBQ,EAAK,gBAAgB,EAChEA,EAAK,YAAcA,EAAK,aAAe,IACvCA,EAAK,YAAcA,EAAK,aAAe,GAEvC,GAAM,CAACI,EAAOC,EAAeC,CAAM,EAAIC,GACrCN,EACAH,EAAK,sBACLA,EAAK,YACLA,EAAK,4BACLC,EACAI,EACAH,CACF,EAGMQ,EAAaC,GACjBR,EACAH,EAAK,sBACLA,EAAK,YACLA,EAAK,2BACP,EAEA,MAAO,CACL,MAAAM,EACA,WAAAI,EACA,YAAaF,EAAO,MAAM,EAAGD,CAAa,CAC5C,CACF,CAOA,SAASE,GACPN,EACAS,EACAC,EACAC,EACAb,EACAI,EACAH,EAC+B,CAC/B,IAAMM,EAAS,IAAI,YAAYH,CAAY,EACrCU,EAAiB,IAAI,aAAa,CAAC,EAGnCC,EAAUd,EAAK,YAAcT,GAA+B,EAE5Dc,EAAgBU,GAAYd,EAAQ,SAAU,mBAAoB,CACtEe,GAAQV,EAAQ,KAAK,EACrBU,GAAQjB,CAAO,EACfI,EACAa,GAAQN,CAAQ,EAChBC,EACAC,EACAZ,EAAK,iBACLA,EAAK,YACLc,EACAE,GAAQH,EAAgB,KAAK,CAC/B,CAAC,EACD,MAAO,CAACA,EAAe,CAAC,EAAGR,EAAeC,CAAM,CAClD,CA+BA,SAASG,GACPR,EACAS,EACAC,EACAC,EACQ,CAMR,OALcG,GAAYd,EAAQ,SAAU,wBAAyB,CACnEe,GAAQN,CAAQ,EAChBC,EACAC,CACF,CAAC,CAEH,CC9IA,eAAsBK,GACpBC,EACAC,EACAC,EACsB,CACtB,IAAMC,EAAkBD,EAAW,QAE7BE,EAAW,MAAMC,GACrBL,EACAC,EACAC,EACAC,CACF,EAEMG,EAAoB,MAAMC,GAC9BP,EACAC,EACAC,EACAC,CACF,EAEMK,EAAgCF,EAAkB,IACtD,CAAC,CAACG,EAASC,CAAO,EAAGC,IACZN,GACLL,EACAS,EACAP,EACAQ,EACA,OAAOC,CAAK,EACd,CAEJ,EACMC,EAA2B,MAAM,QAAQ,IAC7CJ,CACF,EAEA,MAAO,CACL,KAAMP,EACN,SAAAG,EACA,kBAAmBE,EAAkB,IAAKO,GAAMA,EAAE,CAAC,CAAC,EACpD,yBAAAD,CACF,CACF,CAEA,eAAeL,GACbP,EACAC,EACAC,EACAC,EACgD,CAEhD,IAAMW,EAAWZ,EAAW,UACtBa,EAAwBC,GAAiBb,CAAe,EACxDc,EAA2BF,EAAwB,GACrDG,EAAgBH,EACdI,EAAkD,CAAC,EAEnDC,EAAa,CAACC,EAAuBC,IAA2B,CACpEH,EAAS,KAAK,CAACE,EAAMC,CAAS,CAAC,CACjC,EAGA,IAFAF,EAAWnB,EAAcE,CAAe,EAGtCe,EAAgBD,GAChBE,EAAS,OAAS,IAClB,CACA,IAAMR,EAAQQ,EAAS,OAEjBI,EAAoBL,EAAgBM,GAAqB,EAEzDC,EAAiB,MAAMC,GAAaxB,EAAYC,EAAiB,CACrE,iBAAAoB,EACA,YAAa,GACf,CAAC,EACKI,EAAmBX,GAAiBS,EAAe,WAAW,EACpE,GAAIE,IAAqBZ,EAAuB,MAKhDG,EAAgBS,EAEhB,IAAMC,EAAcC,GAClB7B,EACA,6BAA6BW,CAAK,GAClCc,EAAe,WACjB,EACMK,EAA2B,CAC/B,GAAG7B,EACH,YAAA2B,EACA,YAAaG,GAAejB,CAAQ,EACpC,cAAeE,GAAiBS,EAAe,WAAW,CAC5D,EACAL,EAAWU,EAASL,EAAe,WAAW,CAChD,CAEA,OAAON,CACT,CAEA,eAAed,GACbL,EACAC,EACAoB,EACAX,EACAsB,EAAsB,GACM,CAC5B,IAAM5B,EAAW,MAAM6B,GAAeZ,EAAMX,EAAS,CAAC,CAAC,EAEjDwB,EAAqBL,GACzB7B,EACA,uBAAuBgC,CAAW,GAClC5B,EAAS,gBACX,EAEA,MAAO,CACL,GAAGA,EACH,aAAcH,EAAa,aAC3B,YAAaiC,CACf,CACF,CCpHO,IAAMC,GAAqBC,GAAwBA,EAAE,OAASA,EAAE,OAEhE,SAASC,GACdC,EAAiB,GACjBC,EAAiB,GACjBC,EAAkB,IAClBC,EAAU,EACVC,EAAU,EACQ,CAClB,MAAO,CAAE,OAAAJ,EAAQ,OAAAC,EAAQ,QAAAC,EAAS,QAAAC,EAAS,QAAAC,CAAQ,CACrD,CASO,SAASC,GACdC,EACAC,EACAC,EACqB,CACrB,IAAMC,EAAmBH,EAAO,aAAa,CAC3C,MAAO,GAAGC,CAAI,qBACd,KAAMG,GAAaF,EAAK,OAASA,EAAK,OACtC,MAAO,eAAe,QAAU,eAAe,QACjD,CAAC,EACKG,EAA0B,CAAC,EAE7BC,EAAc,EAClB,QAASC,EAAI,EAAGA,EAAIL,EAAK,OAAQK,IAC/B,QAASC,EAAI,EAAGA,EAAIN,EAAK,OAAQM,IAAK,CACpC,IAAMC,EAAUC,GAAK,YAAY,CAC/B,CAACH,EAAIL,EAAK,QAAUA,EAAK,QACzB,EACA,CAACM,EAAIN,EAAK,QAAUA,EAAK,OAC3B,CAAC,EACKS,EAAWJ,GAAK,GAAKC,GAAK,EAAI,EAAII,GAAc,EAAG,GAAG,EAEtDC,EAASH,GAAK,UAAUI,GAAQH,CAAQ,CAAC,EACzCI,EAASL,GAAK,SAASD,EAASI,CAAM,EAE5CR,EAAW,KAAKU,CAAM,EACtBC,GAAuBhB,EAAQG,EAAkBG,EAAaS,CAAM,EACpET,GAAeF,EACjB,CAGF,IAAMa,EAAQ1B,GAAkBW,CAAI,EACpC,MAAO,CAAE,WAAAG,EAAY,iBAAAF,EAAkB,MAAAc,CAAM,CAC/C,CC5DA,IAAMC,GAAU,CACd,MAAO,CAAE,KAAM,YAAa,MAAO,CAAE,EACrC,KAAM,CAAE,KAAM,WAAY,MAAO,CAAE,EACnC,SAAU,CAAE,KAAM,YAAa,MAAO,CAAE,EACxC,OAAQ,CAAE,KAAM,oBAAqB,MAAO,GAAK,EACjD,WAAY,CAAE,KAAM,qBAAsB,MAAO,GAAK,EACtD,MAAO,CAAE,KAAM,YAAa,MAAO,CAAE,EACrC,UAAW,CAAE,KAAM,aAAc,MAAO,CAAE,EAC1C,KAAM,CAAE,KAAM,WAAY,MAAO,CAAE,EACnC,MAAO,CAAE,KAAM,YAAa,MAAO,EAAG,QAAS,kBAAmB,EAClE,YAAa,CAAE,KAAM,mBAAoB,MAAO,EAAI,EACpD,eAAgB,CACd,KAAM,sBACN,MAAO,GACP,QAAS,kBACX,EAEA,mBAAoB,CAAE,KAAM,2BAA4B,MAAO,EAAI,EAEnE,aAAc,CAAE,KAAM,yBAA0B,MAAO,EAAG,QAAS,wBAAyB,EAC5F,SAAU,CAAE,KAAM,qBAAsB,MAAO,EAAG,QAAS,oBAAqB,EAChF,SAAU,CAAE,KAAM,qBAAsB,MAAO,EAAG,QAAS,oBAAqB,EAChF,SAAU,CAAE,KAAM,qBAAsB,MAAO,EAAG,QAAS,oBAAqB,EAChF,aAAc,CAAE,KAAM,kCAAmC,MAAO,EAAG,QAAS,iCAAkC,CAChH,EAKO,SAASC,GAAkBC,EAAuB,CACvD,IAAMC,EAASH,GAAQE,CAAI,EAC3B,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,uBAAuBD,CAAI,GAAG,EAEhD,OAAOC,CAKT,CAEO,IAAMC,GAAS,CACpB,YAAa,CAACC,GAAW,QAAS,EAAG,CAAC,CAAC,EACvC,MAAO,CAACA,GAAW,OAAO,CAAC,EAC3B,SAAU,CAACA,GAAW,QAAS,MAAO,CAAC,CAAC,EACxC,QAAS,CAACA,GAAW,QAAS,IAAK,IAAK,EAAG,CAAC,EAC5C,cAAe,CAACA,GAAW,QAAS,IAAK,IAAK,EAAG,CAAC,EAClD,WAAY,CAACA,GAAW,OAAQ,EAAG,CAAC,CAAC,EACrC,eAAgB,CAACA,GAAW,WAAY,EAAG,CAAC,CAAC,EAC7C,KAAM,CAACA,GAAW,OAAQ,GAAI,GAAI,CAAC,CAAC,EACpC,OAAQ,CAACA,GAAW,WAAY,IAAK,IAAK,EAAG,CAAC,EAC9C,OAAQ,CAACA,GAAW,SAAU,EAAG,CAAC,CAAC,EACnC,WAAY,CAACA,GAAW,aAAc,GAAI,EAAE,CAAC,EAC7C,MAAO,CAACA,GAAW,QAAS,EAAG,CAAC,CAAC,EACjC,UAAW,CAACA,GAAW,YAAa,EAAG,CAAC,CAAC,EACzC,KAAM,CAACA,GAAW,OAAQ,EAAG,CAAC,CAAC,EAC/B,MAAO,CAACA,GAAW,QAAS,EAAG,CAAC,CAAC,EACjC,YAAa,CAACA,GAAW,cAAe,EAAG,CAAC,CAAC,EAC7C,eAAgB,CAACA,GAAW,iBAAkB,EAAG,CAAC,CAAC,EACnD,mBAAoB,CAACA,GAAW,qBAAsB,EAAG,CAAC,CAAC,EAC3D,YAAa,CACXC,GAAsB,iBAAkB,GAAI,EAAG,CAAC,EAChDA,GAAsB,QAAS,GAAI,EAAG,CAAC,CACzC,EACA,aAAc,CACZA,GAAsB,WAAY,GAAI,IAAK,CAAC,EAC5CA,GAAsB,aAAc,GAAI,IAAK,EAAG,CAClD,EACA,aAAc,CAEZA,GAAsB,eAAgB,IAAK,EAAG,CAChD,EACA,KAAM,CACJ,OAAQ,CACN,WACA,WACA,WACA,cACF,EACA,UAAWC,GAAW,IAAK,IAAK,CAAG,CACrC,CACF,EAKA,SAASF,GACPG,KACGC,EACH,CACA,IAAMC,EAAYH,GAAW,GAAGE,CAAI,EACpC,OAAOE,GAAIH,EAAOE,CAAS,CAC7B,CAEA,SAASJ,GACPE,EACAI,EACAC,EACAC,EAAS,EACT,CACA,IAAMJ,EAAYH,GAAWK,EAAOA,EAAOC,EAASC,EAAQA,CAAM,EAClE,OAAOH,GAAIH,EAAOE,CAAS,CAC7B,CAEA,SAASC,GAAIH,EAAwBE,EAA6B,CAChE,MAAO,CAAE,MAAAF,EAAO,UAAAE,CAAU,CAC5B,CAEO,SAASK,GAAiBC,EAAsC,CACrE,OAAO,OAAOA,GAAW,UAAY,OAAO,KAAKZ,EAAM,EAAE,SAASY,CAAM,CAC1E,CC/GO,IAAMC,GAAgB,CAC3B,SAAU,CACR,SAAU,EACV,eAAgB,EAChB,QAAS,CACX,CACF,EAKMC,GAAID,GAAc,SAEXE,GAAc,IAAiB;AAAA;AAAA,qBAEvBD,GAAE,QAAQ;AAAA;AAAA;AAAA,qBAGVA,GAAE,cAAc;AAAA;AAAA;AAAA,qBAGhBA,GAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+B5BE,EAA0B;AAAA,EAC1BC,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECrDjB,IAAMC,GAAYC,IAChBA,EAAIA,EAAI,EAAIA,EAAI,IAAMA,EACf,KAAK,MAAMC,GAAMD,EAAG,EAAG,GAAG,CAAC,GAG7B,SAASE,GACdC,EACAC,EACA,CACA,IAAMC,EAAmB,CAAE,MAAO,EAAG,OAAQ,CAAE,EACzCC,EAAa,EAEbC,EAAUJ,EAAO,cAAc,CACnC,MAAO,qBACP,UAAW,KACX,KAAM,CAACE,EAAK,MAAOA,EAAK,OAAQ,CAAC,EACjC,OAAQ,aACR,MAAO,gBAAgB,gBAAkB,gBAAgB,QAC3D,CAAC,EAGKG,EAAO,IAAI,WAAWH,EAAK,MAAQA,EAAK,OAASC,CAAU,EACjE,QAASG,EAAI,EAAGA,EAAIJ,EAAK,MAAOI,IAC9B,QAASC,EAAI,EAAGA,EAAIL,EAAK,OAAQK,IAAK,CACpC,IAAMC,GAAUF,EAAIJ,EAAK,MAAQK,GAAKJ,EACtCE,EAAKG,CAAM,EAAIZ,GAASK,EAAM,CAAC,CAAC,EAChCI,EAAKG,EAAS,CAAC,EAAIZ,GAASK,EAAM,CAAC,CAAC,EACpCI,EAAKG,EAAS,CAAC,EAAIZ,GAASK,EAAM,CAAC,CAAC,EACpCI,EAAKG,EAAS,CAAC,EAAI,GACrB,CAGF,OAAAR,EAAO,MAAM,aACX,CAAE,QAAAI,CAAQ,EACVC,EACA,CAAE,YAAaH,EAAK,MAAQO,EAAc,EAC1C,CAACP,EAAK,MAAOA,EAAK,MAAM,CAC1B,EACOE,CACT,CAEO,SAASM,GAAcV,EAAmBW,EAAqB,CACpE,OAAOX,EAAO,cAAc,CAC1B,MAAO,kBACP,UAAWW,EACX,UAAWA,EACX,aAAc,UACd,aAAc,SACd,aAAc,QAChB,CAAC,CACH,CCjCO,IAAMC,GAAN,KAA+B,CAGpC,YAA4BC,EAAqB,CAArB,aAAAA,EAC1B,KAAK,YAAcA,EAAQ,WAAW,CACxC,CAJgB,YAMhB,KAAQC,IAAoC,CAC1C,QAASA,EACT,SAAU,KAAK,WACjB,EACF,EAcMC,GAAuC,YACvCC,GAAiC,cAGhC,IAAMC,GAAN,MAAMC,CAAiB,CAW5B,YACEC,EACiBC,EACAC,EAAYC,EAAO,UAAU,MAC7BC,EAAcD,EAAO,UAAU,YAChD,CAHiB,qBAAAF,EACA,eAAAC,EACA,iBAAAE,EAEjBC,GAAuB,KAAK,eAAe,EAE3C,IAAMC,EAAeN,EAAO,mBAAmB,CAC7C,MAAOO,GAAYR,CAAgB,EACnC,KAAMS,GAAY,CACpB,CAAC,EAED,KAAK,SAAWR,EAAO,qBAAqB,CAC1C,MAAOS,GAAcV,CAAgB,EACrC,OAAQ,OACR,OAAQ,CACN,OAAQO,EACR,WAAY,UACZ,QAASI,EACX,EACA,SAAU,CACR,OAAQJ,EACR,WAAY,UACZ,QAAS,CAAC,CAAE,OAAQK,EAAmB,CAAC,CAC1C,EACA,UAAWC,GACX,aAAc,CAAE,GAAGC,GAA2B,OAAQC,EAAa,CACrE,CAAC,EAED,KAAK,eAAiBd,EAAO,aAAa,CACxC,MAAO,GAAGD,EAAiB,IAAI,YAC/B,KAAMgB,IAAc,EAAI,KAAK,WAC7B,MACE,eAAe,QACf,eAAe,SACf,eAAe,SACf,eAAe,QACnB,CAAC,EACD,KAAK,YAAc,IAAI,aAAa,KAAK,eAAe,KAAOC,EAAS,EAExE,KAAK,QAAUC,GAAcjB,EAAQ,QAAQ,EAE7C,KAAK,aAAeA,EAAO,cAAc,CACvC,MAAOkB,GAAYnB,EAAkB,OAAO,EAC5C,KAAM,CAAC,KAAK,YAAc,KAAK,UAAW,KAAK,WAAW,EAC1D,OAAQe,GACR,MAAO,gBAAgB,iBACzB,CAAC,EACD,KAAK,iBAAmB,KAAK,aAAa,WAAW,CACvD,CA5DA,OAAc,KAAe,mBAC7B,OAAe,YAAc,CAAC,EAAK,EAAK,EAAK,CAAG,EAE/B,SACA,eACA,YACA,QACA,aACA,iBAsDjB,sBACEd,EACAmB,EAC0B,CAC1B,IAAMC,EAAgB,KAAK,oBAAoBpB,EAAQmB,CAAI,EAGrDE,EAASrB,EAAO,qBAAqB,CACzC,MAAO,GAAGD,EAAiB,IAAI,IAAIoB,EAAK,IAAI,aAC9C,CAAC,EACKG,EAAS,KAAK,sBAClBtB,EACAqB,EACAD,EACAD,CACF,EACA,OAAAnB,EAAO,MAAM,OAAO,CAACqB,EAAO,OAAO,CAAC,CAAC,EAE9BC,CACT,CAEQ,oBAAoBtB,EAAmBmB,EAAoB,CACjE,IAAMI,EAAQ,KAAK,YAAc,KAAK,UAChCC,EAA4CrB,EAAO,OACrD,gBAAgB,SAChB,EAEJ,OAAOH,EAAO,cAAc,CAC1B,MAAOkB,GAAYnB,EAAkBoB,EAAK,IAAI,EAC9C,UAAW,KACX,KAAM,CAACI,EAAO,KAAK,YAAa,CAAC,EACjC,OAAQZ,GACR,MACE,gBAAgB,gBAChB,gBAAgB,kBAChBa,CACJ,CAAC,CACH,CAGQ,sBACNxB,EACAqB,EACAI,EACAN,EAC0B,CAE1B,IAAMO,EAAoBD,EAAc,WAAW,EAC7CE,EAAaN,EAAO,gBAAgB,CACxC,MAAOtB,EAAiB,KACxB,iBAAkB,CAChB6B,GACEF,EACA3B,EAAiB,YACjB,OACF,CACF,EACA,uBAAwB8B,GACtB,KAAK,iBACL,OACF,CACF,CAAC,EAGKC,EAAW,KAAK,eAAe9B,EAAQmB,CAAI,EACjDQ,EAAW,gBAAgB,EAAGR,EAAK,YAAY,EAC/CQ,EAAW,gBAAgB,EAAGR,EAAK,aAAa,EAChDQ,EAAW,gBAAgB,EAAGR,EAAK,QAAQ,EAC3CQ,EAAW,eAAeR,EAAK,YAAa,QAAQ,EACpDQ,EAAW,YAAY,KAAK,QAAQ,EACpCA,EAAW,aAAa,EAAGG,CAAQ,EAEnC,IAAM1B,EAAc,KAAK,YAGzB,QAAS2B,EAAI,EAAGA,EAAI,KAAK,UAAWA,IAClCJ,EAAW,YACTvB,EAAc2B,EACd,EACA3B,EACAA,EACA,EACA,CACF,EAEAuB,EAAW,YAAYR,EAAK,cAAgB,EAAG,EAAG,EAAG,EAAGY,CAAC,EAI3D,OAAAJ,EAAW,IAAI,EAER,IAAIK,GAAyBP,CAAa,CACnD,CAEQ,eAAiB,CACvBzB,EACAmB,IACiB,CACjB,IAAMc,EAAIC,GAAc,SAElBC,EAAU,KAAK,iBAAiBhB,CAAI,EACpCiB,EAAW,IAAQ,KAAK,UACxBC,EAAWC,GAAY,KAAK,SAAS,EAAE,IAAI,CAACC,EAAGR,IACnDS,GAAK,UAAUC,GAAQL,EAAWL,CAAC,CAAC,CACtC,EACA,KAAK,cAAc/B,EAAQmC,EAASE,CAAQ,EAE5C,IAAMK,EAAUvB,EAAK,SAAW,KAAK,gBACrC,OAAAd,GAAuBqC,CAAO,EAEvBC,GACL5C,EACA,GAAGA,EAAiB,IAAI,IAAIoB,EAAK,IAAI,GACrCnB,EACA,KAAK,SACL,CACE,CAAE,QAASiC,EAAE,SAAU,SAAU,CAAE,OAAQ,KAAK,cAAe,CAAE,EACjE,CAAE,QAASA,EAAE,eAAgB,SAAUS,CAAQ,EAC/C,CAAE,QAAST,EAAE,QAAS,SAAU,KAAK,OAAQ,CAC/C,CACF,CACF,EAEQ,cAAcjC,EAAmBmC,EAAeE,EAAkB,CACxE,IAAIO,EAAc,EAKlB,GAJAA,EAAc,KAAK,UAAUA,EAAaT,CAAO,EACjDE,EAAS,QAASQ,GAAQ,CACxBD,EAAc,KAAK,UAAUA,EAAaC,CAAG,CAC/C,CAAC,EAECD,IAAgB,KAAK,YAAY,YACjCA,IAAgB,KAAK,eAAe,KAEpC,MAAM,IAAI,MAAM,gDAAgD,KAAK,eAAe,IAAI,yBAAyB,KAAK,YAAY,UAAU,mBAAmBA,CAAW,SAAS,EAGrL5C,EAAO,MAAM,YAAY,KAAK,eAAgB,EAAG,KAAK,WAAW,CACnE,CAGQ,UAAU4C,EAAqBC,EAAW,CAChD,IAAMC,EAASF,EAAc5B,GAC7B,QAASe,EAAI,EAAGA,EAAI,GAAIA,IACtB,KAAK,YAAYe,EAASf,CAAC,EAAIc,EAAId,CAAC,EAEtC,OAAOa,EAAc7B,EACvB,CAEQ,iBAAiBI,EAAoB,CAC3C,IAAMc,EAAId,EAAK,OACT,EAAIc,EAAE,OACZ,OAAOO,GAAK,MACVP,EAAE,OAAO,CAAC,EAAI,EACdA,EAAE,OAAO,CAAC,EAAI,EACdA,EAAE,OAAO,CAAC,EAAI,EACdA,EAAE,OAAO,CAAC,EAAI,EACdA,EAAE,OAAO,CAAC,EAAI,EACdA,EAAE,OAAO,CAAC,EAAI,CAChB,CACF,CACF,ECnQO,IAAMc,GAAa,CAACC,EAAYC,IACrC,GAAG,KAAK,IAAID,EAAIC,CAAE,CAAC,IAAI,KAAK,IAAID,EAAIC,CAAE,CAAC,GAElC,SAASC,GAAaC,EAA8B,CACzD,GAAIA,EAAQ,OAASC,KAAsB,EACzC,MAAM,IAAI,MACR,oBAAoBD,EAAQ,MAAM,2CACpC,EAGF,IAAME,EAAiB,CAAC,EAClBC,EAAgBC,GAAiBJ,CAAO,EACxCK,EAAU,CAACR,EAAYC,IAAeI,EAAO,KAAKN,GAAWC,EAAIC,CAAE,CAAC,EAE1E,QAASQ,EAAI,EAAGA,EAAIH,EAAeG,IAAK,CACtC,IAAMC,EAAKP,EAAQC,GAAoBK,CAAC,EAClCE,EAAKR,EAAQC,GAAoBK,EAAI,CAAC,EACtCG,EAAKT,EAAQC,GAAoBK,EAAI,CAAC,EAC5CD,EAAQE,EAAIC,CAAE,EACdH,EAAQE,EAAIE,CAAE,EACdJ,EAAQG,EAAIC,CAAE,CAChB,CAEA,OAAOP,CACT,CAEO,IAAMQ,GAAa,CAACC,EAAUC,IAAsBD,IAAOC,EAG3D,SAASC,GAAkBC,EAA0B,CAC1D,IAAMC,EAAoBC,GAAY,CACpC,IAAIC,EAAU,EACd,OAAAH,EAAS,QAASI,GAAO,CACnBR,GAAWM,EAAGE,CAAE,IAAGD,GAAW,EACpC,CAAC,EACMA,CACT,EAGA,OAAOH,EAAS,OAAQE,GAAMD,EAAiBC,CAAC,GAAK,CAAC,CACxD,CAMO,SAASG,GAA0BC,EAA2B,CACnE,IAAMC,EAAmBD,EAAgB,IAAKE,GAAM,IAAI,IAAIA,CAAC,CAAC,EAExDC,EAAgB,CAACC,EAAuBC,IAA0B,CACtE,QAAWd,KAAMa,EACf,GAAIC,EAAS,IAAId,CAAE,EAAG,MAAO,GAE/B,MAAO,EACT,EAEMT,EAAqBwB,GAAYL,EAAiB,MAAM,EAAE,IAAI,IAAM,CAAC,CAAC,EAC5E,QAASf,EAAI,EAAGA,EAAIe,EAAiB,OAAQf,IAAK,CAChD,IAAMkB,EAAWH,EAAiBf,CAAC,EACnC,QAASqB,EAAIrB,EAAI,EAAGqB,EAAIN,EAAiB,OAAQM,IAAK,CACpD,IAAMF,EAAWJ,EAAiBM,CAAC,EAC/BrB,IAAMqB,GAAKJ,EAAcC,EAAUC,CAAQ,IAC7CvB,EAAOI,CAAC,EAAE,KAAKqB,CAAC,EAChBzB,EAAOyB,CAAC,EAAE,KAAKrB,CAAC,EAEpB,CACF,CACA,OAAOJ,CACT,CAMO,SAAS0B,GAAyBR,EAA2B,CAClE,IAAMS,EAAO,IAAI,IACjB,QAASvB,EAAI,EAAGA,EAAIc,EAAgB,OAAQd,IAAK,CAC/C,IAAMkB,EAAWJ,EAAgBd,CAAC,EAClC,QAASqB,EAAI,EAAGA,EAAIH,EAAS,OAAQG,IAAK,CACxC,IAAMG,EAAWN,EAASG,CAAC,EACrBI,EAAIF,EAAK,IAAIC,CAAQ,GAAK,CAAC,EACjCC,EAAE,KAAKzB,CAAC,EACRuB,EAAK,IAAIC,EAAUC,CAAC,CACtB,CACF,CAGA,IAAM7B,EAAqBwB,GAAYN,EAAgB,MAAM,EAAE,IAAI,IAAM,CAAC,CAAC,EAC3E,OAAAS,EAAK,QAASG,GAAgB,CAE5B,IAAMC,EAAa,MAAM,KAAKD,CAAW,EACnCE,EAAID,EAAW,OACrB,QAAS3B,EAAI,EAAGA,EAAI4B,EAAG5B,IACrB,QAASqB,EAAIrB,EAAI,EAAGqB,EAAIO,EAAGP,IAAK,CAC9B,IAAMQ,EAAKF,EAAW3B,CAAC,EACjB8B,EAAKH,EAAWN,CAAC,EAElBzB,EAAOiC,CAAE,EAAE,SAASC,CAAE,GAAGlC,EAAOiC,CAAE,EAAE,KAAKC,CAAE,EAC3ClC,EAAOkC,CAAE,EAAE,SAASD,CAAE,GAAGjC,EAAOkC,CAAE,EAAE,KAAKD,CAAE,CAClD,CAEJ,CAAC,EACMjC,CACT,CCpHA,IAAAmC,GAAA,GACIC,IAAU,IAAM,CAClB,IAAIC,EAAaF,GAAY,IAE7B,OACF,SAASC,EAAQ,CACfA,EAASA,GAAU,CAAC,EAEtB,IAAIA,EAAO,OAAOA,EAAQ,IAAYA,EAAO,CAAC,EAAME,EAAoBC,EAAmBH,EAAO,MAAS,IAAI,QAAQ,SAASI,EAAQC,EAAO,CAACH,EAAoBE,EAAQD,EAAmBE,CAAM,CAAC,EAAE,IAAIC,EAAgB,OAAO,OAAO,CAAC,EAAEN,CAAM,EAAMO,EAAW,CAAC,EAAMC,EAAY,iBAAqBC,EAAM,CAACC,EAAOC,IAAU,CAAC,MAAMA,CAAO,EAAMC,EAAmB,GAASC,EAAsB,GAAUC,EAAgB,GAAG,SAASC,EAAWC,EAAK,CAAC,OAAGhB,EAAO,WAAsBA,EAAO,WAAcgB,EAAKF,CAAe,EAASA,EAAgBE,CAAI,CAAC,IAAIC,EAAMC,EAAUC,EAAWC,GAAkBR,GAAoBC,KAA0BA,EAAuBC,EAAgB,KAAK,SAAS,KAAa,OAAO,SAAU,KAAa,SAAS,gBAAeA,EAAgB,SAAS,cAAc,KAAOb,IAAYa,EAAgBb,GAAca,EAAgB,QAAQ,OAAO,IAAI,EAAGA,EAAgBA,EAAgB,OAAO,EAAEA,EAAgB,QAAQ,SAAS,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,EAAOA,EAAgB,GAAIG,EAAMI,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAASA,EAAI,YAAY,EAAKT,IAAuBM,EAAWE,GAAK,CAAC,IAAIC,EAAI,IAAI,eAAe,OAAAA,EAAI,KAAK,MAAMD,EAAI,EAAK,EAAEC,EAAI,aAAa,cAAcA,EAAI,KAAK,IAAI,EAAS,IAAI,WAAWA,EAAI,QAAQ,CAAC,GAAEJ,EAAU,CAACG,EAAIE,EAAOC,IAAU,CAAC,IAAIF,EAAI,IAAI,eAAeA,EAAI,KAAK,MAAMD,EAAI,EAAI,EAAEC,EAAI,aAAa,cAAcA,EAAI,OAAO,IAAI,CAAC,GAAGA,EAAI,QAAQ,KAAKA,EAAI,QAAQ,GAAGA,EAAI,SAAS,CAACC,EAAOD,EAAI,QAAQ,EAAE,MAAM,CAACE,EAAQ,CAAC,EAAEF,EAAI,QAAQE,EAAQF,EAAI,KAAK,IAAI,CAAC,EAAEF,EAAeK,GAAO,SAAS,MAAMA,GAAY,IAAIC,EAAI1B,EAAO,OAAU,QAAQ,IAAI,KAAK,OAAO,EAAM2B,EAAI3B,EAAO,UAAa,QAAQ,KAAK,KAAK,OAAO,EAAE,OAAO,OAAOA,EAAOM,CAAe,EAAEA,EAAgB,KAAQN,EAAO,YAAaO,EAAWP,EAAO,WAAgBA,EAAO,cAAeQ,EAAYR,EAAO,aAAkBA,EAAO,OAAQS,EAAMT,EAAO,MAAQ,IAAI4B,EAAc5B,EAAO,aAAc4B,EAAW5B,EAAO,YAAc,IAAI6B,EAAc7B,EAAO,eAAkB,GAAQ,OAAO,aAAa,UAAU8B,GAAM,iCAAiC,EAAE,IAAIC,EAAeC,EAAM,GAAUC,EAAW,SAASC,GAAOC,EAAUC,EAAK,CAAKD,GAAWL,GAAMM,CAAI,CAAE,CAAC,IAAIC,GAAY,OAAO,YAAa,IAAY,IAAI,YAAY,MAAM,EAAE,OAAU,SAASC,EAAkBC,EAAYC,EAAIC,EAAe,CAA8C,QAAzCC,EAAOF,EAAIC,EAAmBE,EAAOH,EAAUD,EAAYI,CAAM,GAAG,EAAEA,GAAQD,IAAQ,EAAEC,EAAO,GAAGA,EAAOH,EAAI,IAAID,EAAY,QAAQF,GAAa,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAIG,CAAM,CAAC,EAAa,QAAPC,EAAI,GAASJ,EAAIG,GAAO,CAAC,IAAIE,EAAGN,EAAYC,GAAK,EAAE,GAAG,EAAEK,EAAG,KAAK,CAACD,GAAK,OAAO,aAAaC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGP,EAAYC,GAAK,EAAE,GAAG,IAAIK,EAAG,MAAM,IAAI,CAACD,GAAK,OAAO,cAAcC,EAAG,KAAK,EAAEC,CAAE,EAAE,QAAQ,CAAC,IAAIC,EAAGR,EAAYC,GAAK,EAAE,GAAmG,IAA5FK,EAAG,MAAM,IAAKA,GAAIA,EAAG,KAAK,GAAGC,GAAI,EAAEC,EAAQF,GAAIA,EAAG,IAAI,GAAGC,GAAI,GAAGC,GAAI,EAAER,EAAYC,GAAK,EAAE,GAAMK,EAAG,MAAOD,GAAK,OAAO,aAAaC,CAAE,MAAM,CAAC,IAAIG,EAAGH,EAAG,MAAMD,GAAK,OAAO,aAAa,MAAMI,GAAI,GAAG,MAAMA,EAAG,IAAI,CAAC,CAAC,CAAC,OAAOJ,CAAG,CAAC,SAASK,GAAaC,EAAIT,EAAe,CAAC,OAAOS,EAAIZ,EAAkBa,GAAOD,EAAIT,CAAc,EAAE,EAAE,CAAC,SAASW,EAAkBR,EAAIS,EAAKC,EAAOC,EAAgB,CAAC,GAAG,EAAEA,EAAgB,GAAG,MAAO,GAA0D,QAApDC,EAASF,EAAWZ,EAAOY,EAAOC,EAAgB,EAAUE,EAAE,EAAEA,EAAEb,EAAI,OAAO,EAAEa,EAAE,CAAC,IAAIC,EAAEd,EAAI,WAAWa,CAAC,EAAE,GAAGC,GAAG,OAAOA,GAAG,MAAM,CAAC,IAAIZ,EAAGF,EAAI,WAAW,EAAEa,CAAC,EAAEC,EAAE,QAAQA,EAAE,OAAO,IAAIZ,EAAG,IAAI,CAAC,GAAGY,GAAG,IAAI,CAAC,GAAGJ,GAAQZ,EAAO,MAAMW,EAAKC,GAAQ,EAAEI,CAAC,SAASA,GAAG,KAAK,CAAC,GAAGJ,EAAO,GAAGZ,EAAO,MAAMW,EAAKC,GAAQ,EAAE,IAAII,GAAG,EAAEL,EAAKC,GAAQ,EAAE,IAAII,EAAE,EAAE,SAASA,GAAG,MAAM,CAAC,GAAGJ,EAAO,GAAGZ,EAAO,MAAMW,EAAKC,GAAQ,EAAE,IAAII,GAAG,GAAGL,EAAKC,GAAQ,EAAE,IAAII,GAAG,EAAE,GAAGL,EAAKC,GAAQ,EAAE,IAAII,EAAE,EAAE,KAAK,CAAC,GAAGJ,EAAO,GAAGZ,EAAO,MAAMW,EAAKC,GAAQ,EAAE,IAAII,GAAG,GAAGL,EAAKC,GAAQ,EAAE,IAAII,GAAG,GAAG,GAAGL,EAAKC,GAAQ,EAAE,IAAII,GAAG,EAAE,GAAGL,EAAKC,GAAQ,EAAE,IAAII,EAAE,EAAE,CAAC,CAAC,OAAAL,EAAKC,CAAM,EAAE,EAASA,EAAOE,CAAQ,CAAC,SAASG,GAAaf,EAAIgB,EAAOL,EAAgB,CAAC,OAAOH,EAAkBR,EAAIO,GAAOS,EAAOL,CAAe,CAAC,CAAC,SAASM,GAAgBjB,EAAI,CAAW,QAANkB,EAAI,EAAUL,EAAE,EAAEA,EAAEb,EAAI,OAAO,EAAEa,EAAE,CAAC,IAAIM,EAAEnB,EAAI,WAAWa,CAAC,EAAKM,GAAG,IAAKD,IAAcC,GAAG,KAAMD,GAAK,EAAUC,GAAG,OAAOA,GAAG,OAAOD,GAAK,EAAE,EAAEL,GAAOK,GAAK,CAAE,CAAC,OAAOA,CAAG,CAAC,IAAIE,GAAOC,EAAMd,GAAOe,GAAOC,GAAQC,GAAOC,GAAQC,GAAQC,GAAQ,SAASC,GAA2BC,EAAI,CAACT,GAAOS,EAAIzE,EAAO,MAASiE,EAAM,IAAI,UAAUQ,CAAG,EAAEzE,EAAO,OAAUkE,GAAO,IAAI,WAAWO,CAAG,EAAEzE,EAAO,OAAUoE,GAAO,IAAI,WAAWK,CAAG,EAAEzE,EAAO,OAAUmD,GAAO,IAAI,WAAWsB,CAAG,EAAEzE,EAAO,QAAWmE,GAAQ,IAAI,YAAYM,CAAG,EAAEzE,EAAO,QAAWqE,GAAQ,IAAI,YAAYI,CAAG,EAAEzE,EAAO,QAAWsE,GAAQ,IAAI,aAAaG,CAAG,EAAEzE,EAAO,QAAWuE,GAAQ,IAAI,aAAaE,CAAG,CAAC,CAAC,IAAIC,GAAe1E,EAAO,gBAAmB,SAAa2E,GAAcC,GAAa,CAAC,EAAMC,GAAW,CAAC,EAAMC,GAAc,CAAC,EAAMC,GAAmB,GAAM,SAASC,IAAkB,CAAC,OAAOnD,CAAa,CAAC,SAASoD,IAAQ,CAAC,GAAGjF,EAAO,OAAsF,IAAxE,OAAOA,EAAO,QAAW,aAAWA,EAAO,OAAU,CAACA,EAAO,MAAS,GAAQA,EAAO,OAAU,QAAQkF,GAAYlF,EAAO,OAAU,MAAM,CAAC,EAAGmF,GAAqBP,EAAY,CAAC,CAAC,SAASQ,IAAa,CAACL,GAAmB,GAAQ,CAAC/E,EAAO,UAAa,CAACqF,EAAG,KAAK,aAAYA,EAAG,KAAK,EAAEA,EAAG,kBAAkB,GAAMC,GAAI,KAAK,EAAEH,GAAqBN,EAAU,CAAC,CAAC,SAASU,IAAS,CAAC,GAAGvF,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,QAAQwF,GAAaxF,EAAO,QAAW,MAAM,CAAC,EAAGmF,GAAqBL,EAAa,CAAC,CAAC,SAASI,GAAYO,EAAG,CAACb,GAAa,QAAQa,CAAE,CAAC,CAAC,SAASC,GAAUD,EAAG,CAACZ,GAAW,QAAQY,CAAE,CAAC,CAAC,SAASD,GAAaC,EAAG,CAACX,GAAc,QAAQW,CAAE,CAAC,CAAC,IAAIE,GAAgB,EAAMC,GAAqB,KAASC,GAAsB,KAAK,SAASC,GAAuBC,EAAG,CAAC,OAAOA,CAAE,CAAC,SAASC,GAAiBD,EAAG,CAACJ,KAAqB3F,EAAO,wBAA2BA,EAAO,uBAA0B2F,EAAe,CAAE,CAAC,SAASM,GAAoBF,EAAG,CAA0G,GAAzGJ,KAAqB3F,EAAO,wBAA2BA,EAAO,uBAA0B2F,EAAe,EAAKA,IAAiB,IAAMC,KAAuB,OAAM,cAAcA,EAAoB,EAAEA,GAAqB,MAAQC,IAAsB,CAAC,IAAIK,EAASL,GAAsBA,GAAsB,KAAKK,EAAS,CAAC,CAAE,CAAC,SAASpE,GAAMqE,EAAK,CAAKnG,EAAO,SAAYA,EAAO,QAAWmG,CAAI,EAAGA,EAAK,WAAWA,EAAK,IAAIxE,EAAIwE,CAAI,EAAEnE,EAAM,GAAKC,EAAW,EAAEkE,GAAM,2CAA2C,IAAIC,EAAE,IAAI,YAAY,aAAaD,CAAI,EAAE,MAAAhG,EAAmBiG,CAAC,EAAQA,CAAC,CAAC,IAAIC,GAAc,wCAAwC,SAASC,GAAUC,EAAS,CAAC,OAAOA,EAAS,WAAWF,EAAa,CAAC,CAAC,IAAIG,GAAkBxG,EAAO,YAAewG,GAAe,aAAiBF,GAAUE,EAAc,IAAGA,GAAezF,EAAWyF,EAAc,IAAQA,GAAe,IAAI,IAAI,aAAazG,GAAY,GAAG,EAAE,SAAS,EAAE,SAAS0G,GAAUC,EAAK,CAAC,GAAG,CAAC,GAAGA,GAAMF,IAAgB5E,EAAY,OAAO,IAAI,WAAWA,CAAU,EAAE,GAAGT,EAAY,OAAOA,EAAWuF,CAAI,EAAE,KAAK,iDAAiD,OAAO/E,EAAI,CAACG,GAAMH,CAAG,CAAC,CAAC,CAAC,SAASgF,IAAkB,CAAC,MAAG,CAAC/E,IAAahB,GAAoBC,IAA2B,OAAO,OAAO,WAAmB,MAAM2F,GAAe,CAAC,YAAY,aAAa,CAAC,EAAE,KAAK,SAASI,EAAS,CAAC,GAAG,CAACA,EAAS,GAAO,KAAK,uCAAuCJ,GAAe,IAAI,OAAOI,EAAS,YAAe,CAAC,CAAC,EAAE,MAAM,UAAU,CAAC,OAAOH,GAAUD,EAAc,CAAC,CAAC,EAAU,QAAQ,QAAQ,EAAE,KAAK,UAAU,CAAC,OAAOC,GAAUD,EAAc,CAAC,CAAC,CAAC,CAAC,SAASK,IAAY,CAAC,IAAIC,EAAK,CAAC,EAAIC,EAAa,EAAE,SAASC,EAAgBC,EAASC,EAAO,CAAC,IAAIC,EAAQF,EAAS,QAAQjH,EAAO,IAAOmH,EAAQpF,EAAW/B,EAAO,IAAO,EAAKwE,GAA2BzC,EAAW,MAAM,EAAE4C,GAAU3E,EAAO,IAAO,EAAK0F,GAAU1F,EAAO,IAAO,CAAI,EAAEiG,GAAoB,kBAAkB,CAAC,CAACD,GAAiB,kBAAkB,EAAE,SAASoB,EAA2BC,EAAO,CAACL,EAAgBK,EAAO,QAAW,CAAC,CAAC,SAASC,EAAuBC,EAAS,CAAC,OAAOZ,GAAiB,EAAE,KAAK,SAASa,EAAO,CAAC,OAAO,YAAY,YAAYA,EAAOV,CAAI,CAAC,CAAC,EAAE,KAAK,SAASG,EAAS,CAAC,OAAOA,CAAQ,CAAC,EAAE,KAAKM,EAAS,SAASE,EAAO,CAAC9F,EAAI,0CAA0C8F,CAAM,EAAE3F,GAAM2F,CAAM,CAAC,CAAC,CAAC,CAAC,SAASC,GAAkB,CAAC,MAAG,CAAC9F,GAAY,OAAO,YAAY,sBAAsB,YAAY,CAAC0E,GAAUE,EAAc,GAAG,OAAO,OAAO,WAAmB,MAAMA,GAAe,CAAC,YAAY,aAAa,CAAC,EAAE,KAAK,SAASI,EAAS,CAAC,IAAIS,EAAO,YAAY,qBAAqBT,EAASE,CAAI,EAAE,OAAOO,EAAO,KAAKD,EAA2B,SAASK,EAAO,CAAC,OAAA9F,EAAI,kCAAkC8F,CAAM,EAAE9F,EAAI,2CAA2C,EAAS2F,EAAuBF,CAA0B,CAAC,CAAC,CAAC,CAAC,EAAcE,EAAuBF,CAA0B,CAAE,CAAC,GAAGpH,EAAO,gBAAoB,GAAG,CAAC,IAAImH,EAAQnH,EAAO,gBAAmB8G,EAAKE,CAAe,EAAE,OAAOG,CAAO,OAAOf,EAAE,CAACzE,EAAI,sDAAsDyE,CAAC,EAAEjG,EAAmBiG,CAAC,CAAC,CAAE,OAAAsB,EAAiB,EAAE,MAAMvH,CAAkB,EAAQ,CAAC,CAAC,CAAC,IAAIwH,EAAeC,GAAQ,SAASC,GAAWnH,EAAO,CAAC,KAAK,KAAK,aAAa,KAAK,QAAQ,gCAAgCA,EAAO,IAAI,KAAK,OAAOA,CAAM,CAAC,SAASyE,GAAqB2C,EAAU,CAAC,KAAMA,EAAU,OAAO,GAAGA,EAAU,MAAM,EAAE9H,CAAM,CAAE,CAAC,SAAS+H,GAAmBC,EAAMhE,EAAO,CAACC,EAAM,IAAI+D,EAAMhE,CAAM,CAAC,CAAC,SAASiE,GAAe9F,EAAUoE,EAAS2B,EAAKC,EAAK,CAACrG,GAAM,qBAAqBmB,GAAad,CAAS,EAAE,SAAS,CAACoE,EAAStD,GAAasD,CAAQ,EAAE,mBAAmB2B,EAAKC,EAAKlF,GAAakF,CAAI,EAAE,kBAAkB,CAAC,CAAC,CAAC,IAAIC,GAAgB,CAAC,EAAE,SAASC,GAAkBC,EAAQ,CAAC,IAAIH,EAAKC,GAAgBE,CAAO,EAAE,OAAIH,IAASG,GAASF,GAAgB,SAAOA,GAAgB,OAAOE,EAAQ,GAAEF,GAAgBE,CAAO,EAAEH,EAAKxD,GAAU,IAAI2D,CAAO,GAASH,CAAI,CAAC,SAASI,GAAmBC,EAAGC,EAAI,CAACJ,GAAkBG,CAAE,EAAEC,CAAG,CAAC,CAAC,SAASC,GAASC,EAAM,CAAC,OAAAvE,GAAOwE,GAAkB,GAAG,CAAC,EAAED,EAAaA,CAAK,CAAC,IAAIE,EAAK,CAAC,MAAM7H,GAAMA,EAAK,OAAO,CAAC,IAAI,IAAI,UAAUuF,GAAU,CAAC,IAAIuC,EAAY,gEAAgE,OAAOA,EAAY,KAAKvC,CAAQ,EAAE,MAAM,CAAC,CAAC,EAAE,eAAe,CAACwC,EAAMC,IAAiB,CAAU,QAALC,EAAG,EAAUxF,EAAEsF,EAAM,OAAO,EAAEtF,GAAG,EAAEA,IAAI,CAAC,IAAIyF,EAAKH,EAAMtF,CAAC,EAAKyF,IAAO,IAAKH,EAAM,OAAOtF,EAAE,CAAC,EAAUyF,IAAO,MAAMH,EAAM,OAAOtF,EAAE,CAAC,EAAEwF,KAAaA,IAAIF,EAAM,OAAOtF,EAAE,CAAC,EAAEwF,IAAK,CAAC,GAAGD,EAAgB,KAAKC,EAAGA,IAAMF,EAAM,QAAQ,IAAI,EAAG,OAAOA,CAAK,EAAE,UAAU/H,GAAM,CAAC,IAAImI,EAAWN,EAAK,MAAM7H,CAAI,EAAEoI,EAAcpI,EAAK,OAAO,EAAE,IAAI,IAAI,OAAAA,EAAK6H,EAAK,eAAe7H,EAAK,MAAM,GAAG,EAAE,OAAOqI,GAAG,CAAC,CAACA,CAAC,EAAE,CAACF,CAAU,EAAE,KAAK,GAAG,EAAK,CAACnI,GAAM,CAACmI,IAAYnI,EAAK,KAAOA,GAAMoI,IAAepI,GAAM,MAAWmI,EAAW,IAAI,IAAInI,CAAI,EAAE,QAAQA,GAAM,CAAC,IAAIqG,EAAOwB,EAAK,UAAU7H,CAAI,EAAEsI,EAAKjC,EAAO,CAAC,EAAEkC,EAAIlC,EAAO,CAAC,EAAE,MAAG,CAACiC,GAAM,CAACC,EAAW,KAAOA,IAAKA,EAAIA,EAAI,OAAO,EAAEA,EAAI,OAAO,CAAC,GAASD,EAAKC,EAAG,EAAE,SAASvI,GAAM,CAAC,GAAGA,IAAO,IAAI,MAAM,IAAIA,EAAK6H,EAAK,UAAU7H,CAAI,EAAEA,EAAKA,EAAK,QAAQ,MAAM,EAAE,EAAE,IAAIwI,EAAUxI,EAAK,YAAY,GAAG,EAAE,OAAGwI,IAAY,GAAUxI,EAAYA,EAAK,OAAOwI,EAAU,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,IAAIC,EAAM,MAAM,UAAU,MAAM,KAAK,SAAS,EAAE,OAAOZ,EAAK,UAAUY,EAAM,KAAK,GAAG,CAAC,CAAC,EAAE,MAAM,CAACC,EAAEC,IAAYd,EAAK,UAAUa,EAAE,IAAIC,CAAC,CAAE,EAAE,SAASC,IAAiB,CAAC,GAAG,OAAO,QAAQ,UAAU,OAAO,OAAO,iBAAoB,WAAW,CAAC,IAAIC,EAAa,IAAI,WAAW,CAAC,EAAE,MAAM,KAAK,OAAO,gBAAgBA,CAAY,EAASA,EAAa,CAAC,EAAE,KAAM,OAAM,IAAI/H,GAAM,cAAc,CAAC,CAAC,IAAIgI,GAAQ,CAAC,QAAQ,UAAU,CAA4C,QAAvCC,EAAa,GAAGC,EAAiB,GAAcvG,EAAE,UAAU,OAAO,EAAEA,GAAG,IAAI,CAACuG,EAAiBvG,IAAI,CAAC,IAAIzC,EAAKyC,GAAG,EAAE,UAAUA,CAAC,EAAE4B,EAAG,IAAI,EAAE,GAAG,OAAOrE,GAAM,SAAU,MAAM,IAAI,UAAU,2CAA2C,EAAO,GAAG,CAACA,EAAM,MAAM,GAAG+I,EAAa/I,EAAK,IAAI+I,EAAaC,EAAiBnB,EAAK,MAAM7H,CAAI,CAAC,CAAC,OAAA+I,EAAalB,EAAK,eAAekB,EAAa,MAAM,GAAG,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAACC,CAAgB,EAAE,KAAK,GAAG,GAASA,EAAiB,IAAI,IAAID,GAAc,GAAG,EAAE,SAAS,CAACE,EAAKC,IAAK,CAACD,EAAKH,GAAQ,QAAQG,CAAI,EAAE,OAAO,CAAC,EAAEC,EAAGJ,GAAQ,QAAQI,CAAE,EAAE,OAAO,CAAC,EAAE,SAASC,EAAKC,EAAI,CAAa,QAARC,EAAM,EAAOA,EAAMD,EAAI,QAAmBA,EAAIC,CAAK,IAAI,GAAzBA,IAAS,CAA8C,QAAjBC,EAAIF,EAAI,OAAO,EAAOE,GAAK,GAAYF,EAAIE,CAAG,IAAI,GAArBA,IAAO,CAAuB,OAAGD,EAAMC,EAAU,CAAC,EAASF,EAAI,MAAMC,EAAMC,EAAID,EAAM,CAAC,CAAC,CAAqJ,QAAhJE,EAAUJ,EAAKF,EAAK,MAAM,GAAG,CAAC,EAAMO,EAAQL,EAAKD,EAAG,MAAM,GAAG,CAAC,EAAMO,EAAO,KAAK,IAAIF,EAAU,OAAOC,EAAQ,MAAM,EAAME,EAAgBD,EAAehH,EAAE,EAAEA,EAAEgH,EAAOhH,IAAK,GAAG8G,EAAU9G,CAAC,IAAI+G,EAAQ/G,CAAC,EAAE,CAACiH,EAAgBjH,EAAE,KAAK,CAAqB,QAAfkH,EAAY,CAAC,EAAUlH,EAAEiH,EAAgBjH,EAAE8G,EAAU,OAAO9G,IAAKkH,EAAY,KAAK,IAAI,EAAE,OAAAA,EAAYA,EAAY,OAAOH,EAAQ,MAAME,CAAe,CAAC,EAASC,EAAY,KAAK,GAAG,CAAC,CAAC,EAAE,SAASC,GAAmBC,EAAQC,EAAYL,EAAO,CAAC,IAAI3G,EAAI2G,EAAO,EAAEA,EAAO5G,GAAgBgH,CAAO,EAAE,EAAME,EAAQ,IAAI,MAAMjH,CAAG,EAAMkH,EAAgB5H,EAAkByH,EAAQE,EAAQ,EAAEA,EAAQ,MAAM,EAAE,OAAGD,IAAYC,EAAQ,OAAOC,GAAuBD,CAAO,CAAC,IAAIzF,GAAI,CAAC,KAAK,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,SAAS,UAAU,CAAC,EAAE,SAAS,SAAS2F,EAAIC,EAAI,CAAC5F,GAAI,KAAK2F,CAAG,EAAE,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,IAAIC,CAAG,EAAE7F,EAAG,eAAe4F,EAAI3F,GAAI,UAAU,CAAC,EAAE,WAAW,CAAC,KAAK,SAAS6F,EAAO,CAAC,IAAIC,EAAI9F,GAAI,KAAK6F,EAAO,KAAK,IAAI,EAAE,GAAG,CAACC,EAAK,MAAM,IAAI/F,EAAG,WAAW,EAAE,EAAE8F,EAAO,IAAIC,EAAID,EAAO,SAAS,EAAK,EAAE,MAAM,SAASA,EAAO,CAACA,EAAO,IAAI,IAAI,MAAMA,EAAO,GAAG,CAAC,EAAE,MAAM,SAASA,EAAO,CAACA,EAAO,IAAI,IAAI,MAAMA,EAAO,GAAG,CAAC,EAAE,KAAK,SAASA,EAAOnH,EAAOqH,EAAOZ,EAAOa,EAAI,CAAC,GAAG,CAACH,EAAO,KAAK,CAACA,EAAO,IAAI,IAAI,SAAU,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAkB,QAAZkG,EAAU,EAAU9H,EAAE,EAAEA,EAAEgH,EAAOhH,IAAI,CAAC,IAAI4D,EAAO,GAAG,CAACA,EAAO8D,EAAO,IAAI,IAAI,SAASA,EAAO,GAAG,CAAC,MAAS,CAAC,MAAM,IAAI9F,EAAG,WAAW,EAAE,CAAC,CAAC,GAAGgC,IAAS,QAAWkE,IAAY,EAAG,MAAM,IAAIlG,EAAG,WAAW,CAAC,EAAE,GAAGgC,GAAS,KAAyB,MAAMkE,IAAYvH,EAAOqH,EAAO5H,CAAC,EAAE4D,CAAM,CAAC,OAAGkE,IAAWJ,EAAO,KAAK,UAAU,KAAK,IAAI,GAASI,CAAS,EAAE,MAAM,SAASJ,EAAOnH,EAAOqH,EAAOZ,EAAOa,EAAI,CAAC,GAAG,CAACH,EAAO,KAAK,CAACA,EAAO,IAAI,IAAI,SAAU,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,GAAG,CAAC,QAAQ5B,EAAE,EAAEA,EAAEgH,EAAOhH,IAAK0H,EAAO,IAAI,IAAI,SAASA,EAAO,IAAInH,EAAOqH,EAAO5H,CAAC,CAAC,CAAE,MAAS,CAAC,MAAM,IAAI4B,EAAG,WAAW,EAAE,CAAC,CAAC,OAAGoF,IAAQU,EAAO,KAAK,UAAU,KAAK,IAAI,GAAS1H,CAAC,CAAC,EAAE,gBAAgB,CAAC,SAAS,SAAS2H,EAAI,CAAC,GAAG,CAACA,EAAI,MAAM,OAAO,CAAC,IAAI/D,EAAO,KAA6N,GAArN,OAAO,OAAQ,KAAa,OAAO,OAAO,QAAQ,YAAYA,EAAO,OAAO,OAAO,SAAS,EAAKA,IAAS,OAAMA,GAAQ;AAAA,IAAc,OAAO,UAAU,aAAYA,EAAO,SAAS,EAAKA,IAAS,OAAMA,GAAQ;AAAA,IAAS,CAACA,EAAQ,OAAO,KAAK+D,EAAI,MAAMR,GAAmBvD,EAAO,EAAI,CAAC,CAAC,OAAO+D,EAAI,MAAM,MAAM,CAAC,EAAE,SAAS,SAASA,EAAII,EAAI,CAAIA,IAAM,MAAMA,IAAM,IAAI9J,EAAIY,EAAkB8I,EAAI,OAAO,CAAC,CAAC,EAAEA,EAAI,OAAO,CAAC,GAAUI,GAAK,GAAEJ,EAAI,OAAO,KAAKI,CAAG,CAAE,EAAE,MAAM,SAASJ,EAAI,CAAIA,EAAI,QAAQA,EAAI,OAAO,OAAO,IAAG1J,EAAIY,EAAkB8I,EAAI,OAAO,CAAC,CAAC,EAAEA,EAAI,OAAO,CAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,SAAS,SAASA,EAAII,EAAI,CAAIA,IAAM,MAAMA,IAAM,IAAI7J,EAAIW,EAAkB8I,EAAI,OAAO,CAAC,CAAC,EAAEA,EAAI,OAAO,CAAC,GAAUI,GAAK,GAAEJ,EAAI,OAAO,KAAKI,CAAG,CAAE,EAAE,MAAM,SAASJ,EAAI,CAAIA,EAAI,QAAQA,EAAI,OAAO,OAAO,IAAGzJ,EAAIW,EAAkB8I,EAAI,OAAO,CAAC,CAAC,EAAEA,EAAI,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,SAASK,GAAUC,EAAK,CAAC5J,GAAM,CAAC,CAAC,IAAI6J,EAAM,CAAC,UAAU,KAAK,MAAM,SAASC,EAAM,CAAC,OAAOD,EAAM,WAAW,KAAK,IAAI,MAAU,CAAC,CAAC,EAAE,WAAW,SAASE,EAAOC,EAAKC,EAAKd,EAAI,CAAC,GAAG5F,EAAG,SAAS0G,CAAI,GAAG1G,EAAG,OAAO0G,CAAI,EAAG,MAAM,IAAI1G,EAAG,WAAW,EAAE,EAAMsG,EAAM,YAAWA,EAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQA,EAAM,SAAS,QAAQ,QAAQA,EAAM,SAAS,QAAQ,OAAOA,EAAM,SAAS,OAAO,MAAMA,EAAM,SAAS,MAAM,OAAOA,EAAM,SAAS,OAAO,OAAOA,EAAM,SAAS,OAAO,MAAMA,EAAM,SAAS,MAAM,QAAQA,EAAM,SAAS,QAAQ,QAAQA,EAAM,SAAS,OAAO,EAAE,OAAO,CAAC,OAAOA,EAAM,WAAW,MAAM,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQA,EAAM,SAAS,QAAQ,QAAQA,EAAM,SAAS,OAAO,EAAE,OAAO,CAAC,OAAOA,EAAM,WAAW,OAAO,KAAKA,EAAM,WAAW,KAAK,MAAMA,EAAM,WAAW,MAAM,SAASA,EAAM,WAAW,SAAS,KAAKA,EAAM,WAAW,KAAK,MAAMA,EAAM,WAAW,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQA,EAAM,SAAS,QAAQ,QAAQA,EAAM,SAAS,QAAQ,SAASA,EAAM,SAAS,QAAQ,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQA,EAAM,SAAS,QAAQ,QAAQA,EAAM,SAAS,OAAO,EAAE,OAAOtG,EAAG,iBAAiB,CAAC,GAAE,IAAI2G,EAAK3G,EAAG,WAAWwG,EAAOC,EAAKC,EAAKd,CAAG,EAAE,OAAG5F,EAAG,MAAM2G,EAAK,IAAI,GAAGA,EAAK,SAASL,EAAM,UAAU,IAAI,KAAKK,EAAK,WAAWL,EAAM,UAAU,IAAI,OAAOK,EAAK,SAAS,CAAC,GAAU3G,EAAG,OAAO2G,EAAK,IAAI,GAAGA,EAAK,SAASL,EAAM,UAAU,KAAK,KAAKK,EAAK,WAAWL,EAAM,UAAU,KAAK,OAAOK,EAAK,UAAU,EAAEA,EAAK,SAAS,MAAa3G,EAAG,OAAO2G,EAAK,IAAI,GAAGA,EAAK,SAASL,EAAM,UAAU,KAAK,KAAKK,EAAK,WAAWL,EAAM,UAAU,KAAK,QAAetG,EAAG,SAAS2G,EAAK,IAAI,IAAGA,EAAK,SAASL,EAAM,UAAU,OAAO,KAAKK,EAAK,WAAWL,EAAM,UAAU,OAAO,QAAOK,EAAK,UAAU,KAAK,IAAI,EAAKH,IAAQA,EAAO,SAASC,CAAI,EAAEE,EAAKH,EAAO,UAAUG,EAAK,WAAiBA,CAAI,EAAE,wBAAwB,SAASA,EAAK,CAAC,OAAIA,EAAK,SAAqCA,EAAK,SAAS,SAAgBA,EAAK,SAAS,SAAS,EAAEA,EAAK,SAAS,EAAS,IAAI,WAAWA,EAAK,QAAQ,EAA/H,IAAI,WAAW,CAAC,CAAgH,EAAE,kBAAkB,SAASA,EAAKC,EAAY,CAAC,IAAIC,EAAaF,EAAK,SAASA,EAAK,SAAS,OAAO,EAAE,GAAG,EAAAE,GAAcD,GAAmB,KAAIE,EAAsB,KAAK,KAAKF,EAAY,KAAK,IAAIA,EAAYC,GAAcA,EAAaC,EAAsB,EAAE,SAAS,CAAC,EAAKD,GAAc,IAAED,EAAY,KAAK,IAAIA,EAAY,GAAG,GAAE,IAAIG,EAAYJ,EAAK,SAASA,EAAK,SAAS,IAAI,WAAWC,CAAW,EAAKD,EAAK,UAAU,GAAEA,EAAK,SAAS,IAAII,EAAY,SAAS,EAAEJ,EAAK,SAAS,EAAE,CAAC,EAAC,EAAE,kBAAkB,SAASA,EAAKK,EAAQ,CAAC,GAAGL,EAAK,WAAWK,EAAe,GAAGA,GAAS,EAAGL,EAAK,SAAS,KAAKA,EAAK,UAAU,MAAM,CAAC,IAAII,EAAYJ,EAAK,SAASA,EAAK,SAAS,IAAI,WAAWK,CAAO,EAAKD,GAAaJ,EAAK,SAAS,IAAII,EAAY,SAAS,EAAE,KAAK,IAAIC,EAAQL,EAAK,SAAS,CAAC,CAAC,EAAEA,EAAK,UAAUK,CAAO,CAAC,EAAE,SAAS,CAAC,QAAQ,SAASL,EAAK,CAAC,IAAIM,EAAK,CAAC,EAAE,OAAAA,EAAK,IAAIjH,EAAG,SAAS2G,EAAK,IAAI,EAAEA,EAAK,GAAG,EAAEM,EAAK,IAAIN,EAAK,GAAGM,EAAK,KAAKN,EAAK,KAAKM,EAAK,MAAM,EAAEA,EAAK,IAAI,EAAEA,EAAK,IAAI,EAAEA,EAAK,KAAKN,EAAK,KAAQ3G,EAAG,MAAM2G,EAAK,IAAI,EAAGM,EAAK,KAAK,KAAajH,EAAG,OAAO2G,EAAK,IAAI,EAAGM,EAAK,KAAKN,EAAK,UAAkB3G,EAAG,OAAO2G,EAAK,IAAI,EAAGM,EAAK,KAAKN,EAAK,KAAK,OAAYM,EAAK,KAAK,EAAEA,EAAK,MAAM,IAAI,KAAKN,EAAK,SAAS,EAAEM,EAAK,MAAM,IAAI,KAAKN,EAAK,SAAS,EAAEM,EAAK,MAAM,IAAI,KAAKN,EAAK,SAAS,EAAEM,EAAK,QAAQ,KAAKA,EAAK,OAAO,KAAK,KAAKA,EAAK,KAAKA,EAAK,OAAO,EAASA,CAAI,EAAE,QAAQ,SAASN,EAAKM,EAAK,CAAIA,EAAK,OAAO,SAAWN,EAAK,KAAKM,EAAK,MAAQA,EAAK,YAAY,SAAWN,EAAK,UAAUM,EAAK,WAAaA,EAAK,OAAO,QAAWX,EAAM,kBAAkBK,EAAKM,EAAK,IAAI,CAAE,EAAE,OAAO,SAAST,EAAOC,EAAK,CAAC,MAAMzG,EAAG,cAAc,EAAE,CAAC,EAAE,MAAM,SAASwG,EAAOC,EAAKC,EAAKd,EAAI,CAAC,OAAOU,EAAM,WAAWE,EAAOC,EAAKC,EAAKd,CAAG,CAAC,EAAE,OAAO,SAASsB,EAASC,EAAQC,EAAS,CAAC,GAAGpH,EAAG,MAAMkH,EAAS,IAAI,EAAE,CAAC,IAAIG,EAAS,GAAG,CAACA,EAASrH,EAAG,WAAWmH,EAAQC,CAAQ,CAAC,MAAS,CAAC,CAAC,GAAGC,EAAU,QAAQjJ,KAAKiJ,EAAS,SAAU,MAAM,IAAIrH,EAAG,WAAW,EAAE,CAAG,CAAC,OAAOkH,EAAS,OAAO,SAASA,EAAS,IAAI,EAAEA,EAAS,OAAO,UAAU,KAAK,IAAI,EAAEA,EAAS,KAAKE,EAASD,EAAQ,SAASC,CAAQ,EAAEF,EAASC,EAAQ,UAAUD,EAAS,OAAO,UAAUA,EAAS,OAAOC,CAAO,EAAE,OAAO,SAASX,EAAOC,EAAK,CAAC,OAAOD,EAAO,SAASC,CAAI,EAAED,EAAO,UAAU,KAAK,IAAI,CAAC,EAAE,MAAM,SAASA,EAAOC,EAAK,CAAC,IAAIE,EAAK3G,EAAG,WAAWwG,EAAOC,CAAI,EAAE,QAAQrI,KAAKuI,EAAK,SAAU,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,OAAOwG,EAAO,SAASC,CAAI,EAAED,EAAO,UAAU,KAAK,IAAI,CAAC,EAAE,QAAQ,SAASG,EAAK,CAAC,IAAIW,EAAQ,CAAC,IAAI,IAAI,EAAE,QAAQC,KAAOZ,EAAK,SAAcA,EAAK,SAAS,eAAeY,CAAG,GAAYD,EAAQ,KAAKC,CAAG,EAAE,OAAOD,CAAO,EAAE,QAAQ,SAASd,EAAOgB,EAAQC,EAAQ,CAAC,IAAId,EAAKL,EAAM,WAAWE,EAAOgB,EAAQ,MAAU,CAAC,EAAE,OAAAb,EAAK,KAAKc,EAAed,CAAI,EAAE,SAAS,SAASA,EAAK,CAAC,GAAG,CAAC3G,EAAG,OAAO2G,EAAK,IAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,OAAO2G,EAAK,IAAI,CAAC,EAAE,WAAW,CAAC,KAAK,SAASb,EAAOnH,EAAOqH,EAAOZ,EAAOsC,EAAS,CAAC,IAAIC,EAAS7B,EAAO,KAAK,SAAS,GAAG4B,GAAU5B,EAAO,KAAK,UAAU,MAAO,GAAE,IAAIO,EAAK,KAAK,IAAIP,EAAO,KAAK,UAAU4B,EAAStC,CAAM,EAAE,GAAGiB,EAAK,GAAGsB,EAAS,SAAUhJ,EAAO,IAAIgJ,EAAS,SAASD,EAASA,EAASrB,CAAI,EAAEL,CAAM,MAAO,SAAQ5H,EAAE,EAAEA,EAAEiI,EAAKjI,IAAIO,EAAOqH,EAAO5H,CAAC,EAAEuJ,EAASD,EAAStJ,CAAC,EAAE,OAAOiI,CAAI,EAAE,MAAM,SAASP,EAAOnH,EAAOqH,EAAOZ,EAAOsC,EAASE,EAAO,CAA+C,GAA3CjJ,EAAO,SAASC,EAAM,SAAQgJ,EAAO,IAAS,CAACxC,EAAO,MAAO,GAAE,IAAIuB,EAAKb,EAAO,KAA+B,GAA1Ba,EAAK,UAAU,KAAK,IAAI,EAAKhI,EAAO,WAAW,CAACgI,EAAK,UAAUA,EAAK,SAAS,UAAU,CAAC,GAAGiB,EAAQ,OAAAjB,EAAK,SAAShI,EAAO,SAASqH,EAAOA,EAAOZ,CAAM,EAAEuB,EAAK,UAAUvB,EAAcA,EAAY,GAAGuB,EAAK,YAAY,GAAGe,IAAW,EAAG,OAAAf,EAAK,SAAShI,EAAO,MAAMqH,EAAOA,EAAOZ,CAAM,EAAEuB,EAAK,UAAUvB,EAAcA,EAAY,GAAGsC,EAAStC,GAAQuB,EAAK,UAAW,OAAAA,EAAK,SAAS,IAAIhI,EAAO,SAASqH,EAAOA,EAAOZ,CAAM,EAAEsC,CAAQ,EAAStC,CAAO,CAA+C,GAA9CkB,EAAM,kBAAkBK,EAAKe,EAAStC,CAAM,EAAKuB,EAAK,SAAS,UAAUhI,EAAO,SAAUgI,EAAK,SAAS,IAAIhI,EAAO,SAASqH,EAAOA,EAAOZ,CAAM,EAAEsC,CAAQ,MAAO,SAAQtJ,EAAE,EAAEA,EAAEgH,EAAOhH,IAAKuI,EAAK,SAASe,EAAStJ,CAAC,EAAEO,EAAOqH,EAAO5H,CAAC,EAAG,OAAAuI,EAAK,UAAU,KAAK,IAAIA,EAAK,UAAUe,EAAStC,CAAM,EAASA,CAAM,EAAE,OAAO,SAASU,EAAOE,EAAO6B,EAAO,CAAC,IAAIH,EAAS1B,EAAqI,GAA3H6B,IAAS,EAAGH,GAAU5B,EAAO,SAAiB+B,IAAS,GAAM7H,EAAG,OAAO8F,EAAO,KAAK,IAAI,IAAG4B,GAAU5B,EAAO,KAAK,WAAc4B,EAAS,EAAG,MAAM,IAAI1H,EAAG,WAAW,EAAE,EAAE,OAAO0H,CAAQ,EAAE,SAAS,SAAS5B,EAAOE,EAAOZ,EAAO,CAACkB,EAAM,kBAAkBR,EAAO,KAAKE,EAAOZ,CAAM,EAAEU,EAAO,KAAK,UAAU,KAAK,IAAIA,EAAO,KAAK,UAAUE,EAAOZ,CAAM,CAAC,EAAE,KAAK,SAASU,EAAOV,EAAOsC,EAASI,EAAKC,EAAM,CAAC,GAAG,CAAC/H,EAAG,OAAO8F,EAAO,KAAK,IAAI,EAAG,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,IAAInC,EAAQmK,EAAcL,EAAS7B,EAAO,KAAK,SAAS,GAAG,EAAEiC,EAAM,IAAIJ,EAAS,SAAShJ,GAAQqJ,EAAU,GAAMnK,EAAI8J,EAAS,eAAe,CAA8O,IAA1OD,EAAS,GAAGA,EAAStC,EAAOuC,EAAS,UAAWA,EAAS,SAAUA,EAASA,EAAS,SAASD,EAASA,EAAStC,CAAM,EAAOuC,EAAS,MAAM,UAAU,MAAM,KAAKA,EAASD,EAASA,EAAStC,CAAM,GAAG4C,EAAU,GAAKnK,EAAIuI,GAAUhB,CAAM,EAAK,CAACvH,EAAK,MAAM,IAAImC,EAAG,WAAW,EAAE,EAAEpB,EAAM,IAAI+I,EAAS9J,CAAG,CAAC,CAAC,MAAM,CAAC,IAAIA,EAAI,UAAUmK,CAAS,CAAC,EAAE,MAAM,SAASlC,EAAOnH,EAAOqH,EAAOZ,EAAO6C,EAAU,CAAC,OAAA3B,EAAM,WAAW,MAAMR,EAAOnH,EAAO,EAAEyG,EAAOY,EAAO,EAAK,EAAS,CAAC,CAAC,CAAC,EAAE,SAASkC,GAAUlM,EAAIE,EAAOC,EAAQgM,EAAS,CAAC,IAAIC,EAAKD,EAA2C,GAAX,MAAMnM,EAAQH,EAAUG,EAAIqM,GAAa,CAACxL,GAAOwL,EAAY,sBAAsBrM,EAAI,4BAA4B,EAAEE,EAAO,IAAI,WAAWmM,CAAW,CAAC,EAAKD,GAAIxH,GAAoBwH,CAAG,CAAC,EAAEE,GAAO,CAAC,GAAGnM,EAASA,EAAQ,MAAO,MAAK,sBAAsBH,EAAI,WAAY,CAAC,EAAKoM,GAAIzH,GAAiByH,CAAG,CAAC,CAAC,IAAIpI,EAAG,CAAC,KAAK,KAAK,OAAO,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,KAAK,YAAY,IAAI,YAAY,GAAM,kBAAkB,GAAK,WAAW,KAAK,cAAc,CAAC,EAAE,YAAY,KAAK,eAAe,EAAE,WAAW,CAACrE,EAAK4M,EAAK,CAAC,IAAI,CAAqC,GAApC5M,EAAK8I,GAAQ,QAAQzE,EAAG,IAAI,EAAErE,CAAI,EAAK,CAACA,EAAK,MAAM,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,IAAI6M,EAAS,CAAC,aAAa,GAAK,cAAc,CAAC,EAAoC,GAAlCD,EAAK,OAAO,OAAOC,EAASD,CAAI,EAAKA,EAAK,cAAc,EAAG,MAAM,IAAIvI,EAAG,WAAW,EAAE,EAA+G,QAAzG0D,EAAMF,EAAK,eAAe7H,EAAK,MAAM,GAAG,EAAE,OAAOqI,GAAG,CAAC,CAACA,CAAC,EAAE,EAAK,EAAMyE,EAAQzI,EAAG,KAAS0I,EAAa,IAAYtK,EAAE,EAAEA,EAAEsF,EAAM,OAAOtF,IAAI,CAAC,IAAIuK,EAAOvK,IAAIsF,EAAM,OAAO,EAAE,GAAGiF,GAAQJ,EAAK,OAAQ,MAA+L,GAAzLE,EAAQzI,EAAG,WAAWyI,EAAQ/E,EAAMtF,CAAC,CAAC,EAAEsK,EAAalF,EAAK,MAAMkF,EAAahF,EAAMtF,CAAC,CAAC,EAAK4B,EAAG,aAAayI,CAAO,IAAM,CAACE,GAAQA,GAAQJ,EAAK,gBAAcE,EAAQA,EAAQ,QAAQ,MAAS,CAACE,GAAQJ,EAAK,OAAoB,QAARK,EAAM,EAAQ5I,EAAG,OAAOyI,EAAQ,IAAI,GAAE,CAAC,IAAII,EAAK7I,EAAG,SAAS0I,CAAY,EAAEA,EAAajE,GAAQ,QAAQjB,EAAK,QAAQkF,CAAY,EAAEG,CAAI,EAAE,IAAIC,EAAO9I,EAAG,WAAW0I,EAAa,CAAC,cAAcH,EAAK,cAAc,CAAC,CAAC,EAAsB,GAApBE,EAAQK,EAAO,KAAQF,IAAQ,GAAI,MAAM,IAAI5I,EAAG,WAAW,EAAE,CAAE,CAAE,CAAC,MAAM,CAAC,KAAK0I,EAAa,KAAKD,CAAO,CAAC,EAAE,QAAQ9B,GAAM,CAAU,QAALhL,IAAgB,CAAC,GAAGqE,EAAG,OAAO2G,CAAI,EAAE,CAAC,IAAIJ,EAAMI,EAAK,MAAM,WAAW,OAAIhL,EAAyB4K,EAAMA,EAAM,OAAO,CAAC,IAAI,IAAIA,EAAM,IAAI5K,EAAK4K,EAAM5K,EAA9D4K,CAAkE,CAAC5K,EAAKA,EAAKgL,EAAK,KAAK,IAAIhL,EAAKgL,EAAK,KAAKA,EAAKA,EAAK,MAAM,CAAC,EAAE,SAAS,CAACoC,EAAStC,IAAO,CAAY,QAAPuC,EAAK,EAAU5K,EAAE,EAAEA,EAAEqI,EAAK,OAAOrI,IAAK4K,GAAMA,GAAM,GAAGA,EAAKvC,EAAK,WAAWrI,CAAC,EAAE,EAAE,OAAO2K,EAASC,IAAO,GAAGhJ,EAAG,UAAU,MAAM,EAAE,YAAY2G,GAAM,CAAC,IAAIqC,EAAKhJ,EAAG,SAAS2G,EAAK,OAAO,GAAGA,EAAK,IAAI,EAAEA,EAAK,UAAU3G,EAAG,UAAUgJ,CAAI,EAAEhJ,EAAG,UAAUgJ,CAAI,EAAErC,CAAI,EAAE,eAAeA,GAAM,CAAC,IAAIqC,EAAKhJ,EAAG,SAAS2G,EAAK,OAAO,GAAGA,EAAK,IAAI,EAAE,GAAG3G,EAAG,UAAUgJ,CAAI,IAAIrC,EAAM3G,EAAG,UAAUgJ,CAAI,EAAErC,EAAK,cAA8C,SAA3B8B,EAAQzI,EAAG,UAAUgJ,CAAI,EAAQP,GAAQ,CAAC,GAAGA,EAAQ,YAAY9B,EAAK,CAAC8B,EAAQ,UAAU9B,EAAK,UAAU,KAAK,CAAC8B,EAAQA,EAAQ,SAAS,CAAE,EAAE,WAAW,CAACjC,EAAOC,IAAO,CAAC,IAAIwC,EAAQjJ,EAAG,UAAUwG,CAAM,EAAE,GAAGyC,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,EAAQzC,CAAM,EAAuC,QAAjCwC,EAAKhJ,EAAG,SAASwG,EAAO,GAAGC,CAAI,EAAUE,EAAK3G,EAAG,UAAUgJ,CAAI,EAAErC,EAAKA,EAAKA,EAAK,UAAU,CAAC,IAAIuC,EAASvC,EAAK,KAAK,GAAGA,EAAK,OAAO,KAAKH,EAAO,IAAI0C,IAAWzC,EAAM,OAAOE,CAAK,CAAC,OAAO3G,EAAG,OAAOwG,EAAOC,CAAI,CAAC,EAAE,WAAW,CAACD,EAAOC,EAAKC,EAAKyC,IAAO,CAAC,IAAIxC,EAAK,IAAI3G,EAAG,OAAOwG,EAAOC,EAAKC,EAAKyC,CAAI,EAAE,OAAAnJ,EAAG,YAAY2G,CAAI,EAASA,CAAI,EAAE,YAAYA,GAAM,CAAC3G,EAAG,eAAe2G,CAAI,CAAC,EAAE,OAAOA,GAAcA,IAAOA,EAAK,OAAQ,aAAaA,GAAa,CAAC,CAACA,EAAK,QAAS,OAAOD,IAAcA,EAAK,SAAS,MAAO,MAAMA,IAAcA,EAAK,SAAS,MAAO,OAAOA,IAAcA,EAAK,SAAS,MAAO,SAASA,IAAcA,EAAK,SAAS,KAAM,SAASA,IAAcA,EAAK,SAAS,MAAO,OAAOA,IAAcA,EAAK,SAAS,KAAM,SAASA,IAAcA,EAAK,SAAS,MAAO,UAAU,CAAC,EAAI,EAAE,KAAK,EAAE,EAAI,IAAI,KAAK,IAAI,EAAI,KAAK,KAAK,IAAI,EAAE,kBAAkBnJ,GAAK,CAAC,IAAIwK,EAAM/H,EAAG,UAAUzC,CAAG,EAAE,GAAG,OAAOwK,EAAO,IAAa,MAAM,IAAI,MAAM,2BAA2BxK,CAAG,EAAE,OAAOwK,CAAK,EAAE,wBAAwBqB,GAAM,CAAC,IAAIC,EAAM,CAAC,IAAI,IAAI,IAAI,EAAED,EAAK,CAAC,EAAE,OAAGA,EAAK,MAAKC,GAAO,KAAWA,CAAK,EAAE,gBAAgB,CAAC1C,EAAK0C,IAAYrJ,EAAG,kBAA0B,EAAKqJ,EAAM,SAAS,GAAG,GAAG,EAAE1C,EAAK,KAAK,MAAuB0C,EAAM,SAAS,GAAG,GAAG,EAAE1C,EAAK,KAAK,MAAuB0C,EAAM,SAAS,GAAG,GAAG,EAAE1C,EAAK,KAAK,IAAnG,EAAwH,EAAG,UAAUzC,GAAK,CAAC,IAAI+E,EAAQjJ,EAAG,gBAAgBkE,EAAI,GAAG,EAAE,OAAG+E,IAA2B/E,EAAI,SAAS,OAAuB,EAAT,EAAU,EAAE,UAAU,CAACA,EAAIuC,IAAO,CAAC,GAAG,CAAC,IAAIE,EAAK3G,EAAG,WAAWkE,EAAIuC,CAAI,EAAE,MAAO,GAAE,MAAS,CAAC,CAAC,OAAOzG,EAAG,gBAAgBkE,EAAI,IAAI,CAAC,EAAE,UAAU,CAACA,EAAIuC,EAAK6C,IAAQ,CAAC,IAAI3C,EAAK,GAAG,CAACA,EAAK3G,EAAG,WAAWkE,EAAIuC,CAAI,CAAC,OAAO1F,EAAE,CAAC,OAAOA,EAAE,KAAK,CAAC,IAAIkI,EAAQjJ,EAAG,gBAAgBkE,EAAI,IAAI,EAAE,GAAG+E,EAAS,OAAOA,EAAQ,GAAGK,EAAM,CAAC,GAAG,CAACtJ,EAAG,MAAM2G,EAAK,IAAI,EAAG,MAAO,IAAG,GAAG3G,EAAG,OAAO2G,CAAI,GAAG3G,EAAG,QAAQ2G,CAAI,IAAI3G,EAAG,IAAI,EAAG,MAAO,GAAG,SAASA,EAAG,MAAM2G,EAAK,IAAI,EAAG,MAAO,IAAI,MAAO,EAAC,EAAE,QAAQ,CAACA,EAAKoB,IAAapB,EAAmB3G,EAAG,OAAO2G,EAAK,IAAI,EAAU,GAAW3G,EAAG,MAAM2G,EAAK,IAAI,IAAM3G,EAAG,wBAAwB+H,CAAK,IAAI,KAAKA,EAAM,KAAY,GAAW/H,EAAG,gBAAgB2G,EAAK3G,EAAG,wBAAwB+H,CAAK,CAAC,EAArM,GAAwM,aAAa,KAAK,OAAO,CAACwB,EAAS,EAAEC,EAAOxJ,EAAG,eAAe,CAAC,QAAQyJ,EAAGF,EAASE,GAAID,EAAOC,IAAM,GAAG,CAACzJ,EAAG,QAAQyJ,CAAE,EAAG,OAAOA,EAAI,MAAM,IAAIzJ,EAAG,WAAW,EAAE,CAAC,EAAE,UAAUyJ,GAAIzJ,EAAG,QAAQyJ,CAAE,EAAE,aAAa,CAAC3D,EAAOyD,EAASC,IAAS,CAAKxJ,EAAG,WAAUA,EAAG,SAAS,UAAU,CAAC,KAAK,OAAO,CAAC,CAAC,EAAEA,EAAG,SAAS,UAAU,CAAC,EAAE,OAAO,iBAAiBA,EAAG,SAAS,UAAU,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,IAAI,EAAE,IAAI,SAASmG,EAAI,CAAC,KAAK,KAAKA,CAAG,CAAC,EAAE,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,MAAM,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,MAAM,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,OAAO,KAAK,EAAE,IAAI,SAASA,EAAI,CAAC,KAAK,OAAO,MAAMA,CAAG,CAAC,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,OAAO,QAAQ,EAAE,IAAI,SAASA,EAAI,CAAC,KAAK,OAAO,SAASA,CAAG,CAAC,CAAC,CAAC,GAAEL,EAAO,OAAO,OAAO,IAAI9F,EAAG,SAAS8F,CAAM,EAAE,IAAI2D,EAAGzJ,EAAG,OAAOuJ,EAASC,CAAM,EAAE,OAAA1D,EAAO,GAAG2D,EAAGzJ,EAAG,QAAQyJ,CAAE,EAAE3D,EAAcA,CAAM,EAAE,YAAY2D,GAAI,CAACzJ,EAAG,QAAQyJ,CAAE,EAAE,IAAI,EAAE,kBAAkB,CAAC,KAAK3D,GAAQ,CAAC,IAAI4D,EAAO1J,EAAG,UAAU8F,EAAO,KAAK,IAAI,EAAEA,EAAO,WAAW4D,EAAO,WAAc5D,EAAO,WAAW,MAAMA,EAAO,WAAW,KAAKA,CAAM,CAAE,EAAE,OAAO,IAAI,CAAC,MAAM,IAAI9F,EAAG,WAAW,EAAE,CAAC,CAAC,EAAE,MAAM4F,GAAKA,GAAK,EAAE,MAAMA,GAAKA,EAAI,IAAI,QAAQ,CAAC+D,EAAGC,IAAKD,GAAI,EAAEC,EAAG,eAAe,CAAChE,EAAIC,IAAM,CAAC7F,EAAG,QAAQ4F,CAAG,EAAE,CAAC,WAAWC,CAAG,CAAC,EAAE,UAAUD,GAAK5F,EAAG,QAAQ4F,CAAG,EAAE,UAAUW,GAAO,CAAiC,QAA5BsD,EAAO,CAAC,EAAMC,EAAM,CAACvD,CAAK,EAAQuD,EAAM,QAAO,CAAC,IAAIC,EAAED,EAAM,IAAI,EAAED,EAAO,KAAKE,CAAC,EAAED,EAAM,KAAK,MAAMA,EAAMC,EAAE,MAAM,CAAC,CAAC,OAAOF,CAAM,EAAE,OAAO,CAACG,EAASnJ,IAAW,CAAI,OAAOmJ,GAAU,aAAYnJ,EAASmJ,EAASA,EAAS,IAAMhK,EAAG,iBAAoBA,EAAG,eAAe,GAAG1D,EAAI,YAAY0D,EAAG,eAAe,yEAAyE,EAAE,IAAI6J,EAAO7J,EAAG,UAAUA,EAAG,KAAK,KAAK,EAAMiK,EAAU,EAAE,SAASC,EAAWjB,EAAQ,CAAC,OAAAjJ,EAAG,iBAAwBa,EAASoI,CAAO,CAAC,CAAC,SAASkB,EAAKlB,EAAQ,CAAC,GAAGA,EAAS,OAAIkB,EAAK,QAAsD,QAA7CA,EAAK,QAAQ,GAAYD,EAAWjB,CAAO,GAAY,EAAEgB,GAAWJ,EAAO,QAAQK,EAAW,IAAI,CAAE,CAACL,EAAO,QAAQtD,GAAO,CAAC,GAAG,CAACA,EAAM,KAAK,OAAQ,OAAO4D,EAAK,IAAI,EAAE5D,EAAM,KAAK,OAAOA,EAAMyD,EAASG,CAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAACC,EAAK7B,EAAK8B,IAAa,CAAC,IAAIpG,EAAKoG,IAAa,IAAQC,EAAO,CAACD,EAAe1D,EAAK,GAAG1C,GAAMjE,EAAG,KAAM,MAAM,IAAIA,EAAG,WAAW,EAAE,EAAO,GAAG,CAACiE,GAAM,CAACqG,EAAO,CAAC,IAAIxB,EAAO9I,EAAG,WAAWqK,EAAW,CAAC,aAAa,EAAK,CAAC,EAA0C,GAAxCA,EAAWvB,EAAO,KAAKnC,EAAKmC,EAAO,KAAQ9I,EAAG,aAAa2G,CAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,GAAG,CAACA,EAAG,MAAM2G,EAAK,IAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,CAAE,CAAC,IAAIuG,EAAM,CAAC,KAAK6D,EAAK,KAAK7B,EAAK,WAAW8B,EAAW,OAAO,CAAC,CAAC,EAAME,EAAUH,EAAK,MAAM7D,CAAK,EAAE,OAAAgE,EAAU,MAAMhE,EAAMA,EAAM,KAAKgE,EAAatG,EAAMjE,EAAG,KAAKuK,EAAkB5D,IAAMA,EAAK,QAAQJ,EAASI,EAAK,OAAOA,EAAK,MAAM,OAAO,KAAKJ,CAAK,GAAUgE,CAAS,EAAE,QAAQF,GAAY,CAAC,IAAIvB,EAAO9I,EAAG,WAAWqK,EAAW,CAAC,aAAa,EAAK,CAAC,EAAE,GAAG,CAACrK,EAAG,aAAa8I,EAAO,IAAI,EAAG,MAAM,IAAI9I,EAAG,WAAW,EAAE,EAAE,IAAI2G,EAAKmC,EAAO,KAASvC,EAAMI,EAAK,QAAYkD,EAAO7J,EAAG,UAAUuG,CAAK,EAAE,OAAO,KAAKvG,EAAG,SAAS,EAAE,QAAQgJ,GAAM,CAAgC,QAA3BP,EAAQzI,EAAG,UAAUgJ,CAAI,EAAQP,GAAQ,CAAC,IAAI+B,EAAK/B,EAAQ,UAAaoB,EAAO,SAASpB,EAAQ,KAAK,GAAGzI,EAAG,YAAYyI,CAAO,EAAEA,EAAQ+B,CAAI,CAAC,CAAC,EAAE7D,EAAK,QAAQ,KAAK,IAAIxJ,EAAIwJ,EAAK,MAAM,OAAO,QAAQJ,CAAK,EAAEI,EAAK,MAAM,OAAO,OAAOxJ,EAAI,CAAC,CAAC,EAAE,OAAO,CAACqJ,EAAOC,IAAeD,EAAO,SAAS,OAAOA,EAAOC,CAAI,EAAG,MAAM,CAAC9K,EAAK+K,EAAKd,IAAM,CAAC,IAAIkD,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAM6K,EAAOsC,EAAO,KAASrC,EAAKjD,EAAK,SAAS7H,CAAI,EAAE,GAAG,CAAC8K,GAAMA,IAAO,KAAKA,IAAO,KAAM,MAAM,IAAIzG,EAAG,WAAW,EAAE,EAAE,IAAIiJ,EAAQjJ,EAAG,UAAUwG,EAAOC,CAAI,EAAE,GAAGwC,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAE,GAAG,CAACzC,EAAO,SAAS,MAAO,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAAE,OAAOwG,EAAO,SAAS,MAAMA,EAAOC,EAAKC,EAAKd,CAAG,CAAC,EAAE,OAAO,CAACjK,EAAK+K,KAAQA,EAAKA,IAAO,OAAUA,EAAK,IAAIA,GAAM,KAAKA,GAAM,MAAa1G,EAAG,MAAMrE,EAAK+K,EAAK,CAAC,GAAG,MAAM,CAAC/K,EAAK+K,KAAQA,EAAKA,IAAO,OAAUA,EAAK,IAAIA,GAAM,KAAQA,GAAM,MAAa1G,EAAG,MAAMrE,EAAK+K,EAAK,CAAC,GAAG,UAAU,CAAC/K,EAAK+K,IAAO,CAAmC,QAA9B+D,EAAK9O,EAAK,MAAM,GAAG,EAAM,EAAE,GAAWyC,EAAE,EAAEA,EAAEqM,EAAK,OAAO,EAAErM,EAAG,GAAIqM,EAAKrM,CAAC,EAAW,IAAG,IAAIqM,EAAKrM,CAAC,EAAE,GAAG,CAAC4B,EAAG,MAAM,EAAE0G,CAAI,CAAC,OAAO3F,EAAE,CAAC,GAAGA,EAAE,OAAO,GAAG,MAAMA,CAAC,EAAE,EAAE,MAAM,CAACpF,EAAK+K,EAAKd,KAAU,OAAOA,EAAK,MAAaA,EAAIc,EAAKA,EAAK,KAAIA,GAAM,KAAY1G,EAAG,MAAMrE,EAAK+K,EAAKd,CAAG,GAAG,QAAQ,CAAC6B,EAAQiD,IAAU,CAAC,GAAG,CAACjG,GAAQ,QAAQgD,CAAO,EAAG,MAAM,IAAIzH,EAAG,WAAW,EAAE,EAAE,IAAI8I,EAAO9I,EAAG,WAAW0K,EAAQ,CAAC,OAAO,EAAI,CAAC,EAAMlE,EAAOsC,EAAO,KAAK,GAAG,CAACtC,EAAQ,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAAE,IAAIwH,EAAQhE,EAAK,SAASkH,CAAO,EAAMzB,EAAQjJ,EAAG,UAAUwG,EAAOgB,CAAO,EAAE,GAAGyB,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAE,GAAG,CAACzC,EAAO,SAAS,QAAS,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAAE,OAAOwG,EAAO,SAAS,QAAQA,EAAOgB,EAAQC,CAAO,CAAC,EAAE,OAAO,CAACkD,EAASC,IAAW,CAAC,IAAIC,EAAYrH,EAAK,QAAQmH,CAAQ,EAAMG,EAAYtH,EAAK,QAAQoH,CAAQ,EAAMG,EAASvH,EAAK,SAASmH,CAAQ,EAAMvD,EAAS5D,EAAK,SAASoH,CAAQ,EAAM9B,EAAOkC,EAAQ7D,EAA0I,GAAlI2B,EAAO9I,EAAG,WAAW2K,EAAS,CAAC,OAAO,EAAI,CAAC,EAAEK,EAAQlC,EAAO,KAAKA,EAAO9I,EAAG,WAAW4K,EAAS,CAAC,OAAO,EAAI,CAAC,EAAEzD,EAAQ2B,EAAO,KAAQ,CAACkC,GAAS,CAAC7D,EAAQ,MAAM,IAAInH,EAAG,WAAW,EAAE,EAAE,GAAGgL,EAAQ,QAAQ7D,EAAQ,MAAO,MAAM,IAAInH,EAAG,WAAW,EAAE,EAAE,IAAIkH,EAASlH,EAAG,WAAWgL,EAAQD,CAAQ,EAAME,EAASxG,GAAQ,SAASkG,EAASG,CAAW,EAAE,GAAGG,EAAS,OAAO,CAAC,IAAI,IAAK,MAAM,IAAIjL,EAAG,WAAW,EAAE,EAAkD,GAAhDiL,EAASxG,GAAQ,SAASmG,EAASC,CAAW,EAAKI,EAAS,OAAO,CAAC,IAAI,IAAK,MAAM,IAAIjL,EAAG,WAAW,EAAE,EAAE,IAAIqH,EAAS,GAAG,CAACA,EAASrH,EAAG,WAAWmH,EAAQC,CAAQ,CAAC,MAAS,CAAC,CAAC,GAAGF,IAAWG,EAAiB,KAAIiC,EAAMtJ,EAAG,MAAMkH,EAAS,IAAI,EAAM+B,EAAQjJ,EAAG,UAAUgL,EAAQD,EAASzB,CAAK,EAAE,GAAGL,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAuF,GAArFA,EAAQ5B,EAASrH,EAAG,UAAUmH,EAAQC,EAASkC,CAAK,EAAEtJ,EAAG,UAAUmH,EAAQC,CAAQ,EAAK6B,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAE,GAAG,CAAC+B,EAAQ,SAAS,OAAQ,MAAM,IAAIhL,EAAG,WAAW,EAAE,EAAE,GAAGA,EAAG,aAAakH,CAAQ,GAAGG,GAAUrH,EAAG,aAAaqH,CAAQ,EAAG,MAAM,IAAIrH,EAAG,WAAW,EAAE,EAAE,GAAGmH,IAAU6D,IAAS/B,EAAQjJ,EAAG,gBAAgBgL,EAAQ,GAAG,EAAK/B,GAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAGjJ,EAAG,eAAekH,CAAQ,EAAE,GAAG,CAAC8D,EAAQ,SAAS,OAAO9D,EAASC,EAAQC,CAAQ,CAAC,OAAOrG,EAAE,CAAC,MAAMA,CAAC,QAAC,CAAQf,EAAG,YAAYkH,CAAQ,CAAC,EAAC,EAAE,MAAMvL,GAAM,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAM6K,EAAOsC,EAAO,KAASrC,EAAKjD,EAAK,SAAS7H,CAAI,EAAMgL,EAAK3G,EAAG,WAAWwG,EAAOC,CAAI,EAAMwC,EAAQjJ,EAAG,UAAUwG,EAAOC,EAAK,EAAI,EAAE,GAAGwC,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAE,GAAG,CAACzC,EAAO,SAAS,MAAO,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAAE,GAAGA,EAAG,aAAa2G,CAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAEwG,EAAO,SAAS,MAAMA,EAAOC,CAAI,EAAEzG,EAAG,YAAY2G,CAAI,CAAC,EAAE,QAAQhL,GAAM,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAMgL,EAAKmC,EAAO,KAAK,GAAG,CAACnC,EAAK,SAAS,QAAS,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,OAAO2G,EAAK,SAAS,QAAQA,CAAI,CAAC,EAAE,OAAOhL,GAAM,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAM6K,EAAOsC,EAAO,KAAK,GAAG,CAACtC,EAAQ,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAAE,IAAIyG,EAAKjD,EAAK,SAAS7H,CAAI,EAAMgL,EAAK3G,EAAG,WAAWwG,EAAOC,CAAI,EAAMwC,EAAQjJ,EAAG,UAAUwG,EAAOC,EAAK,EAAK,EAAE,GAAGwC,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAE,GAAG,CAACzC,EAAO,SAAS,OAAQ,MAAM,IAAIxG,EAAG,WAAW,EAAE,EAAE,GAAGA,EAAG,aAAa2G,CAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAEwG,EAAO,SAAS,OAAOA,EAAOC,CAAI,EAAEzG,EAAG,YAAY2G,CAAI,CAAC,EAAE,SAAShL,GAAM,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,CAAI,EAAMkN,EAAKC,EAAO,KAAK,GAAG,CAACD,EAAM,MAAM,IAAI7I,EAAG,WAAW,EAAE,EAAE,GAAG,CAAC6I,EAAK,SAAS,SAAU,MAAM,IAAI7I,EAAG,WAAW,EAAE,EAAE,OAAOyE,GAAQ,QAAQzE,EAAG,QAAQ6I,EAAK,MAAM,EAAEA,EAAK,SAAS,SAASA,CAAI,CAAC,CAAC,EAAE,KAAK,CAAClN,EAAKuP,IAAa,CAAC,IAAIpC,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,CAACuP,CAAU,CAAC,EAAMvE,EAAKmC,EAAO,KAAK,GAAG,CAACnC,EAAM,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,GAAG,CAAC2G,EAAK,SAAS,QAAS,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,OAAO2G,EAAK,SAAS,QAAQA,CAAI,CAAC,EAAE,MAAMhL,GAAcqE,EAAG,KAAKrE,EAAK,EAAI,EAAG,MAAM,CAACA,EAAK+K,EAAKwE,IAAa,CAAC,IAAIvE,EAAK,GAAG,OAAOhL,GAAM,SAAS,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,CAACuP,CAAU,CAAC,EAAEvE,EAAKmC,EAAO,IAAI,MAAMnC,EAAKhL,EAAK,GAAG,CAACgL,EAAK,SAAS,QAAS,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE2G,EAAK,SAAS,QAAQA,EAAK,CAAC,KAAKD,EAAK,KAAKC,EAAK,KAAK,MAAM,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAChL,EAAK+K,IAAO,CAAC1G,EAAG,MAAMrE,EAAK+K,EAAK,EAAI,CAAC,EAAE,OAAO,CAAC+C,EAAG/C,IAAO,CAAC,IAAIZ,EAAO9F,EAAG,UAAUyJ,CAAE,EAAE,GAAG,CAAC3D,EAAQ,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAEA,EAAG,MAAM8F,EAAO,KAAKY,CAAI,CAAC,EAAE,MAAM,CAAC/K,EAAKwP,EAAIC,EAAIF,IAAa,CAAC,IAAIvE,EAAK,GAAG,OAAOhL,GAAM,SAAS,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,CAACuP,CAAU,CAAC,EAAEvE,EAAKmC,EAAO,IAAI,MAAMnC,EAAKhL,EAAK,GAAG,CAACgL,EAAK,SAAS,QAAS,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE2G,EAAK,SAAS,QAAQA,EAAK,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAChL,EAAKwP,EAAIC,IAAM,CAACpL,EAAG,MAAMrE,EAAKwP,EAAIC,EAAI,EAAI,CAAC,EAAE,OAAO,CAAC3B,EAAG0B,EAAIC,IAAM,CAAC,IAAItF,EAAO9F,EAAG,UAAUyJ,CAAE,EAAE,GAAG,CAAC3D,EAAQ,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAEA,EAAG,MAAM8F,EAAO,KAAKqF,EAAIC,CAAG,CAAC,EAAE,SAAS,CAACzP,EAAK8C,IAAM,CAAC,GAAGA,EAAI,EAAG,MAAM,IAAIuB,EAAG,WAAW,EAAE,EAAE,IAAI2G,EAAK,GAAG,OAAOhL,GAAM,SAAS,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAEgL,EAAKmC,EAAO,IAAI,MAAMnC,EAAKhL,EAAK,GAAG,CAACgL,EAAK,SAAS,QAAS,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,GAAGA,EAAG,MAAM2G,EAAK,IAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,GAAG,CAACA,EAAG,OAAO2G,EAAK,IAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,IAAIiJ,EAAQjJ,EAAG,gBAAgB2G,EAAK,GAAG,EAAE,GAAGsC,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAEtC,EAAK,SAAS,QAAQA,EAAK,CAAC,KAAKlI,EAAI,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,CAACgL,EAAGhL,IAAM,CAAC,IAAIqH,EAAO9F,EAAG,UAAUyJ,CAAE,EAAE,GAAG,CAAC3D,EAAQ,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAI,EAAA8F,EAAO,MAAM,SAAc,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAEA,EAAG,SAAS8F,EAAO,KAAKrH,CAAG,CAAC,EAAE,MAAM,CAAC9C,EAAK0P,EAAMC,IAAQ,CAAC,IAAIxC,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAMgL,EAAKmC,EAAO,KAAKnC,EAAK,SAAS,QAAQA,EAAK,CAAC,UAAU,KAAK,IAAI0E,EAAMC,CAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC3P,EAAKoM,EAAMrB,IAAO,CAAC,GAAG/K,IAAO,GAAI,MAAM,IAAIqE,EAAG,WAAW,EAAE,EAAE+H,EAAM,OAAOA,GAAO,SAAS/H,EAAG,kBAAkB+H,CAAK,EAAEA,EAAMrB,EAAK,OAAOA,EAAM,IAAY,IAAIA,EAAQqB,EAAM,GAAIrB,EAAKA,EAAK,KAAK,MAAWA,EAAK,EAAE,IAAIC,EAAK,GAAG,OAAOhL,GAAM,SAAUgL,EAAKhL,MAAS,CAACA,EAAK6H,EAAK,UAAU7H,CAAI,EAAE,GAAG,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAEoM,EAAM,OAAO,CAAC,EAAEpB,EAAKmC,EAAO,IAAI,MAAS,CAAC,CAAC,CAAC,IAAIyC,EAAQ,GAAM,GAAGxD,EAAM,GAAI,GAAGpB,GAAM,GAAGoB,EAAM,IAAK,MAAM,IAAI/H,EAAG,WAAW,EAAE,OAAQ2G,EAAK3G,EAAG,MAAMrE,EAAK+K,EAAK,CAAC,EAAE6E,EAAQ,GAAM,GAAG,CAAC5E,EAAM,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAyC,GAApCA,EAAG,SAAS2G,EAAK,IAAI,IAAGoB,GAAO,MAAQA,EAAM,OAAO,CAAC/H,EAAG,MAAM2G,EAAK,IAAI,EAAG,MAAM,IAAI3G,EAAG,WAAW,EAAE,EAAE,GAAG,CAACuL,EAAQ,CAAC,IAAItC,EAAQjJ,EAAG,QAAQ2G,EAAKoB,CAAK,EAAE,GAAGkB,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,CAAE,CAAIlB,EAAM,KAAK,CAACwD,GAASvL,EAAG,SAAS2G,EAAK,CAAC,EAAEoB,GAAO,QAAkB,IAAIjC,EAAO9F,EAAG,aAAa,CAAC,KAAK2G,EAAK,KAAK3G,EAAG,QAAQ2G,CAAI,EAAE,MAAMoB,EAAM,SAAS,GAAK,SAAS,EAAE,WAAWpB,EAAK,WAAW,SAAS,CAAC,EAAE,MAAM,EAAK,CAAC,EAAE,OAAGb,EAAO,WAAW,MAAMA,EAAO,WAAW,KAAKA,CAAM,EAAKnL,EAAO,cAAiB,EAAEoN,EAAM,KAAQ/H,EAAG,YAAUA,EAAG,UAAU,CAAC,GAAOrE,KAAQqE,EAAG,YAAYA,EAAG,UAAUrE,CAAI,EAAE,IAAUmK,CAAM,EAAE,MAAMA,GAAQ,CAAC,GAAG9F,EAAG,SAAS8F,CAAM,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAK8F,EAAO,WAASA,EAAO,SAAS,MAAK,GAAG,CAAIA,EAAO,WAAW,OAAOA,EAAO,WAAW,MAAMA,CAAM,CAAE,OAAO/E,EAAE,CAAC,MAAMA,CAAC,QAAC,CAAQf,EAAG,YAAY8F,EAAO,EAAE,CAAC,CAACA,EAAO,GAAG,IAAI,EAAE,SAASA,GAAgBA,EAAO,KAAK,KAAM,OAAO,CAACA,EAAOE,EAAO6B,IAAS,CAAC,GAAG7H,EAAG,SAAS8F,CAAM,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAG,CAAC8F,EAAO,UAAU,CAACA,EAAO,WAAW,OAAQ,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,GAAG6H,GAAQ,GAAGA,GAAQ,GAAGA,GAAQ,EAAG,MAAM,IAAI7H,EAAG,WAAW,EAAE,EAAE,OAAA8F,EAAO,SAASA,EAAO,WAAW,OAAOA,EAAOE,EAAO6B,CAAM,EAAE/B,EAAO,SAAS,CAAC,EAASA,EAAO,QAAQ,EAAE,KAAK,CAACA,EAAOnH,EAAOqH,EAAOZ,EAAOsC,IAAW,CAAC,GAAGtC,EAAO,GAAGsC,EAAS,EAAG,MAAM,IAAI1H,EAAG,WAAW,EAAE,EAAE,GAAGA,EAAG,SAAS8F,CAAM,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,IAAI8F,EAAO,MAAM,WAAW,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAGA,EAAG,MAAM8F,EAAO,KAAK,IAAI,EAAG,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,GAAG,CAAC8F,EAAO,WAAW,KAAM,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,IAAIwL,EAAQ,OAAO9D,EAAU,IAAY,GAAG,CAAC8D,EAAS9D,EAAS5B,EAAO,iBAAiB,CAACA,EAAO,SAAU,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,IAAIkG,EAAUJ,EAAO,WAAW,KAAKA,EAAOnH,EAAOqH,EAAOZ,EAAOsC,CAAQ,EAAE,OAAI8D,IAAQ1F,EAAO,UAAUI,GAAiBA,CAAS,EAAE,MAAM,CAACJ,EAAOnH,EAAOqH,EAAOZ,EAAOsC,EAASE,IAAS,CAAC,GAAGxC,EAAO,GAAGsC,EAAS,EAAG,MAAM,IAAI1H,EAAG,WAAW,EAAE,EAAE,GAAGA,EAAG,SAAS8F,CAAM,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAI,EAAA8F,EAAO,MAAM,SAAc,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAGA,EAAG,MAAM8F,EAAO,KAAK,IAAI,EAAG,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,GAAG,CAAC8F,EAAO,WAAW,MAAO,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAK8F,EAAO,UAAUA,EAAO,MAAM,MAAM9F,EAAG,OAAO8F,EAAO,EAAE,CAAC,EAAE,IAAI0F,EAAQ,OAAO9D,EAAU,IAAY,GAAG,CAAC8D,EAAS9D,EAAS5B,EAAO,iBAAiB,CAACA,EAAO,SAAU,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,IAAIyL,EAAa3F,EAAO,WAAW,MAAMA,EAAOnH,EAAOqH,EAAOZ,EAAOsC,EAASE,CAAM,EAAE,OAAI4D,IAAQ1F,EAAO,UAAU2F,GAAoBA,CAAY,EAAE,SAAS,CAAC3F,EAAOE,EAAOZ,IAAS,CAAC,GAAGpF,EAAG,SAAS8F,CAAM,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAGgG,EAAO,GAAGZ,GAAQ,EAAG,MAAM,IAAIpF,EAAG,WAAW,EAAE,EAAE,GAAI,EAAA8F,EAAO,MAAM,SAAc,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAG,CAACA,EAAG,OAAO8F,EAAO,KAAK,IAAI,GAAG,CAAC9F,EAAG,MAAM8F,EAAO,KAAK,IAAI,EAAG,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,GAAG,CAAC8F,EAAO,WAAW,SAAU,MAAM,IAAI9F,EAAG,WAAW,GAAG,EAAE8F,EAAO,WAAW,SAASA,EAAOE,EAAOZ,CAAM,CAAC,EAAE,KAAK,CAACU,EAAOV,EAAOsC,EAASI,EAAKC,IAAQ,CAAC,GAAID,EAAK,GAAS,EAAAC,EAAM,KAASjC,EAAO,MAAM,WAAW,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,IAAI8F,EAAO,MAAM,WAAW,EAAG,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,GAAG,CAAC8F,EAAO,WAAW,KAAM,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,OAAO8F,EAAO,WAAW,KAAKA,EAAOV,EAAOsC,EAASI,EAAKC,CAAK,CAAC,EAAE,MAAM,CAACjC,EAAOnH,EAAOqH,EAAOZ,EAAO6C,IAAiBnC,EAAO,WAAW,MAAuBA,EAAO,WAAW,MAAMA,EAAOnH,EAAOqH,EAAOZ,EAAO6C,CAAS,EAAtE,EAAyE,OAAOnC,GAAQ,EAAE,MAAM,CAACA,EAAO4F,EAAIC,IAAM,CAAC,GAAG,CAAC7F,EAAO,WAAW,MAAO,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,OAAO8F,EAAO,WAAW,MAAMA,EAAO4F,EAAIC,CAAG,CAAC,EAAE,SAAS,CAAChQ,EAAK4M,EAAK,CAAC,IAAI,CAAgE,GAA/DA,EAAK,MAAMA,EAAK,OAAO,EAAEA,EAAK,SAASA,EAAK,UAAU,SAAYA,EAAK,WAAW,QAAQA,EAAK,WAAW,SAAU,MAAM,IAAI,MAAM,0BAA0BA,EAAK,SAAS,GAAG,EAAE,IAAIqD,EAAQ9F,EAAO9F,EAAG,KAAKrE,EAAK4M,EAAK,KAAK,EAAMsD,EAAK7L,EAAG,KAAKrE,CAAI,EAAMyJ,EAAOyG,EAAK,KAASzM,EAAI,IAAI,WAAWgG,CAAM,EAAE,OAAApF,EAAG,KAAK8F,EAAO1G,EAAI,EAAEgG,EAAO,CAAC,EAAKmD,EAAK,WAAW,OAAQqD,EAAI3O,EAAkBmC,EAAI,CAAC,EAAUmJ,EAAK,WAAW,WAAUqD,EAAIxM,GAAIY,EAAG,MAAM8F,CAAM,EAAS8F,CAAG,EAAE,UAAU,CAACjQ,EAAKmQ,EAAKvD,EAAK,CAAC,IAAI,CAACA,EAAK,MAAMA,EAAK,OAAO,IAAI,IAAIzC,EAAO9F,EAAG,KAAKrE,EAAK4M,EAAK,MAAMA,EAAK,IAAI,EAAE,GAAG,OAAOuD,GAAM,SAAS,CAAC,IAAI1M,EAAI,IAAI,WAAWZ,GAAgBsN,CAAI,EAAE,CAAC,EAAMC,EAAehO,EAAkB+N,EAAK1M,EAAI,EAAEA,EAAI,MAAM,EAAEY,EAAG,MAAM8F,EAAO1G,EAAI,EAAE2M,EAAe,OAAUxD,EAAK,MAAM,CAAC,SAAS,YAAY,OAAOuD,CAAI,EAAG9L,EAAG,MAAM8F,EAAOgG,EAAK,EAAEA,EAAK,WAAW,OAAUvD,EAAK,MAAM,MAAO,OAAM,IAAI,MAAM,uBAAuB,EAAEvI,EAAG,MAAM8F,CAAM,CAAC,EAAE,IAAI,IAAI9F,EAAG,YAAY,MAAMrE,GAAM,CAAC,IAAImN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAE,GAAGmN,EAAO,OAAO,KAAM,MAAM,IAAI9I,EAAG,WAAW,EAAE,EAAE,GAAG,CAACA,EAAG,MAAM8I,EAAO,KAAK,IAAI,EAAG,MAAM,IAAI9I,EAAG,WAAW,EAAE,EAAE,IAAIiJ,EAAQjJ,EAAG,gBAAgB8I,EAAO,KAAK,GAAG,EAAE,GAAGG,EAAS,MAAM,IAAIjJ,EAAG,WAAWiJ,CAAO,EAAEjJ,EAAG,YAAY8I,EAAO,IAAI,EAAE,yBAAyB,IAAI,CAAC9I,EAAG,MAAM,MAAM,EAAEA,EAAG,MAAM,OAAO,EAAEA,EAAG,MAAM,gBAAgB,CAAC,EAAE,qBAAqB,IAAI,CAACA,EAAG,MAAM,MAAM,EAAEA,EAAG,eAAeA,EAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,MAAM,CAAC8F,EAAOnH,EAAOqH,EAAOZ,EAAOa,IAAMb,CAAM,CAAC,EAAEpF,EAAG,MAAM,YAAYA,EAAG,QAAQ,EAAE,CAAC,CAAC,EAAEC,GAAI,SAASD,EAAG,QAAQ,EAAE,CAAC,EAAEC,GAAI,eAAe,EAAEA,GAAI,SAASD,EAAG,QAAQ,EAAE,CAAC,EAAEC,GAAI,gBAAgB,EAAED,EAAG,MAAM,WAAWA,EAAG,QAAQ,EAAE,CAAC,CAAC,EAAEA,EAAG,MAAM,YAAYA,EAAG,QAAQ,EAAE,CAAC,CAAC,EAAE,IAAIgM,EAAczH,GAAgB,EAAEvE,EAAG,aAAa,OAAO,SAASgM,CAAa,EAAEhM,EAAG,aAAa,OAAO,UAAUgM,CAAa,EAAEhM,EAAG,MAAM,UAAU,EAAEA,EAAG,MAAM,cAAc,CAAC,EAAE,yBAAyB,IAAI,CAACA,EAAG,MAAM,OAAO,EAAE,IAAIiM,EAAUjM,EAAG,MAAM,YAAY,EAAEA,EAAG,MAAM,eAAe,EAAEA,EAAG,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI2G,EAAK3G,EAAG,WAAWiM,EAAU,KAAK,MAAU,EAAE,EAAE,OAAAtF,EAAK,SAAS,CAAC,OAAO,CAACH,EAAOC,IAAO,CAAC,IAAIgD,EAAG,CAAChD,EAASX,EAAO9F,EAAG,UAAUyJ,CAAE,EAAE,GAAG,CAAC3D,EAAO,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,IAAI4L,EAAI,CAAC,OAAO,KAAK,MAAM,CAAC,WAAW,MAAM,EAAE,SAAS,CAAC,SAAS,IAAI9F,EAAO,IAAI,CAAC,EAAE,OAAA8F,EAAI,OAAOA,EAAWA,CAAG,CAAC,EAASjF,CAAI,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,EAAE,sBAAsB,IAAI,CAAIhM,EAAO,MAAUqF,EAAG,aAAa,OAAO,QAAQrF,EAAO,KAAQ,EAAOqF,EAAG,QAAQ,WAAW,YAAY,EAAKrF,EAAO,OAAWqF,EAAG,aAAa,OAAO,SAAS,KAAKrF,EAAO,MAAS,EAAOqF,EAAG,QAAQ,WAAW,aAAa,EAAKrF,EAAO,OAAWqF,EAAG,aAAa,OAAO,SAAS,KAAKrF,EAAO,MAAS,EAAOqF,EAAG,QAAQ,YAAY,aAAa,EAAE,IAAIkM,EAAMlM,EAAG,KAAK,aAAa,CAAC,EAAMmM,EAAOnM,EAAG,KAAK,cAAc,CAAC,EAAMoM,EAAOpM,EAAG,KAAK,cAAc,CAAC,CAAC,EAAE,iBAAiB,IAAI,CAAIA,EAAG,aAAkBA,EAAG,WAAW,SAAoBqM,EAAM1F,EAAK,CAAC,KAAK,KAAKA,EAAK,KAAK,SAAS,SAAS0F,EAAM,CAAC,KAAK,MAAMA,CAAK,EAAE,KAAK,SAASA,CAAK,EAAE,KAAK,QAAQ,UAAU,EAAErM,EAAG,WAAW,UAAU,IAAI,MAAMA,EAAG,WAAW,UAAU,YAAYA,EAAG,WAAW,CAAC,EAAE,EAAE,QAAQsM,GAAM,CAACtM,EAAG,cAAcsM,CAAI,EAAE,IAAItM,EAAG,WAAWsM,CAAI,EAAEtM,EAAG,cAAcsM,CAAI,EAAE,MAAM,2BAA2B,CAAC,EAAC,EAAE,WAAW,IAAI,CAACtM,EAAG,iBAAiB,EAAEA,EAAG,UAAU,IAAI,MAAM,IAAI,EAAEA,EAAG,MAAMsG,EAAM,CAAC,EAAE,GAAG,EAAEtG,EAAG,yBAAyB,EAAEA,EAAG,qBAAqB,EAAEA,EAAG,yBAAyB,EAAEA,EAAG,YAAY,CAAC,MAAQsG,CAAK,CAAC,EAAE,KAAK,CAACiG,EAAMC,EAAOC,IAAQ,CAACzM,EAAG,KAAK,YAAY,GAAKA,EAAG,iBAAiB,EAAErF,EAAO,MAAS4R,GAAO5R,EAAO,MAASA,EAAO,OAAU6R,GAAQ7R,EAAO,OAAUA,EAAO,OAAU8R,GAAO9R,EAAO,OAAUqF,EAAG,sBAAsB,CAAC,EAAE,KAAK,IAAI,CAACA,EAAG,KAAK,YAAY,GAAM,QAAQ5B,EAAE,EAAEA,EAAE4B,EAAG,QAAQ,OAAO5B,IAAI,CAAC,IAAI0H,EAAO9F,EAAG,QAAQ5B,CAAC,EAAM0H,GAAiB9F,EAAG,MAAM8F,CAAM,CAAC,CAAC,EAAE,QAAQ,CAAC4G,EAAQC,IAAW,CAAC,IAAIjG,EAAK,EAAE,OAAGgG,IAAQhG,GAAM,KAAUiG,IAASjG,GAAM,KAAWA,CAAI,EAAE,WAAW,CAAC/K,EAAKiR,IAAsB,CAAC,IAAIhB,EAAI5L,EAAG,YAAYrE,EAAKiR,CAAmB,EAAE,OAAIhB,EAAI,OAA2BA,EAAI,OAAhB,IAAsB,EAAE,YAAY,CAACjQ,EAAKiR,IAAsB,CAAC,GAAG,CAAC,IAAI9D,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,CAACiR,CAAmB,CAAC,EAAEjR,EAAKmN,EAAO,IAAI,MAAS,CAAC,CAAC,IAAI8C,EAAI,CAAC,OAAO,GAAM,OAAO,GAAM,MAAM,EAAE,KAAK,KAAK,KAAK,KAAK,OAAO,KAAK,aAAa,GAAM,WAAW,KAAK,aAAa,IAAI,EAAE,GAAG,CAAC,IAAI9C,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,EAAI,CAAC,EAAEiQ,EAAI,aAAa,GAAKA,EAAI,WAAW9C,EAAO,KAAK8C,EAAI,aAAa9C,EAAO,KAAK8C,EAAI,KAAKpI,EAAK,SAAS7H,CAAI,EAAEmN,EAAO9I,EAAG,WAAWrE,EAAK,CAAC,OAAO,CAACiR,CAAmB,CAAC,EAAEhB,EAAI,OAAO,GAAKA,EAAI,KAAK9C,EAAO,KAAK8C,EAAI,OAAO9C,EAAO,KAAK8C,EAAI,KAAK9C,EAAO,KAAK,KAAK8C,EAAI,OAAO9C,EAAO,OAAO,GAAG,OAAO/H,EAAE,CAAC6K,EAAI,MAAM7K,EAAE,KAAK,CAAC,OAAO6K,CAAG,EAAE,WAAW,CAACpF,EAAO7K,EAAK+Q,EAAQC,IAAW,CAACnG,EAAO,OAAOA,GAAQ,SAASA,EAAOxG,EAAG,QAAQwG,CAAM,EAAsC,QAAhC9C,EAAM/H,EAAK,MAAM,GAAG,EAAE,QAAQ,EAAQ+H,EAAM,QAAO,CAAC,IAAImJ,EAAKnJ,EAAM,IAAI,EAAE,GAAImJ,EAAc,KAAIpE,EAAQjF,EAAK,MAAMgD,EAAOqG,CAAI,EAAE,GAAG,CAAC7M,EAAG,MAAMyI,CAAO,CAAC,MAAS,CAAC,CAACjC,EAAOiC,EAAO,CAAC,OAAOA,CAAO,EAAE,WAAW,CAACjC,EAAOC,EAAKqG,EAAWJ,EAAQC,IAAW,CAAC,IAAIhR,EAAK6H,EAAK,MAAM,OAAOgD,GAAQ,SAASA,EAAOxG,EAAG,QAAQwG,CAAM,EAAEC,CAAI,EAAMC,EAAK1G,EAAG,QAAQ0M,EAAQC,CAAQ,EAAE,OAAO3M,EAAG,OAAOrE,EAAK+K,CAAI,CAAC,EAAE,eAAe,CAACF,EAAOC,EAAKqF,EAAKY,EAAQC,EAAS/E,IAAS,CAAC,IAAIjM,EAAK8K,EAAQD,IAAQA,EAAO,OAAOA,GAAQ,SAASA,EAAOxG,EAAG,QAAQwG,CAAM,EAAE7K,EAAK8K,EAAKjD,EAAK,MAAMgD,EAAOC,CAAI,EAAED,GAAO,IAAIE,EAAK1G,EAAG,QAAQ0M,EAAQC,CAAQ,EAAMhG,EAAK3G,EAAG,OAAOrE,EAAK+K,CAAI,EAAE,GAAGoF,EAAK,CAAC,GAAG,OAAOA,GAAM,SAAS,CAAgC,QAA3B/G,EAAI,IAAI,MAAM+G,EAAK,MAAM,EAAU1N,EAAE,EAAEK,EAAIqN,EAAK,OAAO1N,EAAEK,EAAI,EAAEL,EAAE2G,EAAI3G,CAAC,EAAE0N,EAAK,WAAW1N,CAAC,EAAE0N,EAAK/G,CAAG,CAAC/E,EAAG,MAAM2G,EAAKD,EAAK,GAAG,EAAE,IAAIZ,EAAO9F,EAAG,KAAK2G,EAAK,GAAG,EAAE3G,EAAG,MAAM8F,EAAOgG,EAAK,EAAEA,EAAK,OAAO,EAAElE,CAAM,EAAE5H,EAAG,MAAM8F,CAAM,EAAE9F,EAAG,MAAM2G,EAAKD,CAAI,CAAC,CAAC,OAAOC,CAAI,EAAE,aAAa,CAACH,EAAOC,EAAK8F,EAAMC,IAAS,CAAC,IAAI7Q,EAAK6H,EAAK,MAAM,OAAOgD,GAAQ,SAASA,EAAOxG,EAAG,QAAQwG,CAAM,EAAEC,CAAI,EAAMC,EAAK1G,EAAG,QAAQ,CAAC,CAACuM,EAAM,CAAC,CAACC,CAAM,EAAMxM,EAAG,aAAa,QAAMA,EAAG,aAAa,MAAM,IAAG,IAAI4F,EAAI5F,EAAG,QAAQA,EAAG,aAAa,QAAQ,CAAC,EAAE,OAAAA,EAAG,eAAe4F,EAAI,CAAC,KAAKE,GAAQ,CAACA,EAAO,SAAS,EAAK,EAAE,MAAMA,GAAQ,CAAI0G,GAAQA,EAAO,QAAQA,EAAO,OAAO,QAAQA,EAAO,EAAE,CAAE,EAAE,KAAK,CAAC1G,EAAOnH,EAAOqH,EAAOZ,EAAOa,IAAM,CAAiB,QAAZC,EAAU,EAAU9H,EAAE,EAAEA,EAAEgH,EAAOhH,IAAI,CAAC,IAAI4D,EAAO,GAAG,CAACA,EAAOuK,EAAM,CAAC,MAAS,CAAC,MAAM,IAAIvM,EAAG,WAAW,EAAE,CAAC,CAAC,GAAGgC,IAAS,QAAWkE,IAAY,EAAG,MAAM,IAAIlG,EAAG,WAAW,CAAC,EAAE,GAAGgC,GAAS,KAAyB,MAAMkE,IAAYvH,EAAOqH,EAAO5H,CAAC,EAAE4D,CAAM,CAAC,OAAGkE,IAAWJ,EAAO,KAAK,UAAU,KAAK,IAAI,GAASI,CAAS,EAAE,MAAM,CAACJ,EAAOnH,EAAOqH,EAAOZ,EAAOa,IAAM,CAAC,QAAQ7H,EAAE,EAAEA,EAAEgH,EAAOhH,IAAK,GAAG,CAACoO,EAAO7N,EAAOqH,EAAO5H,CAAC,CAAC,CAAC,MAAS,CAAC,MAAM,IAAI4B,EAAG,WAAW,EAAE,CAAC,CAAE,OAAGoF,IAAQU,EAAO,KAAK,UAAU,KAAK,IAAI,GAAS1H,CAAC,CAAC,CAAC,EAAS4B,EAAG,MAAMrE,EAAK+K,EAAKd,CAAG,CAAC,EAAE,cAAcmH,GAAK,CAAC,GAAGA,EAAI,UAAUA,EAAI,UAAUA,EAAI,MAAMA,EAAI,SAAS,MAAO,GAAK,GAAG,OAAO,eAAgB,IAAa,MAAM,IAAI,MAAM,kMAAkM,EAAO,GAAGnR,EAAO,GAAG,CAACmR,EAAI,SAASxH,GAAmB3J,EAAMmR,EAAI,GAAG,EAAE,EAAI,EAAEA,EAAI,UAAUA,EAAI,SAAS,MAAM,MAAS,CAAC,MAAM,IAAI/M,EAAG,WAAW,EAAE,CAAC,KAAO,OAAM,IAAI,MAAM,+CAA+C,CAAE,EAAE,eAAe,CAACwG,EAAOC,EAAKzK,EAAI0Q,EAAQC,IAAW,CAAC,SAASK,GAAgB,CAAC,KAAK,YAAY,GAAM,KAAK,OAAO,CAAC,CAAC,CAAsqE,GAArqEA,EAAe,UAAU,IAAI,SAA4B7P,EAAI,CAAC,GAAG,EAAAA,EAAI,KAAK,OAAO,GAAGA,EAAI,GAAoB,KAAI8P,EAAY9P,EAAI,KAAK,UAAc+P,EAAS/P,EAAI,KAAK,UAAU,EAAE,OAAO,KAAK,OAAO+P,CAAQ,EAAED,CAAW,EAAC,EAAED,EAAe,UAAU,cAAc,SAAsCG,EAAO,CAAC,KAAK,OAAOA,CAAM,EAAEH,EAAe,UAAU,YAAY,UAAqC,CAAC,IAAI/Q,EAAI,IAAI,eAAyD,GAA1CA,EAAI,KAAK,OAAOD,EAAI,EAAK,EAAEC,EAAI,KAAK,IAAI,EAAK,EAAEA,EAAI,QAAQ,KAAKA,EAAI,OAAO,KAAKA,EAAI,SAAS,KAAK,MAAM,IAAI,MAAM,iBAAiBD,EAAI,aAAaC,EAAI,MAAM,EAAE,IAAImR,EAAW,OAAOnR,EAAI,kBAAkB,gBAAgB,CAAC,EAAMoR,EAAWC,IAAgBD,EAAOpR,EAAI,kBAAkB,eAAe,IAAIoR,IAAS,QAAYE,IAAUF,EAAOpR,EAAI,kBAAkB,kBAAkB,IAAIoR,IAAS,OAAWG,GAAU,KAAK,KAASF,KAAeE,GAAUJ,GAAW,IAAIK,GAAM,CAAC7I,GAAKC,KAAK,CAAC,GAAGD,GAAKC,GAAG,MAAM,IAAI,MAAM,kBAAkBD,GAAK,KAAKC,GAAG,0BAA0B,EAAE,GAAGA,GAAGuI,EAAW,EAAE,MAAM,IAAI,MAAM,QAAQA,EAAW,qCAAqC,EAAE,IAAInR,GAAI,IAAI,eAAwP,GAAzOA,GAAI,KAAK,MAAMD,EAAI,EAAK,EAAKoR,IAAaI,IAAUvR,GAAI,iBAAiB,QAAQ,SAAS2I,GAAK,IAAIC,EAAE,EAAE5I,GAAI,aAAa,cAAiBA,GAAI,kBAAkBA,GAAI,iBAAiB,oCAAoC,EAAEA,GAAI,KAAK,IAAI,EAAK,EAAEA,GAAI,QAAQ,KAAKA,GAAI,OAAO,KAAKA,GAAI,SAAS,KAAK,MAAM,IAAI,MAAM,iBAAiBD,EAAI,aAAaC,GAAI,MAAM,EAAE,OAAGA,GAAI,WAAW,OAAkB,IAAI,WAAWA,GAAI,UAAU,CAAC,CAAC,EAASsJ,GAAmBtJ,GAAI,cAAc,GAAG,EAAI,CAAC,EAAMyR,GAAU,KAAKA,GAAU,cAAcR,IAAU,CAAC,IAAIlI,GAAMkI,GAASM,GAAcvI,IAAKiI,GAAS,GAAGM,GAAU,EAAgI,GAA9HvI,GAAI,KAAK,IAAIA,GAAImI,EAAW,CAAC,EAAK,OAAOM,GAAU,OAAOR,EAAQ,EAAG,MAAaQ,GAAU,OAAOR,EAAQ,EAAEO,GAAMzI,GAAMC,EAAG,GAAK,OAAOyI,GAAU,OAAOR,EAAQ,EAAG,IAAY,MAAM,IAAI,MAAM,eAAe,EAAE,OAAOQ,GAAU,OAAOR,EAAQ,CAAC,CAAC,GAAKK,IAAU,CAACH,KAAYI,GAAUJ,EAAW,EAAEA,EAAW,KAAK,OAAO,CAAC,EAAE,OAAOI,GAAUJ,EAAW/Q,EAAI,6EAA6E,GAAE,KAAK,QAAQ+Q,EAAW,KAAK,WAAWI,GAAU,KAAK,YAAY,EAAI,EAAK,OAAO,eAAgB,IAAY,CAAC,GAAG,CAAChS,EAAsB,KAAK,sHAAsH,IAAIkS,EAAU,IAAIV,EAAe,OAAO,iBAAiBU,EAAU,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,OAAI,KAAK,aAAa,KAAK,YAAY,EAAS,KAAK,OAAO,CAAC,EAAE,UAAU,CAAC,IAAI,UAAU,CAAC,OAAI,KAAK,aAAa,KAAK,YAAY,EAAS,KAAK,UAAU,CAAC,CAAC,CAAC,EAAE,IAAIZ,EAAW,CAAC,SAAS,GAAM,SAASY,CAAS,CAAC,KAAM,KAAIZ,EAAW,CAAC,SAAS,GAAM,IAAI9Q,CAAG,EAAE,IAAI2K,EAAK3G,EAAG,WAAWwG,EAAOC,EAAKqG,EAAWJ,EAAQC,CAAQ,EAAKG,EAAW,SAAUnG,EAAK,SAASmG,EAAW,SAAiBA,EAAW,MAAKnG,EAAK,SAAS,KAAKA,EAAK,IAAImG,EAAW,KAAI,OAAO,iBAAiBnG,EAAK,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,SAAS,MAAM,CAAC,CAAC,CAAC,EAAE,IAAIgH,EAAW,CAAC,EAAMC,EAAK,OAAO,KAAKjH,EAAK,UAAU,EAAEiH,EAAK,QAAQrG,GAAK,CAAC,IAAIsG,EAAGlH,EAAK,WAAWY,CAAG,EAAEoG,EAAWpG,CAAG,EAAE,UAA4B,CAAC,OAAAvH,EAAG,cAAc2G,CAAI,EAASkH,EAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,SAASC,EAAYhI,EAAOnH,EAAOqH,EAAOZ,EAAOsC,GAAS,CAAC,IAAIC,GAAS7B,EAAO,KAAK,SAAS,GAAG4B,IAAUC,GAAS,OAAO,MAAO,GAAE,IAAItB,GAAK,KAAK,IAAIsB,GAAS,OAAOD,GAAStC,CAAM,EAAE,GAAGuC,GAAS,MAAO,QAAQvJ,GAAE,EAAEA,GAAEiI,GAAKjI,KAAKO,EAAOqH,EAAO5H,EAAC,EAAEuJ,GAASD,GAAStJ,EAAC,MAAQ,SAAQA,GAAE,EAAEA,GAAEiI,GAAKjI,KAAKO,EAAOqH,EAAO5H,EAAC,EAAEuJ,GAAS,IAAID,GAAStJ,EAAC,EAAG,OAAOiI,EAAI,CAAC,OAAAsH,EAAW,KAAK,CAAC7H,EAAOnH,EAAOqH,EAAOZ,EAAOsC,MAAY1H,EAAG,cAAc2G,CAAI,EAASmH,EAAYhI,EAAOnH,EAAOqH,EAAOZ,EAAOsC,EAAQ,GAAGiG,EAAW,KAAK,CAAC7H,EAAOV,EAAOsC,EAASI,EAAKC,KAAQ,CAAC/H,EAAG,cAAc2G,CAAI,EAAE,IAAI9I,GAAIuI,GAAUhB,CAAM,EAAE,GAAG,CAACvH,GAAK,MAAM,IAAImC,EAAG,WAAW,EAAE,EAAE,OAAA8N,EAAYhI,EAAOlH,EAAMf,GAAIuH,EAAOsC,CAAQ,EAAQ,CAAC,IAAI7J,GAAI,UAAU,EAAI,CAAC,EAAE8I,EAAK,WAAWgH,EAAkBhH,CAAI,EAAE,oBAAoB,CAACH,EAAOC,EAAKzK,EAAI0Q,EAAQC,EAASzQ,EAAOC,EAAQ4R,EAAenG,EAAOoG,IAAY,CAAC,IAAIC,EAASxH,EAAKhC,GAAQ,QAAQjB,EAAK,MAAMgD,EAAOC,CAAI,CAAC,EAAED,EAAW4B,EAA2B,MAAM6F,EAAU,SAASC,EAAYC,EAAU,CAAC,SAASC,EAAOD,EAAU,CAAIH,GAAUA,EAAU,EAAMD,GAAgB/N,EAAG,eAAewG,EAAOC,EAAK0H,EAAUzB,EAAQC,EAAS/E,CAAM,EAAK1L,GAAOA,EAAO,EAAE0E,GAAoBwH,CAAG,CAAC,CAAI,QAAQ,uBAAuB+F,EAAUF,EAASG,EAAO,IAAI,CAAIjS,GAAQA,EAAQ,EAAEyE,GAAoBwH,CAAG,CAAC,CAAC,GAAUgG,EAAOD,CAAS,CAAC,CAACxN,GAAiByH,CAAG,EAAK,OAAOpM,GAAK,SAAUkM,GAAUlM,EAAImS,GAAWD,EAAYC,CAAS,EAAEhS,CAAO,EAAO+R,EAAYlS,CAAG,CAAE,EAAE,UAAU,IAAY,OAAO,WAAW,OAAO,cAAc,OAAO,iBAAiB,OAAO,YAAa,QAAQ,IAAW,SAAS,OAAO,SAAS,SAAU,WAAW,GAAG,cAAc,YAAY,cAAc,CAACoI,EAAMlI,EAAOC,IAAU,CAACD,EAAOA,IAAS,IAAI,CAAC,GAAGC,EAAQA,IAAU,IAAI,CAAC,GAAG,IAAIkS,EAAUrO,EAAG,UAAU,EAAE,GAAG,CAAC,IAAIsO,EAAYD,EAAU,KAAKrO,EAAG,QAAQ,EAAEA,EAAG,UAAU,CAAC,OAAOe,EAAE,CAAC,OAAO5E,EAAQ4E,CAAC,CAAC,CAACuN,EAAY,gBAAgB,IAAI,CAACjS,EAAI,aAAa,EAAE,IAAIkS,EAAGD,EAAY,OAAOC,EAAG,kBAAkBvO,EAAG,aAAa,CAAC,EAAEsO,EAAY,UAAU,IAAI,CAAC,IAAIC,EAAGD,EAAY,OAAWE,EAAYD,EAAG,YAAY,CAACvO,EAAG,aAAa,EAAE,WAAW,EAAMyO,EAAMD,EAAY,YAAYxO,EAAG,aAAa,EAAM0O,EAAG,EAAEC,EAAK,EAAEC,EAAMxK,EAAM,OAAO,SAASgK,GAAQ,CAAIO,GAAM,EAAEzS,EAAO,EAAOC,EAAQ,CAAC,CAACiI,EAAM,QAAQzI,GAAM,CAAC,IAAIkT,EAAWJ,EAAM,IAAIzO,EAAG,YAAYrE,CAAI,EAAE,OAAO,SAASA,CAAI,EAAEkT,EAAW,UAAU,IAAI,CAACH,IAAQA,EAAGC,GAAMC,GAAMR,EAAO,CAAC,EAAES,EAAW,QAAQ,IAAI,CAACF,IAAUD,EAAGC,GAAMC,GAAMR,EAAO,CAAC,CAAC,CAAC,EAAEI,EAAY,QAAQrS,CAAO,EAAEmS,EAAY,QAAQnS,CAAO,EAAE,gBAAgB,CAACiI,EAAMlI,EAAOC,IAAU,CAACD,EAAOA,IAAS,IAAI,CAAC,GAAGC,EAAQA,IAAU,IAAI,CAAC,GAAG,IAAIkS,EAAUrO,EAAG,UAAU,EAAE,GAAG,CAAC,IAAIsO,EAAYD,EAAU,KAAKrO,EAAG,QAAQ,EAAEA,EAAG,UAAU,CAAC,OAAOe,EAAE,CAAC,OAAO5E,EAAQ4E,CAAC,CAAC,CAACuN,EAAY,gBAAgBnS,EAAQmS,EAAY,UAAU,IAAI,CAAC,IAAIC,EAAGD,EAAY,OAAO,GAAG,CAAC,IAAIE,EAAYD,EAAG,YAAY,CAACvO,EAAG,aAAa,EAAE,UAAU,CAAC,OAAOe,EAAE,CAAC5E,EAAQ4E,CAAC,EAAE,MAAM,CAAC,IAAI0N,EAAMD,EAAY,YAAYxO,EAAG,aAAa,EAAM0O,EAAG,EAAEC,EAAK,EAAEC,EAAMxK,EAAM,OAAO,SAASgK,GAAQ,CAAIO,GAAM,EAAEzS,EAAO,EAAOC,EAAQ,CAAC,CAACiI,EAAM,QAAQzI,GAAM,CAAC,IAAImT,EAAWL,EAAM,IAAI9S,CAAI,EAAEmT,EAAW,UAAU,IAAI,CAAI9O,EAAG,YAAYrE,CAAI,EAAE,QAAQqE,EAAG,OAAOrE,CAAI,EAAEqE,EAAG,eAAewD,EAAK,QAAQ7H,CAAI,EAAE6H,EAAK,SAAS7H,CAAI,EAAEmT,EAAW,OAAO,GAAK,GAAK,EAAI,EAAEJ,IAAQA,EAAGC,GAAMC,GAAMR,EAAO,CAAC,EAAEU,EAAW,QAAQ,IAAI,CAACH,IAAUD,EAAGC,GAAMC,GAAMR,EAAO,CAAC,CAAC,CAAC,EAAEI,EAAY,QAAQrS,CAAO,EAAEmS,EAAY,QAAQnS,CAAO,CAAC,EAAM4S,GAAS,CAAC,iBAAiB,EAAE,YAAY,SAASC,EAAMrT,EAAKsT,EAAW,CAAC,GAAGzL,EAAK,MAAM7H,CAAI,EAAG,OAAOA,EAAK,IAAIuI,EAAI,GAAG8K,IAAQ,KAAM9K,EAAIlE,EAAG,IAAI,MAAM,CAAC,IAAIkP,EAAUH,GAAS,gBAAgBC,CAAK,EAAE9K,EAAIgL,EAAU,IAAI,CAAC,GAAGvT,EAAK,QAAQ,EAAE,CAAC,GAAG,CAACsT,EAAY,MAAM,IAAIjP,EAAG,WAAW,EAAE,EAAE,OAAOkE,CAAG,CAAC,OAAOV,EAAK,MAAMU,EAAIvI,CAAI,CAAC,EAAE,OAAO,SAASmH,EAAKnH,EAAKyD,EAAI,CAAC,GAAG,CAAC,IAAIyM,EAAK/I,EAAKnH,CAAI,CAAC,OAAOoF,EAAE,CAAC,GAAGA,GAAGA,EAAE,MAAMyC,EAAK,UAAU7H,CAAI,IAAI6H,EAAK,UAAUxD,EAAG,QAAQe,EAAE,IAAI,CAAC,EAAG,MAAM,IAAI,MAAMA,CAAC,CAAC,OAAAhC,GAAOK,GAAK,CAAC,EAAEyM,EAAK,IAAI9M,GAAOK,EAAI,GAAG,CAAC,EAAEyM,EAAK,IAAI9M,GAAOK,EAAI,IAAI,CAAC,EAAEyM,EAAK,KAAK7M,GAAQI,EAAI,IAAI,CAAC,EAAEyM,EAAK,MAAM9M,GAAOK,EAAI,IAAI,CAAC,EAAEyM,EAAK,IAAI9M,GAAOK,EAAI,IAAI,CAAC,EAAEyM,EAAK,IAAI9M,GAAOK,EAAI,IAAI,CAAC,EAAEyM,EAAK,KAAKtJ,GAAQ,CAACsJ,EAAK,OAAO,GAAGvJ,EAAWuJ,EAAK,KAAK,CAAC,KAAK,IAAIvJ,CAAU,GAAG,EAAEA,EAAW,GAAG,KAAK,IAAI,CAAC,KAAK,MAAMA,EAAW,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAExD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAExD,GAAOK,EAAI,IAAI,CAAC,EAAE,KAAKL,GAAOK,EAAI,IAAI,CAAC,EAAEyM,EAAK,OAAOtJ,GAAQ,CAAC,KAAK,MAAMsJ,EAAK,MAAM,QAAQ,EAAE,GAAG,IAAI,GAAGvJ,EAAW,KAAK,MAAMuJ,EAAK,MAAM,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,IAAIvJ,CAAU,GAAG,EAAEA,EAAW,GAAG,KAAK,IAAI,CAAC,KAAK,MAAMA,EAAW,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAExD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAEvD,GAAQI,EAAI,IAAI,CAAC,EAAE,EAAEmD,GAAQ,CAAC,KAAK,MAAMsJ,EAAK,MAAM,QAAQ,EAAE,GAAG,IAAI,GAAGvJ,EAAW,KAAK,MAAMuJ,EAAK,MAAM,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,IAAIvJ,CAAU,GAAG,EAAEA,EAAW,GAAG,KAAK,IAAI,CAAC,KAAK,MAAMA,EAAW,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAExD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAEvD,GAAQI,EAAI,IAAI,CAAC,EAAE,EAAEmD,GAAQ,CAAC,KAAK,MAAMsJ,EAAK,MAAM,QAAQ,EAAE,GAAG,IAAI,GAAGvJ,EAAW,KAAK,MAAMuJ,EAAK,MAAM,QAAQ,EAAE,GAAG,EAAE,CAAC,KAAK,IAAIvJ,CAAU,GAAG,EAAEA,EAAW,GAAG,KAAK,IAAI,CAAC,KAAK,MAAMA,EAAW,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAExD,GAAOK,EAAI,IAAI,CAAC,EAAEmD,GAAQ,CAAC,EAAEvD,GAAQI,EAAI,IAAI,CAAC,EAAE,EAAEmD,GAAQ,CAACsJ,EAAK,MAAM,GAAGvJ,EAAWuJ,EAAK,IAAI,CAAC,KAAK,IAAIvJ,CAAU,GAAG,EAAEA,EAAW,GAAG,KAAK,IAAI,CAAC,KAAK,MAAMA,EAAW,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,GAAOK,EAAI,KAAK,CAAC,EAAEmD,GAAQ,CAAC,EAAExD,GAAOK,EAAI,KAAK,CAAC,EAAEmD,GAAQ,CAAC,EAAS,CAAC,EAAE,QAAQ,SAAS4M,EAAKrJ,EAAOrH,EAAIsJ,EAAM/B,EAAO,CAAC,GAAG,CAAChG,EAAG,OAAO8F,EAAO,KAAK,IAAI,EAAG,MAAM,IAAI9F,EAAG,WAAW,EAAE,EAAE,GAAG+H,EAAM,EAAG,MAAO,GAAE,IAAIpJ,EAAOb,GAAO,MAAMqR,EAAKA,EAAK1Q,CAAG,EAAEuB,EAAG,MAAM8F,EAAOnH,EAAOqH,EAAOvH,EAAIsJ,CAAK,CAAC,EAAE,QAAQ,OAAU,IAAI,UAAU,CAACgH,GAAS,SAAS,EAAE,IAAInD,EAAI7M,GAAOgQ,GAAS,QAAQ,GAAG,CAAC,EAAE,OAAOnD,CAAG,EAAE,OAAO,SAAS/N,EAAI,CAAC,IAAI+N,EAAIhO,GAAaC,CAAG,EAAE,OAAO+N,CAAG,EAAE,gBAAgB,SAASnC,EAAG,CAAC,IAAI3D,EAAO9F,EAAG,UAAUyJ,CAAE,EAAE,GAAG,CAAC3D,EAAO,MAAM,IAAI9F,EAAG,WAAW,CAAC,EAAE,OAAO8F,CAAM,CAAC,EAAE,SAASsJ,GAAmB3F,EAAGiC,EAAI2D,EAAQ,CAACN,GAAS,QAAQM,EAAQ,GAAG,CAAC,IAAIvJ,EAAOiJ,GAAS,gBAAgBtF,CAAE,EAAE,OAAOiC,EAAI,CAAC,IAAK,GAAE,CAAC,IAAIC,EAAIoD,GAAS,IAAI,EAAE,GAAGpD,EAAI,EAAG,MAAM,IAAI,IAAI2D,EAAU,OAAAA,EAAUtP,EAAG,aAAa8F,EAAO6F,CAAG,EAAS2D,EAAU,EAAE,CAAC,IAAK,GAAE,IAAK,GAAE,MAAO,GAAE,IAAK,GAAE,OAAOxJ,EAAO,MAAM,IAAK,GAAE,CAAC,IAAI6F,EAAIoD,GAAS,IAAI,EAAE,OAAAjJ,EAAO,OAAO6F,EAAW,CAAC,CAAC,IAAK,GAAE,CAAC,IAAIA,EAAIoD,GAAS,IAAI,EAAM/I,EAAO,EAAE,OAAAnH,GAAO8M,EAAI3F,GAAQ,CAAC,EAAE,EAAS,CAAC,CAAC,IAAK,GAAE,IAAK,GAAE,MAAO,GAAE,IAAK,IAAG,IAAK,GAAE,MAAM,IAAI,IAAK,GAAE,OAAA3C,GAAS,EAAE,EAAQ,GAAG,QAAS,MAAM,GAAI,CAAC,OAAOtC,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,MAAM,CAACA,EAAE,KAAK,CAAC,CAAC,SAASwO,GAAiB9F,EAAG+F,EAAGH,EAAQ,CAACN,GAAS,QAAQM,EAAQ,GAAG,CAAC,IAAIvJ,EAAOiJ,GAAS,gBAAgBtF,CAAE,EAAE,OAAO+F,EAAG,CAAC,IAAK,OAAM,IAAK,OAAO,OAAI1J,EAAO,IAAqB,EAAX,IAAa,IAAK,OAAM,IAAK,OAAM,IAAK,OAAM,IAAK,OAAM,IAAK,OAAM,IAAK,OAAO,OAAIA,EAAO,IAAqB,EAAX,IAAa,IAAK,OAAM,CAAC,GAAG,CAACA,EAAO,IAAI,MAAM,IAAI,IAAI2J,EAAKV,GAAS,IAAI,EAAE,OAAAhQ,GAAO0Q,GAAM,CAAC,EAAE,EAAS,CAAC,CAAC,IAAK,OAAO,OAAI3J,EAAO,IAAoB,IAAV,IAAc,IAAK,OAAM,CAAC,IAAI2J,EAAKV,GAAS,IAAI,EAAE,OAAO/O,EAAG,MAAM8F,EAAO0J,EAAGC,CAAI,CAAC,CAAC,IAAK,OAAO,OAAI3J,EAAO,IAAqB,EAAX,IAAa,IAAK,OAAO,OAAIA,EAAO,IAAqB,EAAX,IAAa,QAAQ,MAAM,GAAG,CAAC,OAAO/E,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,MAAM,CAACA,EAAE,KAAK,CAAC,CAAC,SAAS2O,GAAkBV,EAAMrT,EAAKoM,EAAMsH,EAAQ,CAACN,GAAS,QAAQM,EAAQ,GAAG,CAAC1T,EAAKoT,GAAS,OAAOpT,CAAI,EAAEA,EAAKoT,GAAS,YAAYC,EAAMrT,CAAI,EAAE,IAAI+K,EAAK2I,EAAQN,GAAS,IAAI,EAAE,EAAE,OAAO/O,EAAG,KAAKrE,EAAKoM,EAAMrB,CAAI,EAAE,EAAE,OAAO3F,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,MAAM,CAACA,EAAE,KAAK,CAAC,CAAC,SAAS4O,IAA4B,CAAC,KAAM,IAAQ,CAAC,SAASC,GAAuBC,EAAKC,EAAIC,EAAI,CAACjS,GAAO,WAAW+R,EAAKC,EAAIA,EAAIC,CAAG,CAAC,CAAC,SAASC,IAAY,CAAC,MAAO,WAAU,CAAC,SAASC,GAA0B5J,EAAK,CAAC,GAAG,CAAC,OAAA3J,EAAW,KAAK2J,EAAK1H,GAAO,WAAW,QAAQ,EAAE,EAAEQ,GAA2BzC,EAAW,MAAM,EAAS,CAAC,MAAS,CAAC,CAAC,CAAC,SAASwT,GAAwBC,EAAc,CAAC,IAAIC,EAAQtS,GAAO,OAAOqS,EAAcA,IAAgB,EAAE,IAAIE,EAAYL,GAAW,EAAE,GAAGG,EAAcE,EAAa,MAAO,GAAM,IAAIC,EAAQ,CAACC,EAAEC,IAAWD,GAAGC,EAASD,EAAEC,GAAUA,EAAS,QAAQC,EAAQ,EAAEA,GAAS,EAAEA,GAAS,EAAE,CAAC,IAAIC,EAAkBN,GAAS,EAAE,GAAGK,GAASC,EAAkB,KAAK,IAAIA,EAAkBP,EAAc,SAAS,EAAE,IAAInJ,EAAQ,KAAK,IAAIqJ,EAAYC,EAAQ,KAAK,IAAIH,EAAcO,CAAiB,EAAE,KAAK,CAAC,EAAMC,EAAYV,GAA0BjJ,CAAO,EAAE,GAAG2J,EAAa,MAAO,EAAK,CAAC,MAAO,EAAK,CAAC,SAASC,GAAWtE,EAAK,CAAC1P,EAAW0P,EAAS3M,GAAiB,IAAMhF,EAAO,QAAUA,EAAO,OAAU2R,CAAI,EAAE3P,EAAM,IAAKvB,EAAMkR,EAAK,IAAI9J,GAAW8J,CAAI,CAAC,CAAC,CAAC,SAASuE,GAAOxV,EAAOyV,EAAS,CAAClU,EAAWvB,EAAOuV,GAAWvV,CAAM,CAAC,CAAC,IAAI0V,GAAMF,GAAO,SAASG,GAAUvH,EAAG,CAAC,GAAG,CAAC,IAAI3D,EAAOiJ,GAAS,gBAAgBtF,CAAE,EAAE,OAAAzJ,EAAG,MAAM8F,CAAM,EAAS,CAAC,OAAO/E,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,OAAOA,EAAE,KAAK,CAAC,CAAC,SAASkQ,GAAQnL,EAAOoL,EAAIC,EAAOnL,EAAO,CAAW,QAAN4F,EAAI,EAAUxN,EAAE,EAAEA,EAAE+S,EAAO/S,IAAI,CAAC,IAAIP,EAAImB,GAAQkS,GAAK,CAAC,EAAMzS,EAAIO,GAAQkS,EAAI,GAAG,CAAC,EAAEA,GAAK,EAAE,IAAIE,EAAKpR,EAAG,KAAK8F,EAAOlH,EAAMf,EAAIY,EAAIuH,CAAM,EAAE,GAAGoL,EAAK,EAAE,MAAM,GAAa,GAAVxF,GAAKwF,EAAQA,EAAK3S,EAAI,KAAK,CAAC,OAAOmN,CAAG,CAAC,SAASyF,GAAS5H,EAAGyH,EAAIC,EAAOG,EAAK,CAAC,GAAG,CAAC,IAAIxL,EAAOiJ,GAAS,gBAAgBtF,CAAE,EAAMsG,EAAIkB,GAAQnL,EAAOoL,EAAIC,CAAM,EAAE,OAAAnS,GAAQsS,GAAM,CAAC,EAAEvB,EAAW,CAAC,OAAOhP,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,OAAOA,EAAE,KAAK,CAAC,CAAC,SAASwQ,GAA2BC,EAAGC,EAAG,CAAC,OAAOA,EAAG,UAAU,EAAE,QAAQ,CAAC,CAACD,GAAIA,IAAK,GAAGC,EAAG,WAAW,GAAG,CAAC,SAASC,GAASjI,EAAGkI,EAAWC,EAAY/J,EAAOgK,EAAU,CAAC,GAAG,CAAC,IAAI7L,EAAOuL,GAA2BI,EAAWC,CAAW,EAAE,GAAG,MAAM5L,CAAM,EAAE,MAAO,IAAG,IAAIF,EAAOiJ,GAAS,gBAAgBtF,CAAE,EAAE,OAAAzJ,EAAG,OAAO8F,EAAOE,EAAO6B,CAAM,EAAEtF,GAAQ,CAACuD,EAAO,WAAW,GAAGxD,EAAWwD,EAAO,SAAS,CAAC,KAAK,IAAIxD,CAAU,GAAG,EAAEA,EAAW,GAAG,KAAK,IAAI,CAAC,KAAK,MAAMA,EAAW,UAAU,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAW,EAAE,CAAC,CAACA,IAAa,IAAI,UAAU,IAAI,EAAE,EAAE,EAAEvD,GAAO8S,GAAW,CAAC,EAAEtP,GAAQ,CAAC,EAAExD,GAAO8S,EAAU,GAAG,CAAC,EAAEtP,GAAQ,CAAC,EAAKuD,EAAO,UAAUE,IAAS,GAAG6B,IAAS,IAAE/B,EAAO,SAAS,MAAY,CAAC,OAAO/E,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,OAAOA,EAAE,KAAK,CAAC,CAAC,SAAS+Q,GAAShM,EAAOoL,EAAIC,EAAOnL,EAAO,CAAW,QAAN4F,EAAI,EAAUxN,EAAE,EAAEA,EAAE+S,EAAO/S,IAAI,CAAC,IAAIP,EAAImB,GAAQkS,GAAK,CAAC,EAAMzS,EAAIO,GAAQkS,EAAI,GAAG,CAAC,EAAEA,GAAK,EAAE,IAAIE,EAAKpR,EAAG,MAAM8F,EAAOlH,EAAMf,EAAIY,EAAIuH,CAAM,EAAE,GAAGoL,EAAK,EAAE,MAAM,GAAGxF,GAAKwF,CAAI,CAAC,OAAOxF,CAAG,CAAC,SAASmG,GAAUtI,EAAGyH,EAAIC,EAAOG,EAAK,CAAC,GAAG,CAAC,IAAIxL,EAAOiJ,GAAS,gBAAgBtF,CAAE,EAAMsG,EAAI+B,GAAShM,EAAOoL,EAAIC,CAAM,EAAE,OAAAnS,GAAQsS,GAAM,CAAC,EAAEvB,EAAW,CAAC,OAAOhP,EAAE,CAAC,GAAG,OAAOf,EAAI,KAAa,EAAEe,aAAaf,EAAG,YAAY,MAAMe,EAAE,OAAOA,EAAE,KAAK,CAAC,CAAC,SAASiR,GAAQC,EAAQ,CAAC,OAAIA,GAAiB5O,GAAS,EAAE,EAAQ,IAArB,CAAuB,CAAC,SAAS6O,GAASC,EAAM,CAAC,IAAIrP,EAAKnI,EAAO,IAAIwX,CAAK,EAAE,OAAOrP,CAAI,CAAC,SAASsP,GAAMD,EAAME,EAAWC,EAASC,EAAKhK,EAAK,CAAC,IAAIiK,EAAI,CAAC,OAASjV,GAAK,CAAC,IAAIqO,EAAI,EAAE,GAAGrO,GAAM,MAAuBA,IAAM,EAAE,CAAC,IAAIkB,IAAKlB,EAAI,QAAQ,GAAG,EAAEqO,EAAI6G,GAAWhU,EAAG,EAAEH,GAAaf,EAAIqO,EAAInN,EAAG,CAAC,CAAC,OAAOmN,CAAG,EAAE,MAAQ7G,GAAK,CAAC,IAAI6G,EAAI6G,GAAW1N,EAAI,MAAM,EAAE,OAAArC,GAAmBqC,EAAI6G,CAAG,EAASA,CAAG,CAAC,EAAE,SAAS8G,EAAmB9G,EAAI,CAAC,OAAGyG,IAAa,SAAiBzU,GAAagO,CAAG,EAAKyG,IAAa,UAAiB,EAAQzG,EAAYA,CAAG,CAAC,IAAI9I,EAAKoP,GAASC,CAAK,EAAMQ,EAAM,CAAC,EAAMC,EAAM,EAAE,GAAGL,EAAM,QAAQnU,EAAE,EAAEA,EAAEmU,EAAK,OAAOnU,IAAI,CAAC,IAAIyU,EAAUL,EAAIF,EAASlU,CAAC,CAAC,EAAKyU,GAAcD,IAAQ,IAAEA,EAAME,GAAU,GAAEH,EAAMvU,CAAC,EAAEyU,EAAUN,EAAKnU,CAAC,CAAC,GAAOuU,EAAMvU,CAAC,EAAEmU,EAAKnU,CAAC,CAAE,CAAE,IAAIwN,EAAI9I,EAAK,MAAM,KAAK6P,CAAK,EAAE,SAASI,EAAOnH,EAAI,CAAC,OAAGgH,IAAQ,GAAEI,GAAaJ,CAAK,EAASF,EAAmB9G,CAAG,CAAC,CAAC,OAAAA,EAAImH,EAAOnH,CAAG,EAASA,CAAG,CAAC,SAASqH,GAAMd,EAAME,EAAWC,EAAS/J,EAAK,CAAC+J,EAASA,GAAU,CAAC,EAAE,IAAIY,EAAYZ,EAAS,MAAMlI,GAAMA,IAAO,UAAUA,IAAO,SAAS,EAAM+I,EAAWd,IAAa,SAAS,OAAGc,GAAYD,GAAa,CAAC3K,EAAa2J,GAASC,CAAK,EAAS,UAAU,CAAC,OAAOC,GAAMD,EAAME,EAAWC,EAAS,UAAU/J,CAAI,CAAC,CAAC,CAAC,IAAI6K,GAAO,SAAS5M,EAAOC,EAAKC,EAAKyC,EAAK,CAAK3C,IAAQA,EAAO,MAAK,KAAK,OAAOA,EAAO,KAAK,MAAMA,EAAO,MAAM,KAAK,QAAQ,KAAK,KAAK,GAAGxG,EAAG,YAAY,KAAK,KAAKyG,EAAK,KAAK,KAAKC,EAAK,KAAK,SAAS,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,KAAK,KAAKyC,CAAI,EAAMkK,GAAS,IAAWC,GAAU,IAAI,OAAO,iBAAiBF,GAAO,UAAU,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,KAAKC,MAAYA,EAAQ,EAAE,IAAI,SAASlN,EAAI,CAACA,EAAI,KAAK,MAAMkN,GAAS,KAAK,MAAM,CAACA,EAAQ,CAAC,EAAE,MAAM,CAAC,IAAI,UAAU,CAAC,OAAO,KAAK,KAAKC,MAAaA,EAAS,EAAE,IAAI,SAASnN,EAAI,CAACA,EAAI,KAAK,MAAMmN,GAAU,KAAK,MAAM,CAACA,EAAS,CAAC,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,OAAOtT,EAAG,MAAM,KAAK,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,OAAOA,EAAG,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEA,EAAG,OAAOoT,GAAOpT,EAAG,WAAW,EAAE,IAAI0B,GAAc,CAAC,EAAIkB,GAAe,EAAIM,GAAmB,EAAIkM,GAAmB,EAAIG,GAAiB,EAAIG,GAAkB,EAAIC,GAA2B,EAAIC,GAAuB,EAAIM,GAAwB,EAAIa,GAAM,EAAIC,GAAU,EAAIK,GAAS,EAAIK,GAAS,EAAIK,GAAU,EAAIwB,GAAS,EAAIC,GAAS,EAAIC,GAAW,EAAIC,GAAY,EAAIC,GAAe,EAAIC,GAAiB,EAAIC,GAAU,EAAIC,GAAW,EAAIC,GAAY,EAAI/B,EAAO,EAAMgC,GAAIxS,GAAW,EAAMyS,GAAmBtZ,EAAO,mBAAsB,UAAU,CAAC,OAAOsZ,GAAmBtZ,EAAO,mBAAsBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMuZ,GAAQvZ,EAAO,QAAW,UAAU,CAAC,OAAOuZ,GAAQvZ,EAAO,QAAWA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMwZ,GAAqBxZ,EAAO,qBAAwB,UAAU,CAAC,OAAOwZ,GAAqBxZ,EAAO,qBAAwBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAM4I,GAAkB5I,EAAO,kBAAqB,UAAU,CAAC,OAAO4I,GAAkB5I,EAAO,kBAAqBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMyZ,GAAUzZ,EAAO,UAAa,UAAU,CAAC,OAAOyZ,GAAUzZ,EAAO,UAAaA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMmY,GAAUnY,EAAO,UAAa,UAAU,CAAC,OAAOmY,GAAUnY,EAAO,UAAaA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAMqY,GAAarY,EAAO,aAAgB,UAAU,CAAC,OAAOqY,GAAarY,EAAO,aAAgBA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAM8X,GAAW9X,EAAO,WAAc,UAAU,CAAC,OAAO8X,GAAW9X,EAAO,WAAcA,EAAO,IAAO,GAAM,MAAM,KAAK,SAAS,CAAC,EAAE,SAAS6Y,GAASa,EAAM,CAAC,IAAIC,EAAGxB,GAAU,EAAE,GAAG,CAAC,OAAO9P,GAAkBqR,CAAK,EAAE,CAAC,OAAOtT,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAAST,GAAeU,EAAME,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAG,CAAC,IAAIN,EAAGxB,GAAU,EAAE,GAAG,CAAC,OAAO9P,GAAkBqR,CAAK,EAAEE,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,CAAE,CAAC,OAAO7T,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASL,GAAYM,EAAME,EAAGC,EAAGC,EAAG,CAAC,IAAIH,EAAGxB,GAAU,EAAE,GAAG,CAAC9P,GAAkBqR,CAAK,EAAEE,EAAGC,EAAGC,CAAE,CAAC,OAAO1T,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASR,GAAiBS,EAAME,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAG,CAAC,IAAIR,EAAGxB,GAAU,EAAE,GAAG,CAAC,OAAO9P,GAAkBqR,CAAK,EAAEE,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,CAAE,CAAC,OAAO/T,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASN,GAAWO,EAAME,EAAGC,EAAG,CAAC,IAAIF,EAAGxB,GAAU,EAAE,GAAG,CAAC9P,GAAkBqR,CAAK,EAAEE,EAAGC,CAAE,CAAC,OAAOzT,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASX,GAAWY,EAAME,EAAGC,EAAG,CAAC,IAAIF,EAAGxB,GAAU,EAAE,GAAG,CAAC,OAAO9P,GAAkBqR,CAAK,EAAEE,EAAGC,CAAE,CAAC,OAAOzT,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASP,GAAUQ,EAAME,EAAG,CAAC,IAAID,EAAGxB,GAAU,EAAE,GAAG,CAAC9P,GAAkBqR,CAAK,EAAEE,CAAE,CAAC,OAAOxT,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASb,GAASc,EAAM,CAAC,IAAIC,EAAGxB,GAAU,EAAE,GAAG,CAAC,OAAO9P,GAAkBqR,CAAK,EAAE,CAAC,OAAOtT,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAAC,SAASV,GAAYW,EAAME,EAAGC,EAAGC,EAAG,CAAC,IAAIH,EAAGxB,GAAU,EAAE,GAAG,CAAC,OAAO9P,GAAkBqR,CAAK,EAAEE,EAAGC,EAAGC,CAAE,CAAC,OAAO1T,EAAE,CAAkB,GAAjBiS,GAAasB,CAAE,EAAKvT,IAAIA,EAAE,EAAE,MAAMA,EAAEqT,GAAU,EAAE,CAAC,CAAC,CAAC,CAACzZ,EAAO,MAASyX,GAAMzX,EAAO,MAASsY,GAAM,IAAI8B,GAAUvU,GAAsB,SAASwU,GAAW,CAAKD,IAAUE,GAAI,EAAMF,KAAUvU,GAAsBwU,EAAS,EAAE,SAASC,GAAI1C,EAAK,CAA6D,GAA5DA,EAAKA,GAAMrX,EAAcoF,GAAgB,IAAUV,GAAO,EAAKU,GAAgB,GAAG,OAAO,SAAS4U,GAAO,CAAIH,KAAiBA,GAAU,GAAKpa,EAAO,UAAa,GAAQ,CAAAgC,IAAaoD,GAAY,EAAElF,EAAoBF,CAAM,EAAKA,EAAO,sBAAwBA,EAAO,qBAAwB,EAAEuF,GAAQ,GAAC,CAAIvF,EAAO,WAAcA,EAAO,UAAa,YAAY,EAAE,WAAW,UAAU,CAAC,WAAW,UAAU,CAACA,EAAO,UAAa,EAAE,CAAC,EAAE,CAAC,EAAEua,EAAM,CAAC,EAAE,CAAC,GAAOA,EAAM,CAAE,CAAC,GAAGva,EAAO,QAA0F,IAA3E,OAAOA,EAAO,SAAY,aAAWA,EAAO,QAAW,CAACA,EAAO,OAAU,GAAQA,EAAO,QAAW,OAAO,GAAGA,EAAO,QAAW,IAAI,EAAE,EAAG,OAAAsa,GAAI,EAG3hjEta,EAAO,KAChB,CAEA,GAAG,EACIwa,GAAQxa,GCVf,IAAIya,GAGSC,GAA2B,CACtC,MAAO,MACT,EAEA,eAAsBC,IAAiB,CACrC,GAAIF,KAAiB,OAAW,OAAOA,GAEvC,IAAMG,EAAqB,MAAkBC,GAAQ,CACnD,WAAa,GAAcH,GAAyB,OAAS,CAC/D,CAAC,EACD,OAAAD,GAAeG,EACRA,CACT,CAMO,SAASE,IAAuB,CACrCL,GAAe,MACjB,CAoCA,IAAMM,GAAiB,GAMjBC,GAAW,EACXC,GAAoB,GACpBC,GAAqB,GACrBC,GAAc,GAUb,SAASC,GACdC,EACAC,EACAC,EAAqB,CAAC,EACtB,CACA,GAAM,CAACC,EAAMC,CAAM,EAAIC,GAAoBL,CAAS,EACpD,OAAOM,GAAmBH,EAAMC,EAAQH,EAAQC,CAAI,CACtD,CAGA,eAAsBI,GACpBH,EACAC,EACAH,EACAC,EAAqB,CAAC,EACtB,CACA,IAAMK,EAAS,MAAMC,GAAe,EAE9BC,EAAUC,GAAgBC,GAAQ,IAAI,WAAWD,CAAC,CAAC,EACnDE,EAAOF,GAAcD,EAAO,CAACC,CAAC,CAAC,EAE/BG,EAAcV,EAAK,OAAS,EAC5BW,EAAmB,EACzBb,EAAS,KAAK,KAAKA,CAAM,EAGzB,IAAMc,EAAS,IAAI,WAAW,CAAC,EACzBC,EAAQ,IAAI,WAAWH,CAAW,EAClCI,EAAUC,GAAchB,CAAI,EAE5BiB,EAAaC,GAAUb,EAAQ,SAAU,sBAAuB,CACpEK,EAAIC,CAAW,EACfD,EAAIE,CAAgB,EACpBL,EAAON,CAAI,EACXM,EAAOL,CAAM,EACb,KACA,KAGA,KACAQ,EAAIX,CAAM,EACV,KACA,KAEAU,GAAQM,CAAO,EACfN,GAAQI,EAAQ,KAAK,EACrBJ,GAAQK,EAAO,KAAK,CACtB,CAAC,EACDK,GAAaF,CAAU,EAGvB,IAAMG,EAAqBC,GAAYtB,CAAM,EAAE,IAAKuB,GAAM,CAAC,CAAC,EAC5D,OAAAR,EAAM,QAAQ,CAACS,EAAcC,IAAY,CACvCJ,EAAOG,CAAY,EAAE,KAAKC,CAAO,CACnC,CAAC,EAEMJ,CACT,CAGA,SAASJ,GAAchB,EAAgC,CACrD,IAAMoB,EAAS,IAAI,WAAW5B,EAAc,EAC5C,OAAA4B,EAAO,KAAK,EAAE,EAEd,OAAO,QAAQpB,CAAI,EAAE,QAAQ,CAAC,CAACyB,EAAGC,CAAC,IAAM,CACnCA,IAAM,SAAWN,EAAO,SAASK,EAAG,EAAE,CAAC,EAAIC,EACjD,CAAC,EACMN,CACT,CAEA,SAASD,GAAaQ,EAAc,CAClC,OAAQA,EAAM,CACZ,KAAKlC,GACH,OACF,KAAKC,GACH,MAAM,IAAI,MACR,mFACF,EACF,KAAKC,GACH,MAAM,IAAI,MACR,wEACF,EACF,KAAKC,GACL,QACE,MAAM,IAAI,MAAM,sBAAsB+B,CAAI,qBAAqB,CACnE,CACF,CAWO,SAASxB,GAAoBL,EAAuB,CACzD,IAAMI,EAAmB,CAAC,EACpBD,EAAiB,CAAC,CAAC,EAEzB,QAAS2B,EAAI,EAAGA,EAAI9B,EAAU,OAAQ8B,IACpC1B,EAAO,KAAK,GAAGJ,EAAU8B,CAAC,CAAC,EAC3B3B,EAAK,KAAKC,EAAO,MAAM,EAGzB,MAAO,CAACD,EAAMC,CAAM,CACtB,CC1KA,IAAM2B,GAAuBC,EAAO,OAAO,WAAW,0BAClDC,GACAC,GAEEC,GAAQ,GAMRC,GAA6B,KAE/BC,GAAkB,EAgCTC,GAAcC,GACzBA,EAAE,eAAiB,OAErB,eAAsBC,GACpBC,EACAC,EACAC,EACuB,CACvB,IAAMC,EAAKZ,EAAO,OAAO,WACnBa,EAAkBD,EAAG,6BACrBE,EAA4BF,EAAG,gCAC/BG,EACJ,EAAMH,EAAG,6CACLI,EACJJ,EAAG,oCACCK,EAAWL,EAAG,QAEpBP,GAAkB,EAClB,IAAMa,EAAwBC,GAA0BT,CAAO,EAEzDU,EAA4B,CAAC,EAC/BC,EAAW,EAITC,EAAaC,GAAgBd,EAAW,UAAWC,CAAO,EAAE,OAG9Dc,EAFmB,MAAMC,EAAkBf,EAAS,EAAK,CAAC,EAAGY,CAAU,EAG3ED,GAAY,EACZ,IAAIK,EACF1B,EAAO,OAAO,WAAW,0BACvB2B,EAAwB,GAE5B,KAAON,EAAWJ,EAAW,GAGvB,EAAAO,EAAgB,QAAU,GAHAH,IAAY,CAS1C,IAAMO,EAAoBC,GAAyBL,CAAe,EAClE,GAAII,IAAsBD,EAAuB,CAC/C,QAAQ,KAAK,oEAAoEN,CAAQ,iBAAiBG,EAAgB,MAAM,YAAY,EAC5I,KACF,CAGA,IAAMM,EAAiBT,GAAY,EAAI,GAAK,0BAA0BU,GAAuBJ,EAAwBC,EAAmBD,CAAqB,CAAC,+BAExJK,EAD8B,EAAOJ,EAAoBD,GAE9BZ,EACjC,GAAIM,EAAW,GAAK,CAACW,EAAe,CAClC,QAAQ,KAAK,iDAAiDX,CAAQ,KAAKS,CAAc,gBAAgBN,EAAgB,MAAM,YAAY,EAC3I,KACF,CAGA,QAAQ,IAAI,sBAAsBH,CAAQ,mBAAmBO,CAAiB,eAAeJ,EAAgB,MAAM,eAAeM,CAAc,EAAE,EAClJH,EAAwBC,EAIxB,IAAMK,GAAa,EACbC,GAAS,KAAK,KAAKV,EAAgB,OAASS,EAAU,EACxDE,EAAc,CAACX,CAAe,EAClC,GAAIA,EAAgB,OAASS,GAAY,CACvC,IAAMG,EAAYrC,GAChByB,EAAgB,IAAKjB,IAAMA,GAAE,aAAa,CAC5C,EAGA4B,GAD0B,MAAME,GAAeD,EAAWF,GAAQ,CAAC,CAAC,GACpC,IAAKxB,IAC5BA,GAAQ,IAAK4B,IAAMd,EAAgBc,EAAC,CAAC,CAC7C,CACH,CACInC,IAEF,QAAQ,IACN,QAAQkB,CAAQ,mBAAmBG,EAAgB,MAAM,aACzD,yCAA0CW,CAC5C,EAIF,IAAMI,GAAqC,CAAC,EAC5C,QAAWC,KAAqBL,EAAa,CAE3C,IAAMM,GAA2BC,GAAc,GAAGF,CAAiB,EAG7DG,GAAmBC,GACvBH,GAAY,OACZ5B,CACF,EACMgC,GAAiB,MAAMC,GAAarC,EAAYgC,GAAa,CACjE,iBAAAE,GACA,YAAajB,EACb,YAAa,EACf,CAAC,EAKKqB,EAAkBC,GAAiBP,EAAW,EAC9CQ,GAAiBD,GAAiBH,GAAe,WAAW,EAC5DK,GAAuBD,GAAiBF,EAC9C,GAAIG,GAAuBpC,EAA2B,CAGpD,QAAQ,KAAK,4DAA4DO,CAAQ,mBAAmB0B,CAAe,OAAOhB,GAAuBkB,GAAgBF,CAAe,CAAC,YAAY,EAC7L,QACF,CAGA,IAAMI,GAAW,KAAK,IACpBN,GAAe,MAAQA,GAAe,WACtCzC,EACF,EACMgD,GAAgB,KAAK,IACzB,GAAGZ,EAAkB,IAAKjC,IAAMA,GAAE,gBAAgB,CACpD,EACM8C,GAAaF,GAAWC,GACxBE,GAAS/B,GAAgBd,EAAW,UAAWgC,EAAW,EAAE,OAG9Dc,GACApB,EAAY,SAAW,EAIzBoB,GAAc,CADM,MAAMC,EAAiBX,GAAe,YAAaQ,GAAYb,EAAmBc,EAAM,CAClF,EAG1BC,GAAc,MAAM9B,EAAkBoB,GAAe,YAAaQ,GAAYb,EAAmBc,EAAM,EAGrGnD,IAEF,QAAQ,IACN,yBAA0B6C,GAAiBP,EAAW,CAAC,gBAAgBO,GAAiBL,EAAgB,CAAC,eAAeK,GAAiBH,GAAe,WAAW,CAAC,WAAW,IAAQK,IAAsB,QAAQ,CAAC,CAAC,MACvN,YAAaK,EACf,EAKFf,EAAkB,QAASiB,IAAiB,CAC1CA,GAAa,YAAcJ,GAC3BI,GAAa,aAAeH,EAE9B,CAAC,EACDf,GAAqB,KAAK,GAAGgB,EAAW,CAC1C,CAGA,GAAIlC,GAAY,GAAKkB,GAAqB,QAAU,EAClD,MAAM,IAAImB,GAAoBrC,EAAW,EAAGZ,EAAW,WAAW,EAGpEe,EAAkBe,GAClBb,GAA6BV,CAC/B,CAMA,OAAA2C,GAAqB,EAEdvC,EAKP,eAAeK,EACbf,EACAkD,EACAC,EACAC,EACA,CACA,IAAMC,GAAc,MAAMC,GAAevD,EAAYC,EAAS,CAC5D,YAAaV,EAAO,OAAO,WAAW,mBACtC,aAAcA,EAAO,OAAO,WAAW,oBACvC,WAAYA,EAAO,OAAO,WAAW,gCACvC,CAAC,EAGKiE,GAAkBC,GAAwBH,EAAW,EAa3D,OAX+B,MAAM,QAAQ,IAC3CE,GAAgB,IAAKvD,IACZ8C,EACL9C,GACAkD,EACAC,EACAC,CACF,CACD,CACH,CAGF,CAEA,eAAeN,EACb9C,EACAkD,EACAC,EACAC,EACqB,CACrB,IAAMK,GAAQC,GAAa1D,CAAO,EAC5B2D,GAAgBC,GAAkBH,EAAK,EACvC5D,EAAgB,CACpB,GAAIF,GACJ,QAAAK,EACA,cAAA2D,GACA,iBAAkBT,EAClB,YAAa,IACb,qBAAAE,EACA,aAAc,OACd,SAAAzC,EACA,YAAAwC,CACF,EACA,OAAAxD,IAAmB,EACnBe,EAAY,KAAKb,CAAC,EAClB,MAAMgE,EAAe,EACdhE,CACT,CAEA,eAAegE,GAAiB,CAC9B,IAAMC,EAAWC,GAAMrD,EAAY,OAASF,EAAuB,EAAG,CAAC,EAEvE,MAAMP,IAAa6D,CAAQ,CAC7B,CACF,CAEA,SAAS9B,MAAiBgC,EAAyC,CACjE,IAAMC,EAAMD,EAAa,OAAO,CAACE,EAAKrE,IAAMqE,EAAMrE,EAAE,QAAQ,OAAQ,CAAC,EAC/DsE,EAAS,IAAI,YAAYF,CAAG,EAG9BG,EAAU,EACd,OAAAJ,EAAa,QAASnE,GAAM,CAC1BA,EAAE,QAAQ,QAASwE,GAAQ,CACzBF,EAAOC,CAAO,EAAIC,EAClBD,GAAW,CACb,CAAC,CACH,CAAC,EAEMD,CACT,CAMA,SAAS1D,GAA0BT,EAAsB,CAIvD,IAAMsE,EAAStE,EAAQ,OAASuE,GAC5BC,EACF,KAAK,KAAKF,EAAShF,EAAO,OAAO,WAAW,mBAAmB,EAC/D,IACEmF,EAAgBD,EAEpB,KAAOA,EAAoB,GAAG,CAC5B,IAAME,EAAoB,KAAK,MAC7BF,EAAoB,GACtB,EACAC,GAAiBC,EACjBF,EAAoBE,CACtB,CAEA,OAAOD,CACT,CAEO,IAAMzB,GAAN,cAAkC,KAAM,CAC7C,YAAYrC,EAAkBgE,EAAqB,CASjD,MACE,0EAA0EhE,CAAQ,2DAA2DgE,CAAW,6FAC1J,CACF,CACF,EAEA,SAASxD,GAAyByD,EAAkB,CAClD,IAAMC,EAASD,EAAG,OAAO,CAACV,EAAKrE,IAAMqE,EAAMrE,EAAE,QAAQ,OAAQ,CAAC,EAC9D,OAAOyC,GAAiBuC,CAAM,CAChC,CCtWA,IAAMC,GAAYC,GAAgB,CAChC,MAAM,IAAI,MAAM,4CAA4CA,CAAG,EAAE,CACnE,EAEO,SAASC,GAAwBC,EAA4B,CAClE,IAAMC,EAAkB,CAAC,GAAGD,EAAa,KAAK,EACxCE,EAAkB,IAAI,IAAiC,CAAC,CAAC,EAE/D,KAAOD,EAAgB,OAAS,GAAG,CACjC,IAAME,EAAUF,EAAgB,IAAI,EAChCC,EAAgB,IAAIC,EAAQ,EAAE,IAGlCD,EAAgB,IAAIC,EAAQ,EAAE,EAE9BC,GAAqBD,EAAQ,WAAW,EACxCE,GAAiCF,CAAO,EACxCG,GAAyBN,EAAcG,CAAO,EAE9CA,EAAQ,YAAY,QAASI,GAAM,CACjCN,EAAgB,KAAKM,CAAC,CACxB,CAAC,EACH,CAEIL,EAAgB,OAASF,EAAa,cACxCH,GAAS,2DAA2DK,EAAgB,IAAI,0BAA0BF,EAAa,YAAY,EAAE,CAEjJ,CAEA,SAASK,GAAiCF,EAAgC,CACxE,IAAMK,EAAUL,EAAQ,iBACxBA,EAAQ,YAAY,QAASI,GAAM,CACjC,IAAME,EAAaF,EAAE,iBACjBC,GAAWC,GACbZ,GAAS,0DAA0DW,CAAO,sBAAsBC,CAAU,MAAMA,EAAWD,CAAO,GAAG,CAEzI,CAAC,CACH,CAEA,SAASJ,GAAqBM,EAAmC,CAC/D,GAAIA,EAAS,QAAU,EACrB,OAEF,IAAMC,EAAaD,EAAS,CAAC,EAE7B,QAASE,EAAI,EAAGA,EAAIF,EAAS,OAAQE,IAAK,CACxC,IAAML,EAAIG,EAASE,CAAC,EACfC,GAAqBN,EAAE,aAAcI,EAAW,YAAY,GAC/Dd,GAAS,0CAA0C,EAIjD,CAACiB,EAAO,QAAUP,EAAE,cAAgBI,EAAW,aACjDd,GAAS,yCAAyC,CAEtD,CACF,CAYA,SAASS,GACPS,EACAZ,EACA,CACeY,EAAI,MAAM,SAASZ,CAAO,GAInC,SAASA,EAAQ,WAAW,GAC9BN,GAAS,oDAAoDM,EAAQ,WAAW,EAAE,EAEhFA,EAAQ,eAAiB,QAC3BN,GAAS,+CAA+C,KAAK,UAAUM,EAAQ,YAAY,CAAC,EAAE,IAK5F,CAACW,EAAO,QAAU,CAAC,SAASX,EAAQ,WAAW,GACjDN,GAAS,yDAAyD,EAEhEM,EAAQ,eAAiB,QAC3BN,GAAS,4CAA4C,EAG3D,CCpFO,SAASmB,GACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACc,CACd,IAAMC,EAAgB,IAAIC,GACxBR,EACAC,EACAC,EACAC,EACAC,EACAC,EAAU,KACZ,EAEMI,EAAe,IAAIC,GACvBT,EACAE,EAAU,OACVD,EACAK,EACAD,EACAD,CACF,EAGIM,EAAyB,EACzBC,EAAS,EACPC,EAAaC,GAAYL,EAAa,YAAY,EAIlDM,EADQX,EAAe,OAAOY,EAAU,EAGpC,IAAKC,GAAM,CAAC,OAAWA,CAAC,CAAC,EAEnC,KAAOF,EAAgB,OAAS,GAAG,CACjC,GAAM,CAACG,EAAYC,CAAO,EAAIJ,EAAgB,MAAM,EAEpD,GAAIN,EAAa,SAASU,EAAQ,EAAE,EAClC,SAIF,IAAMC,EAAYC,GAAgBlB,EAAU,UAAWgB,EAAQ,OAAO,EAChEG,EAAOb,EAAa,WACxBS,EACAC,EACAR,EAAyBY,EACzBH,CACF,EAGApB,EAAO,MAAM,YACXO,EAAc,YACdI,EACAQ,EAAQ,QACR,CACF,EACAR,GAA0Ba,GAAqBF,EAAK,aAAa,EAGjET,EAAWM,EAAQ,EAAE,EAAIP,EACzBA,GAAU,EAGVO,EAAQ,YAAY,QAASF,GAAM,CAC7BA,GACFF,EAAgB,KAAK,CAACO,EAAML,CAAC,CAAC,CAElC,CAAC,CACH,CAGA,GAAIb,EAAe,SAAWK,EAAa,YAAY,OAErD,MAAM,IAAI,MAAM,WAAWL,EAAe,MAAM,uBAAuBK,EAAa,YAAY,MAAM,6EAA6E,EAMrL,OAAAA,EAAa,YAAY,QAASQ,GAAM,CACtCA,EAAE,GAAKJ,EAAWI,EAAE,EAAE,CACxB,CAAC,EAGDR,EAAa,qBAAqBT,CAAM,EAGxCyB,GAAwBhB,CAAY,EAG/BiB,EAAO,QACVjB,EAAa,WAAW,EAGnBA,CACT,CChHA,IAAAkB,GAA2B,SCU3B,eAAsBC,GACpBC,EACAC,EACAC,EACAC,EACsC,CACtC,IAAMC,EAAS,MAAMC,GAAuB,EACtCC,EAAaH,EAAQ,OAErB,CAACI,EAAYC,CAAK,EAAIC,GAC1BL,EACAJ,EACAC,EACAC,EACAC,EACAG,CACF,EAIMI,EAAaC,GAAiBP,EAAQD,EAASG,EAAYE,CAAK,EAWtE,MAAO,CAVaI,GAClBR,EACAJ,EACAC,EACAC,EACAK,EACAC,CACF,EAGqBE,CAAU,CACjC,CAGA,SAASD,GACPL,EACAJ,EACAC,EACAC,EACAC,EACAG,EACuB,CACvB,IAAMO,EAAS,IAAI,YAAYP,CAAU,EAczC,MAAO,CAbgBQ,GACrBV,EACA,SACA,8BACA,CACEW,GAAQF,EAAQ,KAAK,EACrBE,GAAQZ,CAAO,EACfG,EACAS,GAAQf,CAAQ,EAChBC,EACAC,CACF,CACF,EACwBW,CAAM,CAChC,CAGA,SAASF,GACPP,EACAD,EACAG,EACAE,EACA,CACA,IAAMK,EAAS,IAAI,YAAYP,CAAU,EACzC,OAAAQ,GAAYV,EAAQ,SAAU,2BAA4B,CACxDW,GAAQF,EAAQ,KAAK,EACrBE,GAAQZ,CAAO,EACfG,EACAS,GAAQP,CAAK,CACf,CAAC,EACMK,CACT,CAGA,SAASD,GACPR,EACAJ,EACAgB,EACAd,EACAK,EACAC,EACA,CACA,IAAMK,EAAS,IAAI,aAAcN,EAAaL,EAAUe,EAAS,EACjE,OAAAH,GAAYV,EAAQ,SAAU,4BAA6B,CACzDW,GAAQF,EAAQ,KAAK,EACrBE,GAAQf,CAAQ,EAChBgB,EACAd,EACAa,GAAQP,CAAK,CACf,CAAC,EACMK,CACT,CD9FA,IAAMK,GAAiB,YAAS,MAAkB,QAC5CC,GAAmB,YAAS,QAAoB,UAQhDC,GAAeC,GAAkB,KAAK,KAAKA,EAAK,SAAS,OAAS,CAAC,EAezE,eAAsBC,GACpBC,EACAC,EACqB,CACrB,IAAMH,EAAO,IAAIH,GAAKK,CAAO,EAC7BE,GAAkBJ,EAAMG,CAAK,EAG7B,IAAME,EAAqBC,GAAeN,EAAK,QAAQ,EACjDO,EAAiBC,GAAiB,YAAaR,EAAK,OAAO,EAG3DS,EAAS,IAAIX,GAAOA,GAAO,SAAUA,GAAO,OAAQA,GAAO,EAAE,EAE7DY,EAA2BV,EAAa,eAAeS,CAAM,EAC7DE,EAAwB,IAAI,aAAaD,CAAuB,EAGhEE,EAAcH,EAAO,OACrBI,EAAYD,EAAcE,GAC1B,CAACC,EAAaC,CAAU,EAAI,MAAMC,GACtCN,EACAN,EACAO,EACAL,CACF,EAGMW,EAAaC,GACjBJ,EACAF,CACF,EAEA,MAAO,CACL,YAAaK,EAAW,YACxB,UAAWA,EAAW,UACtB,gBAAiBE,GACjB,QAASF,EAAW,QACpB,GAAIA,EAAW,GACf,QAASF,EACT,aAAcA,EAAW,OACzB,sBAAuBD,EACvB,4BAA6BH,EAC7B,OAAQS,GAAgBH,EAAW,SAAS,CAC9C,CACF,CAEA,IAAMI,GAActB,GAAkB,CACpC,GAAI,CAACA,EAAK,eAAiB,CAAC,MAAM,QAAQA,EAAK,aAAa,EAAG,MAAO,GACtE,IAAMuB,EAAUvB,EAAK,cAAc,CAAC,EACpC,OAAO,OAAOuB,GAAY,UAAY,CAAC,MAAMA,CAAO,CACtD,EAIMC,GAAUxB,GAAsD,CACpE,GAAI,CAACA,EAAK,UAAY,CAAC,MAAM,QAAQA,EAAK,QAAQ,EAAG,MAAO,GAC5D,IAAMuB,EAAUvB,EAAK,SAAS,CAAC,EAC/B,OAAO,OAAOuB,GAAY,UAAY,CAAC,MAAMA,CAAO,CACtD,EAEA,SAASnB,GAAkBJ,EAAeG,EAAe,CAOvD,GANAH,EAAK,SAAWA,EAAK,SAAS,IAAKyB,GAAcA,EAAItB,CAAK,EAErDmB,GAAWtB,CAAI,GAClB0B,GAAc1B,CAAI,EAGfwB,GAAOxB,CAAI,EAId,QAAS2B,EAAI,EAAGA,EAAI3B,EAAK,SAAS,OAAQ2B,GAAK,EAAG,CAChD,IAAIC,EAAI5B,EAAK,SAAS2B,CAAC,EACvBC,EAAIA,EAAI,EACRA,EAAIA,EAAI,EAAI,EAAM,KAAK,IAAIA,CAAC,EAAIA,EAEhCA,GAAKD,EAAI,IAAM,EAAI,EAAIC,EAAIA,EAC3B5B,EAAK,SAAS2B,CAAC,EAAIC,CACrB,KAXiB,CACjB,IAAMC,EAAU9B,GAAYC,CAAI,EAChCA,EAAK,SAAW8B,GAAYD,EAAU,CAAC,EAAE,KAAK,EAAG,CACnD,CAUF,CAGA,SAASH,GAAc1B,EAAe,CACpC,IAAM6B,EAAU9B,GAAYC,CAAI,EAChCA,EAAK,cAAgB8B,GAAYD,EAAU,CAAC,EAAE,KAAK,CAAG,EAEtD,IAAME,EAAKC,GAAgBhC,EAAK,SAAS,EAAIgC,CAAG,EAC1CC,EAAKD,GAAgBhC,EAAK,SAAS,EAAIgC,EAAM,CAAC,EAC9CE,EAAKF,GAAgBhC,EAAK,SAAS,EAAIgC,EAAM,CAAC,EAGpD,QAASL,EAAI,EAAGA,EAAI3B,EAAK,QAAQ,OAAQ2B,GAAK,EAAG,CAC/C,IAAMQ,EAAInC,EAAK,QAAQ2B,CAAC,EAClBS,EAAIpC,EAAK,QAAQ2B,EAAI,CAAC,EACtBU,EAAIrC,EAAK,QAAQ2B,EAAI,CAAC,EAEtBW,GAAML,EAAEG,CAAC,EAAIH,EAAEE,CAAC,IAAMD,EAAEG,CAAC,EAAIH,EAAEC,CAAC,IAAMD,EAAEE,CAAC,EAAIF,EAAEC,CAAC,IAAMF,EAAEI,CAAC,EAAIJ,EAAEE,CAAC,GAChEI,GAAML,EAAEE,CAAC,EAAIF,EAAEC,CAAC,IAAMJ,EAAEM,CAAC,EAAIN,EAAEI,CAAC,IAAMJ,EAAEK,CAAC,EAAIL,EAAEI,CAAC,IAAMD,EAAEG,CAAC,EAAIH,EAAEC,CAAC,GAChEK,GAAMT,EAAEK,CAAC,EAAIL,EAAEI,CAAC,IAAMF,EAAEI,CAAC,EAAIJ,EAAEE,CAAC,IAAMF,EAAEG,CAAC,EAAIH,EAAEE,CAAC,IAAMJ,EAAEM,CAAC,EAAIN,EAAEI,CAAC,GAEtE,QAASM,EAAI,EAAGA,EAAI,EAAG,EAAEA,EAAG,CAC1B,IAAMC,EAAQ1C,EAAK,QAAQ2B,EAAIc,CAAC,EAChCzC,EAAK,cAAc0C,EAAQ,EAAI,CAAC,GAAKJ,EACrCtC,EAAK,cAAc0C,EAAQ,EAAI,CAAC,GAAKH,EACrCvC,EAAK,cAAc0C,EAAQ,EAAI,CAAC,GAAKF,CACvC,CACF,CAGA,IAAIG,EAAMC,EAAK,OAAO,EACtB,QAASjB,EAAI,EAAGA,EAAIE,EAASF,IAAK,CAChC,IAAMkB,EAAID,EAAK,IACb5C,EAAK,cAAc2B,EAAI,EAAI,CAAC,EAC5B3B,EAAK,cAAc2B,EAAI,EAAI,CAAC,EAC5B3B,EAAK,cAAc2B,EAAI,EAAI,CAAC,EAC5BgB,CACF,EACAA,EAAMC,EAAK,UAAUC,EAAGF,CAAG,EAC3B3C,EAAK,cAAc2B,EAAI,EAAI,CAAC,EAAIgB,EAAI,CAAC,EACrC3C,EAAK,cAAc2B,EAAI,EAAI,CAAC,EAAIgB,EAAI,CAAC,EACrC3C,EAAK,cAAc2B,EAAI,EAAI,CAAC,EAAIgB,EAAI,CAAC,CACvC,CACF,CAGO,SAASxB,GACdJ,EACAF,EAAoB,EACpB,CACA,IAAMiC,EAAiB/B,EAAY,OAASF,EACtCkC,EAAe,IAAI,aAAaD,EAAiB,CAAC,EAClDE,EAAa,IAAI,aAAaF,EAAiB,CAAC,EAChDG,EAAQ,IAAI,aAAaH,EAAiB,CAAC,EACjD,QAASI,EAAU,EAAGA,EAAUJ,EAAgBI,IAAW,CACzD,IAAMC,EAASD,EAAUrC,EACzBkC,EAAa,EAAIG,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EACtDJ,EAAa,EAAIG,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EACtDJ,EAAa,EAAIG,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EACtDH,EAAW,EAAIE,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EACpDH,EAAW,EAAIE,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EACpDH,EAAW,EAAIE,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EACpDF,EAAM,EAAIC,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,EAC/CF,EAAM,EAAIC,EAAU,CAAC,EAAInC,EAAYoC,EAAS,CAAC,CACjD,CAEA,MAAO,CACL,YAAaL,EACb,UAAWC,EACX,QAASC,EACT,GAAIC,CACN,CACF,CEpLO,SAASG,GACdC,EACAC,EACAC,EACiB,CACjB,IAAMC,EAAeC,GACnBJ,EACA,GAAGC,CAAS,qBACZC,EAAK,SACP,EACMG,EAAgBD,GACpBJ,EACA,GAAGC,CAAS,oBACZC,EAAK,OACP,EACMI,EAAWF,GACfJ,EACA,GAAGC,CAAS,gBACZC,EAAK,GACL,eAAe,OACjB,EAMA,MAAO,CACL,YANkBK,GAClBP,EACA,GAAGC,CAAS,oBACZC,EAAK,OACP,EAGE,SAAAI,EACA,cAAAD,EACA,aAAAF,EACA,YAAaK,GAAeN,EAAK,SAAS,EAC1C,cAAeO,GAAiBP,EAAK,OAAO,CAC9C,CACF,CCNO,SAASQ,GACdC,EACyB,CACzB,IAAMC,EAAWC,GAAoC,CACnD,IAAMC,EAAIH,EAAM,KAAMG,GAAMA,EAAE,KAAOD,CAAE,EACvC,GAAIC,GAAK,KACP,MAAM,IAAIC,GAAY,6BAA6BF,CAAE,kBAAkB,EAEzE,OAAOC,CACT,EACA,OAAAH,EAAM,QAASK,GAAS,CACtBA,EAAK,YAAcA,EAAK,YAAY,IAAIJ,CAAO,EAC3CI,EAAK,cAAgB,OACvBA,EAAK,YAAc,IAEvB,CAAC,EACML,CACT,CAEO,IAAMI,GAAN,cAA0B,KAAM,CACrC,YAAYE,EAAa,CACvB,MAAM,2BAA2BA,CAAG,EAAE,CACxC,CACF,ECqCA,eAAsBC,GACpBC,EACAC,EACA,CACA,GAAM,CAAE,OAAAC,EAAQ,UAAAC,EAAW,KAAAC,EAAM,UAAAC,EAAW,WAAAC,EAAY,SAAAC,CAAS,EAAIP,EAEjEQ,EAAaC,GAAqB,EAChCC,EAAkC,KAAK,MAAMT,CAAQ,EAC3DM,EAAS,eAAgBC,CAAU,EAGnC,IAAMG,EAAiBC,GACrB,GAAGC,EAAU,IAAIR,EAAU,IAAI,GAC/B,MACF,EACMS,EAAoB,MAAMC,GAAqBL,EAASC,CAAc,EAGtEK,EAAaC,GACjBH,EAAkB,qBACpB,EAGMI,EAAyB,CAC7B,GAAGR,EAAQ,WACX,UAAWS,GAAiB,aAAcH,EAAW,SAAS,EAC9D,QAASG,GAAiB,aAAcH,EAAW,OAAO,EAC1D,GAAIG,GAAiB,aAAcH,EAAW,EAAE,EAChD,sBAAuBG,GACrB,aACAL,EAAkB,qBACpB,EACA,QAASK,GAAiB,YAAaL,EAAkB,OAAO,CAClE,EACMM,EAAeC,GAAmBnB,EAAQE,EAAMc,CAAU,EAG1DI,EAAU,IAAIC,GAClBrB,EACAE,EACAgB,EACAF,EACAR,EAAQ,YAAY,IAAKc,IAAO,CAC9B,QAASA,EAAE,cAAgB,EAC3B,SAAUA,EAAE,QACd,EAAE,EACFrB,EAAU,KACZ,EAGMsB,EAAY,MAAMC,GACtB1B,EACAI,EACAgB,EACAF,CACF,EAGA,MAAMZ,IAAaF,EAAM,cAAcA,CAAI,mBAAmB,EAC9DI,EAAaC,GAAqB,EAClC,IAAMkB,EAAe,IAAIC,GACvBxB,EACAM,EAAQ,OACRU,EACAE,EACAG,EACAtB,CACF,EACAD,EAAO,MAAM,YACXyB,EAAa,QAAQ,YACrB,EACAb,EAAkB,eAClB,CACF,EAGA,IAAMe,EAAcC,GAAiBpB,EAAQ,WAAW,EACxD,OAAAiB,EAAa,YAAY,KAAK,GAAGE,CAAW,EAC5CnB,EAAQ,MAAM,QAASqB,GAAO,CAC5B,IAAMC,EAAIH,EAAY,KAAMG,GAAMA,EAAE,KAAOD,CAAE,EAC7C,GAAIC,GAAK,KACP,MAAM,IAAIC,GAAY,sBAAsBF,CAAE,kBAAkB,EAElEJ,EAAa,MAAM,KAAKK,CAAC,CAC3B,CAAC,EACDL,EAAa,cACXE,EAAY,OAAO,CAACK,EAAKV,IAAM,KAAK,IAAIU,EAAKV,EAAE,QAAQ,EAAG,CAAC,EAAI,EAGjEG,EAAa,qBAAqBzB,CAAM,EACxCK,EAAS,yBAA0BC,CAAU,EAE7C2B,GAAwBR,CAAY,EAG/BS,EAAO,QACVT,EAAa,WAAW,EAGnB,CACL,aAAAP,EACA,WAAAF,EACA,aAAAS,CACF,CACF,CAEA,eAAeZ,GACbL,EACA2B,EACA,CACA,IAAMC,EAAO5B,EAAQ,WACf6B,EAAgBD,EAAK,YAAcA,EAAK,4BACxCE,EAAeF,EAAK,aAAeG,EAKnCC,EAJmBhC,EAAQ,YAAY,OAC3C,CAACwB,EAAKV,IAAMU,EAAMV,EAAE,cACpB,CACF,EAC+CmB,GAAoBF,EAE7DG,EAAc,MAAMR,EAAO,QAAQ,iBAAiBC,CAAI,EAC1DQ,EAAS,EAGPC,EAAwB,IAAI,aAChCF,EAAY,MAAMC,EAAQA,EAASN,CAAa,CAClD,EACAM,GAAUN,EACVQ,GAAe,gBAAiBD,EAAuBP,CAAa,EAIpE,IAAMS,EAAU,IAAI,YAClBJ,EAAY,MAAMC,EAAQA,EAASL,CAAY,CACjD,EACAK,GAAUL,EACVO,GAAe,eAAgBC,EAASR,CAAY,EAIpD,IAAMS,EAAiB,IAAI,YAAYL,EAAY,MAAMC,CAAM,CAAC,EAChE,OAAAE,GAAe,yBAA0BE,EAAgBP,CAAmB,EAOrE,CAAE,sBAAAI,EAAuB,QAAAE,EAAS,eAAAC,CAAe,CAC1D,CAEA,SAASF,GACPG,EACAC,EACAC,EACA,CACA,GAAID,EAAK,aAAeC,EACtB,MAAM,IAAInB,GAAY,kBAAkBiB,CAAI,cAAcE,CAAa,eAAeD,EAAK,UAAU,EAAE,CAE3G,CC1NA,eAAsBE,GACpBC,EACAC,EACAC,EACAC,EACAC,EACiB,CACjB,QAAQ,eAAe,WAAWH,CAAI,GAAG,EACzC,MAAMG,IAAaH,EAAM,oBAAoBA,CAAI,GAAG,EACpD,IAAMI,EAAQC,GAAqB,EAC7BC,EAAmB,CAAC,EACpBC,EAAW,CAACP,EAAcI,IAC9BE,EAAO,KAAK,GAAGN,CAAI,KAAKQ,GAAwBJ,CAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,EAGjEK,EAAYC,GAAkBV,CAAI,EAClCW,EAAW,MAAMC,EAAO,QAAQ,eACpC,GAAGC,EAAU,IAAIJ,EAAU,IAAI,EACjC,EACAF,EAAS,qBAAsBH,CAAK,EAIpC,IAAMU,EAAM,MAAMC,GAChBhB,EACAQ,EAECE,EAAkB,OACrB,EAEMO,EAA6B,CACjC,KAAAhB,EACA,UAAAS,EACA,OAAAV,EACA,UAAAE,EACA,iBAAAC,EACA,WAAAC,EACA,SAAAI,EACA,MAAAH,EACA,mBAAoBU,EAAI,kBAC1B,EAGMG,EAAiB,MADRR,EAAU,KAAK,SAAS,OAAO,EAE1CS,GAAeF,EAAQL,CAAQ,EAC/BQ,GAAcH,EAAQL,CAAQ,GAGlC,OAAAM,EAAO,aAAa,eAAiBH,EAAI,eACzCG,EAAO,aAAa,mBAAqBH,EAAI,mBAG7CP,EAAS,cAAeH,CAAK,EAC7B,QAAQ,IAAI,WAAWJ,CAAI,oBAAqBM,CAAM,EACtD,QAAQ,SAAS,EAEVW,CACT,CAEA,eAAeE,GAAcH,EAA4BI,EAAqB,CAC5E,GAAM,CAAE,OAAArB,EAAQ,UAAAE,EAAW,KAAAD,EAAM,UAAAS,EAAW,WAAAN,EAAY,SAAAI,CAAS,EAAIS,EAGjEK,EAAahB,GAAqB,EAChCiB,EAAY,MAAMC,GAAYH,EAAaX,EAAU,KAAK,EAChEF,EAAS,cAAec,CAAU,EAElC,QAAQ,IAAI,WAAWrB,CAAI,MAAMwB,GAAeF,EAAU,SAAS,CAAC,cAAcG,GAAiBH,EAAU,OAAO,CAAC,YAAY,EACjII,GAAiBJ,EAAU,SAAS,EAGpC,IAAMK,EAAeC,GAAmB7B,EAAQC,EAAMsB,CAAS,EAG/DD,EAAahB,GAAqB,EAClC,IAAMwB,EAAiB,MAAMC,GAC3BR,EACAA,EAAU,QACVnB,GAAc,KAAa4B,GAAM5B,EAAWH,EAAM+B,CAAC,EAAI,MACzD,EACAxB,EAAS,wBAAyBc,CAAU,EAG5C,IAAMW,EAAY,MAAMC,GACtBjB,EACAhB,EACA2B,EACAL,CACF,EAGA,MAAMnB,IAAaH,EAAM,cAAcA,CAAI,mBAAmB,EAC9DqB,EAAahB,GAAqB,EAClC,IAAM6B,EAAeC,GACnBpC,EACAC,EACA2B,EACAL,EACAO,EACA5B,EACA+B,CACF,EACA,OAAAzB,EAAS,yBAA0Bc,CAAU,EAEtC,CACL,aAAAM,EACA,WAAYL,EACZ,aAAAY,CACF,CACF,CAEA,eAAsBD,GACpBjB,EACAhB,EACA2B,EACAS,EACA,CACA,GAAM,CAAE,OAAArC,EAAQ,iBAAAG,EAAkB,WAAAC,EAAY,SAAAI,EAAU,mBAAA8B,CAAmB,EACzErB,EAEF,MAAMb,IAAaH,EAAM,oBAAoB,EAC7C,IAAMqB,EAAahB,GAAqB,EAClCiC,EAAWpC,EAAiB,sBAAsBH,EAAQ,CAC9D,KAAAC,EACA,aAAc2B,EAAa,aAC3B,cAAeA,EAAa,cAC5B,SAAUA,EAAa,SACvB,YAAaA,EAAa,YAC1B,cAAeA,EAAa,cAC5B,OAAQS,EAAW,OAAO,OAC1B,QAASC,CACX,CAAC,EACD,OAAA9B,EAAS,qBAAsBc,CAAU,EAElCiB,CACT,CAEA,eAAevB,GACbhB,EACAQ,EACAgC,EACA,CACA,GAAI,CAACA,EACH,MAAO,CAAE,eAAgB,OAAW,mBAAoB,MAAU,EAGpE,IAAMlB,EAAahB,GAAqB,EAElCmC,EAAc,GAAG3B,EAAU,IAAI0B,CAAQ,GACvCE,EACJ,gBAAgB,gBAChB,gBAAgB,SAChB,gBAAgB,kBAEZC,EAAiB,MAAM9B,EAAO,QAAQ,sBAC1Cb,EACAyC,EACA,kBACAC,CACF,EACA,QAAQ,IAAI,aAAaD,CAAW,GAAG,EACvC,IAAMH,EAAqBK,EAAe,WAAW,EACrD,OAAAnC,EAAS,eAAgBc,CAAU,EAE5B,CAAE,eAAAqB,EAAgB,mBAAAL,CAAmB,CAC9C,CC3KA,eAAsBM,GACpBC,EACAC,EACAC,EACAC,EACgB,CAChB,IAAMC,EAAkBC,GAAYL,EAAQC,CAAS,EAG/CK,EAAyBC,GAAsBP,EAAQQ,EAAa,EACpEC,EAA6BH,EAAuB,WAAW,EAC/DI,EAAiBC,GAAcX,EAAQ,SAAS,EAChDY,EAAgBD,GAAcX,EAAQ,QAAQ,EAC9Ca,EAAmB,IAAIC,GAC3Bd,EACAS,CACF,EAEIM,EACEC,EAAgC,CAAC,EACjCC,EAAQC,GAAqB,EAG7B,CAAE,eAAAC,CAAe,EAAIC,EAAO,OAAO,WACrCD,GACF,QAAQ,QAAQ,eAAe,EAGjC,QAASE,EAAI,EAAGA,EAAIjB,EAAgB,OAAQiB,IAAK,CAC/C,IAAMC,EAASlB,EAAgBiB,CAAC,EAC1BE,EAAM,MAAMC,GAChBxB,EACAsB,EAAO,MACPA,EAAO,UACPT,EACAX,CACF,EACAc,EAAc,KAAKO,EAAI,YAAY,EACnC,MAAMpB,IAAiB,CACrB,GAAGoB,EACH,SAAUE,GAAkBH,EAAO,KAAK,EAAE,IAC5C,CAAC,EAGGP,GAAe,OACjBA,EAAc,MAAMW,GAClB1B,EACAuB,EAAI,aACJA,EAAI,UACN,EAEJ,CAGIJ,GACF,QAAQ,WAAW,EAGrBQ,GAAkBX,CAAa,EAG/B,IAAMY,EAAQC,GAAwBZ,CAAK,EAC3Ca,GAAM,OAAO,gBAAiB,GAAGF,EAAM,QAAQ,CAAC,CAAC,IAAI,EACrD,IAAMG,EAAQC,GAAiBhB,CAAa,EAE5C,MAAO,CACL,cAAAA,EACA,YAAaD,EACb,uBAAAT,EACA,2BAAAG,EACA,eAAAC,EACA,cAAAE,EACA,GAAGmB,CACL,CACF,CAEA,SAASC,GACPhB,EAIA,CAEA,IAAIiB,EAAqB,EACrBC,EAAoB,EACpBC,EAAsB,EACtBC,EAAyB,EAEzBC,EAAmB,EACnBC,EAAoB,EACpBC,EAAoB,EAEpBC,EAAsB,EACtBC,EAAsB,EACtBC,EAAqB,EAEzB,QAAWC,KAAa3B,EACtBiB,GACEU,EAAU,oBAAsBA,EAAU,eAC5CT,GACES,EAAU,mBAAqBA,EAAU,eAC3CR,GAAuBQ,EAAU,eACjCP,GACEO,EAAU,MAAM,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAE,cAAe,CAAC,EAC3DF,EAAU,eAEZN,GAAoBM,EAAU,QAAQ,YAAY,KAClDL,GAAqBK,EAAU,QAAQ,mBAAmB,KAC1DJ,GAAqBI,EAAU,UAAU,iBAAiB,KAE1DH,GAAuBG,EAAU,QAAQ,qBAAqB,KAC9DF,GAAuBE,EAAU,QAAQ,qBAAqB,KAC9DD,GAAsBC,EAAU,QAAQ,oBAAoB,KAI9Db,GAAM,OAAO,eAAgBgB,GAAYT,CAAgB,CAAC,EAC1DP,GAAM,OAAO,gBAAiBgB,GAAYR,CAAiB,CAAC,EAC5DR,GAAM,OAAO,gBAAiBgB,GAAYP,CAAiB,CAAC,EAC5DT,GAAM,OAAO,kBAAmBgB,GAAYN,CAAmB,CAAC,EAChEV,GAAM,OAAO,kBAAmBgB,GAAYL,CAAmB,CAAC,EAChEX,GAAM,OAAO,iBAAkBgB,GAAYJ,CAAkB,CAAC,EAE9DZ,GAAM,OAAO,iBAAkBiB,GAAab,EAAmB,CAAC,CAAC,EACjEJ,GAAM,OAAO,kBAAmBiB,GAAad,EAAoB,CAAC,CAAC,EAEnE,IAAMe,EAAY,IAAQZ,EAA0BH,EACpD,eAAQ,IAAI,2BAA2Be,EAAS,QAAQ,CAAC,CAAC,MAAMD,GAAad,CAAkB,CAAC,OAAOc,GAAaX,CAAsB,CAAC,aAAa,EAEjJ,CACL,mBAAAH,EACA,kBAAAC,EACA,oBAAAC,CACF,CACF,CAEA,SAAS9B,GACPL,EACAC,EACmE,CACnE,IAAMG,EAAkB6C,GAAOhD,CAAS,EAClCiD,EAAS,UAAUjD,CAAS,aAClC,GAAI,CAACG,EACH,MAAM,IAAI,MAAM,UAAUH,CAAS,YAAY,EAIjD,GAAI,MAAM,QAAQG,CAAe,EAAG,CAClC,GAAIA,EAAgB,OAAS,EAAG,MAAM,IAAI,MAAM8C,CAAM,EAEtD,OAAO9C,EAAgB,IAAKkB,GAAW,CACrC,IAAM6B,EAAYC,GAChBpD,EACAsB,EAAO,MACPA,EAAO,SACT,EACA,MAAO,CACL,MAAOA,EAAO,MACd,UAAA6B,CACF,CACF,CAAC,CACH,CAGA,GAAM,CAAE,OAAAE,EAAQ,UAAAF,CAAU,EAAI/C,EACxBkD,EAAeF,GAAoBpD,EAAQC,EAAWkD,CAAS,EACrE,OAAOE,EAAO,IAAKE,IAAW,CAAE,MAAAA,EAAO,UAAWD,CAAa,EAAE,CACnE,CAEA,SAAS3B,GAAkB6B,EAA4B,CACrD,IAAMC,EAAY,IAAI,IAEtBD,EAAW,QAAQ,CAACjC,EAAKF,IAAM,CAC7B,KAAOoC,EAAU,IAAIlC,EAAI,IAAI,GAC3BA,EAAI,MAAQF,CAEhB,CAAC,CACH,CC3MA,IAAMqC,GAAS,CACb,UAAW,aACX,4BAA6B,+BAC7B,mBAAoB,sBACpB,qBAAsB,wBACtB,6BAA8B,gCAC9B,qBAAsB,uBACxB,EAEaC,GAAkC,CAAC,EAEzC,SAASC,GACdC,EACAC,EACW,CA4CX,GA3Ce,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAElD,QAAQ,CAACC,EAAKC,IAAQ,CAI3B,GAHAA,EAAMA,EAAI,YAAY,EACtBD,EAAMA,EAAI,KAAK,EAEXC,IAAQN,GAAO,UACbO,GAAiBF,CAAG,EACtBD,EAAeC,EAEf,QAAQ,KAAK,uBAAuBA,CAAG,kBAAmB,OAAO,KAAKG,EAAM,CAAC,UAEtEF,IAAQN,GAAO,4BAA6B,CACrD,GAAM,CAACS,EAAMC,CAAK,EAAIC,GAAYN,CAAG,EACjCI,IACEC,IAAU,EACZP,EAAO,mBAAmB,QAAU,GAEpCA,EAAO,mBAAmB,UAAY,KAAK,IAAIO,CAAK,EAG1D,SAAWJ,IAAQN,GAAO,mBAAoB,CAC5C,GAAM,CAACS,EAAMC,CAAK,EAAIC,GAAYN,CAAG,EACjCI,IACFN,EAAO,UAAU,mBAAqB,KAAK,IAAIO,CAAK,EAExD,SAAWJ,IAAQN,GAAO,qBAAsB,CAC9C,GAAM,CAACS,EAAMC,CAAK,EAAIC,GAAYN,CAAG,EACjCI,IACFN,EAAO,UAAU,YAAc,KAAK,IAAIO,CAAK,EAEjD,SAAWJ,IAAQN,GAAO,qBAAsB,CAC9C,GAAM,CAACS,EAAMC,CAAK,EAAIC,GAAYN,CAAG,EACjCI,IACFN,EAAO,OAAO,OAAO,eAAiB,KAAK,IAAIO,CAAK,EAExD,MAAWJ,IAAQN,GAAO,6BACxBG,EAAO,UAAU,oBAAsB,GAEvCF,GAAsB,KAAKK,CAAG,CAElC,CAAC,EAEG,CAACM,EAAO,OAAQ,CAClB,GAAIX,GAAsB,OAAS,EAAG,CACpC,IAAMY,EAAOZ,GAAsB,KAAK,IAAI,EAC5C,QAAQ,KAAK,+BAA+BY,CAAI,GAAG,CACrD,CAEA,QAAQ,IAAI,kBAAkBT,CAAY,cAAeD,CAAM,CACjE,CAEA,OAAOC,CACT,CAEA,SAASO,GAAYN,EAAiC,CACpD,GAAI,OAAOA,GAAQ,SAAU,MAAO,CAAC,GAAO,CAAC,EAC7C,IAAMS,EAAM,WAAWT,CAAG,EAE1B,MAAO,CADS,CAAC,MAAMS,CAAG,GAAK,SAASA,CAAG,EAC1BA,CAAG,CACtB,CC5CA,IAAMC,GAAwB,gBAa7B,gBAAkB,CACjB,IAAMC,EAAYC,GAAkBC,EAAQH,EAAU,EAGhDI,EAAS,MAAMC,GAAgB,EACrC,GAAI,CAACD,EAAQ,CACXE,GAAiB,EACjB,MACF,CACA,IAAMC,EAAcC,GAAkBJ,CAAM,EAC5CG,EAAY,gBAAgB,MAAM,EAGlC,IAAME,EAA0B,UAAU,IAAI,yBAAyB,EACjE,CAACC,EAAQC,CAAa,EAAIC,GAC9B,aACAR,EACAK,CACF,EACMI,EAAqBC,GAAuBJ,EAAQC,CAAa,EAGjEI,EAAgBC,GAAmB,OAAQN,CAAM,EAGnDO,EACAC,EAA+B,KACnC,GAAI,CACFA,EAAW,SAAS,eAAe,gBAAgB,EACnDC,GAAWD,CAAQ,EACnBD,EAAQ,MAAMG,GAAchB,EAAQH,CAAS,CAC/C,OAASoB,EAAG,CACV,MAAAf,GAAiBe,EAAE,OAAO,EACpBA,CACR,QAAE,CACAC,GAAWJ,CAAQ,CACrB,CAGA,IAAMK,EAAW,IAAIC,GAAYpB,CAAM,EACjCqB,EAAW,IAAIC,GACnBtB,EACAS,EAAmB,gBAAgB,EACnCJ,EACAc,CACF,EACAV,EAAmB,YAAYY,EAAS,cAAc,EAEtDE,GAAcJ,EAAUN,EAAOQ,EAAS,UAAU,EAClDG,GAAM,KAAK,EACX,IAAIC,EAAO,GAGLC,EAAY,MAAMvB,EAAY,sBAAsB,EAC1D,GAAIuB,EAAW,CACbxB,GAAiBwB,CAAS,EAC1B,MACF,CAEA,IAAMC,EAA8C,CAClD,MAAO,uBACT,EAGMC,EAAQ,IAAM,CAClBzB,EAAY,gBAAgB,OAAO,EAEnCqB,GAAM,WAAW,EACjBA,GAAM,aAAa,EACnBL,EAAS,WAAW,EACpB,IAAMU,EAAYL,GAAM,YAAcM,GAEtCrB,EAAmB,qBAAqB,EAExC,IAAMsB,EAAapB,EAAc,EACjCU,EAAS,aAAaQ,EAAWE,CAAU,EAG3C,IAAMC,EAAShC,EAAO,qBAAqB2B,CAAc,EACnDM,EAAgBxB,EAAmB,qBAAqB,EAC9DY,EAAS,UAAUW,EAAQnB,EAAOoB,CAAa,EAG/Cd,EAAS,SAASa,CAAM,EACxBhC,EAAO,MAAM,OAAO,CAACgC,EAAO,OAAO,CAAC,CAAC,EAErCb,EAAS,4BAA4Be,EAAmB,EAGpDnC,EAAO,OAAO,OAAO,oCACvBA,EAAO,OAAO,OAAO,kCAAoC,GACzDoC,GAAYnC,EAAQa,CAAK,GAItBY,IACHtB,EAAY,sBAAsBiC,CAAkB,EAEpD,sBAAsBR,CAAK,EAE/B,EAGA,sBAAsBA,CAAK,EAE3B,SAASQ,EAAmBV,EAA0B,CACpD,MAAAxB,GAAiBwB,CAAS,EAC1BD,EAAO,GACD,IAAI,MAAMC,CAAS,CAC3B,CACF,GAAG,EAEH,SAASlB,GACP6B,EACArC,EACAsC,EAC+C,CAC/C,IAAMhC,EAA4B,SAAS,cAAc+B,CAAQ,EAE3DE,EAAejC,EAAO,WAAW,QAAQ,EAM/C,OAAAiC,EAAQ,UAAU,CAChB,OAAAvC,EACA,OAAQsC,EACR,UAAW,eACb,CAAC,EACM,CAAChC,EAAQiC,CAAO,CACzB,CAEA,SAASvB,GAAchB,EAAmBwC,EAAsB,CAC9D,IAAMC,EAAW,SAAS,eAAe,aAAa,EAChDC,EAAiBC,IAEjBF,GAAY,OAAWA,EAAS,YAAcE,GAC3C,IAAI,QAASC,GAAY,WAAWA,CAAO,CAAC,GAEjDC,EAAsB,GAa1B,OAAOC,GAAU9C,EAAQwC,EAZe,MAAOO,EAASC,IAAqB,CAC3E,GAAI,OAAOA,GAAM,SACf,MAAMN,EAAcM,CAAC,MAChB,CACL,IAAMC,EAAU,KAAK,MAAMD,EAAI,GAAG,EAC9BC,IAAYJ,GAAuBI,EAAU,KAAO,IACtDJ,EAAsBI,EACtB,MAAMP,EAAc,YAAYK,CAAO,MAAME,CAAO,GAAG,EAE3D,CACF,CAE0C,CAC5C,CAEA,SAAS/C,GAAiByC,EAAc,CACtCzB,GAAW,SAAS,eAAe,WAAW,CAAC,EAC/CH,GAAW,SAAS,eAAe,WAAW,EAAG,MAAM,EACnD4B,IACF,SAAS,eAAe,WAAW,EAAG,YAAcA,EAExD,CAGA,SAASR,GAAYnC,EAAmBa,EAAc,CACpDqC,GAAqBlD,EAAQa,CAAK,EAClCsC,GAAsBnD,EAAQa,CAAK,CACrC,CAEA,eAAesC,GAAsBnD,EAAmBa,EAAc,CACpE,IAAIuC,EAAe,EACfC,EAAiB,EAEfC,EAAezC,EAAM,cAAc,IAAI,MAAO0C,GAAQ,CAC1D,IAAMC,EAAS,MAAMC,GAA6BzD,EAAQuD,CAAG,EAE7DH,GAAgBG,EAAI,eACpBF,GAAkBG,EAAO,aAC3B,CAAC,EACD,MAAM,QAAQ,IAAIF,CAAY,EAE9BI,GAA4BL,EAAgBD,CAAY,CAC1D,CAEA,eAAeF,GAAqBlD,EAAmBa,EAAc,CACnE,IAAI8C,EAAgB,EAChBC,EAAiB,EACjBC,EAAkB,EAClBC,EAAmB,EACnBC,EAAkB,EAClBC,EAAmB,EAEjBV,EAAezC,EAAM,cAAc,IAAI,MAAO0C,GAAQ,CAC1D,GAAM,CAAE,eAAAU,EAAgB,eAAAC,CAAe,EACrC,MAAMC,GAA4BnE,EAAQuD,CAAG,EAE/CI,GAAiBM,EAAe,aAAeC,EAAe,aAC9DL,GAAmBI,EAAe,aAClCF,GAAmBG,EAAe,aAElC,IAAME,EAAaC,GAAsB,CACvC,IAAMC,EAAUf,EAAI,KAAKc,CAAS,EAClC,OAAOC,EAAUA,EAAQ,cAAgB,CAC3C,EAEA,QAASC,EAAI,EAAGA,EAAIN,EAAe,aAAcM,IAAK,CACpD,IAAMF,EAAYJ,EAAe,WAAWM,CAAC,EAAE,UACzCC,EAAOJ,EAAUC,CAAS,EAChCT,GAAkBY,EAClBV,GAAoBU,CACtB,CAEA,QAASD,EAAI,EAAGA,EAAIL,EAAe,aAAcK,IAAK,CACpD,IAAMF,EAAYH,EAAe,WAAWK,CAAC,EAAE,UACzCC,EAAOJ,EAAUC,CAAS,EAChCT,GAAkBY,EAClBR,GAAoBQ,CACtB,CACF,CAAC,EACD,MAAM,QAAQ,IAAIlB,CAAY,EAE9BmB,GAAmB5D,EAAO8C,EAAeC,CAAc,EACvDc,GACEb,EACAC,EACAC,EACAC,CACF,CACF,CAGA,YAAYW,GAA8B,GAAI,EAC9C,IAAMC,GAAK,SAAS,eAAe,qBAAqB,EACxD,SAASD,IAA+B,CACtC,IAAME,EAAkB9E,EAAO,mBAAmB,QAC5C+E,EAAYC,GAA4B,EAI9CC,GAAsBJ,GADFC,GAAmB,CAACC,CACH,CACvC",
  "names": ["require_webgl_obj_loader_min", "__commonJSMin", "e", "t", "n", "a", "s", "EPSILON", "VecType", "setDefaultType", "ctor", "oldType", "create", "x", "y", "z", "dst", "ctorMap", "newMat3", "fromValues", "create", "set", "x", "y", "z", "dst", "VecType", "ceil", "v", "floor", "round", "clamp", "min", "max", "add", "a", "b", "addScaled", "scale", "angle", "ax", "ay", "az", "bx", "by", "bz", "mag1", "mag2", "mag", "cosine", "dot", "subtract", "sub", "equalsApproximately", "utils.EPSILON", "equals", "lerp", "lerpV", "mulScalar", "k", "divScalar", "inverse", "invert", "cross", "t1", "t2", "length", "v0", "v1", "v2", "len", "lengthSq", "lenSq", "distance", "dx", "dy", "dz", "dist", "distanceSq", "distSq", "normalize", "negate", "copy", "clone", "multiply", "mul", "divide", "div", "random", "zScale", "zero", "transformMat4", "m", "w", "transformMat4Upper3x3", "transformMat3", "transformQuat", "q", "qx", "qy", "qz", "w2", "uvX", "uvY", "uvZ", "getTranslation", "getAxis", "axis", "off", "getScaling", "xx", "xy", "xz", "yx", "yy", "yz", "zx", "zy", "zz", "rotateX", "rad", "p", "r", "rotateY", "rotateZ", "setLength", "truncate", "maxLen", "midpoint", "MatType", "setDefaultType", "ctor", "oldType", "v3", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "fromMat3", "m3", "fromQuat", "x2", "y2", "z2", "wx", "wy", "wz", "identity", "transpose", "t", "m00", "m01", "m02", "m03", "m10", "m11", "m12", "m13", "m20", "m21", "m22", "m23", "m30", "m31", "m32", "m33", "tmp0", "tmp1", "tmp2", "tmp3", "tmp4", "tmp5", "tmp6", "tmp7", "tmp8", "tmp9", "tmp10", "tmp11", "tmp12", "tmp13", "tmp14", "tmp15", "tmp16", "tmp17", "tmp18", "tmp19", "tmp20", "tmp21", "tmp22", "tmp23", "t0", "t3", "d", "determinant", "a00", "a01", "a02", "a03", "a10", "a11", "a12", "a13", "a20", "a21", "a22", "a23", "a30", "a31", "a32", "a33", "b00", "b01", "b02", "b03", "b10", "b11", "b12", "b13", "b20", "b21", "b22", "b23", "b30", "b31", "b32", "b33", "setTranslation", "vec3.create", "setAxis", "perspective", "fieldOfViewYInRadians", "aspect", "zNear", "zFar", "f", "rangeInv", "perspectiveReverseZ", "ortho", "left", "right", "bottom", "top", "near", "far", "frustum", "frustumReverseZ", "xAxis", "yAxis", "zAxis", "aim", "position", "target", "up", "vec3.normalize", "vec3.subtract", "vec3.cross", "cameraAim", "eye", "lookAt", "translation", "translate", "rotationX", "angleInRadians", "c", "s", "rotationY", "rotationZ", "axisRotation", "n", "oneMinusCosine", "rotation", "axisRotate", "r00", "r01", "r02", "r10", "r11", "r12", "r20", "r21", "r22", "rotate", "scaling", "uniformScaling", "uniformScale", "VecType", "setDefaultType", "ctor", "oldType", "create", "x", "y", "z", "w", "dst", "fromValues", "set", "ceil", "v", "floor", "round", "clamp", "min", "max", "add", "a", "b", "addScaled", "scale", "subtract", "sub", "equalsApproximately", "utils.EPSILON", "equals", "lerp", "lerpV", "mulScalar", "k", "divScalar", "inverse", "invert", "dot", "length", "v0", "v1", "v2", "v3", "len", "lengthSq", "lenSq", "distance", "dx", "dy", "dz", "dw", "dist", "distanceSq", "distSq", "normalize", "negate", "copy", "clone", "multiply", "mul", "divide", "div", "zero", "transformMat4", "m", "setLength", "truncate", "maxLen", "midpoint", "textFileReader_Web", "filename", "objFileResp", "binaryFileReader_Web", "createTextureFromFile_Web", "device", "path", "format", "usage", "response", "imageBitmap", "texture", "CAMERA_CFG", "BYTES_U8", "BYTES_F32", "BYTES_U32", "BYTES_U64", "BYTES_VEC2", "BYTES_VEC3", "BYTES_VEC4", "BYTES_UVEC2", "BYTES_UVEC4", "BYTES_U8_VEC4", "BYTES_MAT4", "NANO_TO_MILISECONDS", "MILISECONDS_TO_SECONDS", "IS_DENO", "IS_WGPU", "IS_DENO", "MODELS_DIR", "DEPTH_FORMAT", "HDR_RENDER_TEX_FORMAT", "CO_PER_VERTEX", "VERTS_IN_TRIANGLE", "SHADING_MODE_PBR", "SHADING_MODE_TRIANGLE", "SHADING_MODE_MESHLET", "SHADING_MODE_LOD_LEVEL", "SHADING_MODE_NORMALS", "SHADING_MODE_HW_SW_IMPOSTOR", "CONFIG", "textFileReader_Web", "binaryFileReader_Web", "createTextureFromFile_Web", "isSoftwareRasterizerEnabled", "swr", "enabled", "wouldReturnAnything", "potentiallyDangerous", "ci", "hasInstanceCull", "cm", "hasMshlCull", "dgr2rad", "dgr", "createCameraProjectionMat", "viewportSize", "aspectRatio", "mat4Impl", "CAMERA_CFG", "getViewProjectionMatrix", "viewMat", "projMat", "result", "getModelViewProjectionMatrix", "modelMat", "projectPoint", "mvpMatrix", "p", "v", "vec4Impl", "getClassName", "a", "getTypeName", "createArray", "len", "copyToTypedArray", "TypedArrayClass", "data", "result", "e", "idx", "ensureTypedArray", "lerp", "b", "fac", "getTriangleCount", "indices", "VERTS_IN_TRIANGLE", "getVertexCount", "verts", "CO_PER_VERTEX", "getBytesForTriangles", "triCnt", "BYTES_U32", "formatBytes", "bytes", "decimals", "units", "k", "i", "formatNumber", "num", "sign", "v", "formatPercentageNumber", "actual", "total", "percent", "isHtmlElVisible", "el", "showHtmlEl", "display", "hideHtmlEl", "ensureHtmlElIsVisible", "nextVisible", "randomBetween", "start", "end", "lerp", "clamp", "x", "min", "max", "debounce", "callback", "wait", "timer", "args", "replaceFileExt", "filePath", "nextExt", "pos", "fileRoot", "WEBGPU_MINIMAL_BUFFER_SIZE", "createGpuDevice", "adapter", "onError", "msg", "canTimestamp", "requiredFeatures", "device", "e", "GPU_BUFFER_USAGE_UNIFORM", "createGPUBuffer", "label", "usage", "data", "gpuBuffer", "createGPU_VertexBuffer", "extraUsage", "dataTypedArr", "ensureTypedArray", "createGPU_IndexBuffer", "writeMatrixToGPUBuffer", "device", "gpuBuffer", "offsetBytes", "data", "f32Arr", "getItemsPerThread", "items", "threads", "createReadbackBuffer", "orgBuffer", "cmdCopyToReadbackBuffer", "cmdBuf", "readbackBuffer", "readBufferToCPU", "TypedArrayClass", "buffer", "arrayBufferData", "resultData", "downloadBuffer", "CONFIG", "e", "isGPUTextureView", "maybeTexView", "getClassName", "assertIsGPUTextureView", "getTypeName", "colorToString", "color", "forceCSSHex", "colorFormat", "__state", "conversionName", "toString", "r", "Math", "round", "g", "b", "a", "h", "s", "toFixed", "v", "str", "hex", "length", "ARR_EACH", "Array", "prototype", "forEach", "ARR_SLICE", "slice", "Common", "target", "each", "call", "arguments", "obj", "keys", "isObject", "Object", "key", "isUndefined", "bind", "toCall", "args", "i", "apply", "itr", "scope", "l", "BREAK", "fnc", "func", "threshold", "callImmediately", "timeout", "delayed", "callNow", "setTimeout", "toArray", "undefined", "isNaN", "isArray", "constructor", "Function", "INTERPRETATIONS", "common", "isString", "original", "test", "match", "parseInt", "parseFloat", "isNumber", "result", "toReturn", "interpret", "family", "litmus", "conversions", "conversion", "read", "tmpComponent", "ColorMath", "hi", "floor", "f", "p", "q", "t", "c", "min", "max", "delta", "NaN", "hex_with_component", "componentIndex", "value", "Color", "Error", "write", "defineRGBComponent", "component", "componentHexIndex", "defineProperty", "space", "recalculateRGB", "defineHSVComponent", "recalculateHSV", "math", "component_from_hex", "extend", "hsv_to_rgb", "rgb_to_hsv", "COMPONENTS", "rgb_to_hex", "Controller", "object", "property", "initialValue", "domElement", "document", "createElement", "__onChange", "__onFinishChange", "newValue", "updateDisplay", "getValue", "EVENT_MAP", "EVENT_MAP_INV", "k", "e", "CSS_VALUE_PIXELS", "cssValueToPixels", "val", "isNull", "dom", "elem", "selectable", "style", "onselectstart", "MozUserSelect", "KhtmlUserSelect", "unselectable", "hor", "vert", "vertical", "horizontal", "position", "left", "right", "top", "bottom", "eventType", "pars", "aux", "params", "className", "evt", "createEvent", "clientX", "x", "clientY", "y", "initMouseEvent", "bubbles", "cancelable", "window", "clickCount", "init", "initKeyboardEvent", "initKeyEvent", "defaults", "ctrlKey", "altKey", "shiftKey", "metaKey", "keyCode", "charCode", "initEvent", "dispatchEvent", "event", "newBool", "bool", "addEventListener", "attachEvent", "removeEventListener", "detachEvent", "classes", "split", "indexOf", "push", "join", "replace", "removeAttribute", "index", "splice", "RegExp", "getComputedStyle", "width", "height", "el", "offset", "offsetParent", "offsetLeft", "offsetTop", "activeElement", "type", "href", "BooleanController", "_this", "__prev", "_this2", "__checkbox", "setAttribute", "onChange", "setValue", "appendChild", "checked", "OptionController", "opts", "options", "__select", "map", "element", "opt", "innerHTML", "desiredValue", "selectedIndex", "isActive", "StringController", "__input", "onBlur", "blur", "numDecimals", "_x", "NumberController", "_params", "__min", "__max", "__step", "step", "__impliedStep", "pow", "log", "abs", "LN10", "__precision", "_v", "minValue", "maxValue", "stepValue", "roundToDecimal", "decimals", "tenTo", "NumberControllerBox", "__truncationSuspended", "prevY", "attempted", "onFinish", "onMouseDrag", "diff", "onMouseUp", "unbind", "onMouseDown", "i1", "i2", "o1", "o2", "NumberControllerSlider", "__background", "__foreground", "onTouchStart", "addClass", "preventDefault", "bgRect", "getBoundingClientRect", "touches", "onTouchMove", "onTouchEnd", "pct", "FunctionController", "text", "__button", "fire", "ColorController", "__color", "__temp", "makeSelectable", "__selector", "__saturation_field", "__field_knob", "__field_knob_border", "__hue_knob", "__hue_field", "__input_textShadow", "removeClass", "valueField", "fieldDown", "fieldDownH", "setSV", "fieldUpSV", "setH", "fieldUpH", "toOriginal", "fieldRect", "_ref", "_ref2", "mismatch", "flip", "_flip", "toHexString", "marginTop", "vendors", "linearGradient", "background", "vendor", "cssText", "hueGradient", "css", "url", "indoc", "doc", "link", "rel", "getElementsByTagName", "cssContent", "injected", "head", "saveDialogContents", "ControllerFactory", "isFunction", "isBoolean", "requestAnimationFrame", "callback", "requestAnimationFrame$1", "webkitRequestAnimationFrame", "mozRequestAnimationFrame", "oRequestAnimationFrame", "msRequestAnimationFrame", "CenteredDiv", "backgroundElement", "makeFullscreen", "body", "hide", "display", "opacity", "webkitTransform", "layout", "defer", "innerWidth", "getWidth", "innerHeight", "getHeight", "inject", "styleSheet", "CSS_NAMESPACE", "HIDE_KEY_CODE", "CLOSE_BUTTON_HEIGHT", "DEFAULT_DEFAULT_PRESET_NAME", "SUPPORTS_LOCAL_STORAGE", "localStorage", "SAVE_DIALOGUE", "autoPlaceVirgin", "autoPlaceContainer", "hideableGuis", "GUI", "__ul", "__folders", "__controllers", "__rememberedObjects", "__rememberedObjectIndecesToControllers", "__listening", "DEFAULT_WIDTH", "autoPlace", "load", "preset", "parent", "hideable", "resizable", "scrollable", "useLocalStorage", "getItem", "getLocalStorageHash", "saveToLocalStorage", "titleRow", "defineProperties", "closeOnTop", "getRoot", "revert", "name", "closed", "CLASS_CLOSED", "onResize", "__closeButton", "TEXT_OPEN", "TEXT_CLOSED", "setItem", "CLASS_MAIN", "savedGui", "JSON", "parse", "CLASS_CLOSE_BUTTON", "CLASS_CLOSE_TOP", "insertBefore", "childNodes", "CLASS_CLOSE_BOTTOM", "titleRowName", "createTextNode", "addRow", "onClickTitle", "CLASS_AUTO_PLACE_CONTAINER", "CLASS_AUTO_PLACE", "__resizeHandler", "onResizeDebounced", "stringify", "getSaveObject", "saveToLocalStorageIfPossible", "resetWidth", "root", "toggleHide", "gui", "CLASS_CONTROLLER_ROW", "CLASS_TOO_TALL", "CLASS_DRAG", "_keydownHandler", "which", "add", "controller", "removeChild", "__li", "subfolder", "removeFolder", "newGuiParams", "folders", "li", "folder", "parentElement", "getOffset", "node", "__save_row", "__resize_handle", "offsetHeight", "debounce", "saveDialogueContents", "remembered", "getCurrentPreset", "presetName", "newDom", "liBefore", "removeListeners", "markPresetModified", "modified", "__preset_select", "augmentController", "__gui", "nextSibling", "nextElementSibling", "remove", "firstElementChild", "listen", "box", "method", "pc", "pb", "returned", "oldName", "wasListening", "newController", "compose", "fakeEvent", "stopPropagation", "borderLeftColor", "isModified", "recallSavedValue", "matchedIndex", "controllerMap", "presetMap", "factoryArgs", "concat", "before", "container", "_typeof", "location", "addPresetOption", "setSelected", "showHideExplain", "explain", "addSaveMenu", "div", "firstChild", "gears", "button", "button2", "button3", "select", "getElementById", "localStorageCheckBox", "saveLocally", "newConstructorTextArea", "show", "focus", "save", "prompt", "saveAs", "addResizeHandle", "pmouseX", "drag", "dragStop", "dragStart", "setWidth", "w", "useInitialValues", "savedValues", "setPresetSelectIndex", "updateDisplays", "controllerArray", "GUI", "GUIImport", "getDebugTestObject", "scene", "getDiffuseTexture", "naniteObject", "MAX_QUERY_COUNT", "QUERIES_PER_PASS", "TOTAL_MAX_QUERIES", "getProfilerTimestamp", "getDeltaFromTimestampMS", "start", "GpuProfiler", "device", "BYTES_U64", "enabled", "cmdBuf", "queryCount", "onResult", "scopeNames", "times", "result", "name", "type", "cpuTime", "idx", "time", "end", "NANO_TO_MILISECONDS", "queryId", "now", "token", "el", "_", "_2", "AvailableStats", "DELTA_SMOOTHING", "UPDATE_FREQ_MS", "Stats", "getProfilerTimestamp", "name", "value", "showHtmlEl", "frameEnd", "fps", "statsChildrenEls", "name_", "opts", "el", "shownValue", "text", "els", "STATS_ATTR", "nextVisible", "CONFIG", "isHtmlElVisible", "hideHtmlEl", "STATS", "createLabel", "pass", "name", "labelShader", "labelPipeline", "labelUniformBindings", "getClearColorVec3", "CONFIG", "PIPELINE_PRIMITIVE_TRIANGLE_LIST", "PIPELINE_DEPTH_STENCIL_ON", "DEPTH_FORMAT", "assignResourcesToBindings2", "device", "pipeline", "entries", "uniformsLayout", "assignResourcesToBindings", "useColorAttachment", "colorTexture", "clearColor", "loadOp", "useDepthStencilAttachment", "depthTexture", "depthLoadOp", "BindingsCache", "key", "factory", "cachedVal", "val", "resetNaniteStats", "STATS", "setNaniteDrawStats", "scene", "drawnMeshletsCount", "drawnTriangleCount", "formatPercentageNumber", "setNaniteDrawStatsHw_Sw", "drawnMeshletsHW", "drawnTrianglesHW", "drawnMeshletsSW", "drawnTrianglesSW", "totalMeshlets", "totalTris", "setNaniteDrawImpostorsStats", "drawnImpostors", "allInstances", "MAX_DEPTH_PYRAMID_LEVEL", "setDisplayMode", "initializeGUI", "profiler", "scene", "camera", "gpuFreezeVisiblityCtrl", "_gpuShadingMode", "gpuSoftwareRasterizerThrsh", "gui", "GUI$1", "dummyObject", "CONFIG", "getGPUStatsCtrl", "addNaniteFolder", "addInstanceCullingFolder", "addMeshletCullingFolder", "addColorMgmt", "addDbgFolder", "onVisiblityDeviceSwap", "nextDevice", "resetNaniteStats", "setVisible", "dir", "naniteDeviceDummy", "createDummy", "shadingDummy", "SHADING_MODE_PBR", "SHADING_MODE_NORMALS", "SHADING_MODE_TRIANGLE", "SHADING_MODE_MESHLET", "SHADING_MODE_LOD_LEVEL", "SHADING_MODE_HW_SW_IMPOSTOR", "cfgSr", "cfg", "imp", "cfgNanite", "addColorController", "modeDummy", "modeCtrl", "e", "debugMeshes", "naniteObject", "getDebugTestObject", "maxLod", "lodCtrl", "naniteLodCtrl", "depthPyramidLevelCtrl", "onDisplayModeChange", "mode", "showLod", "obj", "prop", "name", "dummy", "v", "a", "ctrl", "isVisible", "parentEl", "key", "opts", "selectedLabel", "opt", "onGpuProfilerResult", "result", "showHtmlEl", "mergeByName", "names", "timeMs", "t", "li", "Key", "createMockInputState", "createInputHandler", "window", "canvas", "directions", "mouse", "setDigital", "e", "value", "setDisplayMode", "CONFIG", "out", "calcNaniteMeshletsVisibility", "ctx", "cotHalfFov", "modelMat", "naniteObject", "checkIsInsideFrustum", "meshletsToCheck", "visibilityBuffer", "getProjectedError", "createErrorMetric", "meshlet", "status", "getVisibilityStatus", "i", "m", "TMP_CACHED_VEC4", "vec4Impl", "frustum", "bounds", "CONFIG", "sphereWorldSpace", "projectPoint", "clusterError", "parentError", "threshold", "mvpMatrix", "getModelViewProjectionMatrix", "screenHeight", "errorWorldSpace", "d2", "calculateD2", "r", "calcCotHalfFov", "fovDgr", "CAMERA_CFG", "fovRad", "dgr2rad", "v", "a", "b", "c", "FLAG_FRUSTUM_CULLING", "FLAG_OCCLUSION_CULLING", "FLAG_INSTANCES_FRUSTUM_CULLING", "FLAG_INSTANCES_OCCLUSION_CULLING", "FLAG_FORCE_BILLBOARDS", "RenderUniformsBuffer", "_RenderUniformsBuffer", "group", "BYTES_MAT4", "BYTES_VEC4", "BYTES_U32", "device", "GPU_BUFFER_USAGE_UNIFORM", "bindingIdx", "ctx", "vpMatrix", "viewMatrix", "projMatrix", "viewport", "cameraFrustum", "cameraPositionWorldSpace", "softwareRasterizerEnabled", "c", "CONFIG", "nanite", "imp", "col", "swr", "offsetBytes", "mat4Impl", "calcCotHalfFov", "camPos", "i", "swrThreshold", "BYTES_F32", "mat", "offset", "v", "naniteCfg", "ci", "cm", "flags", "setFlag", "bit", "b", "occlCull", "bits", "BUFFER_INSTANCES", "bindingIdx", "SNIPPET_SHADING_PBR", "nagaFixIndexIntoConstArray", "arrayVarName", "arrayLen", "idxExpr", "exprFn", "createCaseStmt", "_", "i", "arrayVal", "defaultSt", "createArray", "assignValueFromConstArray", "newVarDecl", "varName", "varType", "x", "IS_WGPU", "switchStmt", "MAT4", "GET_MVP_MAT", "FS_NORMAL_FROM_DERIVATIVES", "FS_FAKE_LIGHTING", "GET_RANDOM_COLOR", "assignValueFromConstArray", "CLAMP_TO_MIP_LEVELS", "NORMALS_UTILS", "UTILS", "LIGHT_COUNT", "CONFIG", "DEFAULT_COLOR", "SNIPPET_SHADING", "SHADER_PARAMS", "b", "SHADER_CODE", "GET_MVP_MAT", "GET_RANDOM_COLOR", "FS_NORMAL_FROM_DERIVATIVES", "NORMALS_UTILS", "SNIPPET_SHADING_PBR", "SNIPPET_SHADING", "RenderUniformsBuffer", "BUFFER_INSTANCES", "SHADING_MODE_NORMALS", "VERTEX_ATTRIBUTE_POSITION", "BYTES_VEC3", "VERTEX_ATTRIBUTES", "BYTES_VEC2", "DrawNanitesPass", "_DrawNanitesPass", "BindingsCache", "device", "outTextureFormat", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "VERTEX_ATTRIBUTES", "PIPELINE_PRIMITIVE_TRIANGLE_LIST", "PIPELINE_DEPTH_STENCIL_ON", "scene", "setNaniteDrawStats", "ctx", "naniteObject", "loadOp", "cmdBuf", "profiler", "depthTexture", "hdrRenderTexture", "visibilityCheckProfiler", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "instances", "bindings", "cotHalfFov", "calcCotHalfFov", "instanceIdx", "instanceModelMat", "toDrawCount", "calcNaniteMeshletsVisibility", "mIdx", "m", "triangleCount", "vertexCount", "VERTS_IN_TRIANGLE", "globalUniforms", "b", "SHADER_PARAMS", "diffuseTextureView", "getDiffuseTexture", "assertIsGPUTextureView", "assignResourcesToBindings2", "ANGLE_90_DRG_IN_RAD", "ANGLE_UP_DOWN", "ANGLE_LEFT_RIGHT", "Camera", "mat4Impl", "options", "CAMERA_CFG", "deltaTime", "input", "sign", "positive", "negative", "digital", "m", "CONFIG", "moveDir", "rotMatrixInv", "moveDirLocal", "projectPoint", "vec3Impl", "yaw", "pitch", "safeAngle", "clamp", "fmt", "x", "p", "STATS", "angles", "result", "rotMat", "pos", "SHADER_PARAMS", "b", "SHADER_CODE", "RenderUniformsBuffer", "FS_FAKE_LIGHTING", "FS_NORMAL_FROM_DERIVATIVES", "DbgMeshoptimizerPass", "_DbgMeshoptimizerPass", "device", "outTextureFormat", "uniforms", "assignResourcesToBindings", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "VERTEX_ATTRIBUTE_POSITION", "PIPELINE_PRIMITIVE_TRIANGLE_LIST", "PIPELINE_DEPTH_STENCIL_ON", "ctx", "cmdBuf", "profiler", "depthTexture", "hdrRenderTexture", "scene", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "debugMeshes", "_nanite", "getDebugTestObject", "mesh", "CONFIG", "vertexCount", "VERTS_IN_TRIANGLE", "SHADER_PARAMS", "b", "SHADER_CODE", "RenderUniformsBuffer", "FS_FAKE_LIGHTING", "GET_RANDOM_COLOR", "FS_NORMAL_FROM_DERIVATIVES", "DbgMeshoptimizerMeshletsPass", "_DbgMeshoptimizerMeshletsPass", "device", "outTextureFormat", "uniforms", "assignResourcesToBindings", "SHADER_PARAMS", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "VERTEX_ATTRIBUTE_POSITION", "PIPELINE_PRIMITIVE_TRIANGLE_LIST", "PIPELINE_DEPTH_STENCIL_ON", "ctx", "cmdBuf", "profiler", "depthTexture", "hdrRenderTexture", "scene", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "CONFIG", "debugMeshes", "_nanite", "getDebugTestObject", "meshlets", "nextIdx", "m", "firstInstance", "vertexCount", "VERTS_IN_TRIANGLE", "firstIndex", "_debugMeshes", "nanite", "meshletIdx", "BUFFER_MESHLET_DATA", "bindingIdx", "GPU_MESHLET_SIZE_BYTES", "BYTES_VEC4", "BYTES_UVEC4", "createMeshletsDataBuffer", "device", "name", "meshletCount", "uploadMeshletsToGPU", "meshletsBuffer", "allMeshlets", "actualSize", "offsetBytes", "data", "dataAsF32", "dataAsU32", "m", "ownBoundSph", "NaniteVisibilityBufferCPU", "mat4Impl", "meshletCount", "i", "id", "m", "BOTTOM_LEVEL_NODE", "NaniteObject", "name", "bounds", "originalMesh", "buffers", "impostor", "instances", "NaniteVisibilityBufferCPU", "id", "m", "acc", "VERTS_IN_TRIANGLE", "bindingIdx", "device", "uploadMeshletsToGPU", "parent", "firstIndexOffset", "ownBounds", "existing", "node", "getTriangleCount", "IS_DENO", "trianglesBefore", "trianglesAfter", "simplifPct", "BUFFER_DRAWN_MESHLETS_PARAMS", "bindingIdx", "access", "BYTES_DRAWN_MESHLETS_PARAMS", "WEBGPU_MINIMAL_BUFFER_SIZE", "BYTES_U32", "BUFFER_DRAWN_MESHLETS_SW_PARAMS", "BYTES_DRAWN_MESHLETS_SW_PARAMS", "storeUtilFns", "loadUtilFns", "BUFFER_DRAWN_MESHLETS_LIST", "createDrawnMeshletsBuffer", "device", "name", "allWIPMeshlets", "instanceCount", "listSize", "m", "BOTTOM_LEVEL_NODE", "BYTES_UVEC2", "downloadDrawnMeshletsBuffer", "naniteObject", "gpuBuffer", "data", "downloadBuffer", "result", "parseDrawnMeshletsBuffer", "paramsOffset", "getDrawByIdx", "idx", "indirectDraw", "meshletCount", "meshletIds", "createArray", "i", "swOffset", "indirectDispatch", "actuallyDrawnMeshlets", "listLen", "swMeshletIds", "calculateBounds", "vertices", "indices", "box", "calcBoundingBoxIndex", "calcBoundingBox", "calcBoundingSphere", "yieldVertices", "stride", "CO_PER_VERTEX", "cb", "vertCount", "v", "offset", "yieldVerticesIndex", "i", "VERTS_IN_TRIANGLE", "boundsCalculator", "maxCo", "minCo", "co", "results", "addVert", "isSameBoundingSphere", "a", "b", "center", "vec3Impl", "radius", "printBoundingBox", "p", "x", "BUFFER_VERTEX_POSITIONS_QUANT", "bindingIdx", "createNaniteVertexPositionsBuffer_Quant", "device", "name", "vertices", "vertexCount", "QUANT_PLACES", "bboxMin", "bboxMax", "calcBoundingBox", "bboxSpan", "vec3Impl", "quantFactor", "quantOffset", "vertexPos", "quantVertPos", "x", "dequantF32Count", "data", "i", "vertexPosQuantX", "vertexPosQuantY", "vertexPosQuantZ", "dequantFactor", "dequantSummand", "dataAsF32", "createGPUBuffer", "USE_QUANTIZATION", "CONFIG", "BUFFER_VERTEX_POSITIONS_NATIVE", "bindingIdx", "BUFFER_VERTEX_POSITIONS", "BUFFER_VERTEX_POSITIONS_QUANT", "createNaniteVertexPositionsBuffer_Native", "device", "name", "vertices", "vertexCount", "data", "createGPUBuffer", "createNaniteVertexPositionsBuffer", "createNaniteVertexPositionsBuffer_Quant", "BUFFER_VERTEX_NORMALS", "bindingIdx", "createOctahedronNormals", "device", "name", "normals", "vertexCount", "data", "n", "vec3Impl", "i", "a", "x", "y", "createGPUBuffer", "BUFFER_VERTEX_UVS", "bindingIdx", "BUFFER_DRAWN_IMPOSTORS_PARAMS", "bindingIdx", "access", "BUFFER_DRAWN_IMPOSTORS_LIST", "BYTES_DRAWN_IMPOSTORS_PARAMS", "WEBGPU_MINIMAL_BUFFER_SIZE", "BYTES_U32", "createDrawnImpostorsBuffer", "device", "name", "instanceCount", "arraySizeBytes", "downloadDrawnImpostorsBuffer", "naniteObject", "gpuBuffer", "data", "downloadBuffer", "impostorCount", "listOffset", "idsList", "result", "BUFFER_DRAWN_INSTANCES_PARAMS", "bindingIdx", "access", "BYTES_DRAWN_INSTANCES_PARAMS", "WEBGPU_MINIMAL_BUFFER_SIZE", "BYTES_U32", "BYTES_VEC4", "BUFFER_DRAWN_INSTANCES_LIST", "createDrawnInstanceIdsBuffer", "device", "name", "allMeshletsCount", "instanceCount", "wholeObjectBounds", "dataSize", "bufferGpu", "writeCullData", "buffer", "bufferF32", "bufferU32", "offset0", "BUFFER_INDEX_BUFFER", "bindingIdx", "NaniteObjectBuffers", "device", "name", "originalMesh", "loadedObj", "allWIPMeshlets", "instanceCount", "CONFIG", "createIndexBuffer", "createNaniteVertexPositionsBuffer", "createOctahedronNormals", "createMeshletsDataBuffer", "createDrawnMeshletsBuffer", "createDrawnInstanceIdsBuffer", "createDrawnImpostorsBuffer", "cmdBuf", "offset", "BYTES_U32", "BYTES_DRAWN_MESHLETS_PARAMS", "renderPass", "computePass", "BYTES_DRAWN_MESHLETS_SW_PARAMS", "params", "list", "BYTES_DRAWN_INSTANCES_PARAMS", "BYTES_DRAWN_IMPOSTORS_PARAMS", "meshlets", "totalTriangleCount", "acc", "m", "getTriangleCount", "extraUsage", "getBytesForTriangles", "SHADER_PARAMS", "b", "SHADER_CODE", "GET_MVP_MAT", "FS_FAKE_LIGHTING", "GET_RANDOM_COLOR", "FS_NORMAL_FROM_DERIVATIVES", "NORMALS_UTILS", "SNIPPET_SHADING_PBR", "SNIPPET_SHADING", "RenderUniformsBuffer", "BUFFER_MESHLET_DATA", "BUFFER_DRAWN_MESHLETS_LIST", "BUFFER_VERTEX_POSITIONS", "BUFFER_VERTEX_NORMALS", "BUFFER_VERTEX_UVS", "BUFFER_INSTANCES", "BUFFER_INDEX_BUFFER", "SHADING_MODE_TRIANGLE", "SHADING_MODE_MESHLET", "SHADING_MODE_LOD_LEVEL", "SHADING_MODE_NORMALS", "SHADING_MODE_HW_SW_IMPOSTOR", "RasterizeHwPass", "_RasterizeHwPass", "BindingsCache", "device", "outTextureFormat", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "PIPELINE_PRIMITIVE_TRIANGLE_LIST", "PIPELINE_DEPTH_STENCIL_ON", "ctx", "naniteObject", "loadOp", "cmdBuf", "profiler", "depthTexture", "hdrRenderTexture", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "bindings", "globalUniforms", "scene", "b", "SHADER_PARAMS", "buffers", "diffuseTextureView", "getDiffuseTexture", "assertIsGPUTextureView", "assignResourcesToBindings2", "LINEAR_DEPTH", "CAMERA_CFG", "SNIPPET_OCCLUSION_CULLING", "CLAMP_TO_MIP_LEVELS", "LINEAR_DEPTH", "CAMERA_CFG", "SNIPPET_FRUSTUM_CULLING", "SNIPPET_NANITE_LOD_CULLING", "SHADER_PARAMS", "BUFFER_SOFTWARE_RASTERIZER_RESULT", "bindingIdx", "access", "c", "b", "SHADER_CODE", "GET_MVP_MAT", "UTILS", "NORMALS_UTILS", "LINEAR_DEPTH", "RenderUniformsBuffer", "BUFFER_MESHLET_DATA", "BUFFER_DRAWN_MESHLETS_SW_PARAMS", "BUFFER_DRAWN_MESHLETS_LIST", "BUFFER_VERTEX_POSITIONS", "BUFFER_VERTEX_NORMALS", "BUFFER_INDEX_BUFFER", "BUFFER_INSTANCES", "SHADER_PARAMS", "CONFIG", "c", "b", "SHADER_CODE", "GET_MVP_MAT", "UTILS", "SNIPPET_OCCLUSION_CULLING", "SNIPPET_FRUSTUM_CULLING", "SNIPPET_NANITE_LOD_CULLING", "RenderUniformsBuffer", "BUFFER_MESHLET_DATA", "BUFFER_DRAWN_MESHLETS_PARAMS", "BUFFER_DRAWN_MESHLETS_SW_PARAMS", "BUFFER_DRAWN_MESHLETS_LIST", "BUFFER_INSTANCES", "BUFFER_DRAWN_INSTANCES_PARAMS", "BUFFER_DRAWN_INSTANCES_LIST", "CullMeshletsPass", "_CullMeshletsPass", "BindingsCache", "device", "shaderModule", "labelShader", "SHADER_CODE", "mainFn", "labelPipeline", "ctx", "naniteObject", "cmdBuf", "profiler", "computePass", "CONFIG", "pipeline", "bindings", "workgroupsCntX", "getItemsPerThread", "SHADER_PARAMS", "workgroupsCntY", "workgroupsCntZ", "globalUniforms", "prevFrameDepthPyramidTexture", "depthPyramidSampler", "b", "buffers", "assertIsGPUTextureView", "bindGroups", "assignResourcesToBindings2", "tmpVec", "vec4Impl", "Frustum", "_Frustum", "vpMatrix", "m", "vec3Impl", "l", "sphereWorldSpace", "s", "result", "i", "inFront", "fmt", "p2str", "name", "SHADER_PARAMS", "c", "b", "SHADER_CODE", "getMipSize", "d", "createDepthPyramidSampler", "device", "createLabel", "DepthPyramidPass", "_DepthPyramidPass", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "textureSrc", "textureSrcView", "forceRecreate", "assertIsGPUTextureView", "dstW", "dstH", "mipLevelCount", "minWidth", "mipHeight", "prevLevelTexView", "baseMipLevel", "textureView", "bindings", "IS_DENO", "CONFIG", "ctx", "cmdBuf", "profiler", "computePass", "level", "workgroupsCntX", "getItemsPerThread", "SHADER_PARAMS", "workgroupsCntY", "name", "textureDstView", "bindIdx", "assignResourcesToBindings2", "FULLSCREEN_TRIANGLE_POSITION", "cmdDrawFullscreenTriangle", "renderPass", "SHADER_PARAMS", "b", "SHADER_CODE", "RenderUniformsBuffer", "CLAMP_TO_MIP_LEVELS", "FULLSCREEN_TRIANGLE_POSITION", "LINEAR_DEPTH", "DepthPyramidDebugDrawPass", "_DepthPyramidDebugDrawPass", "BindingsCache", "device", "outTextureFormat", "shaderModule", "labelShader", "labelPipeline", "ctx", "cmdBuf", "profiler", "hdrRenderTexture", "depthTexture", "renderPass", "useColorAttachment", "getClearColorVec3", "bindings", "cmdDrawFullscreenTriangle", "globalUniforms", "prevFrameDepthPyramidTexture", "assignResourcesToBindings2", "SHADER_PARAMS", "CONFIG", "c", "b", "SHADER_CODE", "RenderUniformsBuffer", "GET_MVP_MAT", "UTILS", "SNIPPET_FRUSTUM_CULLING", "SNIPPET_OCCLUSION_CULLING", "BUFFER_INSTANCES", "BUFFER_DRAWN_INSTANCES_PARAMS", "BUFFER_DRAWN_INSTANCES_LIST", "BUFFER_DRAWN_IMPOSTORS_PARAMS", "BUFFER_DRAWN_IMPOSTORS_LIST", "CullInstancesPass", "_CullInstancesPass", "BindingsCache", "device", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "ctx", "naniteObject", "cmdBuf", "profiler", "computePass", "pipeline", "bindings", "workgroupsCntX", "SHADER_PARAMS", "globalUniforms", "prevFrameDepthPyramidTexture", "depthPyramidSampler", "b", "assertIsGPUTextureView", "buffers", "assignResourcesToBindings2", "SNIPPET_DITHER", "IS_WGPU", "SNIPPET_PACKING", "SHADER_PARAMS", "b", "SHADER_CODE", "RenderUniformsBuffer", "SNIPPET_DITHER", "SNIPPET_PACKING", "NORMALS_UTILS", "SNIPPET_SHADING_PBR", "SNIPPET_SHADING", "FS_NORMAL_FROM_DERIVATIVES", "BUFFER_DRAWN_INSTANCES_PARAMS", "BUFFER_INSTANCES", "BUFFER_DRAWN_IMPOSTORS_LIST", "CONFIG", "SHADING_MODE_NORMALS", "SHADING_MODE_HW_SW_IMPOSTOR", "NaniteBillboardPass", "_NaniteBillboardPass", "BindingsCache", "device", "outTextureFormat", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "DEPTH_FORMAT", "ctx", "naniteObject", "loadOp", "cmdBuf", "profiler", "depthTexture", "hdrRenderTexture", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "bindings", "globalUniforms", "scene", "b", "SHADER_PARAMS", "buffers", "assignResourcesToBindings2", "SNIPPET_ACES", "SHADER_PARAMS", "b", "SHADER_CODE", "FULLSCREEN_TRIANGLE_POSITION", "SNIPPET_DITHER", "SNIPPET_ACES", "RenderUniformsBuffer", "SHADING_MODE_PBR", "PresentPass", "_PresentPass", "BindingsCache", "device", "outTextureFormat", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "ctx", "screenTexture", "cmdBuf", "profiler", "depthTexture", "assertIsGPUTextureView", "renderPass", "useColorAttachment", "getClearColorVec3", "bindings", "cmdDrawFullscreenTriangle", "globalUniforms", "hdrRenderTexture", "b", "SHADER_PARAMS", "assignResourcesToBindings2", "RasterizeSwPass", "_RasterizeSwPass", "BindingsCache", "device", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "ctx", "viewportSize", "BYTES_U32", "naniteObject", "cmdBuf", "profiler", "computePass", "bindings", "globalUniforms", "resultBuffer", "b", "SHADER_PARAMS", "buffers", "assignResourcesToBindings2", "SHADER_PARAMS", "b", "SHADER_CODE", "FULLSCREEN_TRIANGLE_POSITION", "NORMALS_UTILS", "FS_NORMAL_FROM_DERIVATIVES", "SNIPPET_SHADING_PBR", "SNIPPET_SHADING", "RenderUniformsBuffer", "BUFFER_SOFTWARE_RASTERIZER_RESULT", "SHADING_MODE_NORMALS", "SHADING_MODE_HW_SW_IMPOSTOR", "RasterizeCombine", "_RasterizeCombine", "BindingsCache", "device", "outTextureFormat", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "PIPELINE_DEPTH_STENCIL_ON", "ctx", "cmdBuf", "profiler", "hdrRenderTexture", "rasterizerSwResult", "depthTexture", "assertIsGPUTextureView", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "bindings", "cmdDrawFullscreenTriangle", "globalUniforms", "b", "SHADER_PARAMS", "assignResourcesToBindings2", "SOFTW_RASTER_DEPTH_16BIT_FIX", "CAMERA_CFG", "SHADER_PARAMS", "b", "SHADER_CODE", "offset", "span", "floorHeight", "RenderUniformsBuffer", "DrawGroundPass", "_DrawGroundPass", "outTextureFormat", "BindingsCache", "ctx", "device", "calculateGroundSize", "code", "shaderModule", "renderPipeline", "PIPELINE_DEPTH_STENCIL_ON", "loadOp", "cmdBuf", "profiler", "depthTexture", "hdrRenderTexture", "renderPass", "useColorAttachment", "getClearColorVec3", "useDepthStencilAttachment", "pipeline", "bindings", "globalUniforms", "assignResourcesToBindings2", "scene", "bounds", "addPoint", "boundsCalculator", "tmp", "vec4Impl", "o", "bBox", "tfxMat", "projectPoint", "spanXZ", "Renderer", "device", "viewportSize", "preferredCanvasFormat", "profiler", "RenderUniformsBuffer", "DrawNanitesPass", "HDR_RENDER_TEX_FORMAT", "RasterizeHwPass", "RasterizeSwPass", "CullMeshletsPass", "CullInstancesPass", "NaniteBillboardPass", "RasterizeCombine", "DepthPyramidPass", "DepthPyramidDebugDrawPass", "DrawGroundPass", "PresentPass", "DbgMeshoptimizerPass", "DbgMeshoptimizerMeshletsPass", "Camera", "createCameraProjectionMat", "Frustum", "mat4Impl", "deltaTime", "input", "cmdBuf", "scene", "screenTexture", "assertIsGPUTextureView", "viewMatrix", "vpMatrix", "getViewProjectionMatrix", "_depthPyramidTex", "depthPyramidTexView", "ctx", "isSoftwareRasterizerEnabled", "CONFIG", "naniteObjects", "i", "naniteObject", "loadOp", "softwareRasterizeEnabled", "pyramidOk", "vpStr", "DEPTH_FORMAT", "debounce", "initCanvasResizeSystem", "canvas", "canvasContext", "sizeNow", "getViewportSize", "listeners", "revalidateCanvasSize", "f", "applyResize", "d", "l", "devicePixelRatio", "createErrorSystem", "device", "ERROR_SCOPES", "ERROR_SCOPES_REV", "currentScopeName", "startErrorScope", "reportErrorScopeAsync", "scopeName", "sc", "cb", "lastError", "name", "err", "msg", "DEBUG_ALLOC", "SILENCE_MEMORY_LEAKS", "heapPtr2str", "module", "arr", "ptr", "getTypeName", "wasmPtr", "inout", "copyToWasmHeap", "heap", "mallocFn", "heapPointer", "getMemoryHeapForJsArray", "transformIntoWasmArg", "fnName", "arg", "s", "wasmCall", "returnTypeName", "argsJS", "argsWasm", "argsTypes", "result", "i", "rawHeapAddr", "wasmHeapAddr", "length", "meshoptCall", "metisCall", "import_meta", "Module", "_scriptName", "import_meta", "moduleArg", "moduleRtn", "readyPromiseResolve", "readyPromiseReject", "readyPromise", "resolve", "reject", "prop", "abort", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "ENVIRONMENT_IS_SHELL", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "__require", "url", "xhr", "onload", "onerror", "assert", "isFileURI", "response", "out", "err", "checkIncomingModuleAPI", "legacyModuleProp", "wasmBinary", "wasmMemory", "ABORT", "EXITSTATUS", "condition", "text", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "writeStackCookie", "max", "_emscripten_stack_get_end", "checkStackCookie", "cookie1", "cookie2", "ptrToString", "h16", "h8", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runtimeInitialized", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "runDependencyTracking", "addRunDependency", "id", "shown", "dep", "removeRunDependency", "callback", "what", "e", "FS", "dataURIPrefix", "isDataURI", "filename", "createExportWrapper", "name", "nargs", "args", "f", "wasmExports", "findWasmBinary", "wasmBinaryFile", "getBinarySync", "file", "getBinaryPromise", "binaryFile", "error", "instantiateArrayBuffer", "imports", "receiver", "binary", "reason", "instantiateAsync", "result", "getWasmImports", "wasmImports", "createWasm", "info", "receiveInstance", "instance", "module", "trueModule", "receiveInstantiationResult", "newName", "incoming", "extra", "ignoredModuleProp", "isExportedByForceFilesystem", "missingGlobal", "sym", "msg", "warnOnce", "missingLibrarySymbol", "librarySymbol", "unexportedRuntimeSymbol", "callbacks", "noExitRuntime", "ptr", "stackRestore", "val", "__emscripten_stack_restore", "stackSave", "_emscripten_stack_get_current", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "___assert_fail", "line", "func", "__abort_js", "__emscripten_memcpy_js", "dest", "src", "num", "getHeapMax", "growMemory", "size", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "newSize", "replacement", "_fd_close", "fd", "convertI32PairToI53Checked", "lo", "hi", "_fd_seek", "offset_low", "offset_high", "whence", "newOffset", "offset", "printCharBuffers", "printChar", "stream", "curr", "buffer", "flush_NO_FILESYSTEM", "_fflush", "_fd_write", "iov", "iovcnt", "pnum", "i", "len", "j", "getCFunc", "ident", "writeArrayToMemory", "array", "lengthBytesUTF8", "c", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "u", "stringToUTF8", "outPtr", "stackAlloc", "sz", "__emscripten_stack_alloc", "stringToUTF8OnStack", "ret", "ccall", "returnType", "argTypes", "opts", "toC", "arr", "convertReturnValue", "cArgs", "stack", "converter", "onDone", "cwrap", "___wasm_call_ctors", "_meshopt_buildMeshletsBound", "_meshopt_buildMeshlets", "_meshopt_buildMeshletsScan", "_meshopt_computeMeshletBounds", "_meshopt_simplify", "_meshopt_simplifyScale", "_meshopt_generateVertexRemap", "_meshopt_remapVertexBuffer", "_meshopt_remapIndexBuffer", "_malloc", "_free", "_emscripten_stack_init", "_emscripten_stack_get_free", "_emscripten_stack_get_base", "a0", "dynCall_jiji", "missingLibrarySymbols", "unexportedSymbols", "calledRun", "runCaller", "run", "stackCheckInit", "doRun", "meshoptimizer_default", "OVERRIDE_MESHOPTIMIZER_WASM_PATH", "MESHOPTIMIZER_MODULE", "getMeshOptimizerModule", "module", "meshoptimizer_default", "e", "MESHOPT_BOUNDS_BYTES", "BYTES_F32", "U32_IN_MESHOPT_MESHLET", "createMeshlets", "mesh", "indices", "opts", "module", "getMeshOptimizerModule", "indicesCount", "maxMeshlets", "buildMeshletsBound", "meshletCount", "meshletsRaw", "meshletVertices", "meshletTriangles", "buildMeshlets", "meshlets", "i", "idx", "U32_IN_MESHOPT_MESHLET", "meshlet", "lastMeshlet", "lastVertexIdx", "lastTriangleIdx", "meshletTrianglesU32", "rewriteIdxs", "meshletIndicesWithOriginalVertexBuffer", "copyToTypedArray", "vertices", "vertexCount", "stride", "meshoptCall", "wasmPtr", "meshletIndices", "j", "VERTS_IN_TRIANGLE", "o", "vertexIdxInsideMeshlet", "vertIdx", "splitIndicesPerMeshlets", "nextIdx", "m", "firstIndex", "res", "MESHOPT_SIMPLIFY_LOCK_BORDER", "roundToMultiplyOf3", "a", "calculateTargetIndexCount", "originalCount", "decimateFactor", "simplifyMesh", "mesh", "indices", "opts", "module", "getMeshOptimizerModule", "indicesCount", "error", "newIndexCount", "result", "simplify", "errorScale", "simplifyScale", "vertices", "vertexCount", "stride", "outResultError", "options", "meshoptCall", "wasmPtr", "createDebugMeshes", "device", "originalMesh", "parsedMesh", "originalIndices", "meshlets", "createMeshletsMesh", "meshoptimizerLODs", "createMeshLODs", "meshoptimizerMeshletLODsAsync", "lodMesh", "indices", "level", "meshoptimizerMeshletLODs", "e", "vertices", "originalTriangleCount", "getTriangleCount", "finalTargetTriangleCount", "triangleCount", "meshLODs", "addMeshLod", "mesh", "indexData", "targetIndexCount", "VERTS_IN_TRIANGLE", "simplifiedMesh", "simplifyMesh", "newTriangleCount", "indexBuffer", "createGPU_IndexBuffer", "meshLod", "getVertexCount", "labelSuffix", "createMeshlets", "meshletIndexBuffer", "getInstancesCount", "g", "createGrid", "countX", "countY", "spacing", "offsetX", "offsetY", "createInstancesData", "device", "name", "grid", "transformsBuffer", "BYTES_MAT4", "transforms", "offsetBytes", "x", "y", "moveMat", "mat4Impl", "angleDgr", "randomBetween", "rotMat", "dgr2rad", "tfxMat", "writeMatrixToGPUBuffer", "count", "OBJECTS", "getSceneObjectDef", "name", "result", "SCENES", "sceneModel", "sceneModelUniformGrid", "createGrid", "model", "args", "instances", "obj", "count", "spacing", "offset", "isValidSceneName", "scName", "SHADER_PARAMS", "b", "SHADER_CODE", "FS_NORMAL_FROM_DERIVATIVES", "SNIPPET_PACKING", "toUNorm8", "a", "clamp", "createFallbackTexture", "device", "color", "size", "channelCnt", "texture", "data", "x", "y", "offset", "BYTES_U8_VEC4", "createSampler", "mode", "ImpostorBillboardTexture", "texture", "idx", "OUT_TEXTURE_FORMAT", "DEPTH_FORMAT", "ImpostorRenderer", "_ImpostorRenderer", "device", "fallbackTexture", "viewCount", "CONFIG", "textureSize", "assertIsGPUTextureView", "shaderModule", "labelShader", "SHADER_CODE", "labelPipeline", "VERTEX_ATTRIBUTES", "OUT_TEXTURE_FORMAT", "PIPELINE_PRIMITIVE_TRIANGLE_LIST", "PIPELINE_DEPTH_STENCIL_ON", "DEPTH_FORMAT", "BYTES_MAT4", "BYTES_F32", "createSampler", "createLabel", "mesh", "resultTexture", "cmdBuf", "result", "sizeW", "extraUsage", "targetTexture", "targetTextureView", "renderPass", "useColorAttachment", "useDepthStencilAttachment", "bindings", "i", "ImpostorBillboardTexture", "b", "SHADER_PARAMS", "projMat", "rotDelta", "viewMats", "createArray", "_", "mat4Impl", "dgr2rad", "texture", "assignResourcesToBindings2", "offsetBytes", "mat", "offset", "createEdge", "ii", "jj", "listAllEdges", "indices", "VERTS_IN_TRIANGLE", "result", "triangleCount", "getTriangleCount", "addEdge", "i", "i0", "i1", "i2", "isSameEdge", "e0", "e1", "findBoundaryEdges", "allEdges", "countEdgeRepeats", "e", "repeats", "e2", "findAdjacentMeshlets_Iter", "edgesPerMeshlet", "edgesPerMeshlet2", "m", "hasSharedEdge", "meshlet0", "meshlet1", "createArray", "j", "findAdjacentMeshlets_Map", "mmap", "edgeHash", "d", "meshletIds2", "meshletIds", "l", "m0", "m1", "import_meta", "Module", "_scriptDir", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "setWindowTitle", "url", "xhr", "onload", "onerror", "title", "out", "err", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "assert", "condition", "text", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "ptr", "HEAPU8", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "i", "u", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "c", "buffer", "HEAP8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateGlobalBufferAndViews", "buf", "INITIAL_MEMORY", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runtimeInitialized", "keepRuntimeAlive", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "FS", "TTY", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "getUniqueRunDependency", "id", "addRunDependency", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "filename", "wasmBinaryFile", "getBinary", "file", "getBinaryPromise", "response", "createWasm", "info", "asmLibraryArg", "receiveInstance", "instance", "module", "exports", "receiveInstantiationResult", "result", "instantiateArrayBuffer", "receiver", "binary", "reason", "instantiateAsync", "tempDouble", "tempI64", "ExitStatus", "callbacks", "writeArrayToMemory", "array", "___assert_fail", "line", "func", "wasmTableMirror", "getWasmTableEntry", "funcPtr", "___call_sighandler", "fp", "sig", "setErrNo", "value", "___errno_location", "PATH", "splitPathRe", "parts", "allowAboveRoot", "up", "last", "isAbsolute", "trailingSlash", "p", "root", "dir", "lastSlash", "paths", "l", "r", "getRandomDevice", "randomBuffer", "PATH_FS", "resolvedPath", "resolvedAbsolute", "from", "to", "trim", "arr", "start", "end", "fromParts", "toParts", "length", "samePartsLength", "outputParts", "intArrayFromString", "stringy", "dontAddNull", "u8array", "numBytesWritten", "dev", "ops", "stream", "tty", "offset", "pos", "bytesRead", "val", "mmapAlloc", "size", "MEMFS", "mount", "parent", "name", "mode", "node", "newCapacity", "prevCapacity", "CAPACITY_DOUBLING_MAX", "oldContents", "newSize", "attr", "old_node", "new_dir", "new_name", "new_node", "entries", "key", "newname", "oldpath", "position", "contents", "canOwn", "whence", "prot", "flags", "allocated", "mmapFlags", "asyncLoad", "noRunDep", "dep", "arrayBuffer", "event", "opts", "defaults", "current", "current_path", "islast", "count", "link", "lookup", "parentid", "hash", "errCode", "nodeName", "rdev", "flag", "perms", "isdir", "fd_start", "fd_end", "fd", "device", "ma", "mi", "mounts", "check", "m", "populate", "completed", "doCallback", "done", "type", "mountpoint", "pseudo", "mountRoot", "next", "dirs", "newpath", "old_path", "new_path", "old_dirname", "new_dirname", "old_name", "old_dir", "relative", "dontFollow", "uid", "gid", "atime", "mtime", "created", "seeking", "bytesWritten", "cmd", "arg", "ret", "stat", "data", "actualNumBytes", "random_device", "proc_self", "stdin", "stdout", "stderr", "errno", "code", "input", "output", "error", "canRead", "canWrite", "dontResolveLastLink", "part", "properties", "obj", "LazyUint8Array", "chunkOffset", "chunkNum", "getter", "datalength", "header", "hasByteServing", "usesGzip", "chunkSize", "doXHR", "lazyArray", "stream_ops", "keys", "fn", "writeChunks", "dontCreateFile", "preFinish", "fullname", "processData", "byteArray", "finish", "indexedDB", "openRequest", "db", "transaction", "files", "ok", "fail", "total", "putRequest", "getRequest", "SYSCALLS", "dirfd", "allowEmpty", "dirstream", "addr", "___syscall_fcntl64", "varargs", "newStream", "___syscall_ioctl", "op", "argp", "___syscall_openat", "__emscripten_throw_longjmp", "_emscripten_memcpy_big", "dest", "src", "num", "getHeapMax", "emscripten_realloc_buffer", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "replacement", "_proc_exit", "exitJS", "implicit", "_exit", "_fd_close", "doReadv", "iov", "iovcnt", "curr", "_fd_read", "pnum", "convertI32PairToI53Checked", "lo", "hi", "_fd_seek", "offset_low", "offset_high", "newOffset", "doWritev", "_fd_write", "_system", "command", "getCFunc", "ident", "ccall", "returnType", "argTypes", "args", "toC", "stackAlloc", "convertReturnValue", "cArgs", "stack", "converter", "stackSave", "onDone", "stackRestore", "cwrap", "numericArgs", "numericRet", "FSNode", "readMode", "writeMode", "invoke_d", "invoke_i", "invoke_iii", "invoke_iiii", "invoke_iiiiiii", "invoke_iiiiiiiii", "invoke_vi", "invoke_vii", "invoke_viii", "asm", "___wasm_call_ctors", "_malloc", "_METIS_PartGraphKway", "_setThrew", "index", "sp", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "calledRun", "runCaller", "run", "doRun", "metis3_1_default", "METIS_MODULE", "OVERRIDE_METIS_WASM_PATH", "getMetisModule", "module", "metis3_1_default", "metisFreeAllocations", "METIS_NOPTIONS", "METIS_OK", "METIS_ERROR_INPUT", "METIS_ERROR_MEMORY", "METIS_ERROR", "partitionGraph", "adjacency", "nparts", "opts", "xadj", "adjncy", "createAdjacencyData", "partitionGraphImpl", "module", "getMetisModule", "i32Arr", "a", "wasmPtr", "i32", "vertexCount", "constraintsCount", "objval", "parts", "options", "createOptions", "returnCode", "metisCall", "checkErrCode", "result", "createArray", "_", "partitionIdx", "vertIdx", "k", "v", "code", "i", "findAdjacentMeshlets", "CONFIG", "findAdjacentMeshlets_Map", "findAdjacentMeshlets_Iter", "DEBUG", "MINIMAL_SIMPLICATION_ERROR", "NEXT_MESHLET_ID", "isWIP_Root", "m", "createNaniteMeshlets", "parsedMesh", "indices", "progressCb", "np", "DECIMATE_FACTOR", "SIMPLIFICATION_FACTOR_REQ", "SIMPLIFICATION_FACTOR_REQ_BETWEEN_LEVELS", "SIMPLIFICATION_TARGET_ERROR_MULTIPLIER", "MAX_LODS", "estimatedMeshletCount", "estimateFinalMeshletCount", "allMeshlets", "lodLevel", "mockBounds", "calculateBounds", "currentMeshlets", "splitIntoMeshlets", "simplificationTargetError", "lastLevelTriangeCount", "startTriangeCount", "getMeshletsTriangleCount", "removedTrisStr", "formatPercentageNumber", "removedEnough", "GROUP_SIZE", "nparts", "partitioned", "adjacency", "partitionGraph", "i", "newlyCreatedMeshlets", "childMeshletGroup", "megaMeshlet", "mergeMeshlets", "targetIndexCount", "calculateTargetIndexCount", "simplifiedMesh", "simplifyMesh", "trianglesBefore", "getTriangleCount", "trianglesAfter", "simplificationFactor", "errorNow", "childrenError", "totalError", "bounds", "newMeshlets", "createMeshletWip", "childMeshlet", "SimplificationError", "metisFreeAllocations", "simplificationError", "createdFrom", "sharedSiblingsBounds", "meshletsOpt", "createMeshlets", "meshletsIndices", "splitIndicesPerMeshlets", "edges", "listAllEdges", "boundaryEdges", "findBoundaryEdges", "reportProgress", "progress", "clamp", "meshletGroup", "len", "acc", "result", "nextIdx", "idx", "triCnt", "VERTS_IN_TRIANGLE", "lastLevelMeshlets", "totalMeshlets", "nextLevelMeshlets", "vertexCount", "mx", "idxCnt", "throwErr", "msg", "assertValidNaniteObject", "naniteObject", "meshletsToCheck", "visitedMeshlets", "meshlet", "assertHaveSameParent", "assertHasHigherErrorThanChildren", "assertHasValidParentData", "m", "myError", "childError", "meshlets", "refMeshlet", "i", "isSameBoundingSphere", "CONFIG", "obj", "createNaniteObject", "device", "name", "originalMesh", "loadedObj", "allWIPMeshlets", "instances", "impostor", "naniteBuffers", "NaniteObjectBuffers", "naniteObject", "NaniteObject", "indexBufferOffsetBytes", "nextId", "rewriteIds", "createArray", "meshletsToCheck", "isWIP_Root", "m", "parentNode", "meshlet", "ownBounds", "calculateBounds", "node", "BYTES_U32", "getBytesForTriangles", "assertValidNaniteObject", "CONFIG", "objLoader", "optimizeMeshBuffers", "vertices", "vertexCount", "stride", "indices", "module", "getMeshOptimizerModule", "indexCount", "newVertCnt", "remap", "generateVertexRemap", "newIndices", "remapIndexBuffer", "remapVertexBuffer", "result", "meshoptCall", "wasmPtr", "oldVertCnt", "BYTES_F32", "Mesh", "Layout", "vertexCount", "mesh", "loadObjFile", "objText", "scale", "cleanupRawOBJData", "vertexCountInitial", "getVertexCount", "indicesInitial", "copyToTypedArray", "layout", "verticesAndAttributesU8", "verticesAndAttributes", "strideBytes", "strideF32", "BYTES_F32", "verticesNew", "indicesNew", "optimizeMeshBuffers", "attributes", "splitVerticesWithAttributesIntoSeparateLists", "BYTES_VEC3", "calculateBounds", "hasNormals", "firstEl", "hasUVs", "e", "recalcNormals", "i", "v", "vertCnt", "createArray", "x", "idx", "y", "z", "a", "b", "c", "nx", "ny", "nz", "k", "index", "tmp", "vec3Impl", "n", "newVertexCount", "positionsF32", "normalsF32", "uvF32", "vertIdx", "offset", "createOriginalMesh", "device", "sceneName", "mesh", "vertexBuffer", "createGPU_VertexBuffer", "normalsBuffer", "uvBuffer", "createGPU_IndexBuffer", "getVertexCount", "getTriangleCount", "deserializeNodes", "nodes", "getById", "id", "n", "ImportError", "node", "msg", "importFromFile", "params", "jsonText", "device", "instances", "name", "objectDef", "progressCb", "addTimer", "timerStart", "getProfilerTimestamp", "jsonObj", "binaryFilePath", "replaceFileExt", "MODELS_DIR", "binaryFileContent", "readObjectBinaryFile", "attributes", "splitVerticesWithAttributesIntoSeparateLists", "parsedMesh", "ensureTypedArray", "originalMesh", "createOriginalMesh", "buffers", "NaniteObjectBuffers", "m", "impostors", "createImpostors", "naniteObject", "NaniteObject", "allMeshlets", "deserializeNodes", "id", "n", "ImportError", "acc", "assertValidNaniteObject", "CONFIG", "path", "mesh", "verticesBytes", "indicesBytes", "BYTES_U32", "meshletIndicesBytes", "VERTS_IN_TRIANGLE", "bytesBuffer", "offset", "verticesAndAttributes", "assertByteSize", "indices", "meshletIndices", "type", "data", "expectedBytes", "loadObject", "device", "name", "instances", "impostorRenderer", "progressCb", "start", "getProfilerTimestamp", "timers", "addTimer", "getDeltaFromTimestampMS", "objectDef", "getSceneObjectDef", "fileText", "CONFIG", "MODELS_DIR", "tex", "loadObjectTexture", "params", "result", "importFromFile", "loadObjectObj", "objFileText", "timerStart", "loadedObj", "loadObjFile", "getVertexCount", "getTriangleCount", "printBoundingBox", "originalMesh", "createOriginalMesh", "naniteMeshlets", "createNaniteMeshlets", "p", "impostors", "createImpostors", "naniteObject", "createNaniteObject", "parsedMesh", "diffuseTextureView", "impostor", "fileName", "texturePath", "usage", "diffuseTexture", "loadScene", "device", "sceneName", "progressCb", "objectLoadedCb", "sceneObjectDefs", "getSceneDef", "fallbackDiffuseTexture", "createFallbackTexture", "DEFAULT_COLOR", "fallbackDiffuseTextureView", "samplerNearest", "createSampler", "samplerLinear", "impostorRenderer", "ImpostorRenderer", "debugMeshes", "naniteObjects", "start", "getProfilerTimestamp", "enableProfiler", "CONFIG", "i", "objDef", "obj", "loadObject", "getSceneObjectDef", "createDebugMeshes", "ensureUniqueNames", "delta", "getDeltaFromTimestampMS", "STATS", "stats", "updateSceneStats", "naiveTriangleCount", "naiveMeshletCount", "totalInstancesCount", "maxSimplifiedTriangles", "indexBufferBytes", "meshletsDataBytes", "instancesTfxBytes", "drawnInstancesBytes", "drawnImpostorsBytes", "drawnMeshletsBytes", "naniteObj", "acc", "m", "formatBytes", "formatNumber", "avgSimpl", "SCENES", "errMsg", "instances", "createInstancesData", "models", "instancesGPU", "model", "naniteObjs", "pastNames", "PARAMS", "INVALID_SEARCH_PARAMS", "applySearchParams", "target", "defaultScene", "val", "key", "isValidSceneName", "SCENES", "isOk", "value", "parseNumber", "CONFIG", "keys", "res", "SCENE_FILE", "sceneFile", "applySearchParams", "CONFIG", "device", "createGpuDevice", "showErrorMessage", "errorSystem", "createErrorSystem", "PREFERRED_CANVAS_FORMAT", "canvas", "canvasContext", "getCanvasContext", "canvasResizeSystem", "initCanvasResizeSystem", "getInputState", "createInputHandler", "scene", "loaderEl", "showHtmlEl", "loadSceneFile", "e", "hideHtmlEl", "profiler", "GpuProfiler", "renderer", "Renderer", "initializeGUI", "STATS", "done", "lastError", "mainCmdBufDesc", "frame", "deltaTime", "MILISECONDS_TO_SECONDS", "inputState", "cmdBuf", "screenTexture", "onGpuProfilerResult", "getGPUStats", "onRenderFrameError", "selector", "canvasFormat", "context", "sceneName", "reportEl", "setReportText", "msg", "resolve", "lastReportedPercent", "loadScene", "objName", "p", "percent", "getGPUStats_meshlets", "getGPUStats_impostors", "allInstances", "drawnImpostors", "resultsAsync", "obj", "result", "downloadDrawnImpostorsBuffer", "setNaniteDrawImpostorsStats", "drawnMeshlets", "drawnTriangles", "drawnMeshletsHW", "drawnTrianglesHW", "drawnMeshletsSW", "drawnTrianglesSW", "hardwareRaster", "softwareRaster", "downloadDrawnMeshletsBuffer", "getTriCnt", "meshletId", "meshlet", "i", "tris", "setNaniteDrawStats", "setNaniteDrawStatsHw_Sw", "checkSoftwareRasterizerState", "el", "shouldBeEnabled", "isEnabled", "isSoftwareRasterizerEnabled", "ensureHtmlElIsVisible"]
}
